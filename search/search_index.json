{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Something coming soon...","title":"Home"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/1.%20%E5%8F%AF%E5%8F%98%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%20%E4%B8%8D%E5%8F%AF%E5%8F%98%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","text":"Python3 \u7684\u516d\u4e2a\u6807\u51c6\u6570\u636e\u7c7b\u578b\u4e2d\uff1a - \u4e0d\u53ef\u53d8\u6570\u636e\uff083 \u4e2a\uff09\uff1a Number\uff08\u6570\u5b57\uff09 \u3001 String\uff08\u5b57\u7b26\u4e32\uff09 \u3001 Tuple\uff08\u5143\u7ec4\uff09 \uff1b - \u53ef\u53d8\u6570\u636e\uff083 \u4e2a\uff09\uff1a List\uff08\u5217\u8868\uff09 \u3001 Dictionary\uff08\u5b57\u5178\uff09 \u3001 Set\uff08\u96c6\u5408\uff09 \u3002 \u53ef\u53d8\u7c7b\u578b\u6709list\u3001dict\u7b49\u3002\u4e0d\u53ef\u53d8\u7c7b\u578b\u6709str\u3001tuple\u7b49\u3002 \u5f53\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u53ef\u53d8\u7c7b\u578b\u4f20\u9012\u7684\u662f\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f4\u63a5\u4fee\u6539\u5185\u5b58\u4e2d\u7684\u503c\uff0c\u5e76\u6ca1\u6709\u5f00\u8f9f\u65b0\u7684\u5185\u5b58\u3002 \u4e0d\u53ef\u53d8\u7c7b\u578b\u88ab\u4fee\u6539\u65f6\uff0c\u5e76\u6ca1\u6709\u6539\u53d8\u539f\u5185\u5b58\u5730\u5740\u4e2d\u7684\u503c\uff0c\u800c\u662f\u5f00\u8f9f\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u5c06\u539f\u5730\u5740\u4e2d\u7684\u503c\u590d\u5236\u8fc7\u53bb\uff0c\u5bf9\u8fd9\u5757\u65b0\u5f00\u8f9f\u7684\u5185\u5b58\u4e2d\u7684\u503c\u8fdb\u884c\u64cd\u4f5c\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #\u6574\u5f62\u53d8\u91cf a = 10 print ( \"\u6574\u5f62\u53d8\u91cfa\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a {} \" . format ( id ( a ))) a = 20 print ( \"\u6574\u5f62\u53d8\u91cfa\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) print ( \"***\" * 20 ) #\u6d6e\u70b9\u6570\u53d8\u91cf a = 10.5 print ( \"\u6d6e\u70b9\u6570\u53d8\u91cfa\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a {} \" . format ( id ( a ))) a = 20.2 print ( \"\u6d6e\u70b9\u6570\u53d8\u91cfa\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) print ( \"***\" * 20 ) #\u5b57\u7b26\u4e32\u53d8\u91cf a = \"hello\" print ( \"\u5b57\u7b26\u4e32\u53d8\u91cfa\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a {} \" . format ( id ( a ))) a = \"world\" print ( \"\u5b57\u7b26\u4e32\u53d8\u91cfa\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) print ( \"***\" * 20 ) #\u5e03\u5c14\u503c\u53d8\u91cf a = False print ( \"\u5e03\u5c14\u503ca\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a {} \" . format ( id ( a ))) a = True print ( \"\u5e03\u5c14\u503ca\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) print ( \"***\" * 20 ) #\u5143\u7ec4\u7684\u6570\u636e\u4e0d\u80fd\u4fee\u6539\uff0c\u5426\u5219\u4f1a\u62a5\u9519 Bash 1 2 3 4 5 6 7 8 9 10 11 12 \u6574\u5f62\u53d8\u91cfa\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a1994744256 \u6574\u5f62\u53d8\u91cfa\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a1994744576 ************************************************************ \u6d6e\u70b9\u6570\u53d8\u91cfa\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a2713286559088 \u6d6e\u70b9\u6570\u53d8\u91cfa\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2713286559136 ************************************************************ \u5b57\u7b26\u4e32\u53d8\u91cfa\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a2713269294224 \u5b57\u7b26\u4e32\u53d8\u91cfa\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2713269272112 ************************************************************ \u5e03\u5c14\u503ca\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a1994252480 \u5e03\u5c14\u503ca\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a1994252448 ************************************************************ Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #\u5217\u8868 a = list () print ( \"\u5217\u8868a\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a {} \" . format ( id ( a ))) a . append ( 20 ) print ( \"\u5217\u8868a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) a . append ( False ) print ( \"\u5217\u8868a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) a . append ( \"hello\" ) print ( \"\u5217\u8868a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) print ( \"***\" * 20 ) #\u5b57\u5178 a = dict () print ( \"\u5b57\u5178a\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a {} \" . format ( id ( a ))) a [ \"name\" ] = \"zhangsan\" print ( \"\u5b57\u5178a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) a [ \"age\" ] = 18 print ( \"\u5b57\u5178a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) a [ \"sing_dog\" ] = True print ( \"\u5b57\u5178a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a {} \" . format ( id ( a ))) print ( \"***\" * 20 ) Bash 1 2 3 4 5 6 7 8 9 10 \u5217\u8868a\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a2067294579016 \u5217\u8868a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2067294579016 \u5217\u8868a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2067294579016 \u5217\u8868a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2067294579016 ************************************************************ \u5b57\u5178a\u4fee\u6539\u4e4b\u524d\u5730\u5740\uff1a2067294527992 \u5b57\u5178a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2067294527992 \u5b57\u5178a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2067294527992 \u5b57\u5178a\u4fee\u6539\u4e4b\u540e\u5730\u5740\uff1a2067294527992 ************************************************************ \u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff1a\u6570\u503c\u7c7b\u578b\uff08int\u3001float\u3001bool\uff09\u3001string\uff08\u5b57\u7b26\u4e32\uff09\u3001tuple\uff08\u5143\u7ec4\uff09 \u53ef\u53d8\u6570\u636e\u7c7b\u578b\uff1alist\uff08\u5217\u8868\uff09\u3001dict\uff08\u5b57\u5178 \u53ef\u53d8\u6570\u636e\u7c7b\u578b\u66f4\u6539\u503c\u540e\uff0c\u5185\u5b58\u5730\u5740\u4e0d\u53d1\u751f\u6539\u53d8\uff1b\u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b\u66f4\u6539\u503c\u540e\uff0c\u5185\u5b58\u5730\u5740\u53d1\u751f\u6539\u53d8","title":"1. \u53ef\u53d8\u6570\u636e\u7c7b\u578b \u4e0d\u53ef\u53d8\u6570\u636e\u7c7b\u578b"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/","text":"created: 2022-09-18T16:56:06 tags: [python \u4e2d xisy] source: \u539f\u6587\u5730\u5740 author: python \u53d8\u91cf\u7c7b\u578b\u3001\u8d4b\u503c\u4ee5\u53ca\u62f7\u8d1d\u7684\u6df1\u5165\u7406\u89e3_\u751f\u547d\u4e0d\u606f\uff0c\u524d\u8fdb\u4e0d\u6b62\u7684\u535a\u5ba2-CSDN \u535a\u5ba2_python \u4e2d xisy \u4e00\u3001\u53d8\u91cf\u8d4b\u503c\u7406\u89e3 \u00b6 1\u3001\u53d8\u91cf\u5206\u7c7b\u53ca\u7406\u89e3 \u00b6 Python \u662f\u201c\u4e07\u7269\u7686\u5bf9\u8c61\u201d\u7684\u7406\u5ff5\uff0c\u6240\u4ee5\u6ca1\u6709\u6307\u9488\u548c\u5f15\u7528\u7684\u6982\u5ff5\uff0c\u5bfc\u81f4\u5f88\u591a\u65f6\u5019\u53c2\u6570\u7684\u4f20\u9012\u548c\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u7591\u95ee\uff1a\u6211\u5230\u5e95\u662f\u590d\u5236\u4e86\u4e00\u4efd\u65b0\u7684\u505a\u64cd\u4f5c\u8fd8\u662f\u5728\u5b83\u6307\u5411\u7684 \u5185\u5b58 \u64cd\u4f5c\uff1f\u8fd9\u4e2a\u95ee\u9898\u6839\u672c\u4e0a\u548c\u53ef\u53d8\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u6709\u5173\u3002 \uff081\uff09\u53d8\u91cf\u7c7b\u578b \u00b6 \u6240\u6709\u7684\u53d8\u91cf\u90fd\u53ef\u4ee5\u6309\u53ef\u53d8\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u6765\u5206\u7c7b\uff0c\u90a3\u4e48\u6211\u5c06\u5e38\u7528\u7684\u4e00\u4e9b\u53d8\u91cf\u7c7b\u578b\u8fdb\u884c\u5206\u7c7b\u3002 - \u5e38\u89c1\u7684\u4e0d\u53ef\u53d8\u53d8\u91cf \u6574\u578b \u3001\u6d6e\u70b9\u578b\u3001\u5e03\u5c14\u578b\u3001\u590d\u6570\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4 \u5e38\u89c1\u7684\u53ef\u53d8\u53d8\u91cf \u5217\u8868\u3001 \u96c6\u5408 \u3001\u5b57\u5178\u3001\u5176\u4ed6\u8fed\u4ee3\u5668 \uff082\uff09\u53d8\u91cf\u521b\u5efa\u7684\u7406\u89e3 \u00b6 \u9996\u5148\u6211\u4eec\u9700\u8981\u660e\u767d\u53d8\u91cf\u662f\u5982\u4f55\u88ab\u521b\u5efa\u7684\uff0c\u8fd9\u5bf9\u7406\u89e3\u53d8\u91cf\u8d4b\u503c\u53ca\u53ef\u53d8\u4e0d\u53ef\u53d8\u7684\u533a\u522b\u6709\u5f88\u5927\u5e2e\u52a9 - \u4e0d\u53ef\u53d8\u53d8\u91cf \u5bf9\u4e8e\u4e0d\u53ef\u53d8\u53d8\u91cf\u6765\u8bf4\uff0cpython \u89e3\u91ca\u5668\u4f1a\u5224\u65ad**\u8be5\u503c\u5728\u5185\u5b58\u4e2d\u662f\u5426\u5b58\u5728**\uff0c\u82e5\u4e0d\u5b58\u5728\uff0cpython \u4f1a\u5206\u914d\u5185\u5b58\uff0c\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u8be5\u503c\uff0c\u7136\u540e\u770b\u53d8\u91cf\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\u53d8\u91cf\uff0c\u6700\u540e\u628a\u8be5\u503c\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002 Python 1 2 x = 1 y = 1 \u5982\u4e0a\u60c5\u51b5\uff0c\u6b64\u65f6 x \u4e0e y \u7684\u5173\u7cfb\u662f\u4ec0\u4e48\u5462\uff1f \u6267\u884c x=1 \u65f6\uff0cpython \u4f1a\u5206\u914d\u5185\u5b58\uff0c\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u6570\u5b57 1\uff0c\u7136\u540e\u521b\u5efa x\uff0c\u6700\u540e\u628a 1 \u8d4b\u503c\u7ed9 x\uff1b \u5f53\u6267\u884c y=1 \u65f6\uff0c1 \u5df2\u7ecf\u5728\u5185\u5b58\u4e2d\u88ab\u521b\u5efa\u4e86\uff0c\u5c31\u4e0d\u4f1a\u518d\u521b\u5efa\u4e86\uff0c \u4f1a**\u76f4\u63a5\u5c06\u521a\u624d\u5c31\u521b\u5efa\u597d\u7684 1 \u8d4b\u503c\u7ed9 y\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 id \u6216\u8005 is \u6765\u5224\u65ad x \u4e0e y \u662f\u5426\u5728\u5185\u5b58\u4e2d\u662f\u540c\u4e00\u4e2a\u5730\u5740\u3002 Python 1 2 3 4 5 6 print ( id ( x ) == id ( y )) print ( x is y ) # Result True True \u53ef\u53d8\u53d8\u91cf \u53ef\u53d8\u53d8\u91cf\u7684\u521b\u5efa\u4e0e\u4e0d\u53ef\u53d8\u53d8\u91cf\u662f\u5b8c\u5168\u76f8\u53cd\u7684\uff0c\u6bcf\u6b21\u521b\u5efa\u65f6 python \u90fd\u4f1a\u5206\u914d\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u6765\u5b58\u50a8\u5217\u8868\uff0c\u6240\u4ee5\u5185\u5b58\u7a7a\u95f4\u5185\u4f1a\u5b58\u5728\u76f8\u540c\u7684\u503c\u3002 Python 1 2 3 4 5 6 a = [ 1 , 2 , 3 ] b = [ 1 , 2 , 3 ] print ( id ( a ) == id ( b )) # Result False \uff083\uff09\u53ef\u53d8\u53d8\u91cf\u4e0e\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u533a\u5206\uff1a \u00b6 \u6309\u7167\u6211\u7684\u4e2a\u4eba\u7406\u89e3\uff0c\u53ef\u53d8\u53d8\u91cf\uff08mutable variable\uff09\u5c31\u662f\u5185\u5b58\u4e2d\u5185\u5bb9\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u53d8\u91cf\uff0c\u800c\u4e0d\u53ef\u53d8\u53d8\u91cf\uff08immutable variable\uff09\u5c31\u662f\u5185\u5b58\u4e2d\u5185\u5bb9\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u53d8\u91cf\u3002 \u542c\u8d77\u6765\u6bd4\u8f83\u62bd\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u53d8\u91cf\u540d\u7406\u89e3\u4e3a\u4e00\u4e2a\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u4ed6\u4eec\u90fd\u6307\u5411\u4e86\u5185\u5b58\u4e2d\u7684\u4e00\u5757\u7a7a\u95f4\u3002\u6bd4\u5982\u4e0a\u8282\u4e2d x \u548c y \u540c\u65f6\u6307\u5411\u4e86 1 \u7684\u90a3\u5757\u7a7a\u95f4\uff0ca \u6307\u5411\u4e86[1,2,3]\u7684\u90a3\u90e8\u5206\u3002\u90a3\u4e48\u5982\u4f55\u7406\u89e3\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u88ab\u4fee\u6539\u5462\uff1f\u5bf9\u4e8e\u4e00\u4e2a int \u578b\u7684\u53d8\u91cf\uff0c\u6211\u521b\u5efa\u4e86 1\uff0c\u90a3\u4e48\u8fd9\u4e4b\u540e***\u4efb\u4f55\u5728\u8fd9\u4e2a\u4f5c\u7528\u57df\u4e2d\u6240\u6709\u88ab\u8d4b\u4e3a 1 \u7684\u53d8\u91cf\u90fd\u4f1a\u6307\u5411\u5b83\uff0c\u800c\u5916\u90e8\u6ca1\u6709\u65b9\u6cd5\u6765\u628a\u8fd9\u4e2a\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u6539\u6210 2 \u6216\u8005\u5176\u4ed6\u503c***\u3002\u800c\u5bf9\u4e8e\u5217\u8868\u6765\u8bf4\uff0c\u90a3\u5757[1,2,3]\u6211\u968f\u65f6\u53ef\u4ee5\u628a\u4ed6\u6539\u4e3a[1,2,3,4]\uff0c\u8fd9\u5c31\u662f\u5185\u5b58\u4e2d\u5185\u5bb9\u53ef\u4ee5\u88ab\u4fee\u6539\u3002 \uff084\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u7279\u70b9\uff1a \u00b6 \u4f18\u70b9\uff1a\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u7684\u503c\u5bf9\u5185\u5b58\u7a7a\u95f4\u7684\u5360\u7528\u3002 \u7f3a\u70b9\uff1a\u6211\u8981\u4fee\u6539\u8fd9\u4e2a\u53d8\u91cf\u7ed1\u5b9a\u7684\u503c\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u6ca1\u7528\u5b58\u5728\u8be5\u503c\u7684\u5185\u5b58\u5757\uff0c\u90a3\u4e48\u5fc5\u987b\u91cd\u65b0\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\uff0c\u628a\u65b0\u5730\u5740\u4e0e\u53d8\u91cf\u540d\u7ed1\u5b9a\u3002\u800c\u4e0d\u662f\u4fee\u6539\u53d8\u91cf\u539f\u6765\u6307\u5411\u7684\u5185\u5b58\u5757\u7684\u503c\uff0c\u8fd9\u56de\u7ed9\u6267\u884c\u6548\u7387\u5e26\u6765\u4e00\u5b9a\u7684\u964d\u4f4e\u3002 \uff085\uff09\u53ef\u53d8\u53d8\u91cf\u7684\u7279\u70b9\uff1a \u00b6 \u7f3a\u70b9\uff1a\u521b\u5efa\u4e00\u6b21\u5c31\u5f00\u8f9f\u4e00\u6b21\u5730\u5740\uff0c\u4e0d\u4f1a\u5f15\u7528\u540c\u4e00\u5757\u5185\u5b58\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4e0d\u53ef\u53d8\u53d8\u91cf\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u3002 2\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c \u00b6 \uff081\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c \u00b6 python \u662f\u4e00\u95e8\u5f88\u7279\u6b8a\u7684\u8bed\u8a00\uff0c\u53d8\u91cf\u5728\u58f0\u660e\u7684\u65f6\u5019\u5e76\u4e0d\u5b9a\u4e49\u5b83\u7684\u7c7b\u578b\uff0c\u800c\u662f\u901a\u8fc7\u8d4b\u503c\u7684\u7c7b\u578b\u4f53\u73b0\u51fa\u6765\uff0c\u6240\u4ee5\u4e00\u822c python \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u9700\u8981\u8d4b\u521d\u503c\uff0c\u3002 Python 1 2 a = 1 int b = 2 \u5728 C \u8bed\u8a00\u4e2d, \u7ed9\u53d8\u91cf\u8d4b\u503c\u65f6\uff0c\u9700\u8981\u5148**\u6307\u5b9a\u6570\u636e\u7c7b\u578b**\uff0c\u540c\u65f6\u4f1a**\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\u533a\u57df**\uff0c\u7528\u4e8e\u5b58\u50a8\u503c\uff1b\u800c\u5728 Python \u4e2d\uff0c\u201c\u53d8\u91cf\u201d\u7684\u4e25\u683c\u53eb\u6cd5\u662f\u201c\u540d\u5b57(name)\u201d\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6807\u7b7e\uff0c\u5c31\u50cf\u6bcf\u4e2a\u4eba\u7684\u59d3\u540d\u4e00\u6837,\u53ea\u662f\u6807\u8bb0\u6211\u4eec\u7684\u4e00\u4e2a\u6807\u7b7e\u3002 \u8fd9\u79cd\u65b9\u5f0f\u662f\u548c python\u201c\u4e07\u7269\u7686\u5bf9\u8c61\u201d\u7684\u601d\u60f3\u76f8\u5951\u5408\u7684\u3002 \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\uff0c\u5728 python \u4e2d\uff0c\u5f53\u6267\u884c: a = 1 python \u9996\u5148\u4f1a\u5728\u5206\u914d\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u7528\u6765\u521b\u5efa int \u578b\u5bf9\u8c61\u201c1\u201d\uff0c\u7136\u540e\u7528 a \u6307\u5411\u5b83\uff1b \uff082\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u95f4\u8d4b\u503c \u00b6 Python 1 2 a = 1 b = aa = 2 \u53d8\u91cf a \u88ab\u8d4b\u503c\uff0c\u610f\u5473\u7740 a \u6307\u5411\u4e86\u5185\u5b58\u4e2d\u7684 int \u7c7b\u5bf9\u8c61 1 \u7684\uff0c\u53d8\u91cf b \u8d4b\u503c\u53d8\u91cf a\uff0c\u5e76\u4e0d\u4ee3\u8868 b \u6307\u5411\u4e86\u53d8\u91cf a\uff0c\u800c\u662f\u53d8\u91cf b \u540c\u65f6\u4e5f\u6307\u5411\u4e86 int \u7c7b\u5bf9\u8c61 1\uff0c\u6b64\u65f6\uff0c\u5bf9\u8c61 1 \u53ef\u901a\u8fc7 a \u6216 b \u5f15\u7528\uff0c**\u6b64\u65f6 a \u548c b \u7684\u5730\u5740\u548c\u503c\u90fd\u662f\u4e00\u6837\u7684\uff0c**\u5f53\u53d8\u91cf a \u4fee\u6539\u8d4b\u503c\u65f6\uff0c\u53ea\u662f\u4ee3\u8868\u53d8\u91cf a \u4e0e\u5176\u5bf9\u8c61\u7684\u6307\u5411\u5173\u7cfb\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u53d8\u91cf a \u6307\u5411\u65b0\u7684\u5bf9\u8c61 2\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd b \u7684\u6307\u5411\u5173\u7cfb\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1aa = 2\uff0cb = 1\u3002 3\u3001\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c \u00b6 \u4ee5\u5217\u8868\u4e3a\u4f8b\uff1a\u53ef\u53d8\u53d8\u91cf\u95f4\u8d4b\u503c\u7684\u8bdd\uff0ca \u548c c \u7684\u5730\u5740 id \u76f8\u540c\uff0c\u53d8\u91cf a \u7684\u5185\u5bb9\u4fee\u6539\u540e\uff0cc \u7684\u5185\u5bb9\u76f8\u5e94\u53d8\u5316\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 a = [ 1 , 2 , 3 ] b = [ 1 , 2 , 3 ] c = a print ( \"id(a) == id(c) \uff1a %s \" , id ( a ) == id ( c )) print ( \"id(a) == id(b) \uff1a %s \" , id ( a ) == id ( b )) a [ 0 ] = 10 print ( \"id(a) == id(c) \uff1a %s \" , id ( a ) == id ( c )) print ( a ) print ( c ) \u4e8c\u3001\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012 \u00b6 1\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f20\u53c2 \u00b6 \u4e0d\u53ef\u53d8\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u53c2\u65f6\uff0c\u662f\u4e0d\u4f1a\u6539\u53d8\u5916\u90e8\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u4f20\u53c2\u65f6\u4ec5\u4f20\u9012\u503c\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 def test ( a ): a = a + 1 print ( a ) b = 1 test ( b ) print ( b ) # \u7ed3\u679c 2 1 \u8fd9\u91cc\u628a\u5f62\u53c2 g \u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u76f8\u5f53\u4e8e\u6267\u884c a = g ,\u8fd9\u65f6 a \u548c g \u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c \u5728\u51fd\u6570\u5185\u90e8\u7ed9 a \u91cd\u65b0\u8d4b\u503c\uff0c\u5176\u5b9e\u662f\u8ba9 a \u91cd\u65b0\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u5e76\u4e0d\u4f1a\u5bf9 g \u7684\u503c\u9020\u6210\u5f71\u54cd\u3002 2\u3001\u53ef\u53d8\u53d8\u91cf\u4f20\u53c2 \u00b6 Python 1 2 3 4 5 6 7 8 9 10 11 def test ( a ): a [ 0 ] = 10 print ( a ) b = [ 1 , 2 , 3 ] test ( b ) print ( b ) # \u7ed3\u679c [ 10 , 2 , 3 ] [ 10 , 2 , 3 ] \u4e3a\u4ec0\u4e48\u8fd9\u6b21\u5c31\u53ef\u4ee5\u7528\u51fd\u6570\u6539\u53d8\u5916\u90e8\u53d8\u91cf\u5462\uff1f\u5bf9\u53ef\u53d8\u53d8\u91cf\uff0c\u672c\u8eab\u5185\u5bb9\u5c31\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u5185\u90e8\u4e5f\u5141\u8bb8\u4fee\u6539\u672c\u8eab\uff0c\u56e0\u6b64\u4f20\u9012\u8fdb\u51fd\u6570\u7684\u662f\u8be5\u5185\u5b58\u7a7a\u95f4\u7684\u5f15\u7528\uff0c\u5bf9\u8be5\u53c2\u6570\u64cd\u4f5c\uff0c\u8fd9\u65f6\u5019\u5c31\u80fd\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u4e86\u3002 \u6240\u4ee5\uff0c\u5728 python \u4e2d\uff0c\u51fd\u6570\u80fd\u4e0d\u80fd\u4fee\u6539\u5916\u90e8\u53d8\u91cf\uff0c\u4e3b\u8981\u770b\u8fd9\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u662f\u53ef\u4fee\u6539\u7684\u8fd8\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002 3\u3001\u62f7\u8d1d\u7684\u533a\u522b \u00b6 \u5728\u51fd\u6570\u4f20\u53c2\u65f6\uff0c\u6211\u4eec\u65f6\u800c\u9700\u8981\u4fee\u6539\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u65f6\u800c\u4e0d\u9700\u8981\u4fee\u6539\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u62f7\u8d1d\u4e86\u3002\u62f7\u8d1d\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0ccopy \u548c deepcopy\uff0c\u90a3\u4e48\u4e8c\u8005\u7684\u533a\u522b\u5c31\u5728\u4e8e\u53ef\u53d8\u3001\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002 (1) \u4e0d\u53ef\u53d8\u53d8\u91cf \u00b6 copy \u548c deepcopy \u5bf9\u4e8e\u4e0d\u53ef\u53d8\u5bf9\u8c61\u6765\u8bf4\u662f\u6ca1\u6709\u533a\u522b\u7684\uff0c\u90fd\u662f\u628a\u6307\u5411\u5185\u5b58\u5df2\u6709\u7684\u7a7a\u95f4\u7684\u5f15\u7528\u8fdb\u884c\u62f7\u8d1d\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # copy\u62f7\u8d1d def test ( a , id_b ): import copy a = copy . copy ( a ) print ( \"id(a) == id(b) \u662f\uff1a %s \" , id ( a ) == id_b ) a = a + 10 print ( a ) b = 0 test ( b , id ( b )) print ( b ) # \u7ed3\u679c id ( a ) == id ( b ) \u662f \uff1a % s True 10 0 --- # deepcopy\u62f7\u8d1d def test1 ( a , id_b ): import copy a = copy . deepcopy ( a ) print ( \"id(a) == id(b) \u662f\uff1a %s \" , id ( a ) == id_b ) a = a + 10 print ( a ) b = 0 test1 ( b , id ( b )) print ( b ) # \u7ed3\u679c id ( a ) == id ( b ) \u662f \uff1a % s True 10 0 (2) \u53ef\u53d8\u53d8\u91cf\uff08\u5b50\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u53d8\u91cf\uff09 \u00b6 \u4f46\u5bf9\u4e8e\u53ef\u53d8\u5bf9\u8c61\uff0ccopy \u662f\u62f7\u8d1d\u6307\u5411\u5185\u5b58\u5df2\u6709\u7a7a\u95f4\u7684\u5f15\u7528\uff0c\u800c deepcopy \u624d\u662f\u65b0\u5f00\u8f9f\u4e00\u5757\u7a7a\u95f4\uff0c\u5c06\u539f\u6765\u7684\u5185\u5bb9\u5b8c\u5168\u62f7\u8d1d\uff0c\u7136\u540e\u8fd4\u56de\u65b0\u7684\u7a7a\u95f4\u7684\u5f15\u7528\u3002 copy\uff08\u6d45\u62f7\u8d1d\uff09& deepcopy\uff08\u6df1\u62f7\u8d1d\uff09\u3010\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3011 \u5f53\u62f7\u8d1d\u7684\u53ef\u53d8\u53d8\u91cf\u7684\u5b50\u53d8\u91cf\u662f\u4e0d\u53ef\u53d8\u53d8\u91cf\u65f6\uff0c\u5bf9\u81ea\u53d8\u91cf\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u4e0b\u539f\u59cb\u53d8\u91cf b \u548c\u62f7\u8d1d\u540e\u7684\u53d8\u91cf a\uff0c\u5206\u522b\u6307\u5411\u5b50\u53d8\u91cf\uff0c\u5f53\u8fdb\u884c\u4fee\u6539 a[0]\u65f6\uff0c\u53ef\u4ee5\u770b\u505a a[0]\u548c b[0]\u5206\u522b\u4e3a\u6307\u5411 1 \u7684\u53d8\u91cf\uff0c\u6b64\u65f6\uff0c\u4fee\u6539 a[0]\u4e3a 10\uff0c\u4f1a\u7ed9 10 \u91cd\u65b0\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f a[0]\u6307\u5411 10 \u7684\u5b58\u50a8\u7a7a\u95f4\uff0cb[0]\u7684\u6307\u5411\u5173\u7cfb\u4e0d\u4f1a\u6709\u53d8\u5316\u3002\u6b64\u5904\u53ef\u53c2\u8003 \uff082\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u95f4\u8d4b\u503c Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 # \u8bf4\u660e\uff1a\u62f7\u8d1d\u540e\uff0c\u6b64\u65f6a\u5f00\u8f9f\u4e86\u65b0\u7684\u7a7a\u95f4(\u5e76\u4e0d\u662f\u6307\u5411\u4e86b\u7684\u5f15\u7528)\uff0c # \u4f46\u662f a [0] \u3001a [1]\u3001a [2]\u53ea\u662f\u5206\u522b\u6307\u5411\u4e86\u53d8\u91cf1\u30012\u30013\u7684\u5f15\u7528 def test ( a , id_b ): print ( \"\u62f7\u8d1d\u524did(a)\u662f\uff1a %s \" , id ( a )) import copy a = copy . copy ( a ) # a = copy.deepcopy(a) print ( \"\u62f7\u8d1d\u540eid(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u62f7\u8d1d\u540eid(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id_b ) a [ 0 ] = 10 return a b = [ 1 , 2 , 3 ] print ( \"\u62f7\u8d1d\u524did(b)\u662f\uff1a %s \" , id ( b )) a = test ( b , id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e id(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u4fee\u6539\u540e id(b)\u662f\uff1a %s \" , id ( b )) print ( \"\u4fee\u6539\u540e id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e id(a[1]) == id(b[1]) \u662f\uff1a %s \" , id ( a [ 1 ]) == id ( b [ 1 ])) print ( b ) print ( a ) # \u7ed3\u679c \u62f7\u8d1d\u524did ( b ) \u662f \uff1a % s 3089483811072 \u62f7\u8d1d\u524did ( a ) \u662f \uff1a % s 3089483811072 \u62f7\u8d1d\u540eid ( a ) \u662f \uff1a % s 3089483811328 \u62f7\u8d1d\u540eid ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s True \u4fee\u6539\u540e id ( a ) \u662f \uff1a % s 3089483811328 \u4fee\u6539\u540e id ( b ) \u662f \uff1a % s 3089483811072 \u4fee\u6539\u540e id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s False \u4fee\u6539\u540e id ( a [ 1 ]) == id ( b [ 1 ]) \u662f \uff1a % s True [ 1 , 2 , 3 ] [ 10 , 2 , 3 ] (3) \u53ef\u53d8\u53d8\u91cf\uff08\u5b50\u5bf9\u8c61\u662f\u53ef\u53d8\u53d8\u91cf\uff09 \u00b6 copy\uff08\u6d45\u62f7\u8d1d\uff09 \u00b6 \u5f53\u5bf9\u53ef\u53d8\u53d8\u91cf\u8fdb\u884c\u6d45\u62f7\u8d1d\uff0c\u5176\u5b50\u5bf9\u8c61\u662f\u53ef\u53d8\u53d8\u91cf\u65f6\uff0c\u62f7\u8d1d\u7684\u5219\u662f\u53ef\u53d8\u5b50\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a**\u4ec5\u62f7\u8d1d\u4e86\u7a7a\u95f4\u5f15\u7528\u5173\u7cfb**\uff0c\u5f53\u4e0d\u53ef\u53d8\u5b50\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u4f1a\u91cd\u65b0\u5f00\u8f9f\u7a7a\u95f4\u5b58\u50a8\uff0c\u5e76\u5efa\u7acb\u65b0\u7684\u5f15\u7528\u5173\u7cfb\uff1b\u5f53\u53ef\u53d8\u5b50\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u4f1a\u76f4\u63a5\u4fee\u6539\uff0c\u4f46\u662f\u5f15\u7528\u5173\u7cfb\u6ca1\u6709\u53d8\u5316\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 def test ( a ): c = a print ( \"\u62f7\u8d1d\u524did(a)\u662f\uff1a %s \" , id ( a )) import copy a = copy . copy ( a ) print ( \"\u62f7\u8d1d\u540eid(b)\u662f\uff1a %s \" , id ( c )) print ( \"\u62f7\u8d1d\u540eid(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( c [ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( c [ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( c [ 2 ][ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2]) == id(b[2][2]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ]) == id ( c [ 2 ][ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2][0]) == id(b[2][2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ][ 0 ]) == id ( c [ 2 ][ 2 ][ 0 ])) a [ 0 ] = 10 a [ 2 ][ 0 ] = \"c\" return a b = [ 1 , 2 , [ \"a\" , \"b\" , [ 1 , 2 ]]] print ( \"\u62f7\u8d1d\u524did(b)\u662f\uff1a %s \" , id ( b )) a = test ( b ) print ( \"\u4fee\u6539\u540e id(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u4fee\u6539\u540e id(b)\u662f\uff1a %s \" , id ( b )) print ( \"\u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( b [ 2 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ])) print ( \"\u672a\u4fee\u6539 \u53d8\u91cf id(a[1]) == id(b[1]) \u662f\uff1a %s \" , id ( a [ 1 ]) == id ( b [ 1 ])) print ( b ) print ( a ) # \u7ed3\u679c \u62f7\u8d1d\u524did ( b ) \u662f \uff1a % s 2480675678720 \u62f7\u8d1d\u524did ( a ) \u662f \uff1a % s 2480675678720 \u62f7\u8d1d\u540eid ( b ) \u662f \uff1a % s 2480675678720 \u62f7\u8d1d\u540eid ( a ) \u662f \uff1a % s 2480675678272 \u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ]) == id ( b [ 2 ][ 2 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ][ 0 ]) == id ( b [ 2 ][ 2 ][ 0 ]) \u662f \uff1a % s True \u4fee\u6539\u540e id ( a ) \u662f \uff1a % s 2480675678272 \u4fee\u6539\u540e id ( b ) \u662f \uff1a % s 2480675678720 \u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s False \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s True \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s True \u672a\u4fee\u6539 \u53d8\u91cf id ( a [ 1 ]) == id ( b [ 1 ]) \u662f \uff1a % s True [ 1 , 2 , [ 'c' , 'b' , [ 1 , 2 ]]] [ 10 , 2 , [ 'c' , 'b' , [ 1 , 2 ]]] deepcopy\uff08\u6df1\u62f7\u8d1d\uff09 \u00b6 \u5f53\u5bf9\u53ef\u53d8\u53d8\u91cf\u8fdb\u884c\u6df1\u62f7\u8d1d\uff0c\u5176\u5b50\u5bf9\u8c61\u662f\u53ef\u53d8\u53d8\u91cf\u65f6\uff0c\u4f1a\u7ed9\u62f7\u8d1d\u7684\u53ef\u53d8\u5b50\u5bf9\u8c61\u5206\u914d\u65b0\u7684\u7a7a\u95f4\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u5f15\u7528\uff0c\u4fee\u6539\u62f7\u8d1d\u540e\u7684\u53d8\u91cf\uff0c\u4e0d\u4f1a\u5f71\u54cd\u62f7\u8d1d\u524d\u7684\u53d8\u91cf\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 def test ( a ): c = a print ( \"\u62f7\u8d1d\u524did(a)\u662f\uff1a %s \" , id ( a )) import copy a = copy . deepcopy ( a ) print ( \"\u62f7\u8d1d\u540eid(b)\u662f\uff1a %s \" , id ( c )) print ( \"\u62f7\u8d1d\u540eid(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( c [ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( c [ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( c [ 2 ][ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2]) == id(b[2][2]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ]) == id ( c [ 2 ][ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2][0]) == id(b[2][2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ][ 0 ]) == id ( c [ 2 ][ 2 ][ 0 ])) a [ 0 ] = 10 a [ 2 ][ 0 ] = \"c\" return a b = [ 1 , 2 , [ \"a\" , \"b\" , [ 1 , 2 ]]] print ( \"\u62f7\u8d1d\u524did(b)\u662f\uff1a %s \" , id ( b )) a = test ( b ) print ( \"\u4fee\u6539\u540e id(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u4fee\u6539\u540e id(b)\u662f\uff1a %s \" , id ( b )) print ( \"\u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( b [ 2 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ])) print ( \"\u672a\u4fee\u6539 \u53d8\u91cf id(a[1]) == id(b[1]) \u662f\uff1a %s \" , id ( a [ 1 ]) == id ( b [ 1 ])) print ( b ) print ( a ) # \u7ed3\u679c \u62f7\u8d1d\u524did ( b ) \u662f \uff1a % s 1733009275136 \u62f7\u8d1d\u524did ( a ) \u662f \uff1a % s 1733009275136 \u62f7\u8d1d\u540eid ( b ) \u662f \uff1a % s 1733009275136 \u62f7\u8d1d\u540eid ( a ) \u662f \uff1a % s 1733009274688 \u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s False \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ]) == id ( b [ 2 ][ 2 ]) \u662f \uff1a % s False \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ][ 0 ]) == id ( b [ 2 ][ 2 ][ 0 ]) \u662f \uff1a % s True \u4fee\u6539\u540e id ( a ) \u662f \uff1a % s 1733009274688 \u4fee\u6539\u540e id ( b ) \u662f \uff1a % s 1733009275136 \u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s False \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s False \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s False \u672a\u4fee\u6539 \u53d8\u91cf id ( a [ 1 ]) == id ( b [ 1 ]) \u662f \uff1a % s True [ 1 , 2 , [ 'a' , 'b' , [ 1 , 2 ]]] [ 10 , 2 , [ 'c' , 'b' , [ 1 , 2 ]]]","title":"2. \u8d4b\u503c\u3001\u6d45\u62f7\u8d1d\u3001\u6df1\u62f7\u8d1d"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#\u4e00\u53d8\u91cf\u8d4b\u503c\u7406\u89e3","text":"","title":"\u4e00\u3001\u53d8\u91cf\u8d4b\u503c\u7406\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#1\u53d8\u91cf\u5206\u7c7b\u53ca\u7406\u89e3","text":"Python \u662f\u201c\u4e07\u7269\u7686\u5bf9\u8c61\u201d\u7684\u7406\u5ff5\uff0c\u6240\u4ee5\u6ca1\u6709\u6307\u9488\u548c\u5f15\u7528\u7684\u6982\u5ff5\uff0c\u5bfc\u81f4\u5f88\u591a\u65f6\u5019\u53c2\u6570\u7684\u4f20\u9012\u548c\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u7591\u95ee\uff1a\u6211\u5230\u5e95\u662f\u590d\u5236\u4e86\u4e00\u4efd\u65b0\u7684\u505a\u64cd\u4f5c\u8fd8\u662f\u5728\u5b83\u6307\u5411\u7684 \u5185\u5b58 \u64cd\u4f5c\uff1f\u8fd9\u4e2a\u95ee\u9898\u6839\u672c\u4e0a\u548c\u53ef\u53d8\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u6709\u5173\u3002","title":"1\u3001\u53d8\u91cf\u5206\u7c7b\u53ca\u7406\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#1\u53d8\u91cf\u7c7b\u578b","text":"\u6240\u6709\u7684\u53d8\u91cf\u90fd\u53ef\u4ee5\u6309\u53ef\u53d8\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u6765\u5206\u7c7b\uff0c\u90a3\u4e48\u6211\u5c06\u5e38\u7528\u7684\u4e00\u4e9b\u53d8\u91cf\u7c7b\u578b\u8fdb\u884c\u5206\u7c7b\u3002 - \u5e38\u89c1\u7684\u4e0d\u53ef\u53d8\u53d8\u91cf \u6574\u578b \u3001\u6d6e\u70b9\u578b\u3001\u5e03\u5c14\u578b\u3001\u590d\u6570\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4 \u5e38\u89c1\u7684\u53ef\u53d8\u53d8\u91cf \u5217\u8868\u3001 \u96c6\u5408 \u3001\u5b57\u5178\u3001\u5176\u4ed6\u8fed\u4ee3\u5668","title":"\uff081\uff09\u53d8\u91cf\u7c7b\u578b"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#2\u53d8\u91cf\u521b\u5efa\u7684\u7406\u89e3","text":"\u9996\u5148\u6211\u4eec\u9700\u8981\u660e\u767d\u53d8\u91cf\u662f\u5982\u4f55\u88ab\u521b\u5efa\u7684\uff0c\u8fd9\u5bf9\u7406\u89e3\u53d8\u91cf\u8d4b\u503c\u53ca\u53ef\u53d8\u4e0d\u53ef\u53d8\u7684\u533a\u522b\u6709\u5f88\u5927\u5e2e\u52a9 - \u4e0d\u53ef\u53d8\u53d8\u91cf \u5bf9\u4e8e\u4e0d\u53ef\u53d8\u53d8\u91cf\u6765\u8bf4\uff0cpython \u89e3\u91ca\u5668\u4f1a\u5224\u65ad**\u8be5\u503c\u5728\u5185\u5b58\u4e2d\u662f\u5426\u5b58\u5728**\uff0c\u82e5\u4e0d\u5b58\u5728\uff0cpython \u4f1a\u5206\u914d\u5185\u5b58\uff0c\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u8be5\u503c\uff0c\u7136\u540e\u770b\u53d8\u91cf\u662f\u5426\u5b58\u5728\uff0c\u82e5\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\u53d8\u91cf\uff0c\u6700\u540e\u628a\u8be5\u503c\u8d4b\u503c\u7ed9\u53d8\u91cf\u3002 Python 1 2 x = 1 y = 1 \u5982\u4e0a\u60c5\u51b5\uff0c\u6b64\u65f6 x \u4e0e y \u7684\u5173\u7cfb\u662f\u4ec0\u4e48\u5462\uff1f \u6267\u884c x=1 \u65f6\uff0cpython \u4f1a\u5206\u914d\u5185\u5b58\uff0c\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u6570\u5b57 1\uff0c\u7136\u540e\u521b\u5efa x\uff0c\u6700\u540e\u628a 1 \u8d4b\u503c\u7ed9 x\uff1b \u5f53\u6267\u884c y=1 \u65f6\uff0c1 \u5df2\u7ecf\u5728\u5185\u5b58\u4e2d\u88ab\u521b\u5efa\u4e86\uff0c\u5c31\u4e0d\u4f1a\u518d\u521b\u5efa\u4e86\uff0c \u4f1a**\u76f4\u63a5\u5c06\u521a\u624d\u5c31\u521b\u5efa\u597d\u7684 1 \u8d4b\u503c\u7ed9 y\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 id \u6216\u8005 is \u6765\u5224\u65ad x \u4e0e y \u662f\u5426\u5728\u5185\u5b58\u4e2d\u662f\u540c\u4e00\u4e2a\u5730\u5740\u3002 Python 1 2 3 4 5 6 print ( id ( x ) == id ( y )) print ( x is y ) # Result True True \u53ef\u53d8\u53d8\u91cf \u53ef\u53d8\u53d8\u91cf\u7684\u521b\u5efa\u4e0e\u4e0d\u53ef\u53d8\u53d8\u91cf\u662f\u5b8c\u5168\u76f8\u53cd\u7684\uff0c\u6bcf\u6b21\u521b\u5efa\u65f6 python \u90fd\u4f1a\u5206\u914d\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u6765\u5b58\u50a8\u5217\u8868\uff0c\u6240\u4ee5\u5185\u5b58\u7a7a\u95f4\u5185\u4f1a\u5b58\u5728\u76f8\u540c\u7684\u503c\u3002 Python 1 2 3 4 5 6 a = [ 1 , 2 , 3 ] b = [ 1 , 2 , 3 ] print ( id ( a ) == id ( b )) # Result False","title":"\uff082\uff09\u53d8\u91cf\u521b\u5efa\u7684\u7406\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#3\u53ef\u53d8\u53d8\u91cf\u4e0e\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u533a\u5206","text":"\u6309\u7167\u6211\u7684\u4e2a\u4eba\u7406\u89e3\uff0c\u53ef\u53d8\u53d8\u91cf\uff08mutable variable\uff09\u5c31\u662f\u5185\u5b58\u4e2d\u5185\u5bb9\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u53d8\u91cf\uff0c\u800c\u4e0d\u53ef\u53d8\u53d8\u91cf\uff08immutable variable\uff09\u5c31\u662f\u5185\u5b58\u4e2d\u5185\u5bb9\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u53d8\u91cf\u3002 \u542c\u8d77\u6765\u6bd4\u8f83\u62bd\u8c61\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u53d8\u91cf\u540d\u7406\u89e3\u4e3a\u4e00\u4e2a\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u4ed6\u4eec\u90fd\u6307\u5411\u4e86\u5185\u5b58\u4e2d\u7684\u4e00\u5757\u7a7a\u95f4\u3002\u6bd4\u5982\u4e0a\u8282\u4e2d x \u548c y \u540c\u65f6\u6307\u5411\u4e86 1 \u7684\u90a3\u5757\u7a7a\u95f4\uff0ca \u6307\u5411\u4e86[1,2,3]\u7684\u90a3\u90e8\u5206\u3002\u90a3\u4e48\u5982\u4f55\u7406\u89e3\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u88ab\u4fee\u6539\u5462\uff1f\u5bf9\u4e8e\u4e00\u4e2a int \u578b\u7684\u53d8\u91cf\uff0c\u6211\u521b\u5efa\u4e86 1\uff0c\u90a3\u4e48\u8fd9\u4e4b\u540e***\u4efb\u4f55\u5728\u8fd9\u4e2a\u4f5c\u7528\u57df\u4e2d\u6240\u6709\u88ab\u8d4b\u4e3a 1 \u7684\u53d8\u91cf\u90fd\u4f1a\u6307\u5411\u5b83\uff0c\u800c\u5916\u90e8\u6ca1\u6709\u65b9\u6cd5\u6765\u628a\u8fd9\u4e2a\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u6539\u6210 2 \u6216\u8005\u5176\u4ed6\u503c***\u3002\u800c\u5bf9\u4e8e\u5217\u8868\u6765\u8bf4\uff0c\u90a3\u5757[1,2,3]\u6211\u968f\u65f6\u53ef\u4ee5\u628a\u4ed6\u6539\u4e3a[1,2,3,4]\uff0c\u8fd9\u5c31\u662f\u5185\u5b58\u4e2d\u5185\u5bb9\u53ef\u4ee5\u88ab\u4fee\u6539\u3002","title":"\uff083\uff09\u53ef\u53d8\u53d8\u91cf\u4e0e\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u533a\u5206\uff1a"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#4\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u7279\u70b9","text":"\u4f18\u70b9\uff1a\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u7684\u503c\u5bf9\u5185\u5b58\u7a7a\u95f4\u7684\u5360\u7528\u3002 \u7f3a\u70b9\uff1a\u6211\u8981\u4fee\u6539\u8fd9\u4e2a\u53d8\u91cf\u7ed1\u5b9a\u7684\u503c\uff0c\u5982\u679c\u5185\u5b58\u4e2d\u6ca1\u7528\u5b58\u5728\u8be5\u503c\u7684\u5185\u5b58\u5757\uff0c\u90a3\u4e48\u5fc5\u987b\u91cd\u65b0\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\uff0c\u628a\u65b0\u5730\u5740\u4e0e\u53d8\u91cf\u540d\u7ed1\u5b9a\u3002\u800c\u4e0d\u662f\u4fee\u6539\u53d8\u91cf\u539f\u6765\u6307\u5411\u7684\u5185\u5b58\u5757\u7684\u503c\uff0c\u8fd9\u56de\u7ed9\u6267\u884c\u6548\u7387\u5e26\u6765\u4e00\u5b9a\u7684\u964d\u4f4e\u3002","title":"\uff084\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u7684\u7279\u70b9\uff1a"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#5\u53ef\u53d8\u53d8\u91cf\u7684\u7279\u70b9","text":"\u7f3a\u70b9\uff1a\u521b\u5efa\u4e00\u6b21\u5c31\u5f00\u8f9f\u4e00\u6b21\u5730\u5740\uff0c\u4e0d\u4f1a\u5f15\u7528\u540c\u4e00\u5757\u5185\u5b58\uff0c\u6240\u4ee5\u4f1a\u6bd4\u4e0d\u53ef\u53d8\u53d8\u91cf\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u3002","title":"\uff085\uff09\u53ef\u53d8\u53d8\u91cf\u7684\u7279\u70b9\uff1a"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#2\u4e0d\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c","text":"","title":"2\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#1\u4e0d\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c","text":"python \u662f\u4e00\u95e8\u5f88\u7279\u6b8a\u7684\u8bed\u8a00\uff0c\u53d8\u91cf\u5728\u58f0\u660e\u7684\u65f6\u5019\u5e76\u4e0d\u5b9a\u4e49\u5b83\u7684\u7c7b\u578b\uff0c\u800c\u662f\u901a\u8fc7\u8d4b\u503c\u7684\u7c7b\u578b\u4f53\u73b0\u51fa\u6765\uff0c\u6240\u4ee5\u4e00\u822c python \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u9700\u8981\u8d4b\u521d\u503c\uff0c\u3002 Python 1 2 a = 1 int b = 2 \u5728 C \u8bed\u8a00\u4e2d, \u7ed9\u53d8\u91cf\u8d4b\u503c\u65f6\uff0c\u9700\u8981\u5148**\u6307\u5b9a\u6570\u636e\u7c7b\u578b**\uff0c\u540c\u65f6\u4f1a**\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\u533a\u57df**\uff0c\u7528\u4e8e\u5b58\u50a8\u503c\uff1b\u800c\u5728 Python \u4e2d\uff0c\u201c\u53d8\u91cf\u201d\u7684\u4e25\u683c\u53eb\u6cd5\u662f\u201c\u540d\u5b57(name)\u201d\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u6807\u7b7e\uff0c\u5c31\u50cf\u6bcf\u4e2a\u4eba\u7684\u59d3\u540d\u4e00\u6837,\u53ea\u662f\u6807\u8bb0\u6211\u4eec\u7684\u4e00\u4e2a\u6807\u7b7e\u3002 \u8fd9\u79cd\u65b9\u5f0f\u662f\u548c python\u201c\u4e07\u7269\u7686\u5bf9\u8c61\u201d\u7684\u601d\u60f3\u76f8\u5951\u5408\u7684\u3002 \u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\uff0c\u5728 python \u4e2d\uff0c\u5f53\u6267\u884c: a = 1 python \u9996\u5148\u4f1a\u5728\u5206\u914d\u4e00\u6bb5\u5185\u5b58\u7a7a\u95f4\u7528\u6765\u521b\u5efa int \u578b\u5bf9\u8c61\u201c1\u201d\uff0c\u7136\u540e\u7528 a \u6307\u5411\u5b83\uff1b","title":"\uff081\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#2\u4e0d\u53ef\u53d8\u53d8\u91cf\u95f4\u8d4b\u503c","text":"Python 1 2 a = 1 b = aa = 2 \u53d8\u91cf a \u88ab\u8d4b\u503c\uff0c\u610f\u5473\u7740 a \u6307\u5411\u4e86\u5185\u5b58\u4e2d\u7684 int \u7c7b\u5bf9\u8c61 1 \u7684\uff0c\u53d8\u91cf b \u8d4b\u503c\u53d8\u91cf a\uff0c\u5e76\u4e0d\u4ee3\u8868 b \u6307\u5411\u4e86\u53d8\u91cf a\uff0c\u800c\u662f\u53d8\u91cf b \u540c\u65f6\u4e5f\u6307\u5411\u4e86 int \u7c7b\u5bf9\u8c61 1\uff0c\u6b64\u65f6\uff0c\u5bf9\u8c61 1 \u53ef\u901a\u8fc7 a \u6216 b \u5f15\u7528\uff0c**\u6b64\u65f6 a \u548c b \u7684\u5730\u5740\u548c\u503c\u90fd\u662f\u4e00\u6837\u7684\uff0c**\u5f53\u53d8\u91cf a \u4fee\u6539\u8d4b\u503c\u65f6\uff0c\u53ea\u662f\u4ee3\u8868\u53d8\u91cf a \u4e0e\u5176\u5bf9\u8c61\u7684\u6307\u5411\u5173\u7cfb\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u53d8\u91cf a \u6307\u5411\u65b0\u7684\u5bf9\u8c61 2\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd b \u7684\u6307\u5411\u5173\u7cfb\uff0c\u6240\u4ee5\u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1aa = 2\uff0cb = 1\u3002","title":"\uff082\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u95f4\u8d4b\u503c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#3\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c","text":"\u4ee5\u5217\u8868\u4e3a\u4f8b\uff1a\u53ef\u53d8\u53d8\u91cf\u95f4\u8d4b\u503c\u7684\u8bdd\uff0ca \u548c c \u7684\u5730\u5740 id \u76f8\u540c\uff0c\u53d8\u91cf a \u7684\u5185\u5bb9\u4fee\u6539\u540e\uff0cc \u7684\u5185\u5bb9\u76f8\u5e94\u53d8\u5316\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 a = [ 1 , 2 , 3 ] b = [ 1 , 2 , 3 ] c = a print ( \"id(a) == id(c) \uff1a %s \" , id ( a ) == id ( c )) print ( \"id(a) == id(b) \uff1a %s \" , id ( a ) == id ( b )) a [ 0 ] = 10 print ( \"id(a) == id(c) \uff1a %s \" , id ( a ) == id ( c )) print ( a ) print ( c )","title":"3\u3001\u53ef\u53d8\u53d8\u91cf\u8d4b\u503c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#\u4e8c\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012","text":"","title":"\u4e8c\u3001\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#1\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f20\u53c2","text":"\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u53c2\u65f6\uff0c\u662f\u4e0d\u4f1a\u6539\u53d8\u5916\u90e8\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u4f20\u53c2\u65f6\u4ec5\u4f20\u9012\u503c\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 def test ( a ): a = a + 1 print ( a ) b = 1 test ( b ) print ( b ) # \u7ed3\u679c 2 1 \u8fd9\u91cc\u628a\u5f62\u53c2 g \u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u76f8\u5f53\u4e8e\u6267\u884c a = g ,\u8fd9\u65f6 a \u548c g \u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c \u5728\u51fd\u6570\u5185\u90e8\u7ed9 a \u91cd\u65b0\u8d4b\u503c\uff0c\u5176\u5b9e\u662f\u8ba9 a \u91cd\u65b0\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u5e76\u4e0d\u4f1a\u5bf9 g \u7684\u503c\u9020\u6210\u5f71\u54cd\u3002","title":"1\u3001\u4e0d\u53ef\u53d8\u53d8\u91cf\u4f20\u53c2"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#2\u53ef\u53d8\u53d8\u91cf\u4f20\u53c2","text":"Python 1 2 3 4 5 6 7 8 9 10 11 def test ( a ): a [ 0 ] = 10 print ( a ) b = [ 1 , 2 , 3 ] test ( b ) print ( b ) # \u7ed3\u679c [ 10 , 2 , 3 ] [ 10 , 2 , 3 ] \u4e3a\u4ec0\u4e48\u8fd9\u6b21\u5c31\u53ef\u4ee5\u7528\u51fd\u6570\u6539\u53d8\u5916\u90e8\u53d8\u91cf\u5462\uff1f\u5bf9\u53ef\u53d8\u53d8\u91cf\uff0c\u672c\u8eab\u5185\u5bb9\u5c31\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u5185\u90e8\u4e5f\u5141\u8bb8\u4fee\u6539\u672c\u8eab\uff0c\u56e0\u6b64\u4f20\u9012\u8fdb\u51fd\u6570\u7684\u662f\u8be5\u5185\u5b58\u7a7a\u95f4\u7684\u5f15\u7528\uff0c\u5bf9\u8be5\u53c2\u6570\u64cd\u4f5c\uff0c\u8fd9\u65f6\u5019\u5c31\u80fd\u4fee\u6539\u5916\u90e8\u53d8\u91cf\u4e86\u3002 \u6240\u4ee5\uff0c\u5728 python \u4e2d\uff0c\u51fd\u6570\u80fd\u4e0d\u80fd\u4fee\u6539\u5916\u90e8\u53d8\u91cf\uff0c\u4e3b\u8981\u770b\u8fd9\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u662f\u53ef\u4fee\u6539\u7684\u8fd8\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002","title":"2\u3001\u53ef\u53d8\u53d8\u91cf\u4f20\u53c2"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#3\u62f7\u8d1d\u7684\u533a\u522b","text":"\u5728\u51fd\u6570\u4f20\u53c2\u65f6\uff0c\u6211\u4eec\u65f6\u800c\u9700\u8981\u4fee\u6539\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u65f6\u800c\u4e0d\u9700\u8981\u4fee\u6539\u5916\u90e8\u7684\u53d8\u91cf\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u62f7\u8d1d\u4e86\u3002\u62f7\u8d1d\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0ccopy \u548c deepcopy\uff0c\u90a3\u4e48\u4e8c\u8005\u7684\u533a\u522b\u5c31\u5728\u4e8e\u53ef\u53d8\u3001\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002","title":"3\u3001\u62f7\u8d1d\u7684\u533a\u522b"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#1-\u4e0d\u53ef\u53d8\u53d8\u91cf","text":"copy \u548c deepcopy \u5bf9\u4e8e\u4e0d\u53ef\u53d8\u5bf9\u8c61\u6765\u8bf4\u662f\u6ca1\u6709\u533a\u522b\u7684\uff0c\u90fd\u662f\u628a\u6307\u5411\u5185\u5b58\u5df2\u6709\u7684\u7a7a\u95f4\u7684\u5f15\u7528\u8fdb\u884c\u62f7\u8d1d\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 # copy\u62f7\u8d1d def test ( a , id_b ): import copy a = copy . copy ( a ) print ( \"id(a) == id(b) \u662f\uff1a %s \" , id ( a ) == id_b ) a = a + 10 print ( a ) b = 0 test ( b , id ( b )) print ( b ) # \u7ed3\u679c id ( a ) == id ( b ) \u662f \uff1a % s True 10 0 --- # deepcopy\u62f7\u8d1d def test1 ( a , id_b ): import copy a = copy . deepcopy ( a ) print ( \"id(a) == id(b) \u662f\uff1a %s \" , id ( a ) == id_b ) a = a + 10 print ( a ) b = 0 test1 ( b , id ( b )) print ( b ) # \u7ed3\u679c id ( a ) == id ( b ) \u662f \uff1a % s True 10 0","title":"(1) \u4e0d\u53ef\u53d8\u53d8\u91cf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#2-\u53ef\u53d8\u53d8\u91cf\u5b50\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u53d8\u91cf","text":"\u4f46\u5bf9\u4e8e\u53ef\u53d8\u5bf9\u8c61\uff0ccopy \u662f\u62f7\u8d1d\u6307\u5411\u5185\u5b58\u5df2\u6709\u7a7a\u95f4\u7684\u5f15\u7528\uff0c\u800c deepcopy \u624d\u662f\u65b0\u5f00\u8f9f\u4e00\u5757\u7a7a\u95f4\uff0c\u5c06\u539f\u6765\u7684\u5185\u5bb9\u5b8c\u5168\u62f7\u8d1d\uff0c\u7136\u540e\u8fd4\u56de\u65b0\u7684\u7a7a\u95f4\u7684\u5f15\u7528\u3002 copy\uff08\u6d45\u62f7\u8d1d\uff09& deepcopy\uff08\u6df1\u62f7\u8d1d\uff09\u3010\u7ed3\u679c\u5b8c\u5168\u4e00\u81f4\u3011 \u5f53\u62f7\u8d1d\u7684\u53ef\u53d8\u53d8\u91cf\u7684\u5b50\u53d8\u91cf\u662f\u4e0d\u53ef\u53d8\u53d8\u91cf\u65f6\uff0c\u5bf9\u81ea\u53d8\u91cf\u8fdb\u884c\u4fee\u6539\uff0c\u5982\u4e0b\u539f\u59cb\u53d8\u91cf b \u548c\u62f7\u8d1d\u540e\u7684\u53d8\u91cf a\uff0c\u5206\u522b\u6307\u5411\u5b50\u53d8\u91cf\uff0c\u5f53\u8fdb\u884c\u4fee\u6539 a[0]\u65f6\uff0c\u53ef\u4ee5\u770b\u505a a[0]\u548c b[0]\u5206\u522b\u4e3a\u6307\u5411 1 \u7684\u53d8\u91cf\uff0c\u6b64\u65f6\uff0c\u4fee\u6539 a[0]\u4e3a 10\uff0c\u4f1a\u7ed9 10 \u91cd\u65b0\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u5c31\u662f a[0]\u6307\u5411 10 \u7684\u5b58\u50a8\u7a7a\u95f4\uff0cb[0]\u7684\u6307\u5411\u5173\u7cfb\u4e0d\u4f1a\u6709\u53d8\u5316\u3002\u6b64\u5904\u53ef\u53c2\u8003 \uff082\uff09\u4e0d\u53ef\u53d8\u53d8\u91cf\u95f4\u8d4b\u503c Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 # \u8bf4\u660e\uff1a\u62f7\u8d1d\u540e\uff0c\u6b64\u65f6a\u5f00\u8f9f\u4e86\u65b0\u7684\u7a7a\u95f4(\u5e76\u4e0d\u662f\u6307\u5411\u4e86b\u7684\u5f15\u7528)\uff0c # \u4f46\u662f a [0] \u3001a [1]\u3001a [2]\u53ea\u662f\u5206\u522b\u6307\u5411\u4e86\u53d8\u91cf1\u30012\u30013\u7684\u5f15\u7528 def test ( a , id_b ): print ( \"\u62f7\u8d1d\u524did(a)\u662f\uff1a %s \" , id ( a )) import copy a = copy . copy ( a ) # a = copy.deepcopy(a) print ( \"\u62f7\u8d1d\u540eid(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u62f7\u8d1d\u540eid(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id_b ) a [ 0 ] = 10 return a b = [ 1 , 2 , 3 ] print ( \"\u62f7\u8d1d\u524did(b)\u662f\uff1a %s \" , id ( b )) a = test ( b , id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e id(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u4fee\u6539\u540e id(b)\u662f\uff1a %s \" , id ( b )) print ( \"\u4fee\u6539\u540e id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e id(a[1]) == id(b[1]) \u662f\uff1a %s \" , id ( a [ 1 ]) == id ( b [ 1 ])) print ( b ) print ( a ) # \u7ed3\u679c \u62f7\u8d1d\u524did ( b ) \u662f \uff1a % s 3089483811072 \u62f7\u8d1d\u524did ( a ) \u662f \uff1a % s 3089483811072 \u62f7\u8d1d\u540eid ( a ) \u662f \uff1a % s 3089483811328 \u62f7\u8d1d\u540eid ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s True \u4fee\u6539\u540e id ( a ) \u662f \uff1a % s 3089483811328 \u4fee\u6539\u540e id ( b ) \u662f \uff1a % s 3089483811072 \u4fee\u6539\u540e id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s False \u4fee\u6539\u540e id ( a [ 1 ]) == id ( b [ 1 ]) \u662f \uff1a % s True [ 1 , 2 , 3 ] [ 10 , 2 , 3 ]","title":"(2) \u53ef\u53d8\u53d8\u91cf\uff08\u5b50\u5bf9\u8c61\u662f\u4e0d\u53ef\u53d8\u53d8\u91cf\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#3-\u53ef\u53d8\u53d8\u91cf\u5b50\u5bf9\u8c61\u662f\u53ef\u53d8\u53d8\u91cf","text":"","title":"(3) \u53ef\u53d8\u53d8\u91cf\uff08\u5b50\u5bf9\u8c61\u662f\u53ef\u53d8\u53d8\u91cf\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#copy\u6d45\u62f7\u8d1d","text":"\u5f53\u5bf9\u53ef\u53d8\u53d8\u91cf\u8fdb\u884c\u6d45\u62f7\u8d1d\uff0c\u5176\u5b50\u5bf9\u8c61\u662f\u53ef\u53d8\u53d8\u91cf\u65f6\uff0c\u62f7\u8d1d\u7684\u5219\u662f\u53ef\u53d8\u5b50\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a**\u4ec5\u62f7\u8d1d\u4e86\u7a7a\u95f4\u5f15\u7528\u5173\u7cfb**\uff0c\u5f53\u4e0d\u53ef\u53d8\u5b50\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u4f1a\u91cd\u65b0\u5f00\u8f9f\u7a7a\u95f4\u5b58\u50a8\uff0c\u5e76\u5efa\u7acb\u65b0\u7684\u5f15\u7528\u5173\u7cfb\uff1b\u5f53\u53ef\u53d8\u5b50\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u4f1a\u76f4\u63a5\u4fee\u6539\uff0c\u4f46\u662f\u5f15\u7528\u5173\u7cfb\u6ca1\u6709\u53d8\u5316\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 def test ( a ): c = a print ( \"\u62f7\u8d1d\u524did(a)\u662f\uff1a %s \" , id ( a )) import copy a = copy . copy ( a ) print ( \"\u62f7\u8d1d\u540eid(b)\u662f\uff1a %s \" , id ( c )) print ( \"\u62f7\u8d1d\u540eid(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( c [ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( c [ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( c [ 2 ][ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2]) == id(b[2][2]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ]) == id ( c [ 2 ][ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2][0]) == id(b[2][2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ][ 0 ]) == id ( c [ 2 ][ 2 ][ 0 ])) a [ 0 ] = 10 a [ 2 ][ 0 ] = \"c\" return a b = [ 1 , 2 , [ \"a\" , \"b\" , [ 1 , 2 ]]] print ( \"\u62f7\u8d1d\u524did(b)\u662f\uff1a %s \" , id ( b )) a = test ( b ) print ( \"\u4fee\u6539\u540e id(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u4fee\u6539\u540e id(b)\u662f\uff1a %s \" , id ( b )) print ( \"\u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( b [ 2 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ])) print ( \"\u672a\u4fee\u6539 \u53d8\u91cf id(a[1]) == id(b[1]) \u662f\uff1a %s \" , id ( a [ 1 ]) == id ( b [ 1 ])) print ( b ) print ( a ) # \u7ed3\u679c \u62f7\u8d1d\u524did ( b ) \u662f \uff1a % s 2480675678720 \u62f7\u8d1d\u524did ( a ) \u662f \uff1a % s 2480675678720 \u62f7\u8d1d\u540eid ( b ) \u662f \uff1a % s 2480675678720 \u62f7\u8d1d\u540eid ( a ) \u662f \uff1a % s 2480675678272 \u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ]) == id ( b [ 2 ][ 2 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ][ 0 ]) == id ( b [ 2 ][ 2 ][ 0 ]) \u662f \uff1a % s True \u4fee\u6539\u540e id ( a ) \u662f \uff1a % s 2480675678272 \u4fee\u6539\u540e id ( b ) \u662f \uff1a % s 2480675678720 \u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s False \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s True \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s True \u672a\u4fee\u6539 \u53d8\u91cf id ( a [ 1 ]) == id ( b [ 1 ]) \u662f \uff1a % s True [ 1 , 2 , [ 'c' , 'b' , [ 1 , 2 ]]] [ 10 , 2 , [ 'c' , 'b' , [ 1 , 2 ]]]","title":"copy\uff08\u6d45\u62f7\u8d1d\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/2.%20%E8%B5%8B%E5%80%BC%E3%80%81%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D/#deepcopy\u6df1\u62f7\u8d1d","text":"\u5f53\u5bf9\u53ef\u53d8\u53d8\u91cf\u8fdb\u884c\u6df1\u62f7\u8d1d\uff0c\u5176\u5b50\u5bf9\u8c61\u662f\u53ef\u53d8\u53d8\u91cf\u65f6\uff0c\u4f1a\u7ed9\u62f7\u8d1d\u7684\u53ef\u53d8\u5b50\u5bf9\u8c61\u5206\u914d\u65b0\u7684\u7a7a\u95f4\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u5f15\u7528\uff0c\u4fee\u6539\u62f7\u8d1d\u540e\u7684\u53d8\u91cf\uff0c\u4e0d\u4f1a\u5f71\u54cd\u62f7\u8d1d\u524d\u7684\u53d8\u91cf\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 def test ( a ): c = a print ( \"\u62f7\u8d1d\u524did(a)\u662f\uff1a %s \" , id ( a )) import copy a = copy . deepcopy ( a ) print ( \"\u62f7\u8d1d\u540eid(b)\u662f\uff1a %s \" , id ( c )) print ( \"\u62f7\u8d1d\u540eid(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( c [ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( c [ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( c [ 2 ][ 0 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2]) == id(b[2][2]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ]) == id ( c [ 2 ][ 2 ])) print ( \"\u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id(a[2][2][0]) == id(b[2][2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 2 ][ 0 ]) == id ( c [ 2 ][ 2 ][ 0 ])) a [ 0 ] = 10 a [ 2 ][ 0 ] = \"c\" return a b = [ 1 , 2 , [ \"a\" , \"b\" , [ 1 , 2 ]]] print ( \"\u62f7\u8d1d\u524did(b)\u662f\uff1a %s \" , id ( b )) a = test ( b ) print ( \"\u4fee\u6539\u540e id(a)\u662f\uff1a %s \" , id ( a )) print ( \"\u4fee\u6539\u540e id(b)\u662f\uff1a %s \" , id ( b )) print ( \"\u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id(a[0]) == id(b[0]) \u662f\uff1a %s \" , id ( a [ 0 ]) == id ( b [ 0 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2]) == id(b[2]) \u662f\uff1a %s \" , id ( a [ 2 ]) == id ( b [ 2 ])) print ( \"\u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id(a[2][0]) == id(b[2][0]) \u662f\uff1a %s \" , id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ])) print ( \"\u672a\u4fee\u6539 \u53d8\u91cf id(a[1]) == id(b[1]) \u662f\uff1a %s \" , id ( a [ 1 ]) == id ( b [ 1 ])) print ( b ) print ( a ) # \u7ed3\u679c \u62f7\u8d1d\u524did ( b ) \u662f \uff1a % s 1733009275136 \u62f7\u8d1d\u524did ( a ) \u662f \uff1a % s 1733009275136 \u62f7\u8d1d\u540eid ( b ) \u662f \uff1a % s 1733009275136 \u62f7\u8d1d\u540eid ( a ) \u662f \uff1a % s 1733009274688 \u62f7\u8d1d\u540e\u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s False \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s True \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ]) == id ( b [ 2 ][ 2 ]) \u662f \uff1a % s False \u62f7\u8d1d\u540e\u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 2 ][ 0 ]) == id ( b [ 2 ][ 2 ][ 0 ]) \u662f \uff1a % s True \u4fee\u6539\u540e id ( a ) \u662f \uff1a % s 1733009274688 \u4fee\u6539\u540e id ( b ) \u662f \uff1a % s 1733009275136 \u4fee\u6539\u540e \u4e0d\u53ef\u53d8\u53d8\u91cf id ( a [ 0 ]) == id ( b [ 0 ]) \u662f \uff1a % s False \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ]) == id ( b [ 2 ]) \u662f \uff1a % s False \u4fee\u6539\u540e \u53ef\u53d8\u53d8\u91cf id ( a [ 2 ][ 0 ]) == id ( b [ 2 ][ 0 ]) \u662f \uff1a % s False \u672a\u4fee\u6539 \u53d8\u91cf id ( a [ 1 ]) == id ( b [ 1 ]) \u662f \uff1a % s True [ 1 , 2 , [ 'a' , 'b' , [ 1 , 2 ]]] [ 10 , 2 , [ 'c' , 'b' , [ 1 , 2 ]]]","title":"deepcopy\uff08\u6df1\u62f7\u8d1d\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/3.%20%E5%AE%B9%E5%99%A8%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%81%E7%94%9F%E6%88%90%E5%99%A8/","text":"1. \u5bb9\u5668\uff08container\uff09 \u00b6 container \u53ef\u4ee5\u7406\u89e3\u4e3a\u628a\u591a\u4e2a\u5143\u7d20\u7ec4\u7ec7\u5728\u4e00\u8d77\u7684\u6570\u636e\u7ed3\u6784\uff0ccontainer \u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u9010\u4e2a\u5730\u8fed\u4ee3\u83b7\u53d6\uff0c\u53ef\u4ee5\u7528 in, not in \u5173\u952e\u5b57\u5224\u65ad\u5143\u7d20\u662f\u5426\u5305\u542b\u5728\u5bb9\u5668\u4e2d\u3002\u6bd4\u5982 Python \u4e2d\u5e38\u89c1\u7684 container \u5bf9\u8c61\u6709 list\uff0cdeque\uff0cset 2. \u53ef\u8fed\u4ee3\u5bf9\u8c61(iterables) \u00b6 \u5927\u90e8\u5206\u7684 container \u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6bd4\u5982 list or set \u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bf4\u53ea\u8981\u662f\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u7684\u90fd\u53ef\u4ee5\u79f0\u4f5c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 3. \u8fed\u4ee3\u5668\uff08iterator\uff09 \u00b6 python \u4e2d\u7684\u5bb9\u5668\u6709\u8bb8\u591a\uff0c\u6bd4\u5982\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u3001\u96c6\u5408\u7b49\uff0c\u5bf9\u4e8e\u5bb9\u5668\uff0c\u53ef\u4ee5\u5f88\u76f4\u89c2\u5730\u60f3\u8c61\u6210\u591a\u4e2a\u5143\u7d20\u5728\u4e00\u8d77\u7684\u5355\u5143\uff0c\u6240\u6709\u7684\u5bb9\u5668\u90fd\u662f\u53ef\u8fed\u4ee3\u7684\uff08iterable\uff09\u3002 \u6211\u4eec\u901a\u5e38\u4f7f\u7528 for in \u8bed\u53e5\u5bf9\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u8fdb\u884c\u679a\u4e3e\uff0c\u5176\u5e95\u5c42\u673a\u5236\u5728\u4e8e\uff1a \u800c\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u901a\u8fc7 iter() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff08iterator\uff09\uff0c\u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u4e00\u4e2a next \u7684\u65b9\u6cd5\u3002\u8c03\u7528\u7528\u8fd9\u4e2a\u65b9\u6cd5\u540e\uff0c\u4f60\u8981\u4e48\u5f97\u5230\u8fd9\u4e2a\u5bb9\u5668\u7684\u4e0b\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8981\u4e48\u5f97\u5230\u4e00\u4e2a StopIteration \u7684\u9519\u8bef\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> x = [ 1 , 2 , 3 ] >>> # Get the iterator >>> y = iter ( items ) # Invokes items.__iter__() >>> # Run the iterator >>> next ( y ) # Invokes it.__next__() 1 >>> next ( y ) 2 >>> next ( y ) 3 >>> type ( x ) < class ' list '> >>> type ( y ) < class ' list_iterator '> >>> next ( y ) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration >>> \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c x=[1,2,3] \u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4e5f\u53eb\u5bb9\u5668\u3002 y=iter(x) \u5219\u662f\u8fed\u4ee3\u5668\uff0c\u4e14\u5b9e\u73b0\u4e86 __iter__ \u548c __next__ \u65b9\u6cd5\u3002 \u53ef\u89c1\u901a\u8fc7 iter \u65b9\u6cd5\u540e\u5c31\u662f\u8fed\u4ee3\u5668\u3002\u5b83\u662f\u4e00\u4e2a\u5e26\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u8c03\u7528 next \u65b9\u6cd5\u7684\u65f6\u5019\u8fd4\u56de\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u8bf4\u4efb\u4f55\u5b9e\u73b0\u4e86iter\u548c next \u65b9\u6cd5\u7684\u5bf9\u8c61\u90fd\u662f\u8fed\u4ee3\u5668\uff0citer\u8fd4\u56de\u8fed\u4ee3\u5668\u81ea\u8eab\uff0cnext \u8fd4\u56de\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u5bb9\u5668\u4e2d\u6ca1\u6709\u66f4\u591a\u5143\u7d20\u4e86\uff0c\u5219\u629b\u5f02\u5e38\u3002 \u8fed\u4ee3\u5668\u5c31\u50cf\u4e00\u4e2a\u61d2\u52a0\u8f7d\u7684\u5de5\u5382\uff0c\u7b49\u5230\u6709\u4eba\u9700\u8981\u7684\u65f6\u5019\u624d\u7ed9\u5b83\u751f\u6210\u503c\u8fd4\u56de\uff0c\u6ca1\u8c03\u7528\u7684\u65f6\u5019\u5c31\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u7528\u3002 4. \u751f\u6210\u5668\uff08generator\uff09 \u00b6 \u751f\u6210\u5668(generator)\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u61d2\u4eba\u7248\u672c\u7684\u8fed\u4ee3\u5668\u3002 \u5b83\u76f8\u6bd4\u4e8e\u8fed\u4ee3\u5668\u7684\u4f18\u52bf\u662f\uff0c\u751f\u6210\u5668\u5e76\u4e0d\u4f1a\u50cf\u8fed\u4ee3\u5668\u4e00\u6837\u5360\u7528\u5927\u91cf\u5185\u5b58\u3002 \u6bd4\u5982\u58f0\u660e\u4e00\u4e2a\u8fed\u4ee3\u5668\uff1a [i for i in range(100000000)] \u5c31\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u5305\u542b\u4e00\u4ebf\u4e2a\u5143\u7d20\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u5728\u751f\u6210\u540e\u90fd\u4f1a\u4fdd\u5b58\u5230\u5185\u5b58\u4e2d\u3002\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u4e5f\u8bb8\u5e76\u4e0d\u9700\u8981\u4fdd\u5b58\u90a3\u4e48\u591a\u4e1c\u897f\uff0c\u53ea\u5e0c\u671b\u5728\u4f60\u7528 next() \u51fd\u6570\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u751f\u6210\u4e0b\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u6b64\u751f\u6210\u5668\u5e94\u8fd0\u800c\u751f\uff0c\u5728python\u4e2d\u7684\u5199\u6cd5\u4e3a(i for i in range(100000000)) \u6b64\u5916\uff0c\u751f\u6210\u5668\u8fd8\u53ef\u4ee5\u6709\u522b\u7684\u5f62\u5f0f\uff0c\u6bd4\u5982\u751f\u6210\u5668\u51fd\u6570\uff0c\u901a\u8fc7yield\u5173\u952e\u5b57\uff0c\u628a\u7ed3\u679c\u8fd4\u56de\u5230next()\u65b9\u6cd5\u4e2d\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 def frange ( start , stop , increment ): x = start while x < stop : yield x x += increment for n in frange ( 0 , 2 , 0.5 ): print ( n ) 0 0.5 1.0 1.5 \u5173\u4e8e yield 4. yield \u5173\u952e\u5b57\u7406\u89e3 \u76f8\u6bd4\u4e8e\u8fed\u4ee3\u5668\uff0c\u751f\u6210\u5668\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a 1. \u51cf\u5c11\u5185\u5b58 2. \u5ef6\u8fdf\u8ba1\u7b97 3. \u6709\u6548\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027","title":"3. \u5bb9\u5668\u3001\u8fed\u4ee3\u5668\u3001\u751f\u6210\u5668"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/3.%20%E5%AE%B9%E5%99%A8%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%81%E7%94%9F%E6%88%90%E5%99%A8/#1-\u5bb9\u5668container","text":"container \u53ef\u4ee5\u7406\u89e3\u4e3a\u628a\u591a\u4e2a\u5143\u7d20\u7ec4\u7ec7\u5728\u4e00\u8d77\u7684\u6570\u636e\u7ed3\u6784\uff0ccontainer \u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u9010\u4e2a\u5730\u8fed\u4ee3\u83b7\u53d6\uff0c\u53ef\u4ee5\u7528 in, not in \u5173\u952e\u5b57\u5224\u65ad\u5143\u7d20\u662f\u5426\u5305\u542b\u5728\u5bb9\u5668\u4e2d\u3002\u6bd4\u5982 Python \u4e2d\u5e38\u89c1\u7684 container \u5bf9\u8c61\u6709 list\uff0cdeque\uff0cset","title":"1. \u5bb9\u5668\uff08container\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/3.%20%E5%AE%B9%E5%99%A8%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%81%E7%94%9F%E6%88%90%E5%99%A8/#2-\u53ef\u8fed\u4ee3\u5bf9\u8c61iterables","text":"\u5927\u90e8\u5206\u7684 container \u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6bd4\u5982 list or set \u90fd\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8bf4\u53ea\u8981\u662f\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u7684\u90fd\u53ef\u4ee5\u79f0\u4f5c\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002","title":"2. \u53ef\u8fed\u4ee3\u5bf9\u8c61(iterables)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/3.%20%E5%AE%B9%E5%99%A8%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%81%E7%94%9F%E6%88%90%E5%99%A8/#3-\u8fed\u4ee3\u5668iterator","text":"python \u4e2d\u7684\u5bb9\u5668\u6709\u8bb8\u591a\uff0c\u6bd4\u5982\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u3001\u96c6\u5408\u7b49\uff0c\u5bf9\u4e8e\u5bb9\u5668\uff0c\u53ef\u4ee5\u5f88\u76f4\u89c2\u5730\u60f3\u8c61\u6210\u591a\u4e2a\u5143\u7d20\u5728\u4e00\u8d77\u7684\u5355\u5143\uff0c\u6240\u6709\u7684\u5bb9\u5668\u90fd\u662f\u53ef\u8fed\u4ee3\u7684\uff08iterable\uff09\u3002 \u6211\u4eec\u901a\u5e38\u4f7f\u7528 for in \u8bed\u53e5\u5bf9\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u8fdb\u884c\u679a\u4e3e\uff0c\u5176\u5e95\u5c42\u673a\u5236\u5728\u4e8e\uff1a \u800c\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u901a\u8fc7 iter() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff08iterator\uff09\uff0c\u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u4e00\u4e2a next \u7684\u65b9\u6cd5\u3002\u8c03\u7528\u7528\u8fd9\u4e2a\u65b9\u6cd5\u540e\uff0c\u4f60\u8981\u4e48\u5f97\u5230\u8fd9\u4e2a\u5bb9\u5668\u7684\u4e0b\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8981\u4e48\u5f97\u5230\u4e00\u4e2a StopIteration \u7684\u9519\u8bef\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> x = [ 1 , 2 , 3 ] >>> # Get the iterator >>> y = iter ( items ) # Invokes items.__iter__() >>> # Run the iterator >>> next ( y ) # Invokes it.__next__() 1 >>> next ( y ) 2 >>> next ( y ) 3 >>> type ( x ) < class ' list '> >>> type ( y ) < class ' list_iterator '> >>> next ( y ) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration >>> \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c x=[1,2,3] \u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4e5f\u53eb\u5bb9\u5668\u3002 y=iter(x) \u5219\u662f\u8fed\u4ee3\u5668\uff0c\u4e14\u5b9e\u73b0\u4e86 __iter__ \u548c __next__ \u65b9\u6cd5\u3002 \u53ef\u89c1\u901a\u8fc7 iter \u65b9\u6cd5\u540e\u5c31\u662f\u8fed\u4ee3\u5668\u3002\u5b83\u662f\u4e00\u4e2a\u5e26\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u8c03\u7528 next \u65b9\u6cd5\u7684\u65f6\u5019\u8fd4\u56de\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u8bf4\u4efb\u4f55\u5b9e\u73b0\u4e86iter\u548c next \u65b9\u6cd5\u7684\u5bf9\u8c61\u90fd\u662f\u8fed\u4ee3\u5668\uff0citer\u8fd4\u56de\u8fed\u4ee3\u5668\u81ea\u8eab\uff0cnext \u8fd4\u56de\u5bb9\u5668\u4e2d\u7684\u4e0b\u4e00\u4e2a\u503c\uff0c\u5982\u679c\u5bb9\u5668\u4e2d\u6ca1\u6709\u66f4\u591a\u5143\u7d20\u4e86\uff0c\u5219\u629b\u5f02\u5e38\u3002 \u8fed\u4ee3\u5668\u5c31\u50cf\u4e00\u4e2a\u61d2\u52a0\u8f7d\u7684\u5de5\u5382\uff0c\u7b49\u5230\u6709\u4eba\u9700\u8981\u7684\u65f6\u5019\u624d\u7ed9\u5b83\u751f\u6210\u503c\u8fd4\u56de\uff0c\u6ca1\u8c03\u7528\u7684\u65f6\u5019\u5c31\u5904\u4e8e\u4f11\u7720\u72b6\u6001\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u7528\u3002","title":"3. \u8fed\u4ee3\u5668\uff08iterator\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/3.%20%E5%AE%B9%E5%99%A8%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%81%E7%94%9F%E6%88%90%E5%99%A8/#4-\u751f\u6210\u5668generator","text":"\u751f\u6210\u5668(generator)\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u61d2\u4eba\u7248\u672c\u7684\u8fed\u4ee3\u5668\u3002 \u5b83\u76f8\u6bd4\u4e8e\u8fed\u4ee3\u5668\u7684\u4f18\u52bf\u662f\uff0c\u751f\u6210\u5668\u5e76\u4e0d\u4f1a\u50cf\u8fed\u4ee3\u5668\u4e00\u6837\u5360\u7528\u5927\u91cf\u5185\u5b58\u3002 \u6bd4\u5982\u58f0\u660e\u4e00\u4e2a\u8fed\u4ee3\u5668\uff1a [i for i in range(100000000)] \u5c31\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u5305\u542b\u4e00\u4ebf\u4e2a\u5143\u7d20\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u5728\u751f\u6210\u540e\u90fd\u4f1a\u4fdd\u5b58\u5230\u5185\u5b58\u4e2d\u3002\u4f46\u5b9e\u9645\u4e0a\u6211\u4eec\u4e5f\u8bb8\u5e76\u4e0d\u9700\u8981\u4fdd\u5b58\u90a3\u4e48\u591a\u4e1c\u897f\uff0c\u53ea\u5e0c\u671b\u5728\u4f60\u7528 next() \u51fd\u6570\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u751f\u6210\u4e0b\u4e00\u4e2a\u53d8\u91cf\uff0c\u56e0\u6b64\u751f\u6210\u5668\u5e94\u8fd0\u800c\u751f\uff0c\u5728python\u4e2d\u7684\u5199\u6cd5\u4e3a(i for i in range(100000000)) \u6b64\u5916\uff0c\u751f\u6210\u5668\u8fd8\u53ef\u4ee5\u6709\u522b\u7684\u5f62\u5f0f\uff0c\u6bd4\u5982\u751f\u6210\u5668\u51fd\u6570\uff0c\u901a\u8fc7yield\u5173\u952e\u5b57\uff0c\u628a\u7ed3\u679c\u8fd4\u56de\u5230next()\u65b9\u6cd5\u4e2d\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 def frange ( start , stop , increment ): x = start while x < stop : yield x x += increment for n in frange ( 0 , 2 , 0.5 ): print ( n ) 0 0.5 1.0 1.5 \u5173\u4e8e yield 4. yield \u5173\u952e\u5b57\u7406\u89e3 \u76f8\u6bd4\u4e8e\u8fed\u4ee3\u5668\uff0c\u751f\u6210\u5668\u5177\u6709\u4ee5\u4e0b\u4f18\u70b9\uff1a 1. \u51cf\u5c11\u5185\u5b58 2. \u5ef6\u8fdf\u8ba1\u7b97 3. \u6709\u6548\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027","title":"4. \u751f\u6210\u5668\uff08generator\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/4.%20yield%20%E5%85%B3%E9%94%AE%E5%AD%97%E7%90%86%E8%A7%A3/","text":"created: 2022-09-17T16:56:50 tags: [python yield] source: \u539f\u6587\u5730\u5740 author: python \u4e2d yield \u7684\u7528\u6cd5\u8be6\u89e3\u2014\u2014\u6700\u7b80\u5355\uff0c\u6700\u6e05\u6670\u7684\u89e3\u91ca_\u51af\u723d\u6717\u7684\u535a\u5ba2-CSDN \u535a\u5ba2_python yield \u00b6 \u91cd\u8981\u58f0\u660e\uff1a****\u672c\u6587\u4e3a\u535a\u4e3b\u539f\u521b\u6587\u7ae0\u3002\u8f6c\u8f7d\u8bf7\u52a1\u5fc5\u9644\u4e0a\u94fe\u63a5\uff0c\u8c22\u8c22\uff01 \u672c\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/mieleizhi0522/article/details/82142856 \u9996\u5148\u6211\u8981\u5410\u69fd\u4e00\u4e0b\uff0c\u770b\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u9047\u89c1\u4e86 yield \u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u7136\u540e\u767e\u5ea6\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u6ca1\u6709\u4e00\u4e2a\u80fd\u7b80\u5355\u7684\u8ba9\u6211\u61c2\u7684\uff0c\u8bb2\u8d77\u6765\u771fTM\u7684\u90fd\u662f\u5934\u5934\u662f\u9053\uff0c\u4ec0\u4e48\u53c2\u6570\uff0c\u4ec0\u4e48\u4f20\u9012\u7684\uff0c\u8fd8\u53e3\u53e3\u58f0\u58f0\u8bf4\u81ea\u5df1\u7684\u6559\u7a0b\u662f\u6700\u7b80\u5355\u7684\uff0c\u6700\u6d45\u663e\u6613\u61c2\u7684\uff0c\u6211\u5c31\u60f3\u95ee\u6ca1\u6709\u6709\u8003\u8651\u8fc7\u8bfb\u8005\u7684\u611f\u53d7\u3002 \u63a5\u4e0b\u6765\u662f\u6b63\u9898\uff1a 1.\u5bf9 yield \u7684\u521d\u6b65\u8ba4\u8bc6 \u00b6 \u9996\u5148\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5bf9 yield \u6709\u4e2a\u521d\u6b65\u5206\u8ba4\u8bc6\uff0c\u90a3\u4e48\u4f60\u5148\u628a yield \u770b\u505a\u201creturn\u201d\uff0c\u8fd9\u4e2a\u662f\u76f4\u89c2\u7684\uff0c\u5b83\u9996\u5148\u662f\u4e2a return\uff0c\u666e\u901a\u7684 return \u662f\u4ec0\u4e48\u610f\u601d\uff0c\u5c31\u662f\u5728\u7a0b\u5e8f\u4e2d\u8fd4\u56de\u67d0\u4e2a\u503c\uff0c\u8fd4\u56de\u4e4b\u540e\u7a0b\u5e8f\u5c31\u4e0d\u518d\u5f80\u4e0b\u8fd0\u884c\u4e86\u3002\u770b\u505a return \u4e4b\u540e\u518d\u628a\u5b83\u770b\u505a\u4e00\u4e2a\u662f\u751f\u6210\u5668\uff08generator\uff09\u7684\u4e00\u90e8\u5206\uff08\u5e26 yield \u7684\u51fd\u6570\u624d\u662f\u771f\u6b63\u7684\u8fed\u4ee3\u5668\uff09\uff0c\u597d\u4e86\uff0c\u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u4e0d\u660e\u767d\u7684\u8bdd\uff0c\u90a3\u5148\u628a yield \u770b\u505a return,\u7136\u540e\u76f4\u63a5\u770b\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u4f60\u5c31\u4f1a\u660e\u767d yield \u7684\u5168\u90e8\u610f\u601d\u4e86\uff1a Python 1 2 3 4 5 6 7 8 9 10 def foo (): print ( \"starting...\" ) while True : res = yield 4 print ( \"res:\" , res ) g = foo () # foo\u51fd\u6570\u4e2d\u6709yield\u5173\u952e\u5b57\uff0c\u6240\u4ee5foo\u51fd\u6570\u5e76\u4e0d\u4f1a\u771f\u7684\u6267\u884c print ( next ( g )) print ( \"*\" * 20 ) print ( next ( g )) \u5c31\u8fd9\u4e48\u7b80\u5355\u7684\u51e0\u884c\u4ee3\u7801\u5c31\u8ba9\u4f60\u660e\u767d\u4ec0\u4e48\u662f yield\uff0c\u4ee3\u7801\u7684\u8f93\u51fa\u8fd9\u4e2a\uff1a Text Only 1 2 3 4 5 starting... 4 ******************** res: None 4 \u6211\u76f4\u63a5\u89e3\u91ca\u4ee3\u7801\u8fd0\u884c\u987a\u5e8f\uff0c\u76f8\u5f53\u4e8e\u4ee3\u7801\u5355\u6b65\u8c03\u8bd5\uff1a \u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4ee5\u540e\uff0c\u56e0\u4e3a foo \u51fd\u6570\u4e2d\u6709 yield \u5173\u952e\u5b57\uff0c\u6240\u4ee5 foo \u51fd\u6570\u5e76\u4e0d\u4f1a\u771f\u7684\u6267\u884c\uff0c\u800c\u662f\u5148\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u5668 g(\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5bf9\u8c61) \u76f4\u5230\u8c03\u7528 next \u65b9\u6cd5\uff0cfoo \u51fd\u6570\u6b63\u5f0f\u5f00\u59cb\u6267\u884c\uff0c\u5148\u6267\u884c foo \u51fd\u6570\u4e2d\u7684 print \u65b9\u6cd5\uff0c\u7136\u540e\u8fdb\u5165 while \u5faa\u73af \u7a0b\u5e8f\u9047\u5230 yield \u5173\u952e\u5b57\uff0c\u7136\u540e\u628a yield \u60f3\u60f3\u6210 return,return \u4e86\u4e00\u4e2a 4 \u4e4b\u540e\uff0c\u7a0b\u5e8f\u505c\u6b62\uff0c\u5e76\u6ca1\u6709\u6267\u884c\u8d4b\u503c\u7ed9 res \u64cd\u4f5c\uff0c\u6b64\u65f6 next(g)\u8bed\u53e5\u6267\u884c\u5b8c\u6210\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u524d\u4e24\u884c\uff08\u7b2c\u4e00\u4e2a\u662f while \u4e0a\u9762\u7684 print \u7684\u7ed3\u679c,\u7b2c\u4e8c\u4e2a\u662f return \u51fa\u7684\u7ed3\u679c\uff09\u662f\u6267\u884c print(next(g))\u7684\u7ed3\u679c\uff0c \u7a0b\u5e8f\u6267\u884c print(\" \"*20)\uff0c\u8f93\u51fa 20 \u4e2a \u53c8\u5f00\u59cb\u6267\u884c\u4e0b\u9762\u7684 print(next(g)),\u8fd9\u4e2a\u65f6\u5019\u548c\u4e0a\u9762\u90a3\u4e2a\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e2a\u65f6\u5019\u662f\u4ece\u521a\u624d\u90a3\u4e2a next \u7a0b\u5e8f\u505c\u6b62\u7684\u5730\u65b9\u5f00\u59cb\u6267\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u8981\u6267\u884c res \u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u8fd9\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65f6\u5019\u8d4b\u503c\u64cd\u4f5c\u7684\u53f3\u8fb9\u662f\u6ca1\u6709\u503c\u7684\uff08\u56e0\u4e3a\u521a\u624d\u90a3\u4e2a\u662f return \u51fa\u53bb\u4e86\uff0c\u5e76\u6ca1\u6709\u7ed9\u8d4b\u503c\u64cd\u4f5c\u7684\u5de6\u8fb9\u4f20\u53c2\u6570\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019 res \u8d4b\u503c\u662f None,\u6240\u4ee5\u63a5\u7740\u4e0b\u9762\u7684\u8f93\u51fa\u5c31\u662f res: None, \u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u5728 while \u91cc\u6267\u884c\uff0c\u53c8\u4e00\u6b21\u78b0\u5230 yield,\u8fd9\u4e2a\u65f6\u5019\u540c\u6837 return \u51fa 4\uff0c\u7136\u540e\u7a0b\u5e8f\u505c\u6b62\uff0cprint \u51fd\u6570\u8f93\u51fa\u7684 4 \u5c31\u662f\u8fd9\u6b21 return \u51fa\u7684 4. \u5230\u8fd9\u91cc\u4f60\u53ef\u80fd\u5c31\u660e\u767d yield \u548c return \u7684\u5173\u7cfb\u548c\u533a\u522b\u4e86\uff0c\u5e26 yield \u7684\u51fd\u6570\u662f\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\u4e86\uff0c\u8fd9\u4e2a\u751f\u6210\u5668\u6709\u4e00\u4e2a\u51fd\u6570\u5c31\u662f next \u51fd\u6570\uff0cnext \u5c31\u76f8\u5f53\u4e8e\u201c\u4e0b\u4e00\u6b65\u201d\u751f\u6210\u54ea\u4e2a\u6570\uff0c\u8fd9\u4e00\u6b21\u7684 next \u5f00\u59cb\u7684\u5730\u65b9\u662f\u63a5\u7740\u4e0a\u4e00\u6b21\u7684 next \u505c\u6b62\u7684\u5730\u65b9\u6267\u884c\u7684\uff0c\u6240\u4ee5\u8c03\u7528 next \u7684\u65f6\u5019\uff0c\u751f\u6210\u5668\u5e76\u4e0d\u4f1a\u4ece foo \u51fd\u6570\u7684\u5f00\u59cb\u6267\u884c\uff0c\u53ea\u662f\u63a5\u7740\u4e0a\u4e00\u6b65\u505c\u6b62\u7684\u5730\u65b9\u5f00\u59cb\uff0c\u7136\u540e\u9047\u5230 yield \u540e\uff0creturn \u51fa\u8981\u751f\u6210\u7684\u6570\uff0c\u6b64\u6b65\u5c31\u7ed3\u675f\u3002 2. send() \u51fd\u6570 \u00b6 Python 1 2 3 4 5 6 7 8 9 10 def foo (): print ( \"starting...\" ) while True : res = yield 4 print ( \"res:\" , res ) g = foo () print ( next ( g )) print ( \"*\" * 20 ) print ( g . send ( 7 )) \u518d\u770b\u4e00\u4e2a\u8fd9\u4e2a\u751f\u6210\u5668\u7684 send \u51fd\u6570\u7684\u4f8b\u5b50\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u628a\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\u7684\u6700\u540e\u4e00\u884c\u6362\u6389\u4e86\uff0c\u8f93\u51fa\u7ed3\u679c\uff1a Text Only 1 2 3 4 5 starting... 4 ******************** res: 7 4 \u5148\u5927\u81f4\u8bf4\u4e00\u4e0b send \u51fd\u6570\u7684\u6982\u5ff5\uff1a\u6b64\u65f6\u4f60\u5e94\u8be5\u6ce8\u610f\u5230\u4e0a\u9762\u90a3\u4e2a\u7684\u7d2b\u8272\u7684\u5b57\uff0c\u8fd8\u6709\u4e0a\u9762\u90a3\u4e2a res \u7684\u503c\u4e3a\u4ec0\u4e48\u662f None\uff0c\u8fd9\u4e2a\u53d8\u6210\u4e86 7\uff0c\u5230\u5e95\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u662f\u56e0\u4e3a\uff0csend \u662f\u53d1\u9001\u4e00\u4e2a\u53c2\u6570\u7ed9 res \u7684\uff0c\u56e0\u4e3a\u4e0a\u9762\u8bb2\u5230\uff0creturn \u7684\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u628a 4 \u8d4b\u503c\u7ed9 res\uff0c\u4e0b\u6b21\u6267\u884c\u7684\u65f6\u5019\u53ea\u597d\u7ee7\u7eed\u6267\u884c\u8d4b\u503c\u64cd\u4f5c\uff0c\u53ea\u597d\u8d4b\u503c\u4e3a None \u4e86\uff0c\u800c\u5982\u679c\u7528 send \u7684\u8bdd\uff0c\u5f00\u59cb\u6267\u884c\u7684\u65f6\u5019\uff0c\u5148\u63a5\u7740\u4e0a\u4e00\u6b21\uff08return 4 \u4e4b\u540e\uff09\u6267\u884c\uff0c\u5148\u628a 7 \u8d4b\u503c\u7ed9\u4e86 res,\u7136\u540e\u6267\u884c next \u7684\u4f5c\u7528\uff0c\u9047\u89c1\u4e0b\u4e00\u56de\u7684 yield\uff0creturn \u51fa\u7ed3\u679c\u540e\u7ed3\u675f\u3002 \u7a0b\u5e8f\u6267\u884c g.send(7)\uff0c\u7a0b\u5e8f\u4f1a\u4ece yield \u5173\u952e\u5b57\u90a3\u4e00\u884c\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\uff0csend \u4f1a\u628a 7 \u8fd9\u4e2a\u503c\u8d4b\u503c\u7ed9 res \u53d8\u91cf \u7531\u4e8e send \u65b9\u6cd5\u4e2d\u5305\u542b next()\u65b9\u6cd5\uff0c\u6240\u4ee5\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\u6267\u884c print \u65b9\u6cd5\uff0c\u7136\u540e\u518d\u6b21\u8fdb\u5165 while \u5faa\u73af \u7a0b\u5e8f\u6267\u884c\u518d\u6b21\u9047\u5230 yield \u5173\u952e\u5b57\uff0cyield \u4f1a\u8fd4\u56de\u540e\u9762\u7684\u503c\u540e\uff0c\u7a0b\u5e8f\u518d\u6b21\u6682\u505c\uff0c\u76f4\u5230\u518d\u6b21\u8c03\u7528 next \u65b9\u6cd5\u6216 send \u65b9\u6cd5\u3002 \u8fd9\u5c31\u7ed3\u675f\u4e86\uff0c\u8bf4\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u7528\u8fd9\u4e2a\u751f\u6210\u5668\uff0c\u662f\u56e0\u4e3a\u5982\u679c\u7528 List \u7684\u8bdd\uff0c\u4f1a\u5360\u7528\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u6bd4\u5982\u8bf4\u53d6 0,1,2,3,4,5,6............1000 \u4f60\u53ef\u80fd\u4f1a\u8fd9\u6837\uff1a Python 1 2 for n in range ( 1000 ): a = n \u8fd9\u4e2a\u65f6\u5019 range(1000)\u5c31\u9ed8\u8ba4\u751f\u6210\u4e00\u4e2a\u542b\u6709 1000 \u4e2a\u6570\u7684 list \u4e86\uff0c\u6240\u4ee5\u5f88\u5360\u5185\u5b58\u3002 \u8fd9\u4e2a\u65f6\u5019\u4f60\u53ef\u4ee5\u7528\u521a\u624d\u7684 yield \u7ec4\u5408\u6210\u751f\u6210\u5668\u8fdb\u884c\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u7528 xrange(1000)\u8fd9\u4e2a\u751f\u6210\u5668\u5b9e\u73b0 yield \u7ec4\u5408\uff1a Python 1 2 3 4 5 6 7 def foo ( num ): print ( \"starting...\" ) while num < 10 : num = num + 1 yield num for n in foo ( 0 ): print ( n ) \u8f93\u51fa\uff1a Text Only 1 2 3 4 5 6 7 8 9 10 11 starting... 1 2 3 4 5 6 7 8 9 10 xrange(1000): Python 1 2 for n in xrange ( 1000 ): a = n \u5176\u4e2d\u8981\u6ce8\u610f\u7684\u662f python3 \u65f6\u5df2\u7ecf\u6ca1\u6709 xrange()\u4e86\uff0c\u5728 python3 \u4e2d\uff0crange()\u5c31\u662f xrange()\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728 python3 \u4e2d\u67e5\u770b range()\u7684\u7c7b\u578b\uff0c\u5b83\u5df2\u7ecf\u662f\u4e2a \u4e86\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a list \u4e86\uff0c\u6bd5\u7adf\u8fd9\u4e2a\u662f\u9700\u8981\u4f18\u5316\u7684\u3002","title":"4. yield \u5173\u952e\u5b57\u7406\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/4.%20yield%20%E5%85%B3%E9%94%AE%E5%AD%97%E7%90%86%E8%A7%A3/#python-\u4e2d-yield-\u7684\u7528\u6cd5\u8be6\u89e3\u6700\u7b80\u5355\u6700\u6e05\u6670\u7684\u89e3\u91ca_\u51af\u723d\u6717\u7684\u535a\u5ba2-csdn-\u535a\u5ba2_python-yield","text":"\u91cd\u8981\u58f0\u660e\uff1a****\u672c\u6587\u4e3a\u535a\u4e3b\u539f\u521b\u6587\u7ae0\u3002\u8f6c\u8f7d\u8bf7\u52a1\u5fc5\u9644\u4e0a\u94fe\u63a5\uff0c\u8c22\u8c22\uff01 \u672c\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/mieleizhi0522/article/details/82142856 \u9996\u5148\u6211\u8981\u5410\u69fd\u4e00\u4e0b\uff0c\u770b\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u9047\u89c1\u4e86 yield \u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u7136\u540e\u767e\u5ea6\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u6ca1\u6709\u4e00\u4e2a\u80fd\u7b80\u5355\u7684\u8ba9\u6211\u61c2\u7684\uff0c\u8bb2\u8d77\u6765\u771fTM\u7684\u90fd\u662f\u5934\u5934\u662f\u9053\uff0c\u4ec0\u4e48\u53c2\u6570\uff0c\u4ec0\u4e48\u4f20\u9012\u7684\uff0c\u8fd8\u53e3\u53e3\u58f0\u58f0\u8bf4\u81ea\u5df1\u7684\u6559\u7a0b\u662f\u6700\u7b80\u5355\u7684\uff0c\u6700\u6d45\u663e\u6613\u61c2\u7684\uff0c\u6211\u5c31\u60f3\u95ee\u6ca1\u6709\u6709\u8003\u8651\u8fc7\u8bfb\u8005\u7684\u611f\u53d7\u3002 \u63a5\u4e0b\u6765\u662f\u6b63\u9898\uff1a","title":"python \u4e2d yield \u7684\u7528\u6cd5\u8be6\u89e3\u2014\u2014\u6700\u7b80\u5355\uff0c\u6700\u6e05\u6670\u7684\u89e3\u91ca_\u51af\u723d\u6717\u7684\u535a\u5ba2-CSDN \u535a\u5ba2_python yield"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/4.%20yield%20%E5%85%B3%E9%94%AE%E5%AD%97%E7%90%86%E8%A7%A3/#1\u5bf9-yield-\u7684\u521d\u6b65\u8ba4\u8bc6","text":"\u9996\u5148\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5bf9 yield \u6709\u4e2a\u521d\u6b65\u5206\u8ba4\u8bc6\uff0c\u90a3\u4e48\u4f60\u5148\u628a yield \u770b\u505a\u201creturn\u201d\uff0c\u8fd9\u4e2a\u662f\u76f4\u89c2\u7684\uff0c\u5b83\u9996\u5148\u662f\u4e2a return\uff0c\u666e\u901a\u7684 return \u662f\u4ec0\u4e48\u610f\u601d\uff0c\u5c31\u662f\u5728\u7a0b\u5e8f\u4e2d\u8fd4\u56de\u67d0\u4e2a\u503c\uff0c\u8fd4\u56de\u4e4b\u540e\u7a0b\u5e8f\u5c31\u4e0d\u518d\u5f80\u4e0b\u8fd0\u884c\u4e86\u3002\u770b\u505a return \u4e4b\u540e\u518d\u628a\u5b83\u770b\u505a\u4e00\u4e2a\u662f\u751f\u6210\u5668\uff08generator\uff09\u7684\u4e00\u90e8\u5206\uff08\u5e26 yield \u7684\u51fd\u6570\u624d\u662f\u771f\u6b63\u7684\u8fed\u4ee3\u5668\uff09\uff0c\u597d\u4e86\uff0c\u5982\u679c\u4f60\u5bf9\u8fd9\u4e9b\u4e0d\u660e\u767d\u7684\u8bdd\uff0c\u90a3\u5148\u628a yield \u770b\u505a return,\u7136\u540e\u76f4\u63a5\u770b\u4e0b\u9762\u7684\u7a0b\u5e8f\uff0c\u4f60\u5c31\u4f1a\u660e\u767d yield \u7684\u5168\u90e8\u610f\u601d\u4e86\uff1a Python 1 2 3 4 5 6 7 8 9 10 def foo (): print ( \"starting...\" ) while True : res = yield 4 print ( \"res:\" , res ) g = foo () # foo\u51fd\u6570\u4e2d\u6709yield\u5173\u952e\u5b57\uff0c\u6240\u4ee5foo\u51fd\u6570\u5e76\u4e0d\u4f1a\u771f\u7684\u6267\u884c print ( next ( g )) print ( \"*\" * 20 ) print ( next ( g )) \u5c31\u8fd9\u4e48\u7b80\u5355\u7684\u51e0\u884c\u4ee3\u7801\u5c31\u8ba9\u4f60\u660e\u767d\u4ec0\u4e48\u662f yield\uff0c\u4ee3\u7801\u7684\u8f93\u51fa\u8fd9\u4e2a\uff1a Text Only 1 2 3 4 5 starting... 4 ******************** res: None 4 \u6211\u76f4\u63a5\u89e3\u91ca\u4ee3\u7801\u8fd0\u884c\u987a\u5e8f\uff0c\u76f8\u5f53\u4e8e\u4ee3\u7801\u5355\u6b65\u8c03\u8bd5\uff1a \u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u4ee5\u540e\uff0c\u56e0\u4e3a foo \u51fd\u6570\u4e2d\u6709 yield \u5173\u952e\u5b57\uff0c\u6240\u4ee5 foo \u51fd\u6570\u5e76\u4e0d\u4f1a\u771f\u7684\u6267\u884c\uff0c\u800c\u662f\u5148\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u5668 g(\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5bf9\u8c61) \u76f4\u5230\u8c03\u7528 next \u65b9\u6cd5\uff0cfoo \u51fd\u6570\u6b63\u5f0f\u5f00\u59cb\u6267\u884c\uff0c\u5148\u6267\u884c foo \u51fd\u6570\u4e2d\u7684 print \u65b9\u6cd5\uff0c\u7136\u540e\u8fdb\u5165 while \u5faa\u73af \u7a0b\u5e8f\u9047\u5230 yield \u5173\u952e\u5b57\uff0c\u7136\u540e\u628a yield \u60f3\u60f3\u6210 return,return \u4e86\u4e00\u4e2a 4 \u4e4b\u540e\uff0c\u7a0b\u5e8f\u505c\u6b62\uff0c\u5e76\u6ca1\u6709\u6267\u884c\u8d4b\u503c\u7ed9 res \u64cd\u4f5c\uff0c\u6b64\u65f6 next(g)\u8bed\u53e5\u6267\u884c\u5b8c\u6210\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u524d\u4e24\u884c\uff08\u7b2c\u4e00\u4e2a\u662f while \u4e0a\u9762\u7684 print \u7684\u7ed3\u679c,\u7b2c\u4e8c\u4e2a\u662f return \u51fa\u7684\u7ed3\u679c\uff09\u662f\u6267\u884c print(next(g))\u7684\u7ed3\u679c\uff0c \u7a0b\u5e8f\u6267\u884c print(\" \"*20)\uff0c\u8f93\u51fa 20 \u4e2a \u53c8\u5f00\u59cb\u6267\u884c\u4e0b\u9762\u7684 print(next(g)),\u8fd9\u4e2a\u65f6\u5019\u548c\u4e0a\u9762\u90a3\u4e2a\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e2a\u65f6\u5019\u662f\u4ece\u521a\u624d\u90a3\u4e2a next \u7a0b\u5e8f\u505c\u6b62\u7684\u5730\u65b9\u5f00\u59cb\u6267\u884c\u7684\uff0c\u4e5f\u5c31\u662f\u8981\u6267\u884c res \u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u8fd9\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65f6\u5019\u8d4b\u503c\u64cd\u4f5c\u7684\u53f3\u8fb9\u662f\u6ca1\u6709\u503c\u7684\uff08\u56e0\u4e3a\u521a\u624d\u90a3\u4e2a\u662f return \u51fa\u53bb\u4e86\uff0c\u5e76\u6ca1\u6709\u7ed9\u8d4b\u503c\u64cd\u4f5c\u7684\u5de6\u8fb9\u4f20\u53c2\u6570\uff09\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019 res \u8d4b\u503c\u662f None,\u6240\u4ee5\u63a5\u7740\u4e0b\u9762\u7684\u8f93\u51fa\u5c31\u662f res: None, \u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u5728 while \u91cc\u6267\u884c\uff0c\u53c8\u4e00\u6b21\u78b0\u5230 yield,\u8fd9\u4e2a\u65f6\u5019\u540c\u6837 return \u51fa 4\uff0c\u7136\u540e\u7a0b\u5e8f\u505c\u6b62\uff0cprint \u51fd\u6570\u8f93\u51fa\u7684 4 \u5c31\u662f\u8fd9\u6b21 return \u51fa\u7684 4. \u5230\u8fd9\u91cc\u4f60\u53ef\u80fd\u5c31\u660e\u767d yield \u548c return \u7684\u5173\u7cfb\u548c\u533a\u522b\u4e86\uff0c\u5e26 yield \u7684\u51fd\u6570\u662f\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570\u4e86\uff0c\u8fd9\u4e2a\u751f\u6210\u5668\u6709\u4e00\u4e2a\u51fd\u6570\u5c31\u662f next \u51fd\u6570\uff0cnext \u5c31\u76f8\u5f53\u4e8e\u201c\u4e0b\u4e00\u6b65\u201d\u751f\u6210\u54ea\u4e2a\u6570\uff0c\u8fd9\u4e00\u6b21\u7684 next \u5f00\u59cb\u7684\u5730\u65b9\u662f\u63a5\u7740\u4e0a\u4e00\u6b21\u7684 next \u505c\u6b62\u7684\u5730\u65b9\u6267\u884c\u7684\uff0c\u6240\u4ee5\u8c03\u7528 next \u7684\u65f6\u5019\uff0c\u751f\u6210\u5668\u5e76\u4e0d\u4f1a\u4ece foo \u51fd\u6570\u7684\u5f00\u59cb\u6267\u884c\uff0c\u53ea\u662f\u63a5\u7740\u4e0a\u4e00\u6b65\u505c\u6b62\u7684\u5730\u65b9\u5f00\u59cb\uff0c\u7136\u540e\u9047\u5230 yield \u540e\uff0creturn \u51fa\u8981\u751f\u6210\u7684\u6570\uff0c\u6b64\u6b65\u5c31\u7ed3\u675f\u3002","title":"1.\u5bf9 yield \u7684\u521d\u6b65\u8ba4\u8bc6"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/4.%20yield%20%E5%85%B3%E9%94%AE%E5%AD%97%E7%90%86%E8%A7%A3/#2-send-\u51fd\u6570","text":"Python 1 2 3 4 5 6 7 8 9 10 def foo (): print ( \"starting...\" ) while True : res = yield 4 print ( \"res:\" , res ) g = foo () print ( next ( g )) print ( \"*\" * 20 ) print ( g . send ( 7 )) \u518d\u770b\u4e00\u4e2a\u8fd9\u4e2a\u751f\u6210\u5668\u7684 send \u51fd\u6570\u7684\u4f8b\u5b50\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u628a\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\u7684\u6700\u540e\u4e00\u884c\u6362\u6389\u4e86\uff0c\u8f93\u51fa\u7ed3\u679c\uff1a Text Only 1 2 3 4 5 starting... 4 ******************** res: 7 4 \u5148\u5927\u81f4\u8bf4\u4e00\u4e0b send \u51fd\u6570\u7684\u6982\u5ff5\uff1a\u6b64\u65f6\u4f60\u5e94\u8be5\u6ce8\u610f\u5230\u4e0a\u9762\u90a3\u4e2a\u7684\u7d2b\u8272\u7684\u5b57\uff0c\u8fd8\u6709\u4e0a\u9762\u90a3\u4e2a res \u7684\u503c\u4e3a\u4ec0\u4e48\u662f None\uff0c\u8fd9\u4e2a\u53d8\u6210\u4e86 7\uff0c\u5230\u5e95\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u662f\u56e0\u4e3a\uff0csend \u662f\u53d1\u9001\u4e00\u4e2a\u53c2\u6570\u7ed9 res \u7684\uff0c\u56e0\u4e3a\u4e0a\u9762\u8bb2\u5230\uff0creturn \u7684\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u628a 4 \u8d4b\u503c\u7ed9 res\uff0c\u4e0b\u6b21\u6267\u884c\u7684\u65f6\u5019\u53ea\u597d\u7ee7\u7eed\u6267\u884c\u8d4b\u503c\u64cd\u4f5c\uff0c\u53ea\u597d\u8d4b\u503c\u4e3a None \u4e86\uff0c\u800c\u5982\u679c\u7528 send \u7684\u8bdd\uff0c\u5f00\u59cb\u6267\u884c\u7684\u65f6\u5019\uff0c\u5148\u63a5\u7740\u4e0a\u4e00\u6b21\uff08return 4 \u4e4b\u540e\uff09\u6267\u884c\uff0c\u5148\u628a 7 \u8d4b\u503c\u7ed9\u4e86 res,\u7136\u540e\u6267\u884c next \u7684\u4f5c\u7528\uff0c\u9047\u89c1\u4e0b\u4e00\u56de\u7684 yield\uff0creturn \u51fa\u7ed3\u679c\u540e\u7ed3\u675f\u3002 \u7a0b\u5e8f\u6267\u884c g.send(7)\uff0c\u7a0b\u5e8f\u4f1a\u4ece yield \u5173\u952e\u5b57\u90a3\u4e00\u884c\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\uff0csend \u4f1a\u628a 7 \u8fd9\u4e2a\u503c\u8d4b\u503c\u7ed9 res \u53d8\u91cf \u7531\u4e8e send \u65b9\u6cd5\u4e2d\u5305\u542b next()\u65b9\u6cd5\uff0c\u6240\u4ee5\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c\u6267\u884c print \u65b9\u6cd5\uff0c\u7136\u540e\u518d\u6b21\u8fdb\u5165 while \u5faa\u73af \u7a0b\u5e8f\u6267\u884c\u518d\u6b21\u9047\u5230 yield \u5173\u952e\u5b57\uff0cyield \u4f1a\u8fd4\u56de\u540e\u9762\u7684\u503c\u540e\uff0c\u7a0b\u5e8f\u518d\u6b21\u6682\u505c\uff0c\u76f4\u5230\u518d\u6b21\u8c03\u7528 next \u65b9\u6cd5\u6216 send \u65b9\u6cd5\u3002 \u8fd9\u5c31\u7ed3\u675f\u4e86\uff0c\u8bf4\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u7528\u8fd9\u4e2a\u751f\u6210\u5668\uff0c\u662f\u56e0\u4e3a\u5982\u679c\u7528 List \u7684\u8bdd\uff0c\u4f1a\u5360\u7528\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u6bd4\u5982\u8bf4\u53d6 0,1,2,3,4,5,6............1000 \u4f60\u53ef\u80fd\u4f1a\u8fd9\u6837\uff1a Python 1 2 for n in range ( 1000 ): a = n \u8fd9\u4e2a\u65f6\u5019 range(1000)\u5c31\u9ed8\u8ba4\u751f\u6210\u4e00\u4e2a\u542b\u6709 1000 \u4e2a\u6570\u7684 list \u4e86\uff0c\u6240\u4ee5\u5f88\u5360\u5185\u5b58\u3002 \u8fd9\u4e2a\u65f6\u5019\u4f60\u53ef\u4ee5\u7528\u521a\u624d\u7684 yield \u7ec4\u5408\u6210\u751f\u6210\u5668\u8fdb\u884c\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u7528 xrange(1000)\u8fd9\u4e2a\u751f\u6210\u5668\u5b9e\u73b0 yield \u7ec4\u5408\uff1a Python 1 2 3 4 5 6 7 def foo ( num ): print ( \"starting...\" ) while num < 10 : num = num + 1 yield num for n in foo ( 0 ): print ( n ) \u8f93\u51fa\uff1a Text Only 1 2 3 4 5 6 7 8 9 10 11 starting... 1 2 3 4 5 6 7 8 9 10 xrange(1000): Python 1 2 for n in xrange ( 1000 ): a = n \u5176\u4e2d\u8981\u6ce8\u610f\u7684\u662f python3 \u65f6\u5df2\u7ecf\u6ca1\u6709 xrange()\u4e86\uff0c\u5728 python3 \u4e2d\uff0crange()\u5c31\u662f xrange()\u4e86\uff0c\u4f60\u53ef\u4ee5\u5728 python3 \u4e2d\u67e5\u770b range()\u7684\u7c7b\u578b\uff0c\u5b83\u5df2\u7ecf\u662f\u4e2a \u4e86\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a list \u4e86\uff0c\u6bd5\u7adf\u8fd9\u4e2a\u662f\u9700\u8981\u4f18\u5316\u7684\u3002","title":"2. send() \u51fd\u6570"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/5.%20%E5%85%B3%E9%94%AE%E5%AD%97/","text":"5. \u5173\u952e\u5b57 \u00b6 Raise \u00b6 in\u3001 is \u00b6 assert \u00b6 with \u00b6 global\u3001 nonlocal \u00b6","title":"5. \u5173\u952e\u5b57"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/5.%20%E5%85%B3%E9%94%AE%E5%AD%97/#5-\u5173\u952e\u5b57","text":"","title":"5. \u5173\u952e\u5b57"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/5.%20%E5%85%B3%E9%94%AE%E5%AD%97/#raise","text":"","title":"Raise"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/5.%20%E5%85%B3%E9%94%AE%E5%AD%97/#in-is","text":"","title":"in\u3001 is"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/5.%20%E5%85%B3%E9%94%AE%E5%AD%97/#assert","text":"","title":"assert"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/5.%20%E5%85%B3%E9%94%AE%E5%AD%97/#with","text":"","title":"with"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/5.%20%E5%85%B3%E9%94%AE%E5%AD%97/#global-nonlocal","text":"","title":"global\u3001 nonlocal"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/1%20Python%20%E5%9F%BA%E7%A1%80/6.%20Python%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E3%80%81%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%B8%8E%E4%BD%9C%E7%94%A8%E5%9F%9F/","text":"","title":"6. Python\u4e2d\u7684\u547d\u540d\u7a7a\u95f4\u3001\u751f\u547d\u5468\u671f\u4e0e\u4f5c\u7528\u57df"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/1.%20%E5%8F%82%E6%95%B0/","text":"created: 2022-09-18T17:25:20 tags: [python \u51fd\u6570\u53c2\u6570\u7c7b\u578b\u58f0\u660e] source: \u539f\u6587\u5730\u5740 author: Python \u51fd\u6570\u7684\u53c2\u6570\u8be6\u89e3_YYDS.YANG \u7684\u535a\u5ba2-CSDN \u535a\u5ba2_python \u51fd\u6570\u53c2\u6570\u7c7b\u578b\u58f0\u660e \u91cd\u70b9 - \u89e3\u5305\u7684\u6982\u5ff5 - *args \u540e\u9762\u7684\u5f62\u53c2\uff0c\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u4f20\u53c2 - - *args \u4e4b\u524d\u7684\u53c2\u6570\u53ea\u80fd\u6309\u4f4d\u7f6e\u4f20\u53c2,\u4e0d\u53ef\u4ee5\u5173\u952e\u5b57\u4f20\u53c2 - - ** \u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u7684\u53c2\u6570\u65b9\u5f0f\u4f20\u53c2,Python \u89e3\u91ca\u5668\u4f1a\u5c06\u4f20\u5165\u7684\u5173\u952e\u5b57\u548c\u5173\u952e\u5b57\u7684\u503c\u751f\u6210\u4e00\u4e2a\u5b57\u5178\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 Python \u4e2d\u51fd\u6570\u7684\u53c2\u6570\u8be6\u89e3 \u00b6 1\u3001Python \u7684\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b \u00b6 \u5fc5\u4f20\u53c2\u6570\uff1a\u8c03\u7528\u51fd\u6570\u65f6\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\uff0c\u51fd\u6570\u5b9a\u4e49\u65f6\u53ea\u5b9a\u4e49\u53c2\u6570\u540d \u5173\u952e\u5b57\u53c2\u6570\uff1a\u4f20\u5165\u65f6\u4ee5\u51fd\u6570\u7684\u53c2\u6570\u540d\u503c\u5bf9\u7684\u65b9\u5f0f\u4f20\u5165 \u9ed8\u8ba4\u53c2\u6570\uff1a\u51fd\u6570\u5b9a\u4e49\u65f6\u4e3a\u53c2\u6570\u9ed8\u8ba4\u8bbe\u7f6e\u4e00\u4e2a\u503c\uff0c\u8c03\u7528\u65f6\u4e0d\u4f20\u8f93\u53c2\u6570\u5373\u4ee5\u9ed8\u8ba4\u503c\u5904\u7406 \u4e0d\u5b9a\u957f\u53c2\u6570\uff1a\u4ee5 * \u4fee\u9970\u6216\u8005 ** \u4fee\u9970\u7684\u53c2\u6570; * \u4fee\u9970\u7684\u53c2\u6570\u662f\u4e00\u4e2a \u5143\u7ec4(tuple) , ** \u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u662f \u5b57\u5178(dict) \uff0c\u901a\u5e38\u5199\u4f5c *args \u6216\u8005 **args 2\u3001Python \u7684\u5fc5\u4f20\u53c2\u6570 \u00b6 \u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u5fc5\u987b\u4e0e\u5f62\u53c2\u7684\u6570\u91cf\u4e00\u81f4 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng def demo01 ( a , b ): print ( a , type ( a )) print ( b , type ( b )) # demo01(1) #TypeError missing 1 required positional argument: 'b' \u7f3a\u5c11\u4e00\u4e2a\u672a\u77e5\u7684\u53c2\u6570\uff0cdemo01\u5fc5\u987b\u4f202\u4e2a\u53c2\u6570 # demo01(1, 2, 3) #TypeError demo01() takes 2 positional arguments but 3 were given, demo01\u51fd\u6570\u67092\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u4f46\u662f\u63a5\u6536\u5230\u4e863\u4e2a\uff1b # \u5fc5\u4f20\u53c2\u6570 : \u8c03\u7528\u51fd\u6570\u65f6\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\uff0c\u51fd\u6570\u5b9a\u4e49\u65f6\u53ea\u5b9a\u4e49\u53c2\u6570\u540d # \u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u5fc5\u987b\u4e0e\u5f62\u53c2\u7684\u6570\u91cf\u4e00\u81f4 demo01 ( 1 , 2 ) # yes demo01 ( 1 , [ 1 , 2 ]) # yes demo01 ([ 2 , 3 ], ( 1 , 2 )) # yes demo01 ( 1 , { 2 , 3 , 4 }) # yes demo01 ( 2 , { \"code\" : '1001' , \"name\" : \"zhang\" , \"age\" : 18 }) # yes 3\u3001\u5173\u952e\u5b57\u53c2\u6570 \u00b6 \u4ee5\u53c2\u6570\u540d\u548c\u53c2\u6570\u503c\u7684\u5173\u8054\u5728\u4e00\u8d77\u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u53c2\uff0c\u952e\u503c\u5bf9\u7684\u6a21\u5f0f\uff0c\u53c2\u6570\u540d\u4e3a\u952e\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng def demo01 ( a , b ): print ( a , type ( a ), end = \"__\" ) print ( b , type ( b )) # \u7b2c\u4e00\u4e2a\u5173\u952e\u5b57\u51fa\u5165\u7684\u53c2\u6570\u4f4d\u7f6e\u4e4b\u524d\u7684\u53c2\u6570\u6bd4\u900a\u9009\u62e9\u5173\u952e\u5b57\u4f20\u53c2\uff1b\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u5173\u952e\u5b57\u4f20\u53c2\u7684\u53d8\u91cf\u662fa\uff0ca\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e,\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u53c2\u6570\u90fd\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u53c2\u3002 # demo01(1, a=2) # demo01() got multiple values for argument 'a' demo01 ( a = 1 , b = 2 ) # yes demo01 ( 1 , b = 2 ) # yes demo01 ( b = 1 , a = 2 ) # yes demo01 ( b = 1 , a = [ 1 , 2 ]) # yes demo01 ( b = [ 2 , 3 ], a = ( 1 , 2 )) # yes demo01 ( b = 1 , a = { 2 , 3 , 4 }) # yes demo01 ( b = 2 , a = { \"code\" : '1001' , \"name\" : \"zhang\" , \"age\" : 18 }) # yes 4\u3001\u9ed8\u8ba4\u53c2\u6570 \u00b6 \u8c03\u7528\u51fd\u6570\u65f6\u4e0d\u4f20\u5165\u53c2\u6570 an \u9ed8\u8ba4\u503c\u5904\u7406\uff0c\u4f20\u5165\u65f6\u6309\u4f20\u5165\u7684\u53c2\u6570\u503c\u5904\u7406 Python 1 2 3 4 5 6 7 8 9 10 11 12 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng ## \u9ed8\u8ba4\u53c2\u6570 def demo02 ( City = \"LongNan\" ): print ( \"City\u662f\u9ed8\u8ba4\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c\u662f\uff1a\u4e2d\u56fd,\u5f53\u524d\u503c\u662f\uff1a\" , City ) # \u4e0d\u4f20\u5165\u53c2\u6570 demo02 () # \u4f20\u5165\u53c2\u6570 demo02 ( \"Beijing\" ) 5\u3001\u4e0d\u5b9a\u957f\u53c2\u6570 \u00b6 \u4f20\u5165\u7684\u53c2\u6570\u4f1a\u751f\u6210\u4e00\u4e2a\u5143\u7ec4\u7c7b\u578b\u7684\u53d8\u91cf\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 Python 1 2 3 4 5 6 7 8 9 10 11 12 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng ## \u4e0d\u5b9a\u957f\u53c2\u6570 def demo03 ( * args ): print ( args , type ( args )) # \u4f20\u5165\u7684\u53c2\u6570\u4f1a\u751f\u6210\u4e00\u4e2a\u5143\u7ec4\u7c7b\u578b\u7684\u53d8\u91cf\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 demo03 ( 1 ) demo03 ( \"code\" ) demo03 ( 1 , \"code\" ) \u4f20\u5165\u7684\u53c2\u6570\u4e0d\u80fd\u5c11\u4e8e\u5fc5\u4f20\u53c2\u6570\u7684\u4e2a\u6570 *args \u540e\u9762\u7684\u5f62\u53c2\uff0c\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u4f20\u53c2 Python 1 2 3 4 5 6 7 8 9 10 11 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng # *args \u540e\u9762\u7684\u5f62\u53c2\uff0c\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u4f20\u53c2, def demo04 ( a , b , * args , c ): print ( \"a\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f\uff1a {} ,b\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f\uff1a {} , args\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a {} , c\u51fa\u5165\u7684\u53c2\u6570\u662f: {} \" . format ( a , b , args , c )) # \u4f20\u5165\u7684\u53c2\u6570\u4e0d\u80fd\u5c11\u4e8e\u5fc5\u4f20\u53c2\u6570\u7684\u4e2a\u6570,a,b,c\u4e09\u4e2a\u4e3a\u5fc5\u4f20\u53c2\u6570 # demo04(1, 2) # TypeError # demo04(1, 2, 3) # TypeError demo04 ( 1 , 2 , c = 3 ) *args \u4e4b\u524d\u7684\u53c2\u6570\u53ea\u80fd\u6309\u4f4d\u7f6e\u4f20\u53c2,\u4e0d\u53ef\u4ee5\u5173\u952e\u5b57\u4f20\u53c2 \u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u6bd4\u5fc5\u4f20\u53c2\u6570\u591a\u65f6,\u9996\u5148\u7ed9\u5fc5\u4f20\u53c2\u6570\u6309\u4f4d\u7f6e\u8d4b\u503c\uff0c\u7136\u540e\u5c06\u5269\u4f59\u7684\u53c2\u6570\u751f\u6210\u4e00\u4e2a\u5143\u7ec4\u4f20\u9012\u7ed9 args ** \u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u7684\u53c2\u6570\u65b9\u5f0f\u4f20\u53c2,Python \u89e3\u91ca\u5668\u4f1a\u5c06\u4f20\u5165\u7684\u5173\u952e\u5b57\u548c\u5173\u952e\u5b57\u7684\u503c\u751f\u6210\u4e00\u4e2a\u5b57\u5178\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 \u89e3\u5305 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng def demo05 ( ** kwargs ): print ( \"kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a {} \" . format ( kwargs ), type ( kwargs )) kwargs = { \"code\" : '1002' , \"name\" : \"zhang\" } # demo05(kwargs) # TypeError # **\u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u7684\u53c2\u6570\u65b9\u5f0f\u4f20\u53c2,Python\u89e3\u91ca\u5668\u4f1a\u5c06\u4f20\u5165\u7684\u5173\u952e\u5b57\u548c\u5173\u952e\u5b57\u7684\u503c\u751f\u6210\u4e00\u4e2a\u5b57\u5178\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 demo05 ( ** kwargs ) # kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a{'code': '1002', 'name': 'zhang'} <class 'dict'> demo05 ( code = '1002' , name = \"zhang\" ) # kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a{'code': '1002', 'name': 'zhang'} <class 'dict'> ** \u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u662f\u6700\u540e\u4e00\u4e2a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng # **\u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u662f\u6700\u540e\u4e00\u4e2a \"\"\" # SyntaxError: invalid syntax def demo06(a, b, *args, c, **kwargs, d): pass \"\"\" def demo06 ( a , b , * args , c , ** kwargs ): print ( \"a\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f: {} ,b\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f: {} , args\u4f20\u5165\u7684\u53c2\u6570\u662f: {} \" . format ( a , b , args ), end = '' ) print ( \",c\u4f20\u5165\u7684\u53c2\u6570\u662f: {} ,kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f: {} \" . format ( c , kwargs )) demo06 ( 1 , 2 , 3 , 4 , 5 , c = 3 , code = '1002' , name = \"zhang\" , d = 3 )","title":"1. \u53c2\u6570"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/1.%20%E5%8F%82%E6%95%B0/#python-\u4e2d\u51fd\u6570\u7684\u53c2\u6570\u8be6\u89e3","text":"","title":"Python \u4e2d\u51fd\u6570\u7684\u53c2\u6570\u8be6\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/1.%20%E5%8F%82%E6%95%B0/#1python-\u7684\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b","text":"\u5fc5\u4f20\u53c2\u6570\uff1a\u8c03\u7528\u51fd\u6570\u65f6\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\uff0c\u51fd\u6570\u5b9a\u4e49\u65f6\u53ea\u5b9a\u4e49\u53c2\u6570\u540d \u5173\u952e\u5b57\u53c2\u6570\uff1a\u4f20\u5165\u65f6\u4ee5\u51fd\u6570\u7684\u53c2\u6570\u540d\u503c\u5bf9\u7684\u65b9\u5f0f\u4f20\u5165 \u9ed8\u8ba4\u53c2\u6570\uff1a\u51fd\u6570\u5b9a\u4e49\u65f6\u4e3a\u53c2\u6570\u9ed8\u8ba4\u8bbe\u7f6e\u4e00\u4e2a\u503c\uff0c\u8c03\u7528\u65f6\u4e0d\u4f20\u8f93\u53c2\u6570\u5373\u4ee5\u9ed8\u8ba4\u503c\u5904\u7406 \u4e0d\u5b9a\u957f\u53c2\u6570\uff1a\u4ee5 * \u4fee\u9970\u6216\u8005 ** \u4fee\u9970\u7684\u53c2\u6570; * \u4fee\u9970\u7684\u53c2\u6570\u662f\u4e00\u4e2a \u5143\u7ec4(tuple) , ** \u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u662f \u5b57\u5178(dict) \uff0c\u901a\u5e38\u5199\u4f5c *args \u6216\u8005 **args","title":"1\u3001Python \u7684\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/1.%20%E5%8F%82%E6%95%B0/#2python-\u7684\u5fc5\u4f20\u53c2\u6570","text":"\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u5fc5\u987b\u4e0e\u5f62\u53c2\u7684\u6570\u91cf\u4e00\u81f4 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng def demo01 ( a , b ): print ( a , type ( a )) print ( b , type ( b )) # demo01(1) #TypeError missing 1 required positional argument: 'b' \u7f3a\u5c11\u4e00\u4e2a\u672a\u77e5\u7684\u53c2\u6570\uff0cdemo01\u5fc5\u987b\u4f202\u4e2a\u53c2\u6570 # demo01(1, 2, 3) #TypeError demo01() takes 2 positional arguments but 3 were given, demo01\u51fd\u6570\u67092\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u4f46\u662f\u63a5\u6536\u5230\u4e863\u4e2a\uff1b # \u5fc5\u4f20\u53c2\u6570 : \u8c03\u7528\u51fd\u6570\u65f6\u5fc5\u987b\u4f20\u5165\u7684\u53c2\u6570\uff0c\u51fd\u6570\u5b9a\u4e49\u65f6\u53ea\u5b9a\u4e49\u53c2\u6570\u540d # \u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u5fc5\u987b\u4e0e\u5f62\u53c2\u7684\u6570\u91cf\u4e00\u81f4 demo01 ( 1 , 2 ) # yes demo01 ( 1 , [ 1 , 2 ]) # yes demo01 ([ 2 , 3 ], ( 1 , 2 )) # yes demo01 ( 1 , { 2 , 3 , 4 }) # yes demo01 ( 2 , { \"code\" : '1001' , \"name\" : \"zhang\" , \"age\" : 18 }) # yes","title":"2\u3001Python \u7684\u5fc5\u4f20\u53c2\u6570"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/1.%20%E5%8F%82%E6%95%B0/#3\u5173\u952e\u5b57\u53c2\u6570","text":"\u4ee5\u53c2\u6570\u540d\u548c\u53c2\u6570\u503c\u7684\u5173\u8054\u5728\u4e00\u8d77\u7684\u65b9\u5f0f\u8fdb\u884c\u4f20\u53c2\uff0c\u952e\u503c\u5bf9\u7684\u6a21\u5f0f\uff0c\u53c2\u6570\u540d\u4e3a\u952e\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng def demo01 ( a , b ): print ( a , type ( a ), end = \"__\" ) print ( b , type ( b )) # \u7b2c\u4e00\u4e2a\u5173\u952e\u5b57\u51fa\u5165\u7684\u53c2\u6570\u4f4d\u7f6e\u4e4b\u524d\u7684\u53c2\u6570\u6bd4\u900a\u9009\u62e9\u5173\u952e\u5b57\u4f20\u53c2\uff1b\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u5173\u952e\u5b57\u4f20\u53c2\u7684\u53d8\u91cf\u662fa\uff0ca\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e,\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u7684\u53c2\u6570\u90fd\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u53c2\u3002 # demo01(1, a=2) # demo01() got multiple values for argument 'a' demo01 ( a = 1 , b = 2 ) # yes demo01 ( 1 , b = 2 ) # yes demo01 ( b = 1 , a = 2 ) # yes demo01 ( b = 1 , a = [ 1 , 2 ]) # yes demo01 ( b = [ 2 , 3 ], a = ( 1 , 2 )) # yes demo01 ( b = 1 , a = { 2 , 3 , 4 }) # yes demo01 ( b = 2 , a = { \"code\" : '1001' , \"name\" : \"zhang\" , \"age\" : 18 }) # yes","title":"3\u3001\u5173\u952e\u5b57\u53c2\u6570"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/1.%20%E5%8F%82%E6%95%B0/#4\u9ed8\u8ba4\u53c2\u6570","text":"\u8c03\u7528\u51fd\u6570\u65f6\u4e0d\u4f20\u5165\u53c2\u6570 an \u9ed8\u8ba4\u503c\u5904\u7406\uff0c\u4f20\u5165\u65f6\u6309\u4f20\u5165\u7684\u53c2\u6570\u503c\u5904\u7406 Python 1 2 3 4 5 6 7 8 9 10 11 12 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng ## \u9ed8\u8ba4\u53c2\u6570 def demo02 ( City = \"LongNan\" ): print ( \"City\u662f\u9ed8\u8ba4\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c\u662f\uff1a\u4e2d\u56fd,\u5f53\u524d\u503c\u662f\uff1a\" , City ) # \u4e0d\u4f20\u5165\u53c2\u6570 demo02 () # \u4f20\u5165\u53c2\u6570 demo02 ( \"Beijing\" )","title":"4\u3001\u9ed8\u8ba4\u53c2\u6570"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/1.%20%E5%8F%82%E6%95%B0/#5\u4e0d\u5b9a\u957f\u53c2\u6570","text":"\u4f20\u5165\u7684\u53c2\u6570\u4f1a\u751f\u6210\u4e00\u4e2a\u5143\u7ec4\u7c7b\u578b\u7684\u53d8\u91cf\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 Python 1 2 3 4 5 6 7 8 9 10 11 12 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng ## \u4e0d\u5b9a\u957f\u53c2\u6570 def demo03 ( * args ): print ( args , type ( args )) # \u4f20\u5165\u7684\u53c2\u6570\u4f1a\u751f\u6210\u4e00\u4e2a\u5143\u7ec4\u7c7b\u578b\u7684\u53d8\u91cf\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 demo03 ( 1 ) demo03 ( \"code\" ) demo03 ( 1 , \"code\" ) \u4f20\u5165\u7684\u53c2\u6570\u4e0d\u80fd\u5c11\u4e8e\u5fc5\u4f20\u53c2\u6570\u7684\u4e2a\u6570 *args \u540e\u9762\u7684\u5f62\u53c2\uff0c\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u4f20\u53c2 Python 1 2 3 4 5 6 7 8 9 10 11 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng # *args \u540e\u9762\u7684\u5f62\u53c2\uff0c\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u8fdb\u884c\u4f20\u53c2, def demo04 ( a , b , * args , c ): print ( \"a\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f\uff1a {} ,b\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f\uff1a {} , args\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a {} , c\u51fa\u5165\u7684\u53c2\u6570\u662f: {} \" . format ( a , b , args , c )) # \u4f20\u5165\u7684\u53c2\u6570\u4e0d\u80fd\u5c11\u4e8e\u5fc5\u4f20\u53c2\u6570\u7684\u4e2a\u6570,a,b,c\u4e09\u4e2a\u4e3a\u5fc5\u4f20\u53c2\u6570 # demo04(1, 2) # TypeError # demo04(1, 2, 3) # TypeError demo04 ( 1 , 2 , c = 3 ) *args \u4e4b\u524d\u7684\u53c2\u6570\u53ea\u80fd\u6309\u4f4d\u7f6e\u4f20\u53c2,\u4e0d\u53ef\u4ee5\u5173\u952e\u5b57\u4f20\u53c2 \u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u6bd4\u5fc5\u4f20\u53c2\u6570\u591a\u65f6,\u9996\u5148\u7ed9\u5fc5\u4f20\u53c2\u6570\u6309\u4f4d\u7f6e\u8d4b\u503c\uff0c\u7136\u540e\u5c06\u5269\u4f59\u7684\u53c2\u6570\u751f\u6210\u4e00\u4e2a\u5143\u7ec4\u4f20\u9012\u7ed9 args ** \u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u7684\u53c2\u6570\u65b9\u5f0f\u4f20\u53c2,Python \u89e3\u91ca\u5668\u4f1a\u5c06\u4f20\u5165\u7684\u5173\u952e\u5b57\u548c\u5173\u952e\u5b57\u7684\u503c\u751f\u6210\u4e00\u4e2a\u5b57\u5178\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 \u89e3\u5305 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng def demo05 ( ** kwargs ): print ( \"kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a {} \" . format ( kwargs ), type ( kwargs )) kwargs = { \"code\" : '1002' , \"name\" : \"zhang\" } # demo05(kwargs) # TypeError # **\u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u7684\u53c2\u6570\u65b9\u5f0f\u4f20\u53c2,Python\u89e3\u91ca\u5668\u4f1a\u5c06\u4f20\u5165\u7684\u5173\u952e\u5b57\u548c\u5173\u952e\u5b57\u7684\u503c\u751f\u6210\u4e00\u4e2a\u5b57\u5178\u4f9b\u51fd\u6570\u5185\u90e8\u4f7f\u7528 demo05 ( ** kwargs ) # kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a{'code': '1002', 'name': 'zhang'} <class 'dict'> demo05 ( code = '1002' , name = \"zhang\" ) # kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f\uff1a{'code': '1002', 'name': 'zhang'} <class 'dict'> ** \u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u662f\u6700\u540e\u4e00\u4e2a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # coding:utf-8 # Time:2022/6/27 20:04 # Author:YangXiaoPeng # **\u4fee\u9970\u7684\u53c2\u6570\u5fc5\u987b\u662f\u6700\u540e\u4e00\u4e2a \"\"\" # SyntaxError: invalid syntax def demo06(a, b, *args, c, **kwargs, d): pass \"\"\" def demo06 ( a , b , * args , c , ** kwargs ): print ( \"a\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f: {} ,b\u4f20\u5165\u7684\u53c2\u6570\u503c\u662f: {} , args\u4f20\u5165\u7684\u53c2\u6570\u662f: {} \" . format ( a , b , args ), end = '' ) print ( \",c\u4f20\u5165\u7684\u53c2\u6570\u662f: {} ,kwargs\u4f20\u5165\u7684\u53c2\u6570\u662f: {} \" . format ( c , kwargs )) demo06 ( 1 , 2 , 3 , 4 , 5 , c = 3 , code = '1002' , name = \"zhang\" , d = 3 )","title":"5\u3001\u4e0d\u5b9a\u957f\u53c2\u6570"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/","text":"created: 2022-09-18T20:43:44 tags: [Python,\u95ed\u5305\u51fd\u6570,Python \u5165\u95e8] source: \u539f\u6587\u5730\u5740 author: \u95ed\u5305\u7684\u6982\u5ff5\uff1a \u5728\u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\uff0c\u6709\u4e00\u4e2a\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf n\uff0c\u6709\u4e00\u4e2a\u5185\u5c42\u51fd\u6570 f2\uff0cf2 \u91cc\u9762\u53ef\u4ee5\u8bbf\u95ee\u5230 n \u53d8\u91cf\uff0c\u90a3\u8fd9 f2 \u5c31\u662f\u4e00\u4e2a\u95ed\u5305\u3002 - \u5b9a\u4e49\uff1a\u95ed\u5305\u5c31\u662f\u80fd\u591f\u8bfb\u53d6\u5916\u90e8\u51fd\u6570\u5185\u7684\u53d8\u91cf\u7684\u51fd\u6570\u3002\uff08\u524d\u9762\u5df2\u7ecf\u8bb2\u89e3\u8fc7\uff09 - \u4f5c\u7528 1\uff1a\u95ed\u5305\u662f\u5c06\u5916\u5c42\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u5916\u5c42\u51fd\u6570\u7684\u5916\u90e8\u8fde\u63a5\u8d77\u6765\u7684\u4e00\u5ea7\u6865\u6881\u3002 \uff08\u4f8b\u5b50\uff1a \u7ed9\u7279\u5b9a\u5185\u5bb9\u589e\u52a0\u6807\u7b7e <h1> content </h1> \uff09 - \u4f5c\u7528 2\uff1a\u5c06\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\u6301\u4e45\u5730\u4fdd\u5b58\u5728**\u5185\u5b58**\u4e2d (\u4f8b\u5b50\uff1a \u63a7\u5236\u68cb\u5b50\u7684\u79fb\u52a8) \u3002 \u95ed\u5305\u7684\u4f18\u70b9 - \u5c40\u90e8\u53d8\u91cf\u65e0\u6cd5\u5171\u4eab\u548c\u957f\u4e45\u7684\u4fdd\u5b58\uff0c\u800c\u5168\u5c40\u53d8\u91cf\u53ef\u80fd\u9020\u6210\u53d8\u91cf\u6c61\u67d3\uff0c\u95ed\u5305\u65e2\u53ef\u4ee5\u957f\u4e45\u7684\u4fdd\u5b58\u53d8\u91cf\u53c8\u4e0d\u4f1a\u9020\u6210\u5168\u5c40\u6c61\u67d3\u3002 - \u95ed\u5305\u4f7f\u5f97\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u5728\u5916\u5c42\u51fd\u6570\u8c03\u7528\u540e\u88ab\u81ea\u52a8\u6e05\u9664\u3002 - \u5f53\u5916\u5c42\u51fd\u6570\u8fd4\u56de\u4e86\u5185\u5c42\u51fd\u6570\u540e\uff0c\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u8fd8\u88ab\u5185\u5c42\u51fd\u6570\u5f15\u7528 - \u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668\uff0c\u90a3\u4e48\u4e00\u822c\u90fd\u4f1a\u751f\u6210\u95ed\u5305\u3002 - \u95ed\u5305\u5728\u722c\u866b\u4ee5\u53ca web \u5e94\u7528\u4e2d\u90fd\u6709\u5f88\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u95ed\u5305\u7684\u7f3a\u70b9 - \u53ef\u80fd\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f Python \u95ed\u5305\uff08Closure\uff09\u8be6\u89e3 - \u77e5\u4e4e \u00b6 \u4e00\u3001\u8ba4\u8bc6\u95ed\u5305 \u00b6 \u51fa\u4e8e\u79cd\u79cd\u539f\u56e0\uff0c\u6211\u4eec\u6709\u65f6\u5019\u9700\u8981\u5728\u51fd\u6570\u5916\u90e8\u5f97\u5230\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u4f46\u662f\uff0c\u7531\u4e8e Python \u4e2d\u4f5c\u7528\u57df\u7684\u641c\u7d22\u987a\u5e8f \uff08\"\u94fe\u5f0f\u4f5c\u7528\u57df\"\u7ed3\u6784\uff08chain scope\uff09\uff1a\u5b50\u5bf9\u8c61\u4f1a\u4e00\u7ea7\u4e00\u7ea7\u5730\u5411\u4e0a\u5bfb\u627e\u6240\u6709\u7236\u5bf9\u8c61\u7684\u53d8\u91cf\uff09\uff0c\u8fd9\u4e00\u70b9\u901a\u5e38\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\u3002 Python 1 2 3 4 def f1 (): n = 999 ; print ( n ) \u4f46\u662f\u6709\u4e00\u79cd\u65b9\u6cd5\u9664\u5916\uff0c\u90a3\u5c31\u662f\u5728\u51fd\u6570\u7684\u5185\u90e8\uff0c\u518d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u3002 Python 1 2 3 4 def f1 (): n = 999 def f2 (): print ( n ) \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u51fd\u6570 f2 \u5c31\u88ab\u5305\u62ec\u5728\u51fd\u6570 f1 \u5185\u90e8\uff0c\u8fd9\u65f6 f1 \u5185\u90e8\u7684\u6240\u6709\u5c40\u90e8\u53d8\u91cf\uff0c\u5bf9 f2 \u90fd\u662f\u53ef\u89c1\u7684\u3002 \u4f46\u662f\u53cd\u8fc7\u6765\u5c31\u4e0d\u884c\uff0cf2 \u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5bf9 f1 \u5c31\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u8fd9\u5c31\u662f\u5f00\u5934\u8bf4\u5230\u7684\uff0cPython \u8bed\u8a00\u7279\u6709\u7684\u4f5c\u7528\u57df\u641c\u7d22\u987a\u5e8f\u3002 \u6240\u4ee5\uff0c\u7236\u5bf9\u8c61\u7684\u6240\u6709\u53d8\u91cf\uff0c\u5bf9\u5b50\u5bf9\u8c61\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u53cd\u4e4b\u5219\u4e0d\u6210\u7acb\u3002 \u65e2\u7136 f2 \u53ef\u4ee5\u8bfb\u53d6 f1 \u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u90a3\u4e48\u53ea\u8981\u628a f2 \u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u4e0d\u5c31\u53ef\u4ee5\u5728 f1 \u5916\u90e8\u8bfb\u53d6\u5b83\u7684\u5185\u90e8\u53d8\u91cf\u4e86\u5417? Python 1 2 3 4 5 6 7 8 9 def f1 (): n = 999 def f2 (): print ( n ) return f2 result = f1 () result () \u4e8c\u3001\u95ed\u5305\u7684\u6982\u5ff5 \u00b6 \u4e0a\u4e00\u90e8\u5206\u4ee3\u7801\u4e2d\u7684**f2 \u51fd\u6570**\uff0c\u5c31\u662f\u95ed\u5305\u3002 \u5728\u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\uff0c\u6709\u4e00\u4e2a\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf n\uff0c\u6709\u4e00\u4e2a\u5185\u5c42\u51fd\u6570 f2\uff0cf2 \u91cc\u9762\u53ef\u4ee5\u8bbf\u95ee\u5230 n \u53d8\u91cf\uff0c\u90a3\u8fd9 f2 \u5c31\u662f\u4e00\u4e2a\u95ed\u5305\u3002 \u4e0b\u9762\u518d\u770b\u4e00\u4e0b\u7ef4\u57fa\u767e\u79d1\u7684\u4e25\u8c28\u5b9a\u4e49\uff1a \u5728\u4e00\u4e9b\u8bed\u8a00\u4e2d\uff0c\u5728\u51fd\u6570\u4e2d\u53ef\u4ee5\uff08\u5d4c\u5957\uff09\u5b9a\u4e49\u53e6\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5185\u90e8\u7684\u51fd\u6570\u5f15\u7528\u4e86\u5916\u90e8\u7684\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u5219\u53ef\u80fd\u4ea7\u751f\u95ed\u5305\u3002\u95ed\u5305\u53ef\u4ee5\u7528\u6765\u5728\u4e00\u4e2a\u51fd\u6570\u4e0e\u4e00\u7ec4\u201c\u79c1\u6709\u201d\u53d8\u91cf\u4e4b\u95f4\u521b\u5efa\u5173\u8054\u5173\u7cfb\u3002\u5728\u7ed9\u5b9a\u51fd\u6570\u88ab\u591a\u6b21\u8c03\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u79c1\u6709\u53d8\u91cf\u80fd\u591f\u4fdd\u6301\u5176\u6301\u4e45\u6027\u3002 \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u5b9e\u9645\u4e0a\u89e3\u91ca\u4e86\u95ed\u5305\u7684\u4e00\u4e2a\u5b9a\u4e49\u548c\u4e24\u4e2a\u4f5c\u7528\uff1a \u5b9a\u4e49\uff1a\u95ed\u5305\u5c31\u662f\u80fd\u591f\u8bfb\u53d6\u5916\u90e8\u51fd\u6570\u5185\u7684\u53d8\u91cf\u7684\u51fd\u6570\u3002\uff08\u524d\u9762\u5df2\u7ecf\u8bb2\u89e3\u8fc7\uff09 \u4f5c\u7528 1\uff1a\u95ed\u5305\u662f\u5c06\u5916\u5c42\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u5916\u5c42\u51fd\u6570\u7684\u5916\u90e8\u8fde\u63a5\u8d77\u6765\u7684\u4e00\u5ea7\u6865\u6881\u3002\uff08\u4e0b\u4e00\u90e8\u5206\u8bb2\u89e3\uff09 \u4f5c\u7528 2\uff1a\u5c06\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\u6301\u4e45\u5730\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u3002\uff08\u4e0b\u4e00\u90e8\u5206\u8bb2\u89e3\uff09 \u652f\u6301\u5c06\u51fd\u6570\u5f53\u6210\u5bf9\u8c61\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e00\u822c\u90fd\u652f\u6301\u95ed\u5305\u3002\u6bd4\u5982 Python, JavaScript\u3002 \u4e09\u3001\u95ed\u5305\u7684\u7528\u9014 \u00b6 \u95ed\u5305\u53ef\u4ee5\u7528\u5728\u8bb8\u591a\u5730\u65b9\u3002 \u7ef4\u57fa\u767e\u79d1\u7684\u5b9a\u4e49\u4e2d\u5df2\u7ecf\u63d0\u5230\u7684\u5b83\u7684\u4e24\u4e2a\u7528\u5904\uff1a\u2460 \u53ef\u4ee5\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\uff0c\u2461\u8ba9\u8fd9\u4e9b\u53d8\u91cf\u7684\u503c\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u3002 \uff08\u4e00\uff09\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf \u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u8bb2\u5230\uff0c\u6709\u65f6\u5019\u4f1a\u4e3a\u4e86\u4fdd\u8bc1\u547d\u540d\u7a7a\u95f4\u7684\u5e72\u51c0\u800c\u628a\u4e00\u4e9b\u53d8\u91cf\u9690\u85cf\u5230\u51fd\u6570\u5185\u90e8\uff0c\u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u4f46\u662f\u7531\u4e8e Python \u4e2d\u4f5c\u7528\u57df\u7684\u641c\u7d22\u987a\u5e8f\uff0c\u51fd\u6570\u5185\u7684\u53d8\u91cf\u4e0d\u4f1a\u88ab\u51fd\u6570\u5916\u7684\u4ee3\u7801\u8bfb\u53d6\u5230\u3002 \u5982\u679c\u8fd9\u65f6\u5019\u60f3\u8981\u51fd\u6570\u5916\u90e8\u7684\u4ee3\u7801\u80fd\u591f\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u95ed\u5305\u3002 \u95ed\u5305\u5b58\u5728\u7684\u610f\u4e49\u5c31\u662f\u5b83\u5939\u5e26\u4e86\u5916\u90e8\u53d8\u91cf\uff08\u79c1\u8d27\uff09\uff0c\u5982\u679c\u5b83\u4e0d\u5939\u5e26\u79c1\u8d27\uff0c\u5b83\u548c\u666e\u901a\u7684\u51fd\u6570\u5c31\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u3002 \u540c\u4e00\u4e2a\u7684\u51fd\u6570**\u5939\u5e26\u4e86**\u4e0d\u540c\u7684\u79c1\u8d27 \uff0c\u5c31\u5b9e\u73b0\u4e86\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u5176\u5b9e\u4f60\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u95ed\u5305\u548c\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u7684\u6982\u5ff5\u5f88\u50cf\uff0c\u53ef\u4ee5\u628a\u95ed\u5305\u7406\u89e3\u6210\u8f7b\u91cf\u7ea7\u7684\u63a5\u53e3\u5c01\u88c5\u3002 ---- \u8fd9\u91cc\u518d\u501f\u7528\u4e00\u4e0b Wayne \u7684\u4f8b\u5b50\uff08 Wayne\uff1a\u7528\u6700\u7b80\u5355\u7684\u8bed\u8a00\u89e3\u91ca Python \u7684\u95ed\u5305\u662f\u4ec0\u4e48\uff1f \uff09\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def tag ( tag_name ): def add_tag ( content ): return \"< {0} > {1} </ {0} >\" . format ( tag_name , content ) return add_tag content = 'Hello' add_tag = tag ( 'a' ) print add_tag ( content ) # <a>Hello</a> add_tag = tag ( 'b' ) print add_tag ( content ) # <b>Hello</b> \u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u7ed9**content \u52a0**tag **\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5177\u4f53\u7684**tag_name **\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u8981\u6839\u636e\u5b9e\u9645\u9700\u6c42\u6765\u5b9a\uff0c\u5bf9\u5916\u90e8\u8c03\u7528\u7684\u63a5\u53e3\u5df2\u7ecf\u786e\u5b9a\uff0c\u5c31\u662f**add_tag(content) \u3002\u5982\u679c\u6309\u7167\u9762\u5411\u63a5\u53e3\u65b9\u5f0f\u5b9e\u73b0\uff0c\u6211\u4eec\u4f1a\u5148\u628a**add_tag \u5199\u6210\u63a5\u53e3\uff0c\u6307\u5b9a\u5176\u53c2\u6570\u548c\u8fd4\u56de\u7c7b\u578b\uff0c\u7136\u540e\u5206\u522b\u53bb\u5b9e\u73b0 a \u548c b \u7684**add_tag \u3002 \u4f46\u662f\u5728\u95ed\u5305\u7684\u6982\u5ff5\u4e2d\uff0c add_tag \u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u9700\u8981 tag_name \u548c content \u4e24\u4e2a\u53c2\u6570\uff0c\u53ea\u4e0d\u8fc7 tag_name \u8fd9\u4e2a\u53c2\u6570\u662f\u6253\u5305\u5e26\u8d70\u7684\u3002\u6240\u4ee5\u4e00\u5f00\u59cb\u65f6\u5c31\u53ef\u4ee5\u544a\u8bc9\u6211\u600e\u4e48\u6253\u5305\uff0c\u7136\u540e\u5e26\u8d70\u5c31\u884c\u3002 ---- \uff08\u4e8c\uff09\u8ba9\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d \u600e\u4e48\u6765\u7406\u89e3\u8fd9\u53e5\u8bdd\u5462\uff1f\u4e00\u822c\u6765\u8bf4\uff0c\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u5728\u8fd9\u4e2a\u51fd\u6570\u8fd0\u884c\u5b8c\u4ee5\u540e\uff0c\u5c31\u4f1a\u88ab Python \u7684\u5783\u573e\u56de\u6536\u673a\u5236\u4ece\u5185\u5b58\u4e2d\u6e05\u9664\u6389\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u80fd\u591f\u957f\u4e45\u7684\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u95ed\u5305\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002 \u8fd9\u91cc\u501f\u7528\u5343\u5c71\u98de\u96ea\u7684\u4f8b\u5b50\uff08\u6765\u81ea\u4e8e\uff1a \u5343\u5c71\u98de\u96ea\uff1a\u6df1\u5165\u6d45\u51fa python \u95ed\u5305 \uff09\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 \u4ee5\u4e00\u4e2a\u7c7b\u4f3c\u68cb\u76d8\u6e38\u620f\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u3002\u5047\u8bbe\u68cb\u76d8\u5927\u5c0f\u4e3a 50*50\uff0c\u5de6\u4e0a\u89d2\u4e3a\u5750\u6807\u7cfb\u539f\u70b9(0,0)\uff0c\u6211\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u63a5\u6536 2 \u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a\u65b9\u5411(direction)\uff0c\u6b65\u957f(step)\uff0c\u8be5\u51fd\u6570\u63a7\u5236\u68cb\u5b50\u7684\u8fd0\u52a8\u3002 \u8fd9\u91cc\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u6bcf\u6b21\u8fd0\u52a8\u7684\u8d77\u70b9\u90fd\u662f\u4e0a\u6b21\u8fd0\u52a8\u7ed3\u675f\u7684\u7ec8\u70b9\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def create ( pos = [ 0 , 0 ]): def go ( direction , step ): new_x = pos [ 0 ] + direction [ 0 ] * step new_y = pos [ 1 ] + direction [ 1 ] * step pos [ 0 ] = new_x pos [ 1 ] = new_y return pos return go player = create () print ( player ([ 1 , 0 ], 10 )) print ( player ([ 0 , 1 ], 20 )) print ( player ([ - 1 , 0 ], 10 )) \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0cplayer \u5b9e\u9645\u4e0a\u5c31\u662f\u95ed\u5305 go \u51fd\u6570\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u5b83\u4e00\u5171\u8fd0\u884c\u4e86\u4e09\u6b21\uff0c\u7b2c\u4e00\u6b21\u662f\u6cbf X \u8f74\u524d\u8fdb\u4e86 10 \u6765\u5230[10,0]\uff0c\u7b2c\u4e8c\u6b21\u662f\u6cbf Y \u8f74\u524d\u8fdb\u4e86 20 \u6765\u5230 [10,20],\uff0c\u7b2c\u4e09\u6b21\u662f\u53cd\u65b9\u5411\u6cbf X \u8f74\u9000\u4e86 10 \u6765\u5230[0,20]\u3002 \u8fd9\u8bc1\u660e\u4e86\uff0c\u51fd\u6570 create \u4e2d\u7684\u5c40\u90e8\u53d8\u91cf pos \u4e00\u76f4\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u6ca1\u6709\u5728 create \u8c03\u7528\u540e\u88ab\u81ea\u52a8\u6e05\u9664\u3002 \u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u539f\u56e0\u5c31\u5728\u4e8e create \u662f go \u7684\u7236\u51fd\u6570\uff0c\u800c go \u88ab\u8d4b\u7ed9\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u8fd9\u5bfc\u81f4 go \u59cb\u7ec8\u5728\u5185\u5b58\u4e2d\uff0c\u800c go \u7684\u5b58\u5728\u4f9d\u8d56\u4e8e create\uff0c \u56e0\u6b64 create \u4e5f\u59cb\u7ec8\u5728\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u5728\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u88ab\u5783\u573e\u56de\u6536\u673a\u5236\uff08garbage collection\uff09\u56de\u6536\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u95ed\u5305\u4f7f\u5f97**\u51fd\u6570**\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5185\u90e8\u53d8\u91cf\uff0c\u53d8\u5f97\u5f88\u50cf\u4e00\u4e2a**\u7c7b**\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u4e00\u76f4\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u4e0d\u65ad\u7684\u5bf9\u5176\u8fdb\u884c\u8fd0\u7b97\u3002 \uff08\u4e09\uff09\u603b\u7ed3 \u5c40\u90e8\u53d8\u91cf\u65e0\u6cd5\u5171\u4eab\u548c\u957f\u4e45\u7684\u4fdd\u5b58\uff0c\u800c\u5168\u5c40\u53d8\u91cf\u53ef\u80fd\u9020\u6210\u53d8\u91cf\u6c61\u67d3\uff0c\u95ed\u5305\u65e2\u53ef\u4ee5\u957f\u4e45\u7684\u4fdd\u5b58\u53d8\u91cf\u53c8\u4e0d\u4f1a\u9020\u6210\u5168\u5c40\u6c61\u67d3\u3002 \u95ed\u5305\u4f7f\u5f97\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u5728\u5916\u5c42\u51fd\u6570\u8c03\u7528\u540e\u88ab\u81ea\u52a8\u6e05\u9664\u3002 \u5f53\u5916\u5c42\u51fd\u6570\u8fd4\u56de\u4e86\u5185\u5c42\u51fd\u6570\u540e\uff0c\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u8fd8\u88ab\u5185\u5c42\u51fd\u6570\u5f15\u7528 \u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668\uff0c\u90a3\u4e48\u4e00\u822c\u90fd\u4f1a\u751f\u6210\u95ed\u5305\u3002 \u95ed\u5305\u5728\u722c\u866b\u4ee5\u53ca web \u5e94\u7528\u4e2d\u90fd\u6709\u5f88\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 \u56db\u3001\u4f7f\u7528\u95ed\u5305\u7684\u6ce8\u610f\u70b9 \u00b6 \uff08\u4e00\uff09\u5185\u5b58\u6d88\u8017 \u00b6 \u7531\u4e8e\u95ed\u5305\u4f1a\u4f7f\u5f97\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u90fd\u88ab\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u4f1a\u589e\u52a0\u5185\u5b58\u6d88\u8017\uff0c\u6240\u4ee5\u4e0d\u80fd\u6ee5\u7528\u95ed\u5305\uff0c\u5426\u5219\u4f1a\u9020\u6210\u7a0b\u5e8f\u7684\u6027\u80fd\u95ee\u9898\uff0c\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002 \u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5728\u9000\u51fa\u51fd\u6570\u4e4b\u524d\uff0c\u5c06\u4e0d\u4f7f\u7528\u7684\u5c40\u90e8\u53d8\u91cf\u5168\u90e8\u5220\u9664\u3002 \uff08\u4e8c\uff09\u4f7f\u7528\u573a\u666f \u00b6 \u95ed\u5305\u7684\u4e24\u4e2a\u4f5c\u7528\uff0c\u201c\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\u201d\u548c\u201c\u8ba9\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u201d\uff0c\u90fd\u53ef\u4ee5\u88ab Python \u4e2d\u73b0\u6210\u7684\u5bf9\u8c61\u201c\u7c7b\u201d\u5f88\u597d\u5730\u5b9e\u73b0\u3002\u6211\u8ba4\u4e3a\uff0c\u201c\u95ed\u5305\u201d\u5728 Python \u4e2d\u786e\u5b9e\u662f\u4e00\u4e2a\u5fc5\u8981\u6027\u4e0d\u5927\u7684\u6982\u5ff5\u3002 \u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5728 Python \u4e2d\u5f15\u5165\u201c\u95ed\u5305\u201d\u8fd9\u4e2a\u6982\u5ff5\u5462\uff1f \u9996\u5148\uff0c\u6211\u89c9\u5f97\u6700\u91cd\u8981\u7684\u7406\u7531\u662f\uff0c\u7406\u89e3\u6e05\u695a\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5bf9\u4e8e\u7406\u89e3 Python \u4e2d\u7684\u4e00\u5927\u5229\u5668\u201c\u88c5\u9970\u5668\u201d\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u56e0\u4e3a\u88c5\u9970\u5668\u672c\u8eab\u5c31\u662f\u95ed\u5305\u7684\u4e00\u4e2a\u5e94\u7528\u3002 \u5176\u6b21\uff0c\u5f53\u6211\u4eec\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u95ed\u5305\u3002\u4f8b\u5982\uff1a \u5f53\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u51fd\u6570\u6bd4\u8f83\u5c11\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u95ed\u5305\u3002\uff08\u4f46\u662f\u5982\u679c\u6211\u4eec\u8981\u5b9e\u73b0\u5f88\u591a\u529f\u80fd\uff0c\u8fd8\u662f\u8981\u4f7f\u7528\u7c7b\uff08OOP\uff09\uff09 \u5982\u679c\u6211\u4eec\u7684\u5bf9\u8c61\u4e2d\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\u65f6\uff0c\u4f7f\u7528\u95ed\u5305\u662f\u4f1a\u6bd4\u7528\u7c7b\u6765\u5b9e\u73b0\u66f4\u4f18\u96c5\u3002 \u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e\uff0c\u5982\u679c\u6211\u4eec\u8981\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\u7684\u51fd\u6570\u529f\u80fd\uff0c\u901a\u5e38\u4f7f\u7528 lambda \u533f\u540d\u51fd\u6570\u6bd4\u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u7684 function \u66f4\u52a0\u4f18\u96c5\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0d\u4f1a\u635f\u5931\u53ef\u8bfb\u6027\u3002\u7c7b\u4f3c\u7684\u8fd8\u6709\u7528\u5217\u8868\u89e3\u6790\u5f0f\u4ee3\u66ff for \u5faa\u73af\u3002 \uff08\u4e09\uff09\u95ed\u5305\u65e0\u6cd5\u6539\u53d8\u5916\u90e8\u51fd\u6570\u5c40\u90e8\u53d8\u91cf\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\uff08nonlocal \u5173\u952e\u5b57\uff09 \u00b6 \u8fd9\u4e2a\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 def outer_fun (): x = 0 def inner_fun (): x = 1 print ( 'inner x:' , x , 'at' , id ( x )) print ( 'outer x before call inner:' , x , 'at' , id ( x )) inner_fun () print ( 'outer x before call inner:' , x , 'at' , id ( x )) outer_fun () \u5982\u679c innerFunc \u53ef\u4ee5\u4fee\u6539 x \u7684\u7684\u5185\u5b58\u5730\u5740\u7684\u8bdd\uff0c\u90a3\u4e48 x \u9996\u5148\u5728 outer_fun \u4e2d\u6307\u5411\u4e86\u4e00\u4e2a\u50a8\u5b58\u7740 0 \u7684\u5185\u5b58\u5730\u5740\uff0c\u540e\u9762\u53c8\u5728 inner_fun \u4e2d\uff0cx \u4f1a\u6307\u5411\u65b0\u7684\u50a8\u5b58\u7740 1 \u7684\u5185\u5b58\u5730\u5740\uff08\u7531\u4e8e int \u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff09\uff0c\u4f46\u7ed3\u679c\u662f\uff1a \u5728 innerFunc \u4e2d x \u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u4f46\u662f\u539f\u56e0\u662f\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u91cf x\uff0c\u6307\u5411\u4e86\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u5730\u5740\u3002\u800c\u5728 outerFunc \u4e2d x \u7684\u503c\u4ee5\u53ca\u5185\u5b58\u5730\u5740\u5e76\u672a\u53d1\u751f\u53d8\u5316\u3002 \u9020\u6210\u8fd9\u4e00\u7ed3\u679c\u7684\u539f\u56e0\u7684\u6839\u6e90\uff0c\u8fd8\u662f\u524d\u9762\u7b2c\u4e00\u90e8\u5206\u8bb2\u7684 Python \u4e2d\u4f5c\u7528\u57df\u7684\u641c\u7d22\u987a\u5e8f \u3002\u5728 inner_fun \u51fd\u6570\u91cc\u9762\uff0c\u6709\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u662f\u72ec\u7acb\u4e8e outer_fun \u7684\u547d\u540d\u7a7a\u95f4\u7684\u3002\u5b83\u91cc\u9762\u7684x\u662f\u4e00\u4e2a\u5c40\u90e8\u540d\u79f0\uff08local names\uff09\uff0c\u5728\u6267\u884c \u201cx=1\u201d \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u662f\u91cd\u65b0\u5728 inner_fun\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf x \uff0c\u800c\u65e0\u6cd5\u8986\u76d6\u6389 outer_fun \u7684\u547d\u540d\u7a7a\u95f4\u7684 x\u3002 \u5982\u679c\u8981\u8ba9\u5185\u5c42\u51fd\u6570\u4e0d\u4ec5\u53ef\u4ee5\u8bbf\u95ee\uff0c\u8fd8\u8981\u53ef\u4ee5\u4fee\u6539\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u9700\u8981\u7528\u5230 nonlocal \u58f0\u660e\uff0c\u4f7f\u5f97\u5185\u5c42\u51fd\u6570\u4e0d\u8981\u5728\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4\u521b\u5efa\u65b0\u7684 x\uff0c\u800c\u662f\u64cd\u4f5c\u5916\u5c42\u51fd\u6570\u547d\u540d\u7a7a\u95f4\u7684 x\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def outer_fun (): x = 0 def inner_fun (): nonlocal x # \u6ce8\u610f\u8fd9\u91cc x = 1 print ( 'inner x:' , x , 'at' , id ( x )) print ( 'outer x before call inner:' , x , 'at' , id ( x )) inner_fun () print ( 'outer x before call inner:' , x , 'at' , id ( x )) outer_fun () \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6 inner_fun \u6539\u53d8\u4e86 outer_fun \u4e2d\u7684\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\u3002 \u540c\u6837\u5730\uff0c\u5728\u4e0a\u6587\u68cb\u76d8\u7684\u4f8b\u5b50\u4e2d\uff0c\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf pos \u5185\u7684\u503c\u867d\u7136\u4e00\u76f4\u5728\u6539\u53d8\uff0c\u4f46\u662f\u7531\u4e8e\u5217\u8868\u672c\u8eab\u662f\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u867d\u7136\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e00\u76f4\u5728\u53d8\uff0c\u4f46\u662f\u5217\u8868\u672c\u8eab\u7684\u5185\u5b58\u5730\u5740\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002 \uff08\u56db\uff09\u8fd4\u56de\u95ed\u5305\u65f6\uff0c\u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf \u00b6 \u5728 Python \u4e2d\uff0c\u5982\u679c\u8981\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u90a3\u4e48\u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf\u3002 \u56e0\u4e3a\uff0c\u8fd4\u56de\u7684\u51fd\u6570\u5e76\u6ca1\u6709\u7acb\u523b\u6267\u884c\uff0c\u800c\u662f\u76f4\u5230\u8c03\u7528\u4e86 f() \u624d\u6267\u884c\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a Text Only 1 2 3 4 5 6 7 8 9 def count(): fs = [] for i in range(1, 4): def f(): return i*i fs.append(f) return fs f1, f2, f3 = count() \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6bcf\u6b21\u5faa\u73af\uff0c\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u7136\u540e\uff0c\u628a\u521b\u5efa\u7684 3 \u4e2a\u51fd\u6570\u90fd\u653e\u5728\u5217\u8868\u4e2d\uff0c\u901a\u8fc7\u5217\u8868\u6574\u4f53\u8fd4\u56de\u4e86\u3002 \u4f60\u53ef\u80fd\u8ba4\u4e3a\u8c03\u7528 f1() \uff0c f2() \u548c f3() \u7ed3\u679c\u5e94\u8be5\u662f 1 \uff0c 4 \uff0c 9 \uff0c\u4f46\u5b9e\u9645\u7ed3\u679c\u662f\uff1a Text Only 1 2 3 4 5 6 >>> f1() 9 >>> f2() 9 >>> f3() 9 \u56e0\u4e3a\u5728\u5411\u5217\u8868\u4e2d\u6dfb\u52a0 func \u7684\u65f6\u5019\uff0ci \u7684\u503c\u6ca1\u6709\u56fa\u5b9a\u5230 f \u7684\u5b9e\u4f8b\u5bf9\u8c61\u4e2d\uff0c\u800c\u4ec5\u662f\u5c06\u8ba1\u7b97\u516c\u5f0f\u56fa\u5b9a\u5230\u4e86\u5b9e\u4f8b\u5bf9\u8c61\u4e2d\u3002\u7b49\u5230\u4e86\u8c03\u7528 f1()\u3001f2()\u3001f3()\u7684\u65f6\u5019\u624d\u53bb\u53d6 i \u7684\u503c\uff0c\u8fd9\u65f6\u5019\u5faa\u73af\u5df2\u7ecf\u7ed3\u675f\uff0ci \u7684\u503c\u662f 3\uff0c\u6240\u4ee5\u7ed3\u679c\u90fd\u662f 9\u3002 \u56e0\u6b64\uff0c\u8fd4\u56de\u95ed\u5305\u65f6\u7262\u8bb0\u4e00\u70b9\uff1a\u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf\u3002 \u5982\u679c\u4e00\u5b9a\u8981\u5f15\u7528\u5faa\u73af\u53d8\u91cf\u600e\u4e48\u529e\uff1f\u65b9\u6cd5\u662f\u518d\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u8be5\u51fd\u6570\u7684\u53c2\u6570\u7ed1\u5b9a\u5faa\u73af\u53d8\u91cf\u5f53\u524d\u7684\u503c\uff0c\u65e0\u8bba\u8be5\u5faa\u73af\u53d8\u91cf\u540e\u7eed\u5982\u4f55\u66f4\u6539\uff0c\u5df2\u7ed1\u5b9a\u5230\u51fd\u6570\u53c2\u6570\u7684\u503c\u4e0d\u53d8\u3002 Text Only 1 2 3 4 5 6 7 8 9 def count(): def f(j): def g(): return j*j return g fs = [] for i in range(1, 4): fs.append(f(i)) # f(i)\u7acb\u523b\u88ab\u6267\u884c\uff0c\u56e0\u6b64i\u7684\u5f53\u524d\u503c\u88ab\u4f20\u5165f() return fs \u518d\u770b\u770b\u7ed3\u679c\uff1a Text Only 1 2 3 4 5 6 7 >>> f1, f2, f3 = count() >>> f1() 1 >>> f2() 4 >>> f3() 9 \u4e94\u3001\u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u662f\u5426\u662f\u95ed\u5305 \u00b6 \u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u662f\u4e0d\u662f\u95ed\u5305\uff0c\u53ef\u4ee5\u67e5\u770b\u5b83\u7684**closure **\u5c5e\u6027\u3002\u5982\u679c\u8be5\u51fd\u6570\u662f\u95ed\u5305\uff0c\u67e5\u770b\u8be5\u5c5e\u6027\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a cell \u5bf9\u8c61\u7ec4\u6210\u7684 tuple\u3002\u5982\u679c\u6211\u4eec\u5206\u522b\u5bf9\u6bcf\u4e2a cell \u5bf9\u8c61\u67e5\u770b\u5176 cell_contents \u5c5e\u6027\uff0c\u8fd4\u56de\u7684\u5185\u5bb9\u5c31\u662f\u95ed\u5305\u5f15\u7528\u7684\u81ea\u7531\u53d8\u91cf\u7684\u503c\u3002 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u5c55\u793a\uff1a Text Only 1 2 3 4 5 6 7 8 def add(x,y): def f(z): return x+y+z return f d = add(5,6) d(9) d(1) \u95ed\u5305\u7684__closure__\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c55\u793a\u51fa\u95ed\u5305\u50a8\u5b58\u4e86\u5916\u90e8\u51fd\u6570\u7684\u4e24\u4e2a\u53d8\u91cf\uff0ccell \u7684\u5185\u5b58\u5730\u5740\u662f\u4ec0\u4e48\uff0c\u5728 cell \u91cc\u9762\u50a8\u5b58\u7684\u5bf9\u8c61\u7c7b\u578b\u662f int\uff0c\u8fd9\u4e2a int \u50a8\u5b58\u7684\u5185\u5b58\u5730\u5740\u662f\u4ec0\u4e48\u3002 \u95ed\u5305\u7684__closure__\u65b9\u6cd5\uff0c\u53ef\u4ee5\u67e5\u770b\u6bcf\u4e2a cell \u5bf9\u8c61\u7684\u5185\u5bb9\u3002 Text Only 1 2 for i in d.__closure__: print(i.cell_contents) cell_contents \u89e3\u91ca\u4e86\u5c40\u90e8\u53d8\u91cf\u5728\u8131\u79bb\u51fd\u6570\u540e\u4ecd\u7136\u53ef\u4ee5\u5728\u51fd\u6570\u4e4b\u5916\u88ab\u8bbf\u95ee\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u53d8\u91cf\u88ab\u5b58\u50a8\u5728 cell_contents \u4e2d\u4e86\u3002","title":"2. \u95ed\u5305"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#python-\u95ed\u5305closure\u8be6\u89e3---\u77e5\u4e4e","text":"","title":"Python \u95ed\u5305\uff08Closure\uff09\u8be6\u89e3 - \u77e5\u4e4e"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u4e00\u8ba4\u8bc6\u95ed\u5305","text":"\u51fa\u4e8e\u79cd\u79cd\u539f\u56e0\uff0c\u6211\u4eec\u6709\u65f6\u5019\u9700\u8981\u5728\u51fd\u6570\u5916\u90e8\u5f97\u5230\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u3002\u4f46\u662f\uff0c\u7531\u4e8e Python \u4e2d\u4f5c\u7528\u57df\u7684\u641c\u7d22\u987a\u5e8f \uff08\"\u94fe\u5f0f\u4f5c\u7528\u57df\"\u7ed3\u6784\uff08chain scope\uff09\uff1a\u5b50\u5bf9\u8c61\u4f1a\u4e00\u7ea7\u4e00\u7ea7\u5730\u5411\u4e0a\u5bfb\u627e\u6240\u6709\u7236\u5bf9\u8c61\u7684\u53d8\u91cf\uff09\uff0c\u8fd9\u4e00\u70b9\u901a\u5e38\u662f\u65e0\u6cd5\u5b9e\u73b0\u7684\u3002 Python 1 2 3 4 def f1 (): n = 999 ; print ( n ) \u4f46\u662f\u6709\u4e00\u79cd\u65b9\u6cd5\u9664\u5916\uff0c\u90a3\u5c31\u662f\u5728\u51fd\u6570\u7684\u5185\u90e8\uff0c\u518d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u3002 Python 1 2 3 4 def f1 (): n = 999 def f2 (): print ( n ) \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u51fd\u6570 f2 \u5c31\u88ab\u5305\u62ec\u5728\u51fd\u6570 f1 \u5185\u90e8\uff0c\u8fd9\u65f6 f1 \u5185\u90e8\u7684\u6240\u6709\u5c40\u90e8\u53d8\u91cf\uff0c\u5bf9 f2 \u90fd\u662f\u53ef\u89c1\u7684\u3002 \u4f46\u662f\u53cd\u8fc7\u6765\u5c31\u4e0d\u884c\uff0cf2 \u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5bf9 f1 \u5c31\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u8fd9\u5c31\u662f\u5f00\u5934\u8bf4\u5230\u7684\uff0cPython \u8bed\u8a00\u7279\u6709\u7684\u4f5c\u7528\u57df\u641c\u7d22\u987a\u5e8f\u3002 \u6240\u4ee5\uff0c\u7236\u5bf9\u8c61\u7684\u6240\u6709\u53d8\u91cf\uff0c\u5bf9\u5b50\u5bf9\u8c61\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u53cd\u4e4b\u5219\u4e0d\u6210\u7acb\u3002 \u65e2\u7136 f2 \u53ef\u4ee5\u8bfb\u53d6 f1 \u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u90a3\u4e48\u53ea\u8981\u628a f2 \u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u6211\u4eec\u4e0d\u5c31\u53ef\u4ee5\u5728 f1 \u5916\u90e8\u8bfb\u53d6\u5b83\u7684\u5185\u90e8\u53d8\u91cf\u4e86\u5417? Python 1 2 3 4 5 6 7 8 9 def f1 (): n = 999 def f2 (): print ( n ) return f2 result = f1 () result ()","title":"\u4e00\u3001\u8ba4\u8bc6\u95ed\u5305"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u4e8c\u95ed\u5305\u7684\u6982\u5ff5","text":"\u4e0a\u4e00\u90e8\u5206\u4ee3\u7801\u4e2d\u7684**f2 \u51fd\u6570**\uff0c\u5c31\u662f\u95ed\u5305\u3002 \u5728\u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\uff0c\u6709\u4e00\u4e2a\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf n\uff0c\u6709\u4e00\u4e2a\u5185\u5c42\u51fd\u6570 f2\uff0cf2 \u91cc\u9762\u53ef\u4ee5\u8bbf\u95ee\u5230 n \u53d8\u91cf\uff0c\u90a3\u8fd9 f2 \u5c31\u662f\u4e00\u4e2a\u95ed\u5305\u3002 \u4e0b\u9762\u518d\u770b\u4e00\u4e0b\u7ef4\u57fa\u767e\u79d1\u7684\u4e25\u8c28\u5b9a\u4e49\uff1a \u5728\u4e00\u4e9b\u8bed\u8a00\u4e2d\uff0c\u5728\u51fd\u6570\u4e2d\u53ef\u4ee5\uff08\u5d4c\u5957\uff09\u5b9a\u4e49\u53e6\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u5982\u679c\u5185\u90e8\u7684\u51fd\u6570\u5f15\u7528\u4e86\u5916\u90e8\u7684\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u5219\u53ef\u80fd\u4ea7\u751f\u95ed\u5305\u3002\u95ed\u5305\u53ef\u4ee5\u7528\u6765\u5728\u4e00\u4e2a\u51fd\u6570\u4e0e\u4e00\u7ec4\u201c\u79c1\u6709\u201d\u53d8\u91cf\u4e4b\u95f4\u521b\u5efa\u5173\u8054\u5173\u7cfb\u3002\u5728\u7ed9\u5b9a\u51fd\u6570\u88ab\u591a\u6b21\u8c03\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u79c1\u6709\u53d8\u91cf\u80fd\u591f\u4fdd\u6301\u5176\u6301\u4e45\u6027\u3002 \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u5b9e\u9645\u4e0a\u89e3\u91ca\u4e86\u95ed\u5305\u7684\u4e00\u4e2a\u5b9a\u4e49\u548c\u4e24\u4e2a\u4f5c\u7528\uff1a \u5b9a\u4e49\uff1a\u95ed\u5305\u5c31\u662f\u80fd\u591f\u8bfb\u53d6\u5916\u90e8\u51fd\u6570\u5185\u7684\u53d8\u91cf\u7684\u51fd\u6570\u3002\uff08\u524d\u9762\u5df2\u7ecf\u8bb2\u89e3\u8fc7\uff09 \u4f5c\u7528 1\uff1a\u95ed\u5305\u662f\u5c06\u5916\u5c42\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u5916\u5c42\u51fd\u6570\u7684\u5916\u90e8\u8fde\u63a5\u8d77\u6765\u7684\u4e00\u5ea7\u6865\u6881\u3002\uff08\u4e0b\u4e00\u90e8\u5206\u8bb2\u89e3\uff09 \u4f5c\u7528 2\uff1a\u5c06\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\u6301\u4e45\u5730\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u3002\uff08\u4e0b\u4e00\u90e8\u5206\u8bb2\u89e3\uff09 \u652f\u6301\u5c06\u51fd\u6570\u5f53\u6210\u5bf9\u8c61\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e00\u822c\u90fd\u652f\u6301\u95ed\u5305\u3002\u6bd4\u5982 Python, JavaScript\u3002","title":"\u4e8c\u3001\u95ed\u5305\u7684\u6982\u5ff5"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u4e09\u95ed\u5305\u7684\u7528\u9014","text":"\u95ed\u5305\u53ef\u4ee5\u7528\u5728\u8bb8\u591a\u5730\u65b9\u3002 \u7ef4\u57fa\u767e\u79d1\u7684\u5b9a\u4e49\u4e2d\u5df2\u7ecf\u63d0\u5230\u7684\u5b83\u7684\u4e24\u4e2a\u7528\u5904\uff1a\u2460 \u53ef\u4ee5\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\uff0c\u2461\u8ba9\u8fd9\u4e9b\u53d8\u91cf\u7684\u503c\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u3002 \uff08\u4e00\uff09\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf \u5728\u7b2c\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u8bb2\u5230\uff0c\u6709\u65f6\u5019\u4f1a\u4e3a\u4e86\u4fdd\u8bc1\u547d\u540d\u7a7a\u95f4\u7684\u5e72\u51c0\u800c\u628a\u4e00\u4e9b\u53d8\u91cf\u9690\u85cf\u5230\u51fd\u6570\u5185\u90e8\uff0c\u4f5c\u4e3a\u5c40\u90e8\u53d8\u91cf\u3002\u4f46\u662f\u7531\u4e8e Python \u4e2d\u4f5c\u7528\u57df\u7684\u641c\u7d22\u987a\u5e8f\uff0c\u51fd\u6570\u5185\u7684\u53d8\u91cf\u4e0d\u4f1a\u88ab\u51fd\u6570\u5916\u7684\u4ee3\u7801\u8bfb\u53d6\u5230\u3002 \u5982\u679c\u8fd9\u65f6\u5019\u60f3\u8981\u51fd\u6570\u5916\u90e8\u7684\u4ee3\u7801\u80fd\u591f\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u95ed\u5305\u3002 \u95ed\u5305\u5b58\u5728\u7684\u610f\u4e49\u5c31\u662f\u5b83\u5939\u5e26\u4e86\u5916\u90e8\u53d8\u91cf\uff08\u79c1\u8d27\uff09\uff0c\u5982\u679c\u5b83\u4e0d\u5939\u5e26\u79c1\u8d27\uff0c\u5b83\u548c\u666e\u901a\u7684\u51fd\u6570\u5c31\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u3002 \u540c\u4e00\u4e2a\u7684\u51fd\u6570**\u5939\u5e26\u4e86**\u4e0d\u540c\u7684\u79c1\u8d27 \uff0c\u5c31\u5b9e\u73b0\u4e86\u4e0d\u540c\u7684\u529f\u80fd\u3002 \u5176\u5b9e\u4f60\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff0c\u95ed\u5305\u548c\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u7684\u6982\u5ff5\u5f88\u50cf\uff0c\u53ef\u4ee5\u628a\u95ed\u5305\u7406\u89e3\u6210\u8f7b\u91cf\u7ea7\u7684\u63a5\u53e3\u5c01\u88c5\u3002 ---- \u8fd9\u91cc\u518d\u501f\u7528\u4e00\u4e0b Wayne \u7684\u4f8b\u5b50\uff08 Wayne\uff1a\u7528\u6700\u7b80\u5355\u7684\u8bed\u8a00\u89e3\u91ca Python \u7684\u95ed\u5305\u662f\u4ec0\u4e48\uff1f \uff09\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def tag ( tag_name ): def add_tag ( content ): return \"< {0} > {1} </ {0} >\" . format ( tag_name , content ) return add_tag content = 'Hello' add_tag = tag ( 'a' ) print add_tag ( content ) # <a>Hello</a> add_tag = tag ( 'b' ) print add_tag ( content ) # <b>Hello</b> \u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u6211\u4eec\u60f3\u8981\u4e00\u4e2a\u7ed9**content \u52a0**tag **\u7684\u529f\u80fd\uff0c\u4f46\u662f\u5177\u4f53\u7684**tag_name **\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u8981\u6839\u636e\u5b9e\u9645\u9700\u6c42\u6765\u5b9a\uff0c\u5bf9\u5916\u90e8\u8c03\u7528\u7684\u63a5\u53e3\u5df2\u7ecf\u786e\u5b9a\uff0c\u5c31\u662f**add_tag(content) \u3002\u5982\u679c\u6309\u7167\u9762\u5411\u63a5\u53e3\u65b9\u5f0f\u5b9e\u73b0\uff0c\u6211\u4eec\u4f1a\u5148\u628a**add_tag \u5199\u6210\u63a5\u53e3\uff0c\u6307\u5b9a\u5176\u53c2\u6570\u548c\u8fd4\u56de\u7c7b\u578b\uff0c\u7136\u540e\u5206\u522b\u53bb\u5b9e\u73b0 a \u548c b \u7684**add_tag \u3002 \u4f46\u662f\u5728\u95ed\u5305\u7684\u6982\u5ff5\u4e2d\uff0c add_tag \u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u9700\u8981 tag_name \u548c content \u4e24\u4e2a\u53c2\u6570\uff0c\u53ea\u4e0d\u8fc7 tag_name \u8fd9\u4e2a\u53c2\u6570\u662f\u6253\u5305\u5e26\u8d70\u7684\u3002\u6240\u4ee5\u4e00\u5f00\u59cb\u65f6\u5c31\u53ef\u4ee5\u544a\u8bc9\u6211\u600e\u4e48\u6253\u5305\uff0c\u7136\u540e\u5e26\u8d70\u5c31\u884c\u3002 ---- \uff08\u4e8c\uff09\u8ba9\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d \u600e\u4e48\u6765\u7406\u89e3\u8fd9\u53e5\u8bdd\u5462\uff1f\u4e00\u822c\u6765\u8bf4\uff0c\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u5728\u8fd9\u4e2a\u51fd\u6570\u8fd0\u884c\u5b8c\u4ee5\u540e\uff0c\u5c31\u4f1a\u88ab Python \u7684\u5783\u573e\u56de\u6536\u673a\u5236\u4ece\u5185\u5b58\u4e2d\u6e05\u9664\u6389\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u80fd\u591f\u957f\u4e45\u7684\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u95ed\u5305\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002 \u8fd9\u91cc\u501f\u7528\u5343\u5c71\u98de\u96ea\u7684\u4f8b\u5b50\uff08\u6765\u81ea\u4e8e\uff1a \u5343\u5c71\u98de\u96ea\uff1a\u6df1\u5165\u6d45\u51fa python \u95ed\u5305 \uff09\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u3002 \u4ee5\u4e00\u4e2a\u7c7b\u4f3c\u68cb\u76d8\u6e38\u620f\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u3002\u5047\u8bbe\u68cb\u76d8\u5927\u5c0f\u4e3a 50*50\uff0c\u5de6\u4e0a\u89d2\u4e3a\u5750\u6807\u7cfb\u539f\u70b9(0,0)\uff0c\u6211\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u63a5\u6536 2 \u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a\u65b9\u5411(direction)\uff0c\u6b65\u957f(step)\uff0c\u8be5\u51fd\u6570\u63a7\u5236\u68cb\u5b50\u7684\u8fd0\u52a8\u3002 \u8fd9\u91cc\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u6bcf\u6b21\u8fd0\u52a8\u7684\u8d77\u70b9\u90fd\u662f\u4e0a\u6b21\u8fd0\u52a8\u7ed3\u675f\u7684\u7ec8\u70b9\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def create ( pos = [ 0 , 0 ]): def go ( direction , step ): new_x = pos [ 0 ] + direction [ 0 ] * step new_y = pos [ 1 ] + direction [ 1 ] * step pos [ 0 ] = new_x pos [ 1 ] = new_y return pos return go player = create () print ( player ([ 1 , 0 ], 10 )) print ( player ([ 0 , 1 ], 20 )) print ( player ([ - 1 , 0 ], 10 )) \u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0cplayer \u5b9e\u9645\u4e0a\u5c31\u662f\u95ed\u5305 go \u51fd\u6570\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u5b83\u4e00\u5171\u8fd0\u884c\u4e86\u4e09\u6b21\uff0c\u7b2c\u4e00\u6b21\u662f\u6cbf X \u8f74\u524d\u8fdb\u4e86 10 \u6765\u5230[10,0]\uff0c\u7b2c\u4e8c\u6b21\u662f\u6cbf Y \u8f74\u524d\u8fdb\u4e86 20 \u6765\u5230 [10,20],\uff0c\u7b2c\u4e09\u6b21\u662f\u53cd\u65b9\u5411\u6cbf X \u8f74\u9000\u4e86 10 \u6765\u5230[0,20]\u3002 \u8fd9\u8bc1\u660e\u4e86\uff0c\u51fd\u6570 create \u4e2d\u7684\u5c40\u90e8\u53d8\u91cf pos \u4e00\u76f4\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u6ca1\u6709\u5728 create \u8c03\u7528\u540e\u88ab\u81ea\u52a8\u6e05\u9664\u3002 \u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff1f\u539f\u56e0\u5c31\u5728\u4e8e create \u662f go \u7684\u7236\u51fd\u6570\uff0c\u800c go \u88ab\u8d4b\u7ed9\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u8fd9\u5bfc\u81f4 go \u59cb\u7ec8\u5728\u5185\u5b58\u4e2d\uff0c\u800c go \u7684\u5b58\u5728\u4f9d\u8d56\u4e8e create\uff0c \u56e0\u6b64 create \u4e5f\u59cb\u7ec8\u5728\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u5728\u8c03\u7528\u7ed3\u675f\u540e\uff0c\u88ab\u5783\u573e\u56de\u6536\u673a\u5236\uff08garbage collection\uff09\u56de\u6536\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u95ed\u5305\u4f7f\u5f97**\u51fd\u6570**\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5185\u90e8\u53d8\u91cf\uff0c\u53d8\u5f97\u5f88\u50cf\u4e00\u4e2a**\u7c7b**\u7684\u5b9e\u4f8b\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u4e00\u76f4\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u4e0d\u65ad\u7684\u5bf9\u5176\u8fdb\u884c\u8fd0\u7b97\u3002 \uff08\u4e09\uff09\u603b\u7ed3 \u5c40\u90e8\u53d8\u91cf\u65e0\u6cd5\u5171\u4eab\u548c\u957f\u4e45\u7684\u4fdd\u5b58\uff0c\u800c\u5168\u5c40\u53d8\u91cf\u53ef\u80fd\u9020\u6210\u53d8\u91cf\u6c61\u67d3\uff0c\u95ed\u5305\u65e2\u53ef\u4ee5\u957f\u4e45\u7684\u4fdd\u5b58\u53d8\u91cf\u53c8\u4e0d\u4f1a\u9020\u6210\u5168\u5c40\u6c61\u67d3\u3002 \u95ed\u5305\u4f7f\u5f97\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\uff0c\u4e0d\u4f1a\u5728\u5916\u5c42\u51fd\u6570\u8c03\u7528\u540e\u88ab\u81ea\u52a8\u6e05\u9664\u3002 \u5f53\u5916\u5c42\u51fd\u6570\u8fd4\u56de\u4e86\u5185\u5c42\u51fd\u6570\u540e\uff0c\u5916\u5c42\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u8fd8\u88ab\u5185\u5c42\u51fd\u6570\u5f15\u7528 \u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668\uff0c\u90a3\u4e48\u4e00\u822c\u90fd\u4f1a\u751f\u6210\u95ed\u5305\u3002 \u95ed\u5305\u5728\u722c\u866b\u4ee5\u53ca web \u5e94\u7528\u4e2d\u90fd\u6709\u5f88\u5e7f\u6cdb\u7684\u5e94\u7528\u3002","title":"\u4e09\u3001\u95ed\u5305\u7684\u7528\u9014"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u56db\u4f7f\u7528\u95ed\u5305\u7684\u6ce8\u610f\u70b9","text":"","title":"\u56db\u3001\u4f7f\u7528\u95ed\u5305\u7684\u6ce8\u610f\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u4e00\u5185\u5b58\u6d88\u8017","text":"\u7531\u4e8e\u95ed\u5305\u4f1a\u4f7f\u5f97\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u90fd\u88ab\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u4f1a\u589e\u52a0\u5185\u5b58\u6d88\u8017\uff0c\u6240\u4ee5\u4e0d\u80fd\u6ee5\u7528\u95ed\u5305\uff0c\u5426\u5219\u4f1a\u9020\u6210\u7a0b\u5e8f\u7684\u6027\u80fd\u95ee\u9898\uff0c\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002 \u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5728\u9000\u51fa\u51fd\u6570\u4e4b\u524d\uff0c\u5c06\u4e0d\u4f7f\u7528\u7684\u5c40\u90e8\u53d8\u91cf\u5168\u90e8\u5220\u9664\u3002","title":"\uff08\u4e00\uff09\u5185\u5b58\u6d88\u8017"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u4e8c\u4f7f\u7528\u573a\u666f","text":"\u95ed\u5305\u7684\u4e24\u4e2a\u4f5c\u7528\uff0c\u201c\u8bfb\u53d6\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\u201d\u548c\u201c\u8ba9\u51fd\u6570\u5185\u90e8\u7684\u5c40\u90e8\u53d8\u91cf\u59cb\u7ec8\u4fdd\u6301\u5728\u5185\u5b58\u4e2d\u201d\uff0c\u90fd\u53ef\u4ee5\u88ab Python \u4e2d\u73b0\u6210\u7684\u5bf9\u8c61\u201c\u7c7b\u201d\u5f88\u597d\u5730\u5b9e\u73b0\u3002\u6211\u8ba4\u4e3a\uff0c\u201c\u95ed\u5305\u201d\u5728 Python \u4e2d\u786e\u5b9e\u662f\u4e00\u4e2a\u5fc5\u8981\u6027\u4e0d\u5927\u7684\u6982\u5ff5\u3002 \u90a3\u4e48\u4e3a\u4ec0\u4e48\u8fd8\u8981\u5728 Python \u4e2d\u5f15\u5165\u201c\u95ed\u5305\u201d\u8fd9\u4e2a\u6982\u5ff5\u5462\uff1f \u9996\u5148\uff0c\u6211\u89c9\u5f97\u6700\u91cd\u8981\u7684\u7406\u7531\u662f\uff0c\u7406\u89e3\u6e05\u695a\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5bf9\u4e8e\u7406\u89e3 Python \u4e2d\u7684\u4e00\u5927\u5229\u5668\u201c\u88c5\u9970\u5668\u201d\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\u56e0\u4e3a\u88c5\u9970\u5668\u672c\u8eab\u5c31\u662f\u95ed\u5305\u7684\u4e00\u4e2a\u5e94\u7528\u3002 \u5176\u6b21\uff0c\u5f53\u6211\u4eec\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u7528\u95ed\u5305\u3002\u4f8b\u5982\uff1a \u5f53\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u51fd\u6570\u6bd4\u8f83\u5c11\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u95ed\u5305\u3002\uff08\u4f46\u662f\u5982\u679c\u6211\u4eec\u8981\u5b9e\u73b0\u5f88\u591a\u529f\u80fd\uff0c\u8fd8\u662f\u8981\u4f7f\u7528\u7c7b\uff08OOP\uff09\uff09 \u5982\u679c\u6211\u4eec\u7684\u5bf9\u8c61\u4e2d\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\u65f6\uff0c\u4f7f\u7528\u95ed\u5305\u662f\u4f1a\u6bd4\u7528\u7c7b\u6765\u5b9e\u73b0\u66f4\u4f18\u96c5\u3002 \u8fd9\u6709\u70b9\u7c7b\u4f3c\u4e8e\uff0c\u5982\u679c\u6211\u4eec\u8981\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\u7684\u51fd\u6570\u529f\u80fd\uff0c\u901a\u5e38\u4f7f\u7528 lambda \u533f\u540d\u51fd\u6570\u6bd4\u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u7684 function \u66f4\u52a0\u4f18\u96c5\uff0c\u800c\u4e14\u51e0\u4e4e\u4e0d\u4f1a\u635f\u5931\u53ef\u8bfb\u6027\u3002\u7c7b\u4f3c\u7684\u8fd8\u6709\u7528\u5217\u8868\u89e3\u6790\u5f0f\u4ee3\u66ff for \u5faa\u73af\u3002","title":"\uff08\u4e8c\uff09\u4f7f\u7528\u573a\u666f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u4e09\u95ed\u5305\u65e0\u6cd5\u6539\u53d8\u5916\u90e8\u51fd\u6570\u5c40\u90e8\u53d8\u91cf\u6307\u5411\u7684\u5185\u5b58\u5730\u5740nonlocal-\u5173\u952e\u5b57","text":"\u8fd9\u4e2a\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u6765\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 def outer_fun (): x = 0 def inner_fun (): x = 1 print ( 'inner x:' , x , 'at' , id ( x )) print ( 'outer x before call inner:' , x , 'at' , id ( x )) inner_fun () print ( 'outer x before call inner:' , x , 'at' , id ( x )) outer_fun () \u5982\u679c innerFunc \u53ef\u4ee5\u4fee\u6539 x \u7684\u7684\u5185\u5b58\u5730\u5740\u7684\u8bdd\uff0c\u90a3\u4e48 x \u9996\u5148\u5728 outer_fun \u4e2d\u6307\u5411\u4e86\u4e00\u4e2a\u50a8\u5b58\u7740 0 \u7684\u5185\u5b58\u5730\u5740\uff0c\u540e\u9762\u53c8\u5728 inner_fun \u4e2d\uff0cx \u4f1a\u6307\u5411\u65b0\u7684\u50a8\u5b58\u7740 1 \u7684\u5185\u5b58\u5730\u5740\uff08\u7531\u4e8e int \u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff09\uff0c\u4f46\u7ed3\u679c\u662f\uff1a \u5728 innerFunc \u4e2d x \u7684\u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u4f46\u662f\u539f\u56e0\u662f\u91cd\u65b0\u521b\u5efa\u4e86\u4e00\u4e2a\u53d8\u91cf x\uff0c\u6307\u5411\u4e86\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u5730\u5740\u3002\u800c\u5728 outerFunc \u4e2d x \u7684\u503c\u4ee5\u53ca\u5185\u5b58\u5730\u5740\u5e76\u672a\u53d1\u751f\u53d8\u5316\u3002 \u9020\u6210\u8fd9\u4e00\u7ed3\u679c\u7684\u539f\u56e0\u7684\u6839\u6e90\uff0c\u8fd8\u662f\u524d\u9762\u7b2c\u4e00\u90e8\u5206\u8bb2\u7684 Python \u4e2d\u4f5c\u7528\u57df\u7684\u641c\u7d22\u987a\u5e8f \u3002\u5728 inner_fun \u51fd\u6570\u91cc\u9762\uff0c\u6709\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u547d\u540d\u7a7a\u95f4\u662f\u72ec\u7acb\u4e8e outer_fun \u7684\u547d\u540d\u7a7a\u95f4\u7684\u3002\u5b83\u91cc\u9762\u7684x\u662f\u4e00\u4e2a\u5c40\u90e8\u540d\u79f0\uff08local names\uff09\uff0c\u5728\u6267\u884c \u201cx=1\u201d \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u662f\u91cd\u65b0\u5728 inner_fun\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf x \uff0c\u800c\u65e0\u6cd5\u8986\u76d6\u6389 outer_fun \u7684\u547d\u540d\u7a7a\u95f4\u7684 x\u3002 \u5982\u679c\u8981\u8ba9\u5185\u5c42\u51fd\u6570\u4e0d\u4ec5\u53ef\u4ee5\u8bbf\u95ee\uff0c\u8fd8\u8981\u53ef\u4ee5\u4fee\u6539\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u9700\u8981\u7528\u5230 nonlocal \u58f0\u660e\uff0c\u4f7f\u5f97\u5185\u5c42\u51fd\u6570\u4e0d\u8981\u5728\u81ea\u5df1\u7684\u547d\u540d\u7a7a\u95f4\u521b\u5efa\u65b0\u7684 x\uff0c\u800c\u662f\u64cd\u4f5c\u5916\u5c42\u51fd\u6570\u547d\u540d\u7a7a\u95f4\u7684 x\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 def outer_fun (): x = 0 def inner_fun (): nonlocal x # \u6ce8\u610f\u8fd9\u91cc x = 1 print ( 'inner x:' , x , 'at' , id ( x )) print ( 'outer x before call inner:' , x , 'at' , id ( x )) inner_fun () print ( 'outer x before call inner:' , x , 'at' , id ( x )) outer_fun () \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6 inner_fun \u6539\u53d8\u4e86 outer_fun \u4e2d\u7684\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\u3002 \u540c\u6837\u5730\uff0c\u5728\u4e0a\u6587\u68cb\u76d8\u7684\u4f8b\u5b50\u4e2d\uff0c\u5916\u5c42\u51fd\u6570\u7684\u53d8\u91cf pos \u5185\u7684\u503c\u867d\u7136\u4e00\u76f4\u5728\u6539\u53d8\uff0c\u4f46\u662f\u7531\u4e8e\u5217\u8868\u672c\u8eab\u662f\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u867d\u7136\u5217\u8868\u4e2d\u7684\u5143\u7d20\u4e00\u76f4\u5728\u53d8\uff0c\u4f46\u662f\u5217\u8868\u672c\u8eab\u7684\u5185\u5b58\u5730\u5740\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002","title":"\uff08\u4e09\uff09\u95ed\u5305\u65e0\u6cd5\u6539\u53d8\u5916\u90e8\u51fd\u6570\u5c40\u90e8\u53d8\u91cf\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\uff08nonlocal \u5173\u952e\u5b57\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u56db\u8fd4\u56de\u95ed\u5305\u65f6\u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf","text":"\u5728 Python \u4e2d\uff0c\u5982\u679c\u8981\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u90a3\u4e48\u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf\u3002 \u56e0\u4e3a\uff0c\u8fd4\u56de\u7684\u51fd\u6570\u5e76\u6ca1\u6709\u7acb\u523b\u6267\u884c\uff0c\u800c\u662f\u76f4\u5230\u8c03\u7528\u4e86 f() \u624d\u6267\u884c\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a Text Only 1 2 3 4 5 6 7 8 9 def count(): fs = [] for i in range(1, 4): def f(): return i*i fs.append(f) return fs f1, f2, f3 = count() \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6bcf\u6b21\u5faa\u73af\uff0c\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\uff0c\u7136\u540e\uff0c\u628a\u521b\u5efa\u7684 3 \u4e2a\u51fd\u6570\u90fd\u653e\u5728\u5217\u8868\u4e2d\uff0c\u901a\u8fc7\u5217\u8868\u6574\u4f53\u8fd4\u56de\u4e86\u3002 \u4f60\u53ef\u80fd\u8ba4\u4e3a\u8c03\u7528 f1() \uff0c f2() \u548c f3() \u7ed3\u679c\u5e94\u8be5\u662f 1 \uff0c 4 \uff0c 9 \uff0c\u4f46\u5b9e\u9645\u7ed3\u679c\u662f\uff1a Text Only 1 2 3 4 5 6 >>> f1() 9 >>> f2() 9 >>> f3() 9 \u56e0\u4e3a\u5728\u5411\u5217\u8868\u4e2d\u6dfb\u52a0 func \u7684\u65f6\u5019\uff0ci \u7684\u503c\u6ca1\u6709\u56fa\u5b9a\u5230 f \u7684\u5b9e\u4f8b\u5bf9\u8c61\u4e2d\uff0c\u800c\u4ec5\u662f\u5c06\u8ba1\u7b97\u516c\u5f0f\u56fa\u5b9a\u5230\u4e86\u5b9e\u4f8b\u5bf9\u8c61\u4e2d\u3002\u7b49\u5230\u4e86\u8c03\u7528 f1()\u3001f2()\u3001f3()\u7684\u65f6\u5019\u624d\u53bb\u53d6 i \u7684\u503c\uff0c\u8fd9\u65f6\u5019\u5faa\u73af\u5df2\u7ecf\u7ed3\u675f\uff0ci \u7684\u503c\u662f 3\uff0c\u6240\u4ee5\u7ed3\u679c\u90fd\u662f 9\u3002 \u56e0\u6b64\uff0c\u8fd4\u56de\u95ed\u5305\u65f6\u7262\u8bb0\u4e00\u70b9\uff1a\u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf\u3002 \u5982\u679c\u4e00\u5b9a\u8981\u5f15\u7528\u5faa\u73af\u53d8\u91cf\u600e\u4e48\u529e\uff1f\u65b9\u6cd5\u662f\u518d\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u8be5\u51fd\u6570\u7684\u53c2\u6570\u7ed1\u5b9a\u5faa\u73af\u53d8\u91cf\u5f53\u524d\u7684\u503c\uff0c\u65e0\u8bba\u8be5\u5faa\u73af\u53d8\u91cf\u540e\u7eed\u5982\u4f55\u66f4\u6539\uff0c\u5df2\u7ed1\u5b9a\u5230\u51fd\u6570\u53c2\u6570\u7684\u503c\u4e0d\u53d8\u3002 Text Only 1 2 3 4 5 6 7 8 9 def count(): def f(j): def g(): return j*j return g fs = [] for i in range(1, 4): fs.append(f(i)) # f(i)\u7acb\u523b\u88ab\u6267\u884c\uff0c\u56e0\u6b64i\u7684\u5f53\u524d\u503c\u88ab\u4f20\u5165f() return fs \u518d\u770b\u770b\u7ed3\u679c\uff1a Text Only 1 2 3 4 5 6 7 >>> f1, f2, f3 = count() >>> f1() 1 >>> f2() 4 >>> f3() 9","title":"\uff08\u56db\uff09\u8fd4\u56de\u95ed\u5305\u65f6\uff0c\u8fd4\u56de\u51fd\u6570\u4e0d\u8981\u5f15\u7528\u4efb\u4f55\u5faa\u73af\u53d8\u91cf\uff0c\u6216\u8005\u540e\u7eed\u4f1a\u53d1\u751f\u53d8\u5316\u7684\u53d8\u91cf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/2%20%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97/2.%20%E9%97%AD%E5%8C%85/#\u4e94\u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u662f\u5426\u662f\u95ed\u5305","text":"\u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u662f\u4e0d\u662f\u95ed\u5305\uff0c\u53ef\u4ee5\u67e5\u770b\u5b83\u7684**closure **\u5c5e\u6027\u3002\u5982\u679c\u8be5\u51fd\u6570\u662f\u95ed\u5305\uff0c\u67e5\u770b\u8be5\u5c5e\u6027\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a cell \u5bf9\u8c61\u7ec4\u6210\u7684 tuple\u3002\u5982\u679c\u6211\u4eec\u5206\u522b\u5bf9\u6bcf\u4e2a cell \u5bf9\u8c61\u67e5\u770b\u5176 cell_contents \u5c5e\u6027\uff0c\u8fd4\u56de\u7684\u5185\u5bb9\u5c31\u662f\u95ed\u5305\u5f15\u7528\u7684\u81ea\u7531\u53d8\u91cf\u7684\u503c\u3002 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u5c55\u793a\uff1a Text Only 1 2 3 4 5 6 7 8 def add(x,y): def f(z): return x+y+z return f d = add(5,6) d(9) d(1) \u95ed\u5305\u7684__closure__\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c55\u793a\u51fa\u95ed\u5305\u50a8\u5b58\u4e86\u5916\u90e8\u51fd\u6570\u7684\u4e24\u4e2a\u53d8\u91cf\uff0ccell \u7684\u5185\u5b58\u5730\u5740\u662f\u4ec0\u4e48\uff0c\u5728 cell \u91cc\u9762\u50a8\u5b58\u7684\u5bf9\u8c61\u7c7b\u578b\u662f int\uff0c\u8fd9\u4e2a int \u50a8\u5b58\u7684\u5185\u5b58\u5730\u5740\u662f\u4ec0\u4e48\u3002 \u95ed\u5305\u7684__closure__\u65b9\u6cd5\uff0c\u53ef\u4ee5\u67e5\u770b\u6bcf\u4e2a cell \u5bf9\u8c61\u7684\u5185\u5bb9\u3002 Text Only 1 2 for i in d.__closure__: print(i.cell_contents) cell_contents \u89e3\u91ca\u4e86\u5c40\u90e8\u53d8\u91cf\u5728\u8131\u79bb\u51fd\u6570\u540e\u4ecd\u7136\u53ef\u4ee5\u5728\u51fd\u6570\u4e4b\u5916\u88ab\u8bbf\u95ee\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u53d8\u91cf\u88ab\u5b58\u50a8\u5728 cell_contents \u4e2d\u4e86\u3002","title":"\u4e94\u3001\u5224\u65ad\u4e00\u4e2a\u51fd\u6570\u662f\u5426\u662f\u95ed\u5305"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/","text":"created: 2022-09-16T20:49:48 tags: [] source: \u539f\u6587\u5730\u5740 author: \u4e00\u6587\u770b\u61c2 Python \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b | \u5927\u6c5f\u72d7\u7684\u535a\u5ba2 \u00b6 \u5c3d\u7ba1\u7f51\u4e0a\u6709\u8bb8\u591a\u5173\u4e8e Python \u9762\u5411\u5bf9\u50cf\u7684\u7f16\u7a0b\u4ecb\u7ecd\uff0c\u5c0f\u7f16\u6211\u770b\u5b8c\u540e\u603b\u89c9\u5f97\u4e0d\u662f\u5f88\u6ee1\u610f\uff0c\u4e5f\u4e0d\u8fc7\u763e\uff0c\u6240\u4ee5\u51b3\u5b9a\u81ea\u5df1\u4eb2\u81ea\u52a8\u624b\u5199\u7bc7\u6587\u7ae0\uff0c\u5e2e\u4f60\u7406\u89e3 Python \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u7684\u57fa\u672c\u6982\u5ff5\u548c\u6838\u5fc3\u601d\u60f3\u3002\u672c\u6587\u5185\u542b\u5f88\u591a\u5b9e\u4f8b\u4ee3\u7801\uff0c\u4ee5\u5e2e\u52a9\u65b0\u624b\u66f4\u597d\u7406\u89e3\u3002\u5982\u679c\u4f60\u5728\u5b66\u4e60\u57fa\u4e8e Python \u7684 Django Web \u5f00\u53d1\u6846\u67b6\uff0c\u672c\u6587\u4e5f\u4f1a\u5bf9\u4f60\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a Django \u7f16\u7a0b\u5c31\u662f\u91c7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u3002 1. \u7c7b(Class)\u4e0e\u5bf9\u8c61(Object) \u00b6 \u7c7b(Class)\u662f\u7528\u6765\u63cf\u8ff0\u5177\u6709\u76f8\u540c\u5c5e\u6027(Attribute)\u548c\u65b9\u6cd5(Method)\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u5bf9\u8c61(Object)\u662f\u7c7b(Class)\u7684\u5177\u4f53\u5b9e\u4f8b\u3002\u6bd4\u5982\u6bcf\u4e2a\u5b66\u751f\u90fd\u6709\u540d\u5b57\u548c\u5206\u6570\uff0c\u8fd9\u662f\u4ed6\u4eec\u5171\u540c\u7684\u5c5e\u6027\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u5b66\u751f\u7c7b, \u7528\u4e8e\u8bb0\u5f55\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\uff0c\u5e76\u81ea\u5b9a\u4e49\u65b9\u6cd5\u6253\u5370\u51fa\u4ed6\u4eec\u7684\u540d\u5b57\u548c\u65b9\u6cd5\u3002 \u5c5e\u6027(Attribute): \u7c7b\u91cc\u9762\u7528\u4e8e\u63cf\u8ff0\u6240\u6709\u5bf9\u8c61\u5171\u540c\u7279\u5f81\u7684\u53d8\u91cf\u6216\u6570\u636e\u3002\u6bd4\u5982\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002 \u65b9\u6cd5(Method): \u7c7b\u91cc\u9762\u7684\u51fd\u6570\uff0c\u7528\u6765\u533a\u522b\u7c7b\u5916\u9762\u7684\u51fd\u6570, \u7528\u6765\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u3002\u6bd4\u5982\u6253\u5370\u51fa\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002 \u8981\u521b\u5efa\u4e00\u4e2a\u7c7b\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5173\u952e\u8bcd class . \u8fd9\u4e2a\u5b66\u751f\u7c7b Student \u770b\u4e0a\u53bb\u5e94\u8be5\u662f\u8fd9\u6837\u7684: Python 1 2 3 4 5 6 7 8 9 10 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 def __init__ ( self , name , score ): self . name = name self . score = score # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u62bd\u8c61\u7684\u7c7b\uff0c\u7535\u8111\u5e76\u6ca1\u6709\u521b\u5efa\u4ec0\u4e48\u5b58\u50a8\u7a7a\u95f4\u3002\u53ea\u6709\u5f53\u6211\u4eec\u5b8c\u6210\u7c7b\u7684\u5b9e\u4f8b\u5316( Instance )\u65f6\uff0c\u7535\u8111\u624d\u4f1a\u521b\u5efa\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff08 Object \uff09\uff0c\u5e76\u4e3a\u4e4b\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002\u6240\u4ee5**\u5bf9\u8c61\uff08Object)\u662f\u7c7b\uff08Class)\u7684\u4e00\u4e2a\u5b9e\u4f8b**\u3002 \u8981\u521b\u5efa\u4e00\u4e2a\u5177\u4f53\u7684\u5b66\u751f\u5bf9\u8c61(Object)\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8f93\u5165: Text Only 1 2 student1 = Student(\"John\", 100) student2 = Student(\"Lucy\", 99) \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c Student \u662f\u7c7b\uff0c student1 \u548c student2 \u662f\u6211\u4eec\u521b\u5efa\u7684\u5177\u4f53\u7684\u5b66\u751f\u5bf9\u8c61\u3002\u5f53\u6211\u4eec\u8f93\u5165\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0cPython \u4f1a\u81ea\u52a8\u8c03\u7528\u9ed8\u8ba4\u7684 __init__ \u521d\u59cb\u6784\u9020\u51fd\u6570\u6765\u751f\u6210\u5177\u4f53\u7684\u5bf9\u8c61\u3002\u5173\u952e\u5b57 self \u662f\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u53c2\u6570\uff0c\u4ee3\u8868\u521b\u5efa\u7684\u5bf9\u8c61\u672c\u8eab\u3002 \u5f53\u4f60\u521b\u5efa\u5177\u4f53\u7684\u5bf9\u8c61\u540e\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 student1.name \u548c student1.score \u6765\u5206\u522b\u83b7\u53d6\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 student1.show() \u6765\u76f4\u63a5\u6253\u5370\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002 2. \u7c7b\u53d8\u91cf(class variables)\u4e0e\u5b9e\u4f8b\u53d8\u91cf\uff08instance variables\uff09 \u00b6 \u5047\u8bbe\u6211\u4eec\u9700\u8981\u5728 Student \u7c7b\u91cc\u589e\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668 number \uff0c\u6bcf\u5f53\u4e00\u4e2a\u65b0\u7684\u5b66\u751f\u5bf9\u8c61(Object)\u88ab\u521b\u5efa\u65f6\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5668\u5c31\u81ea\u52a8\u52a0 1\u3002\u7531\u4e8e\u8fd9\u4e2a\u8ba1\u6570\u5668\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u5b66\u751f\uff0c\u800c\u5c5e\u4e8e Student \u7c7b\u7684\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a\u7c7b\u53d8\u91cf(class variables)\u3002\u800c\u59d3\u540d\u548c\u5206\u6570\u5c5e\u4e8e\u6bcf\u4e2a\u5b66\u751f\u5bf9\u8c61\u7684\uff0c\u6240\u4ee5\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf(instance variables)\uff0c\u4e5f\u88ab\u79f0\u4e3a\u5bf9\u8c61\u53d8\u91cf(object variables)\u3002 \u8fd9\u4e2a\u65b0 Student \u7c7b\u770b\u4e0a\u53bb\u5e94\u8be5\u662f\u8fd9\u6837\u7684: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u5916\uff0c\u4e0d\u5c5e\u4e8e\u5177\u4f53\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u91cc def __init__ ( self , name , score ): self . name = name self . score = score # \u6b64\u5904\u6709\u9519\u8bef number = number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) \u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u7684\u533a\u522b\u5f88\u5927\uff0c\u8bbf\u95ee\u65b9\u5f0f\u4e5f\u4e5f\u4e0d\u4e00\u6837\u3002 \u7c7b\u53d8\u91cf \uff1a \u7c7b\u53d8\u91cf\u5728\u6574\u4e2a\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u4e2d\u662f\u516c\u7528\u7684\u3002 \u7c7b\u53d8\u91cf\u5b9a\u4e49\u5728\u7c7b\u4e2d\u4e14\u5728\u51fd\u6570\u4f53\u4e4b\u5916\u3002\u8bbf\u95ee\u6216\u8c03\u7528\u7c7b\u53d8\u91cf\u7684\u6b63\u786e\u65b9\u5f0f\u662f\u7c7b\u540d.\u53d8\u91cf\u540d\u6216\u8005 self.__class__.\u53d8\u91cf\u540d \u3002 self.__class__ \u81ea\u52a8\u8fd4\u56de\u6bcf\u4e2a\u5bf9\u8c61\u7684\u7c7b\u540d\u3002 \u5b9e\u4f8b\u53d8\u91cf \uff1a\u5b9a\u4e49\u5728\u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\uff0c\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u3002\u8bbf\u95ee\u6216\u8c03\u7528\u5b9e\u4f8b\u53d8\u91cf\u7684\u6b63\u786e\u65b9\u5f0f\u662f \u5bf9\u8c61\u540d.\u53d8\u91cf\u540d \u6216\u8005 self.\u53d8\u91cf\u540d . \u6ce8\u610f\u5230\u4e0a\u8ff0 Student \u7c7b\u6709\u4e2a\u9519\u8bef\u6ca1? \u6211\u4eec\u8bd5\u56fe\u76f4\u63a5\u4f7f\u7528 number = number + 1 \u8c03\u7528\u5c5e\u4e8e\u7c7b\u7684\u53d8\u91cf number\u3002\u6b63\u786e\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 Student.number \u6216 self.__class__.number \u8bbf\u95ee\u5c5e\u4e8e\u7c7b\u7684\u53d8\u91cf\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u624d\u662f\u6b63\u786e\u7684: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5b66\u751f\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf def __init__ ( self , name , score ): self . name = name self . score = score Student . number = Student . number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student ( \"John\" , 100 ) student2 = Student ( \"Lucy\" , 99 ) print ( Student . number ) # \u6253\u53702 print ( student1 . __class__ . number ) # \u6253\u53702 3. \u7c7b\u65b9\u6cd5(Class method) \u00b6 \u6b63\u5982\u540c\u6709\u4e9b\u53d8\u91cf\u53ea\u5c5e\u4e8e\u7c7b\uff0c\u6709\u4e9b\u65b9\u6cd5\u4e5f\u53ea\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u5c5e\u4e8e\u5177\u4f53\u7684\u5bf9\u8c61\u3002\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\u5c5e\u4e8e\u5bf9\u8c61\u7684\u65b9\u6cd5\u91cc\u9762\u90fd\u6709\u4e00\u4e2a self \u53c2\u6570, \u6bd4\u5982 __init__(self) , show(self) ? self \u662f\u6307\u5bf9\u8c61\u672c\u8eab\u3002 \u5c5e\u4e8e\u7c7b\u7684\u65b9\u6cd5\u4e0d\u4f7f\u7528 self \u53c2\u6570\uff0c \u800c\u4f7f\u7528\u53c2\u6570 cls \uff0c \u4ee3\u8868\u7c7b\u672c\u8eab \u3002\u53e6\u5916\u4e60\u60ef\u4e0a\u5bf9\u7c7b\u65b9\u6cd5\u6211\u4eec\u4f1a\u52a0\u4e0a @classmethod \u7684\u4fee\u9970\u7b26\u505a\u8bf4\u660e\u3002 \u540c\u6837\u62ff Student \u4e3a\u4f8b\u5b50\uff0c\u6211\u4eec\u4e0d\u7528 print \u51fd\u6570\u6253\u5370\u51fa\u5df2\u521b\u5efa\u5b66\u751f\u5bf9\u8c61\u7684\u6570\u91cf\uff0c\u800c\u662f\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u65b9\u6cd5\u6765\u6253\u5370\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u505a: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5b66\u751f\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf def __init__ ( self , name , score ): self . name = name self . score = score Student . number = Student . number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) # \u5b9a\u4e49\u7c7b\u65b9\u6cd5\uff0c\u6253\u5370\u5b66\u751f\u7684\u6570\u91cf @classmethod def total ( cls ): print ( \"Total: {0} \" . format ( cls . number )) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student ( \"John\" , 100 ) student2 = Student ( \"Lucy\" , 99 ) Student . total () # \u6253\u5370 Total: 2 4. \u7c7b\u7684\u79c1\u6709\u5c5e\u6027(private attribute)\u548c\u79c1\u6709\u65b9\u6cd5(private method) \u00b6 \u7c7b\u91cc\u9762\u7684\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5\u4ee5\u53cc\u4e0b\u5212\u7ebf __ \u5f00\u5934\u3002\u79c1\u6709\u5c5e\u6027\u6216\u65b9\u6cd5\u4e0d\u80fd\u5728\u7c7b\u7684\u5916\u90e8\u88ab\u4f7f\u7528\u6216\u76f4\u63a5\u8bbf\u95ee\u3002\u6211\u4eec\u540c\u6837\u770b\u770b\u5b66\u751f\u7c7b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u628a\u5206\u6570 score \u53d8\u4e3a\u79c1\u6709\u5c5e\u6027\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002 Text Only 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student: # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf, \u5176\u4e2d__score\u5c5e\u4e8e\u79c1\u6709\u53d8\u91cf def __init__(self, name, score): self.name = name self.__score = score # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show(self): print(\"Name: {}. Score: {}\".format(self.name, self.__score)) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student(\"John\", 100) student1.show() # \u6253\u5370 Name: John, Score: 100 student1.__score # \u6253\u5370\u51fa\u9519\uff0c\u8be5\u5c5e\u6027\u4e0d\u80fd\u4ece\u5916\u90e8\u8bbf\u95ee\u3002 \u5982\u679c\u4f60\u5c06 score \u53d8\u6210 __score , \u4f60\u5c06\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7 student1.__score \u83b7\u53d6\u8be5\u5b66\u751f\u7684\u5206\u6570\u3002 show() \u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u5206\u6570\uff0c\u662f\u56e0\u4e3a\u5b83\u662f\u7c7b\u91cc\u9762\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u79c1\u6709\u53d8\u91cf\u3002 \u79c1\u6709\u65b9\u6cd5\u662f\u540c\u6837\u7684\u9053\u7406\u3002\u5f53\u6211\u4eec\u628a show() \u53d8\u6210\uff0c __show() \u4f60\u5c06\u4e0d\u80fd\u518d\u901a\u8fc7 student1.__show() \u6253\u5370\u51fa\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u79c1\u6709\u65b9\u6cd5\u5fc5\u9700\u542b\u6709 self \u8fd9\u4e2a\u53c2\u6570\uff0c\u4e14\u628a\u5b83\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002 \u5728\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u4e2d,\u901a\u5e38\u60c5\u51b5\u4e0b\u5f88\u5c11\u8ba9\u5916\u90e8\u7c7b\u76f4\u63a5\u8bbf\u95ee\u7c7b\u5185\u90e8\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u800c\u662f\u5411\u5916\u90e8\u7c7b\u63d0\u4f9b\u4e00\u4e9b\u6309\u94ae,\u5bf9\u5176\u5185\u90e8\u7684\u6210\u5458\u76f8\u4e92\u8fdb\u884c\u8bbf\u95ee,\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\uff0c\u8fd9\u5c31\u662f \u5c01\u88c5 \u3002 5. @property \u7684\u7528\u6cd5\u4e0e\u795e\u5947\u4e4b\u5904 \u00b6 \u5728\u4e0a\u8ff0\u6848\u4f8b\u4e2d\u7528\u6237\u4e0d\u80fd\u7528 student1.__score \u65b9\u5f0f\u8bbf\u95ee\u5b66\u751f\u5206\u6570\uff0c\u7136\u800c\u7528\u6237\u4e5f\u5c31\u77e5\u9053\u4e86 __score \u662f\u4e2a\u79c1\u6709\u53d8\u91cf\u3002\u6211\u4eec\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u8ba9\u7528\u6237\u901a\u8fc7 student1.score \u6765\u8bbf\u95ee\u5b66\u751f\u5206\u6570\u800c\u7ee7\u7eed\u4fdd\u6301 __score \u79c1\u6709\u53d8\u91cf\u7684\u5c5e\u6027\u5462\uff1f\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9 python \u7684 @property \u88c5\u9970\u5668\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5 score() , \u7136\u540e\u5229\u7528 @property \u628a\u8fd9\u4e2a\u51fd\u6570\u4f2a\u88c5\u6210\u5c5e\u6027\u3002 \u89c1\u4e0b\u9762\u4f8b\u5b50: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf, \u5176\u4e2dscore\u5c5e\u4e8e\u79c1\u6709\u53d8\u91cf def __init__ ( self , name , score ): self . name = name self . __score = score # \u5229\u7528property\u88c5\u9970\u5668\u628a\u51fd\u6570\u4f2a\u88c5\u6210\u5c5e\u6027 @property def score ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . __score )) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student ( \"John\" , 100 ) student1 . score # \u6253\u5370 Name: John. Score: 100 \u6ce8\u610f\uff1a \u4e00\u65e6\u7ed9\u51fd\u6570\u52a0\u4e0a\u4e00\u4e2a\u88c5\u9970\u5668@property,\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u4e0d\u7528\u52a0\u62ec\u53f7\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u4e86 6. \u7c7b\u7684\u7ee7\u627f(Inheritance) \u00b6 \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u5e26\u6765\u7684\u6700\u5927\u597d\u5904\u4e4b\u4e00\u5c31\u662f\u4ee3\u7801\u7684\u91cd\u7528\uff0c\u5b9e\u73b0\u8fd9\u79cd\u91cd\u7528\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u901a\u8fc7\u7ee7\u627f( Inheritance )\u3002\u4f60\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b(Base class)\u6216\u7236\u7c7b(Parent class)\uff0c\u518d\u6309\u901a\u8fc7 class \u5b50\u7c7b\u540d\uff08\u7236\u7c7b\u540d)\u6765\u521b\u5efa\u5b50\u7c7b(Child class)\u3002 \u8fd9\u6837\u5b50\u7c7b\u5c31\u53ef\u4ee5\u4ece\u7236\u7c7b\u90a3\u91cc\u83b7\u5f97\u5176\u5df2\u6709\u7684\u5c5e\u6027\u4e0e\u65b9\u6cd5\uff0c\u8fd9\u79cd\u73b0\u8c61\u53eb\u505a\u7c7b\u7684\u7ee7\u627f\u3002 \u6211\u4eec\u518d\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8001\u5e08\u548c\u5b66\u751f\u540c\u5c5e\u5b66\u6821\u6210\u5458\uff0c\u90fd\u6709\u59d3\u540d\u548c\u5e74\u9f84\u7684\u5c5e\u6027\uff0c\u7136\u800c\u8001\u5e08\u6709\u5de5\u8d44\u8fd9\u4e2a\u4e13\u6709\u5c5e\u6027\uff0c\u5b66\u751f\u6709\u5206\u6570\u8fd9\u4e2a\u4e13\u6709\u5c5e\u6027\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49 1 \u4e00\u4e2a\u5b66\u6821\u6210\u5458\u7236\u7c7b\uff0c2 \u4e2a\u5b50\u7c7b\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # \u521b\u5efa\u7236\u7c7b\u5b66\u6821\u6210\u5458SchoolMember class SchoolMember : def __init__ ( self , name , age ): self . name = name self . age = age def tell ( self ): # \u6253\u5370\u4e2a\u4eba\u4fe1\u606f print ( 'Name:\" {} \" Age:\" {} \"' . format ( self . name , self . age ), end = \" \" ) # \u521b\u5efa\u5b50\u7c7b\u8001\u5e08 Teacher class Teacher ( SchoolMember ): def __init__ ( self , name , age , salary ): SchoolMember . __init__ ( self , name , age ) # \u5229\u7528\u7236\u7c7b\u8fdb\u884c\u521d\u59cb\u5316 self . salary = salary # \u65b9\u6cd5\u91cd\u5199 def tell ( self ): SchoolMember . tell ( self ) print ( 'Salary: {} ' . format ( self . salary )) # \u521b\u5efa\u5b50\u7c7b\u5b66\u751fStudent class Student ( SchoolMember ): def __init__ ( self , name , age , score ): SchoolMember . __init__ ( self , name , age ) self . score = score def tell ( self ): SchoolMember . tell ( self ) print ( 'score: {} ' . format ( self . score )) teacher1 = Teacher ( \"John\" , 44 , \"$60000\" ) student1 = Student ( \"Mary\" , 12 , 99 ) teacher1 . tell () # \u6253\u5370 Name:\"John\" Age:\"44\" Salary: $60000 student1 . tell () # Name:\"Mary\" Age:\"12\" score: 99 \u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u4f60\u6ce8\u610f\u5230\u4ee5\u4e0b\u51e0\u70b9\u4e86\u5417\uff1f \u5728\u521b\u5efa\u5b50\u7c7b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u9700\u8981\u624b\u52a8\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570 __init__ \u6765\u5b8c\u6210\u5b50\u7c7b\u7684\u6784\u9020\u3002 \u5728\u5b50\u7c7b\u4e2d\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u52a0\u4e0a\u7236\u7c7b\u7684\u7c7b\u540d\u524d\u7f00\uff0c\u4e14\u9700\u8981\u5e26\u4e0a self \u53c2\u6570\u53d8\u91cf\u3002\u6bd4\u5982 SchoolMember.tell(self) , \u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u5173\u952e\u8bcd\u7b80\u5316\u4ee3\u7801 \u3002 \u5982\u679c\u5b50\u7c7b\u8c03\u7528\u4e86\u67d0\u4e2a\u65b9\u6cd5(\u5982 tell() )\u6216\u5c5e\u6027\uff0cPython \u4f1a\u5148\u5728\u5b50\u7c7b\u4e2d\u627e\uff0c\u5982\u679c\u627e\u5230\u4e86\u4f1a\u76f4\u63a5\u8c03\u7528\u3002\u5982\u679c\u627e\u4e0d\u5230\u624d\u4f1a\u53bb\u7236\u7c7b\u627e\u3002\u8fd9\u4e3a\u65b9\u6cd5\u91cd\u5199\u5e26\u6765\u4e86\u4fbf\u5229\u3002 \u5b9e\u9645 Python \u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b\uff0c\u539f\u7406\u662f\u4e00\u6837\u7684\u3002\u7b2c\u4e00\u6b65\u603b\u662f\u8981\u624b\u52a8\u8c03\u7528 __init__ \u6784\u9020\u51fd\u6570\u3002 7. super()\u5173\u952e\u5b57\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5 \u00b6 \u5728\u5b50\u7c7b\u5f53\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u5173\u952e\u5b57\u6765\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u7684\u4e2d\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u7b80\u5316\u4ee3\u7801\u3002\u5728\u4e0b\u9762\u4f8b\u5b50\u4e2d\uff0c\u5b66\u751f\u5b50\u7c7b\u8c03\u7528\u4e86\u7236\u7c7b\u7684 tell()\u65b9\u6cd5\u3002 super().tell() \u7b49\u540c\u4e8e SchoolMember.tell(self) \u3002\u5f53\u4f60\u4f7f\u7528 Python super() \u5173\u952e\u5b57\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u65f6\u65f6\uff0c\u6ce8\u610f\u53bb\u6389\u62ec\u53f7\u91cc self \u8fd9\u4e2a\u53c2\u6570\u3002 Python 1 2 3 4 5 6 7 8 9 10 # \u521b\u5efa\u5b50\u7c7b\u5b66\u751fStudent class Student ( SchoolMember ): def __init__ ( self , name , age , score ): super () . __init__ ( name , age ) self . score = score def tell ( self ): super () . tell () # \u7b49\u540c\u4e8e SchoolMember.tell(self) print ( 'score: {} ' . format ( self . score )) 8. \u9759\u6001\u53d8\u91cf(static variable)\u548c\u9759\u6001\u65b9\u6cd5(static method) \u00b6 \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u5c5e\u4e8e\u7c7b\u7684\u9759\u6001\u6210\u5458\uff0c\u5b83\u4eec\u4e0e\u666e\u901a\u7684\u5b9e\u4f8b\u53d8\u91cf\u548c\u5b9e\u4f8b\u65b9\u6cd5\u4e0d\u540c\uff0c\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u53ea\u5c5e\u4e8e\u5b9a\u4e49\u5b83\u4eec\u7684\u7c7b\uff0c\u800c\u4e0d\u5c5e\u4e8e\u67d0\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u7531\u4e8e Python \u5c5e\u4e8e\u52a8\u6001\u8bed\u8a00\uff0c\u4e0d\u5b58\u5728\u7edd\u5bf9\u7684\u9759\u6001\u53d8\u91cf\uff0c \u6240\u4ee5\u7c7b\u53d8\u91cf(\u6bd4\u5982\u4e0b\u4f8b\u4e2d\u7684 number)\u4e00\u822c\u5c31\u662f\u9759\u6001\u53d8\u91cf\uff0c\u65e0\u9700\u663e\u793a\u5730\u58f0\u660e\u3002\u628a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u58f0\u660e\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c \u53ef\u4ee5\u4f7f\u7528 @staticmethod \u88c5\u9970\u5668\uff0c\u5982\u4e0b\u4f8b\u4e2d\u7684 func1 \u65b9\u6cd5 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u5916\uff0c\u4e0d\u5c5e\u4e8e\u5177\u4f53\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u91cc def __init__ ( self , name , score ): self . name = name self . score = score Student . number = number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) # \u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u4f7f\u7528cls\u548cself\u53c2\u6570\u8bbf\u95ee\u7c7b\u6216\u5b9e\u4f8b\u7684\u53d8\u91cf @staticmethod def func1 (): print ( \"this is static function!\" ) \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u548c\u5b9e\u4f8b\u5bf9\u8c61\u8fdb\u884c\u8bbf\u95ee, \u540c\u65f6\u4e0d\u50cf\u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u63a5\u6536 cls \u548c self \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002","title":"0. \u7b80\u4ecb Python\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#\u4e00\u6587\u770b\u61c2-python-\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b--\u5927\u6c5f\u72d7\u7684\u535a\u5ba2","text":"\u5c3d\u7ba1\u7f51\u4e0a\u6709\u8bb8\u591a\u5173\u4e8e Python \u9762\u5411\u5bf9\u50cf\u7684\u7f16\u7a0b\u4ecb\u7ecd\uff0c\u5c0f\u7f16\u6211\u770b\u5b8c\u540e\u603b\u89c9\u5f97\u4e0d\u662f\u5f88\u6ee1\u610f\uff0c\u4e5f\u4e0d\u8fc7\u763e\uff0c\u6240\u4ee5\u51b3\u5b9a\u81ea\u5df1\u4eb2\u81ea\u52a8\u624b\u5199\u7bc7\u6587\u7ae0\uff0c\u5e2e\u4f60\u7406\u89e3 Python \u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u7684\u57fa\u672c\u6982\u5ff5\u548c\u6838\u5fc3\u601d\u60f3\u3002\u672c\u6587\u5185\u542b\u5f88\u591a\u5b9e\u4f8b\u4ee3\u7801\uff0c\u4ee5\u5e2e\u52a9\u65b0\u624b\u66f4\u597d\u7406\u89e3\u3002\u5982\u679c\u4f60\u5728\u5b66\u4e60\u57fa\u4e8e Python \u7684 Django Web \u5f00\u53d1\u6846\u67b6\uff0c\u672c\u6587\u4e5f\u4f1a\u5bf9\u4f60\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a Django \u7f16\u7a0b\u5c31\u662f\u91c7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u3002","title":"\u4e00\u6587\u770b\u61c2 Python \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b | \u5927\u6c5f\u72d7\u7684\u535a\u5ba2"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#1-\u7c7bclass\u4e0e\u5bf9\u8c61object","text":"\u7c7b(Class)\u662f\u7528\u6765\u63cf\u8ff0\u5177\u6709\u76f8\u540c\u5c5e\u6027(Attribute)\u548c\u65b9\u6cd5(Method)\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u5bf9\u8c61(Object)\u662f\u7c7b(Class)\u7684\u5177\u4f53\u5b9e\u4f8b\u3002\u6bd4\u5982\u6bcf\u4e2a\u5b66\u751f\u90fd\u6709\u540d\u5b57\u548c\u5206\u6570\uff0c\u8fd9\u662f\u4ed6\u4eec\u5171\u540c\u7684\u5c5e\u6027\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u5b66\u751f\u7c7b, \u7528\u4e8e\u8bb0\u5f55\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\uff0c\u5e76\u81ea\u5b9a\u4e49\u65b9\u6cd5\u6253\u5370\u51fa\u4ed6\u4eec\u7684\u540d\u5b57\u548c\u65b9\u6cd5\u3002 \u5c5e\u6027(Attribute): \u7c7b\u91cc\u9762\u7528\u4e8e\u63cf\u8ff0\u6240\u6709\u5bf9\u8c61\u5171\u540c\u7279\u5f81\u7684\u53d8\u91cf\u6216\u6570\u636e\u3002\u6bd4\u5982\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002 \u65b9\u6cd5(Method): \u7c7b\u91cc\u9762\u7684\u51fd\u6570\uff0c\u7528\u6765\u533a\u522b\u7c7b\u5916\u9762\u7684\u51fd\u6570, \u7528\u6765\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u3002\u6bd4\u5982\u6253\u5370\u51fa\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002 \u8981\u521b\u5efa\u4e00\u4e2a\u7c7b\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5173\u952e\u8bcd class . \u8fd9\u4e2a\u5b66\u751f\u7c7b Student \u770b\u4e0a\u53bb\u5e94\u8be5\u662f\u8fd9\u6837\u7684: Python 1 2 3 4 5 6 7 8 9 10 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 def __init__ ( self , name , score ): self . name = name self . score = score # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u53ea\u5b9a\u4e49\u4e86\u4e00\u4e2a\u62bd\u8c61\u7684\u7c7b\uff0c\u7535\u8111\u5e76\u6ca1\u6709\u521b\u5efa\u4ec0\u4e48\u5b58\u50a8\u7a7a\u95f4\u3002\u53ea\u6709\u5f53\u6211\u4eec\u5b8c\u6210\u7c7b\u7684\u5b9e\u4f8b\u5316( Instance )\u65f6\uff0c\u7535\u8111\u624d\u4f1a\u521b\u5efa\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff08 Object \uff09\uff0c\u5e76\u4e3a\u4e4b\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\u3002\u6240\u4ee5**\u5bf9\u8c61\uff08Object)\u662f\u7c7b\uff08Class)\u7684\u4e00\u4e2a\u5b9e\u4f8b**\u3002 \u8981\u521b\u5efa\u4e00\u4e2a\u5177\u4f53\u7684\u5b66\u751f\u5bf9\u8c61(Object)\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8f93\u5165: Text Only 1 2 student1 = Student(\"John\", 100) student2 = Student(\"Lucy\", 99) \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c Student \u662f\u7c7b\uff0c student1 \u548c student2 \u662f\u6211\u4eec\u521b\u5efa\u7684\u5177\u4f53\u7684\u5b66\u751f\u5bf9\u8c61\u3002\u5f53\u6211\u4eec\u8f93\u5165\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0cPython \u4f1a\u81ea\u52a8\u8c03\u7528\u9ed8\u8ba4\u7684 __init__ \u521d\u59cb\u6784\u9020\u51fd\u6570\u6765\u751f\u6210\u5177\u4f53\u7684\u5bf9\u8c61\u3002\u5173\u952e\u5b57 self \u662f\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u53c2\u6570\uff0c\u4ee3\u8868\u521b\u5efa\u7684\u5bf9\u8c61\u672c\u8eab\u3002 \u5f53\u4f60\u521b\u5efa\u5177\u4f53\u7684\u5bf9\u8c61\u540e\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 student1.name \u548c student1.score \u6765\u5206\u522b\u83b7\u53d6\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 student1.show() \u6765\u76f4\u63a5\u6253\u5370\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002","title":"1. \u7c7b(Class)\u4e0e\u5bf9\u8c61(Object)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#2-\u7c7b\u53d8\u91cfclass-variables\u4e0e\u5b9e\u4f8b\u53d8\u91cfinstance-variables","text":"\u5047\u8bbe\u6211\u4eec\u9700\u8981\u5728 Student \u7c7b\u91cc\u589e\u52a0\u4e00\u4e2a\u8ba1\u6570\u5668 number \uff0c\u6bcf\u5f53\u4e00\u4e2a\u65b0\u7684\u5b66\u751f\u5bf9\u8c61(Object)\u88ab\u521b\u5efa\u65f6\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5668\u5c31\u81ea\u52a8\u52a0 1\u3002\u7531\u4e8e\u8fd9\u4e2a\u8ba1\u6570\u5668\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u5b66\u751f\uff0c\u800c\u5c5e\u4e8e Student \u7c7b\u7684\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a\u7c7b\u53d8\u91cf(class variables)\u3002\u800c\u59d3\u540d\u548c\u5206\u6570\u5c5e\u4e8e\u6bcf\u4e2a\u5b66\u751f\u5bf9\u8c61\u7684\uff0c\u6240\u4ee5\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf(instance variables)\uff0c\u4e5f\u88ab\u79f0\u4e3a\u5bf9\u8c61\u53d8\u91cf(object variables)\u3002 \u8fd9\u4e2a\u65b0 Student \u7c7b\u770b\u4e0a\u53bb\u5e94\u8be5\u662f\u8fd9\u6837\u7684: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u5916\uff0c\u4e0d\u5c5e\u4e8e\u5177\u4f53\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u91cc def __init__ ( self , name , score ): self . name = name self . score = score # \u6b64\u5904\u6709\u9519\u8bef number = number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) \u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u7684\u533a\u522b\u5f88\u5927\uff0c\u8bbf\u95ee\u65b9\u5f0f\u4e5f\u4e5f\u4e0d\u4e00\u6837\u3002 \u7c7b\u53d8\u91cf \uff1a \u7c7b\u53d8\u91cf\u5728\u6574\u4e2a\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u4e2d\u662f\u516c\u7528\u7684\u3002 \u7c7b\u53d8\u91cf\u5b9a\u4e49\u5728\u7c7b\u4e2d\u4e14\u5728\u51fd\u6570\u4f53\u4e4b\u5916\u3002\u8bbf\u95ee\u6216\u8c03\u7528\u7c7b\u53d8\u91cf\u7684\u6b63\u786e\u65b9\u5f0f\u662f\u7c7b\u540d.\u53d8\u91cf\u540d\u6216\u8005 self.__class__.\u53d8\u91cf\u540d \u3002 self.__class__ \u81ea\u52a8\u8fd4\u56de\u6bcf\u4e2a\u5bf9\u8c61\u7684\u7c7b\u540d\u3002 \u5b9e\u4f8b\u53d8\u91cf \uff1a\u5b9a\u4e49\u5728\u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\uff0c\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u3002\u8bbf\u95ee\u6216\u8c03\u7528\u5b9e\u4f8b\u53d8\u91cf\u7684\u6b63\u786e\u65b9\u5f0f\u662f \u5bf9\u8c61\u540d.\u53d8\u91cf\u540d \u6216\u8005 self.\u53d8\u91cf\u540d . \u6ce8\u610f\u5230\u4e0a\u8ff0 Student \u7c7b\u6709\u4e2a\u9519\u8bef\u6ca1? \u6211\u4eec\u8bd5\u56fe\u76f4\u63a5\u4f7f\u7528 number = number + 1 \u8c03\u7528\u5c5e\u4e8e\u7c7b\u7684\u53d8\u91cf number\u3002\u6b63\u786e\u7684\u65b9\u5f0f\u662f\u4f7f\u7528 Student.number \u6216 self.__class__.number \u8bbf\u95ee\u5c5e\u4e8e\u7c7b\u7684\u53d8\u91cf\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u624d\u662f\u6b63\u786e\u7684: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5b66\u751f\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf def __init__ ( self , name , score ): self . name = name self . score = score Student . number = Student . number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student ( \"John\" , 100 ) student2 = Student ( \"Lucy\" , 99 ) print ( Student . number ) # \u6253\u53702 print ( student1 . __class__ . number ) # \u6253\u53702","title":"2. \u7c7b\u53d8\u91cf(class variables)\u4e0e\u5b9e\u4f8b\u53d8\u91cf\uff08instance variables\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#3-\u7c7b\u65b9\u6cd5class-method","text":"\u6b63\u5982\u540c\u6709\u4e9b\u53d8\u91cf\u53ea\u5c5e\u4e8e\u7c7b\uff0c\u6709\u4e9b\u65b9\u6cd5\u4e5f\u53ea\u5c5e\u4e8e\u7c7b\uff0c\u4e0d\u5c5e\u4e8e\u5177\u4f53\u7684\u5bf9\u8c61\u3002\u4f60\u6709\u6ca1\u6709\u6ce8\u610f\u5230\u5c5e\u4e8e\u5bf9\u8c61\u7684\u65b9\u6cd5\u91cc\u9762\u90fd\u6709\u4e00\u4e2a self \u53c2\u6570, \u6bd4\u5982 __init__(self) , show(self) ? self \u662f\u6307\u5bf9\u8c61\u672c\u8eab\u3002 \u5c5e\u4e8e\u7c7b\u7684\u65b9\u6cd5\u4e0d\u4f7f\u7528 self \u53c2\u6570\uff0c \u800c\u4f7f\u7528\u53c2\u6570 cls \uff0c \u4ee3\u8868\u7c7b\u672c\u8eab \u3002\u53e6\u5916\u4e60\u60ef\u4e0a\u5bf9\u7c7b\u65b9\u6cd5\u6211\u4eec\u4f1a\u52a0\u4e0a @classmethod \u7684\u4fee\u9970\u7b26\u505a\u8bf4\u660e\u3002 \u540c\u6837\u62ff Student \u4e3a\u4f8b\u5b50\uff0c\u6211\u4eec\u4e0d\u7528 print \u51fd\u6570\u6253\u5370\u51fa\u5df2\u521b\u5efa\u5b66\u751f\u5bf9\u8c61\u7684\u6570\u91cf\uff0c\u800c\u662f\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u65b9\u6cd5\u6765\u6253\u5370\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u505a: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5b66\u751f\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf def __init__ ( self , name , score ): self . name = name self . score = score Student . number = Student . number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) # \u5b9a\u4e49\u7c7b\u65b9\u6cd5\uff0c\u6253\u5370\u5b66\u751f\u7684\u6570\u91cf @classmethod def total ( cls ): print ( \"Total: {0} \" . format ( cls . number )) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student ( \"John\" , 100 ) student2 = Student ( \"Lucy\" , 99 ) Student . total () # \u6253\u5370 Total: 2","title":"3. \u7c7b\u65b9\u6cd5(Class method)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#4-\u7c7b\u7684\u79c1\u6709\u5c5e\u6027private-attribute\u548c\u79c1\u6709\u65b9\u6cd5private-method","text":"\u7c7b\u91cc\u9762\u7684\u79c1\u6709\u5c5e\u6027\u548c\u79c1\u6709\u65b9\u6cd5\u4ee5\u53cc\u4e0b\u5212\u7ebf __ \u5f00\u5934\u3002\u79c1\u6709\u5c5e\u6027\u6216\u65b9\u6cd5\u4e0d\u80fd\u5728\u7c7b\u7684\u5916\u90e8\u88ab\u4f7f\u7528\u6216\u76f4\u63a5\u8bbf\u95ee\u3002\u6211\u4eec\u540c\u6837\u770b\u770b\u5b66\u751f\u7c7b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u628a\u5206\u6570 score \u53d8\u4e3a\u79c1\u6709\u5c5e\u6027\uff0c\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002 Text Only 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student: # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf, \u5176\u4e2d__score\u5c5e\u4e8e\u79c1\u6709\u53d8\u91cf def __init__(self, name, score): self.name = name self.__score = score # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show(self): print(\"Name: {}. Score: {}\".format(self.name, self.__score)) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student(\"John\", 100) student1.show() # \u6253\u5370 Name: John, Score: 100 student1.__score # \u6253\u5370\u51fa\u9519\uff0c\u8be5\u5c5e\u6027\u4e0d\u80fd\u4ece\u5916\u90e8\u8bbf\u95ee\u3002 \u5982\u679c\u4f60\u5c06 score \u53d8\u6210 __score , \u4f60\u5c06\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7 student1.__score \u83b7\u53d6\u8be5\u5b66\u751f\u7684\u5206\u6570\u3002 show() \u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u5206\u6570\uff0c\u662f\u56e0\u4e3a\u5b83\u662f\u7c7b\u91cc\u9762\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u79c1\u6709\u53d8\u91cf\u3002 \u79c1\u6709\u65b9\u6cd5\u662f\u540c\u6837\u7684\u9053\u7406\u3002\u5f53\u6211\u4eec\u628a show() \u53d8\u6210\uff0c __show() \u4f60\u5c06\u4e0d\u80fd\u518d\u901a\u8fc7 student1.__show() \u6253\u5370\u51fa\u5b66\u751f\u7684\u540d\u5b57\u548c\u5206\u6570\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u79c1\u6709\u65b9\u6cd5\u5fc5\u9700\u542b\u6709 self \u8fd9\u4e2a\u53c2\u6570\uff0c\u4e14\u628a\u5b83\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002 \u5728\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u4e2d,\u901a\u5e38\u60c5\u51b5\u4e0b\u5f88\u5c11\u8ba9\u5916\u90e8\u7c7b\u76f4\u63a5\u8bbf\u95ee\u7c7b\u5185\u90e8\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u800c\u662f\u5411\u5916\u90e8\u7c7b\u63d0\u4f9b\u4e00\u4e9b\u6309\u94ae,\u5bf9\u5176\u5185\u90e8\u7684\u6210\u5458\u76f8\u4e92\u8fdb\u884c\u8bbf\u95ee,\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u5b89\u5168\u6027\uff0c\u8fd9\u5c31\u662f \u5c01\u88c5 \u3002","title":"4. \u7c7b\u7684\u79c1\u6709\u5c5e\u6027(private attribute)\u548c\u79c1\u6709\u65b9\u6cd5(private method)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#5-property-\u7684\u7528\u6cd5\u4e0e\u795e\u5947\u4e4b\u5904","text":"\u5728\u4e0a\u8ff0\u6848\u4f8b\u4e2d\u7528\u6237\u4e0d\u80fd\u7528 student1.__score \u65b9\u5f0f\u8bbf\u95ee\u5b66\u751f\u5206\u6570\uff0c\u7136\u800c\u7528\u6237\u4e5f\u5c31\u77e5\u9053\u4e86 __score \u662f\u4e2a\u79c1\u6709\u53d8\u91cf\u3002\u6211\u4eec\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\u8ba9\u7528\u6237\u901a\u8fc7 student1.score \u6765\u8bbf\u95ee\u5b66\u751f\u5206\u6570\u800c\u7ee7\u7eed\u4fdd\u6301 __score \u79c1\u6709\u53d8\u91cf\u7684\u5c5e\u6027\u5462\uff1f\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u501f\u52a9 python \u7684 @property \u88c5\u9970\u5668\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5 score() , \u7136\u540e\u5229\u7528 @property \u628a\u8fd9\u4e2a\u51fd\u6570\u4f2a\u88c5\u6210\u5c5e\u6027\u3002 \u89c1\u4e0b\u9762\u4f8b\u5b50: Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf, \u5176\u4e2dscore\u5c5e\u4e8e\u79c1\u6709\u53d8\u91cf def __init__ ( self , name , score ): self . name = name self . __score = score # \u5229\u7528property\u88c5\u9970\u5668\u628a\u51fd\u6570\u4f2a\u88c5\u6210\u5c5e\u6027 @property def score ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . __score )) # \u5b9e\u4f8b\u5316\uff0c\u521b\u5efa\u5bf9\u8c61 student1 = Student ( \"John\" , 100 ) student1 . score # \u6253\u5370 Name: John. Score: 100 \u6ce8\u610f\uff1a \u4e00\u65e6\u7ed9\u51fd\u6570\u52a0\u4e0a\u4e00\u4e2a\u88c5\u9970\u5668@property,\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u4e0d\u7528\u52a0\u62ec\u53f7\u5c31\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u4e86","title":"5. @property \u7684\u7528\u6cd5\u4e0e\u795e\u5947\u4e4b\u5904"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#6-\u7c7b\u7684\u7ee7\u627finheritance","text":"\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u5e26\u6765\u7684\u6700\u5927\u597d\u5904\u4e4b\u4e00\u5c31\u662f\u4ee3\u7801\u7684\u91cd\u7528\uff0c\u5b9e\u73b0\u8fd9\u79cd\u91cd\u7528\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u901a\u8fc7\u7ee7\u627f( Inheritance )\u3002\u4f60\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b(Base class)\u6216\u7236\u7c7b(Parent class)\uff0c\u518d\u6309\u901a\u8fc7 class \u5b50\u7c7b\u540d\uff08\u7236\u7c7b\u540d)\u6765\u521b\u5efa\u5b50\u7c7b(Child class)\u3002 \u8fd9\u6837\u5b50\u7c7b\u5c31\u53ef\u4ee5\u4ece\u7236\u7c7b\u90a3\u91cc\u83b7\u5f97\u5176\u5df2\u6709\u7684\u5c5e\u6027\u4e0e\u65b9\u6cd5\uff0c\u8fd9\u79cd\u73b0\u8c61\u53eb\u505a\u7c7b\u7684\u7ee7\u627f\u3002 \u6211\u4eec\u518d\u770b\u53e6\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8001\u5e08\u548c\u5b66\u751f\u540c\u5c5e\u5b66\u6821\u6210\u5458\uff0c\u90fd\u6709\u59d3\u540d\u548c\u5e74\u9f84\u7684\u5c5e\u6027\uff0c\u7136\u800c\u8001\u5e08\u6709\u5de5\u8d44\u8fd9\u4e2a\u4e13\u6709\u5c5e\u6027\uff0c\u5b66\u751f\u6709\u5206\u6570\u8fd9\u4e2a\u4e13\u6709\u5c5e\u6027\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49 1 \u4e00\u4e2a\u5b66\u6821\u6210\u5458\u7236\u7c7b\uff0c2 \u4e2a\u5b50\u7c7b\u3002 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # \u521b\u5efa\u7236\u7c7b\u5b66\u6821\u6210\u5458SchoolMember class SchoolMember : def __init__ ( self , name , age ): self . name = name self . age = age def tell ( self ): # \u6253\u5370\u4e2a\u4eba\u4fe1\u606f print ( 'Name:\" {} \" Age:\" {} \"' . format ( self . name , self . age ), end = \" \" ) # \u521b\u5efa\u5b50\u7c7b\u8001\u5e08 Teacher class Teacher ( SchoolMember ): def __init__ ( self , name , age , salary ): SchoolMember . __init__ ( self , name , age ) # \u5229\u7528\u7236\u7c7b\u8fdb\u884c\u521d\u59cb\u5316 self . salary = salary # \u65b9\u6cd5\u91cd\u5199 def tell ( self ): SchoolMember . tell ( self ) print ( 'Salary: {} ' . format ( self . salary )) # \u521b\u5efa\u5b50\u7c7b\u5b66\u751fStudent class Student ( SchoolMember ): def __init__ ( self , name , age , score ): SchoolMember . __init__ ( self , name , age ) self . score = score def tell ( self ): SchoolMember . tell ( self ) print ( 'score: {} ' . format ( self . score )) teacher1 = Teacher ( \"John\" , 44 , \"$60000\" ) student1 = Student ( \"Mary\" , 12 , 99 ) teacher1 . tell () # \u6253\u5370 Name:\"John\" Age:\"44\" Salary: $60000 student1 . tell () # Name:\"Mary\" Age:\"12\" score: 99 \u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u4f60\u6ce8\u610f\u5230\u4ee5\u4e0b\u51e0\u70b9\u4e86\u5417\uff1f \u5728\u521b\u5efa\u5b50\u7c7b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u9700\u8981\u624b\u52a8\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570 __init__ \u6765\u5b8c\u6210\u5b50\u7c7b\u7684\u6784\u9020\u3002 \u5728\u5b50\u7c7b\u4e2d\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u52a0\u4e0a\u7236\u7c7b\u7684\u7c7b\u540d\u524d\u7f00\uff0c\u4e14\u9700\u8981\u5e26\u4e0a self \u53c2\u6570\u53d8\u91cf\u3002\u6bd4\u5982 SchoolMember.tell(self) , \u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u5173\u952e\u8bcd\u7b80\u5316\u4ee3\u7801 \u3002 \u5982\u679c\u5b50\u7c7b\u8c03\u7528\u4e86\u67d0\u4e2a\u65b9\u6cd5(\u5982 tell() )\u6216\u5c5e\u6027\uff0cPython \u4f1a\u5148\u5728\u5b50\u7c7b\u4e2d\u627e\uff0c\u5982\u679c\u627e\u5230\u4e86\u4f1a\u76f4\u63a5\u8c03\u7528\u3002\u5982\u679c\u627e\u4e0d\u5230\u624d\u4f1a\u53bb\u7236\u7c7b\u627e\u3002\u8fd9\u4e3a\u65b9\u6cd5\u91cd\u5199\u5e26\u6765\u4e86\u4fbf\u5229\u3002 \u5b9e\u9645 Python \u7f16\u7a0b\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u7236\u7c7b\uff0c\u539f\u7406\u662f\u4e00\u6837\u7684\u3002\u7b2c\u4e00\u6b65\u603b\u662f\u8981\u624b\u52a8\u8c03\u7528 __init__ \u6784\u9020\u51fd\u6570\u3002","title":"6. \u7c7b\u7684\u7ee7\u627f(Inheritance)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#7-super\u5173\u952e\u5b57\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5","text":"\u5728\u5b50\u7c7b\u5f53\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 super \u5173\u952e\u5b57\u6765\u76f4\u63a5\u8c03\u7528\u7236\u7c7b\u7684\u4e2d\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u7b80\u5316\u4ee3\u7801\u3002\u5728\u4e0b\u9762\u4f8b\u5b50\u4e2d\uff0c\u5b66\u751f\u5b50\u7c7b\u8c03\u7528\u4e86\u7236\u7c7b\u7684 tell()\u65b9\u6cd5\u3002 super().tell() \u7b49\u540c\u4e8e SchoolMember.tell(self) \u3002\u5f53\u4f60\u4f7f\u7528 Python super() \u5173\u952e\u5b57\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5\u65f6\u65f6\uff0c\u6ce8\u610f\u53bb\u6389\u62ec\u53f7\u91cc self \u8fd9\u4e2a\u53c2\u6570\u3002 Python 1 2 3 4 5 6 7 8 9 10 # \u521b\u5efa\u5b50\u7c7b\u5b66\u751fStudent class Student ( SchoolMember ): def __init__ ( self , name , age , score ): super () . __init__ ( name , age ) self . score = score def tell ( self ): super () . tell () # \u7b49\u540c\u4e8e SchoolMember.tell(self) print ( 'score: {} ' . format ( self . score ))","title":"7. super()\u5173\u952e\u5b57\u8c03\u7528\u7236\u7c7b\u65b9\u6cd5"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/0.%20%E7%AE%80%E4%BB%8B%20Python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/#8-\u9759\u6001\u53d8\u91cfstatic-variable\u548c\u9759\u6001\u65b9\u6cd5static-method","text":"\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u5c5e\u4e8e\u7c7b\u7684\u9759\u6001\u6210\u5458\uff0c\u5b83\u4eec\u4e0e\u666e\u901a\u7684\u5b9e\u4f8b\u53d8\u91cf\u548c\u5b9e\u4f8b\u65b9\u6cd5\u4e0d\u540c\uff0c\u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u53ea\u5c5e\u4e8e\u5b9a\u4e49\u5b83\u4eec\u7684\u7c7b\uff0c\u800c\u4e0d\u5c5e\u4e8e\u67d0\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u7531\u4e8e Python \u5c5e\u4e8e\u52a8\u6001\u8bed\u8a00\uff0c\u4e0d\u5b58\u5728\u7edd\u5bf9\u7684\u9759\u6001\u53d8\u91cf\uff0c \u6240\u4ee5\u7c7b\u53d8\u91cf(\u6bd4\u5982\u4e0b\u4f8b\u4e2d\u7684 number)\u4e00\u822c\u5c31\u662f\u9759\u6001\u53d8\u91cf\uff0c\u65e0\u9700\u663e\u793a\u5730\u58f0\u660e\u3002\u628a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u58f0\u660e\u4e3a\u9759\u6001\u65b9\u6cd5\uff0c \u53ef\u4ee5\u4f7f\u7528 @staticmethod \u88c5\u9970\u5668\uff0c\u5982\u4e0b\u4f8b\u4e2d\u7684 func1 \u65b9\u6cd5 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # \u521b\u5efa\u4e00\u4e2a\u5b66\u751f\u7c7b class Student : # number\u5c5e\u4e8e\u7c7b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u5916\uff0c\u4e0d\u5c5e\u4e8e\u5177\u4f53\u5b9e\u4f8b number = 0 # \u5b9a\u4e49\u5b66\u751f\u5c5e\u6027\uff0c\u521d\u59cb\u5316\u65b9\u6cd5 # name\u548cscore\u5c5e\u4e8e\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5b9a\u4e49\u5728\u65b9\u6cd5\u91cc def __init__ ( self , name , score ): self . name = name self . score = score Student . number = number + 1 # \u5b9a\u4e49\u6253\u5370\u5b66\u751f\u4fe1\u606f\u7684\u65b9\u6cd5 def show ( self ): print ( \"Name: {} . Score: {} \" . format ( self . name , self . score )) # \u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u4f7f\u7528cls\u548cself\u53c2\u6570\u8bbf\u95ee\u7c7b\u6216\u5b9e\u4f8b\u7684\u53d8\u91cf @staticmethod def func1 (): print ( \"this is static function!\" ) \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u90fd\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u548c\u5b9e\u4f8b\u5bf9\u8c61\u8fdb\u884c\u8bbf\u95ee, \u540c\u65f6\u4e0d\u50cf\u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u63a5\u6536 cls \u548c self \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002","title":"8. \u9759\u6001\u53d8\u91cf(static variable)\u548c\u9759\u6001\u65b9\u6cd5(static method)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/4%20Python%20%E4%B8%8E%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/GIL%28%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81%29/","text":"created: 2022-09-17T17:15:34 tags: [gil python] source: \u539f\u6587\u5730\u5740 author: Python \u4e2d\u7684 GIL(\u5168\u5c40\u89e3\u91ca\u5668\u9501)\u8be6\u89e3\u53ca\u89e3\u51b3 GIL \u7684\u51e0\u79cd\u65b9\u6848_\u83dc\u9e1f\u6559\u7a0b*\u2026*\u7684\u535a\u5ba2-CSDN \u535a\u5ba2_gil python \u00b6 \u5148\u770b\u4e00\u9053 GIL \u9762\u8bd5\u9898\uff1a \u63cf\u8ff0 Python GIL \u7684\u6982\u5ff5\uff0c \u4ee5\u53ca\u5b83\u5bf9 python \u591a\u7ebf\u7a0b \u7684\u5f71\u54cd\uff1f\u7f16\u5199\u4e00\u4e2a\u591a\u7ebf\u7a0b\u6293\u53d6\u7f51\u9875\u7684\u7a0b\u5e8f\uff0c\u5e76\u9610\u660e\u591a\u7ebf\u7a0b\u6293\u53d6\u7a0b\u5e8f\u662f\u5426\u53ef\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u5e76\u89e3\u91ca\u539f\u56e0\u3002 GIL\uff1a\u53c8\u53eb\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u90fd\u9700\u8981\u5148\u83b7\u53d6 GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u76ee\u7684\u662f\u89e3\u51b3\u591a\u7ebf\u7a0b\u540c\u65f6\u7ade\u4e89\u7a0b\u5e8f\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\u800c\u51fa\u73b0\u7684\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002 \u5b83\u5e76\u4e0d\u662f python \u8bed\u8a00\u7684\u7279\u6027\uff0c\u4ec5\u4ec5\u662f\u7531\u4e8e\u5386\u53f2\u7684\u539f\u56e0\u5728 CPython \u89e3\u91ca\u5668\u4e2d\u96be\u4ee5\u79fb\u9664\uff0c\u56e0\u4e3a python \u8bed\u8a00\u8fd0\u884c\u73af\u5883\u5927\u90e8\u5206\u9ed8\u8ba4\u5728 CPython \u89e3\u91ca\u5668\u4e2d\u3002 1. \u4e24\u4e2a\u4f8b\u5b50\u5206\u6790 GIL \u7684\u5f71\u54cd \u00b6 \u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u4e86\u89e3\u5355\u7ebf\u7a0b\u548c\u591a\u7ebf\u7a0b\u7684 cpu \u5360\u7528\u7387\uff1a \u6253\u5f00 Ubuntu \u7ec8\u7aef\u547d\u4ee4\uff1a\u8f93\u5165 htop\uff0c\u56de\u8f66\uff0c\u7ea2\u8272\u7bad\u5934\u6307\u5411\u7684 2 \u4ee3\u8868\u6b64\u65f6\u6211\u7684\u865a\u62df\u673a\u4e2d CPU \u6709\u4e24\u4e2a\u6838\u5fc3\u6570 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u4e86\u89e3\u5355\u7ebf\u7a0b\u6b7b\u5faa\u73af\u548c\u591a\u7ebf\u7a0b\u6b7b\u5faa\u73af\u7684 CPU \u5360\u7528\u7387\uff1a \u5355\u7ebf\u7a0b\u6b7b\u5faa\u73af.py\uff1a Python 1 2 while True : pass \u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u51fa\u73b0\u4ee5\u4e0b\u754c\u9762\uff1a \u6b64\u65f6\u65b0\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u8f93\u5165 htop\uff0c\u67e5\u770b CPU \u5360\u7528\u7387\uff0c\u5176\u4e2d\u4e00\u4e2a CPU \u5360\u7528\u7387\u51e0\u4e4e\u4e3a 100%\uff1a \u4e24\u4e2a\u7ebf\u7a0b\u6b7b\u5faa\u73af.py Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #coding=utf-8 import threading #\u5b50\u7ebf\u7a0b\u6b7b\u5faa\u73af def test (): while True : pass t1 = threading . Thread ( target = test ) t1 . start () #\u4e3b\u7ebf\u7a0b\u6b7b\u5faa\u73af, while True : pass \u6b64\u65f6\u65b0\u5f00\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8f93\u5165 htop \u67e5\u770b CPU \u5360\u7528\u7387\uff0c\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a CPU \u4efb\u4f55\u4e00\u4e2a\u5e76\u6ca1\u6709\u5168\u90e8\u5360\u6ee1\uff0c\u800c\u662f\u4ea4\u66ff\u6267\u884c\u7684\uff1a \u8fd9\u4e5f\u5c31\u9a8c\u8bc1\u4e86**\u591a\u7ebf\u7a0b\u4e0b\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u90fd\u9700\u8981\u5148\u83b7\u53d6 GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\u3002** \u7531\u4e8e GIL \u7684\u5b58\u5728\uff0c\u5373\u4f7f\u662f\u591a\u7ebf\u7a0b\uff0c\u4e8b\u5b9e\u4e0a\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u65e2\u7136\u8fd9\u6837\u591a\u7ebf\u7a0b\u7684\u8fd0\u884c\u6548\u7387\u4e0d\u5c31\u548c\u5355\u7ebf\u7a0b\u4e00\u6837\u4e86\u5417\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f7f\u7528\u591a\u7ebf\u7a0b\u5462\uff1f \u7531\u4e8e\u4ee5\u524d\u7684\u7535\u8111\u57fa\u672c\u90fd\u662f\u5355\u6838 CPU\uff0c\u591a\u7ebf\u7a0b\u548c\u5355\u7ebf\u7a0b\u51e0\u4e4e\u770b\u4e0d\u51fa\u5dee\u522b\uff0c\u53ef\u662f\u7531\u4e8e\u8ba1\u7b97\u673a\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u73b0\u5728\u7684\u7535\u8111\u51e0\u4e4e\u90fd\u662f\u591a\u6838 CPU \u4e86\uff0c\u6700\u5c11\u4e5f\u662f\u4e24\u4e2a\u6838\u5fc3\u6570\u7684\uff0c\u8fd9\u65f6\u5dee\u522b\u5c31\u51fa\u6765\u4e86\uff1a \u901a\u8fc7\u4e4b\u524d\u7684\u6848\u4f8b\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5373\u4f7f\u5728\u591a\u6838 CPU \u4e2d\uff0c\u591a\u7ebf\u7a0b\u540c\u4e00\u65f6\u523b\u4e5f\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u8fd9\u6837\u4e0d\u4ec5\u4e0d\u80fd\u5229\u7528\u591a\u6838 CPU \u7684\u4f18\u52bf\uff0c\u53cd\u800c\u7531\u4e8e\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u591a\u4e2a CPU \u4e0a\u662f\u4ea4\u66ff\u6267\u884c\u7684\uff0c\u5bfc\u81f4\u5728\u4e0d\u540c CPU \u4e0a\u5207\u6362\u65f6\u9020\u6210\u8d44\u6e90\u7684\u6d6a\u8d39\uff0c\u53cd\u800c\u4f1a\u66f4\u6162\u3002\u5373\u539f\u56e0\u662f\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u5b58\u5728\u4e00\u628a gil \u9501\uff0c\u5f53\u5728\u6267\u884c\u591a\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5185\u90e8\u4f1a\u4e89\u62a2 gil \u9501\uff0c\u8fd9\u4f1a\u9020\u6210\u5f53\u67d0\u4e00\u4e2a\u7ebf\u7a0b\u6ca1\u6709\u62a2\u5230\u9501\u7684\u65f6\u5019\u4f1a\u8ba9 cpu \u7b49\u5f85\uff0c\u8fdb\u800c\u4e0d\u80fd\u5408\u7406\u5229\u7528\u591a\u6838 cpu \u8d44\u6e90\u3002 \u4f8b\u5982\u5728\u4f7f\u7528\u591a\u7ebf\u7a0b\u6293\u53d6\u7f51\u9875\u5185\u5bb9\u65f6\uff0c\u9047\u5230 IO \u963b\u585e\u65f6\uff0c\u6b63\u5728\u6267\u884c\u7684\u7ebf\u7a0b\u4f1a\u6682\u65f6\u91ca\u653e GIL \u9501\uff0c\u8fd9\u65f6\u5176\u5b83\u7ebf\u7a0b\u4f1a\u5229\u7528\u8fd9\u4e2a\u7a7a\u9699\u65f6\u95f4\uff0c\u6267\u884c\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u591a\u7ebf\u7a0b\u6293\u53d6\u6bd4\u5355\u7ebf\u7a0b\u6293\u53d6\u6027\u80fd\u8981\u597d\u3002 2. \u8ba1\u7b97\u5bc6\u96c6\u578b\u4e0e IO \u5bc6\u96c6\u578b \u00b6 \u8bf4\u5230\u5728\u8fd9\u91cc\u8981\u5148\u4ecb\u7ecd\u4e24\u4e2a\u6982\u5ff5\uff1a \u8ba1\u7b97\u5bc6\u96c6\u578b\u548c IO \u5bc6\u96c6\u578b **\u8ba1\u7b97\u5bc6\u96c6\u578b\uff1a**\u8981\u8fdb\u884c\u5927\u91cf\u7684\u6570\u503c\u8ba1\u7b97\uff0c\u4f8b\u5982\u8fdb\u884c\u4e0a\u4ebf\u7684\u6570\u5b57\u8ba1\u7b97\u3001\u8ba1\u7b97\u5706\u5468\u7387\u3001\u5bf9\u89c6\u9891\u8fdb\u884c\u9ad8\u6e05\u89e3\u7801\u7b49\u7b49\u3002\u8fd9\u79cd\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u591a\u4efb\u52a1\u5b8c\u6210\uff0c\u4f46\u662f\u82b1\u8d39\u7684\u4e3b\u8981\u65f6\u95f4\u5728\u4efb\u52a1\u5207\u6362\u7684\u65f6\u95f4\uff0c\u6b64\u65f6 CPU \u6267\u884c\u4efb\u52a1\u7684\u6548\u7387\u6bd4\u8f83\u4f4e\u3002 **IO \u5bc6\u96c6\u578b\uff1a**\u6d89\u53ca\u5230\u7f51\u7edc\u8bf7\u6c42(time.sleep())\u3001\u78c1\u76d8 IO \u7684\u4efb\u52a1\u90fd\u662f IO \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7684\u7279\u70b9\u662f CPU \u6d88\u8017\u5f88\u5c11\uff0c\u4efb\u52a1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85 IO \u64cd\u4f5c\u5b8c\u6210\uff08\u56e0\u4e3a IO \u7684\u901f\u5ea6\u8fdc\u8fdc\u4f4e\u4e8e CPU \u548c\u5185\u5b58\u7684\u901f\u5ea6\uff09\u3002\u5bf9\u4e8e IO \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u4efb\u52a1\u8d8a\u591a\uff0cCPU \u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u9650\u5ea6\u3002 3. \u89e3\u51b3 GIL \u95ee\u9898\u7684\u65b9\u6848 \u00b6 \u89e3\u51b3 GIL \u95ee\u9898\u7684\u65b9\u6848\uff1a 1. \u4f7f\u7528\u5176\u5b83\u8bed\u8a00\uff0c\u4f8b\u5982 C,Java 2. \u4f7f\u7528\u5176\u5b83\u89e3\u91ca\u5668\uff0c\u5982 java \u7684\u89e3\u91ca\u5668 jython 3. \u4f7f\u7528\u591a\u8fdb\u7a0b \u7ebf\u7a0b\u91ca\u653e GIL \u9501\u7684\u60c5\u51b5\uff1a 1.\u5728 IO \u64cd\u4f5c\u7b49\u53ef\u80fd\u4f1a\u5f15\u8d77\u963b\u585e\u7684 system call \u4e4b\u524d,\u53ef\u4ee5\u6682\u65f6\u91ca\u653e GIL,\u4f46\u5728\u6267\u884c\u5b8c\u6bd5\u540e,\u5fc5\u987b\u91cd\u65b0\u83b7\u53d6 GIL\u3002 2.Python 3.x \u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653e GIL\uff09\u6216 Python 2.x\uff0ctickets \u8ba1\u6570\u8fbe\u5230 100\u3002 GIL \u9762\u8bd5\u9898\u53c2\u8003\u7b54\u6848\uff1a 1. Python \u8bed\u8a00\u548c GIL \u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u3002\u4ec5\u4ec5\u662f\u7531\u4e8e\u5386\u53f2\u539f\u56e0\u5728 Cpython \u865a\u62df\u673a(\u89e3\u91ca\u5668)\uff0c\u96be\u4ee5\u79fb\u9664 GIL\u3002 2. GIL\uff1a\u5168\u5c40\u89e3\u91ca\u5668\u9501\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u90fd\u9700\u8981\u5148\u83b7\u53d6 GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u4ee3\u7801\u3002 3. \u7ebf\u7a0b\u91ca\u653e GIL \u9501\u7684\u60c5\u51b5\uff1a \u5728 IO \u64cd\u4f5c\u7b49\u53ef\u80fd\u4f1a\u5f15\u8d77\u963b\u585e\u7684 system call \u4e4b\u524d,\u53ef\u4ee5\u6682\u65f6\u91ca\u653e GIL,\u4f46\u5728\u6267\u884c\u5b8c\u6bd5\u540e,\u5fc5\u987b\u91cd\u65b0\u83b7\u53d6 GIL Python 3.x \u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653e GIL\uff09\u6216 Python 2.x\uff0ctickets \u8ba1\u6570\u8fbe\u5230 100\u3002 4. Python \u4f7f\u7528\u591a\u8fdb\u7a0b\u662f\u53ef\u4ee5\u5229\u7528\u591a\u6838\u7684 CPU \u8d44\u6e90\u7684\u3002 5. \u591a\u7ebf\u7a0b\u722c\u53d6\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u56e0\u4e3a\u9047\u5230 IO \u963b\u585e\u4f1a\u81ea\u52a8\u91ca\u653e GIL \u9501\u3002","title":"GIL(\u5168\u5c40\u89e3\u91ca\u5668\u9501)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/4%20Python%20%E4%B8%8E%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/GIL%28%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81%29/#python-\u4e2d\u7684-gil\u5168\u5c40\u89e3\u91ca\u5668\u9501\u8be6\u89e3\u53ca\u89e3\u51b3-gil-\u7684\u51e0\u79cd\u65b9\u6848_\u83dc\u9e1f\u6559\u7a0b\u7684\u535a\u5ba2-csdn-\u535a\u5ba2_gil-python","text":"\u5148\u770b\u4e00\u9053 GIL \u9762\u8bd5\u9898\uff1a \u63cf\u8ff0 Python GIL \u7684\u6982\u5ff5\uff0c \u4ee5\u53ca\u5b83\u5bf9 python \u591a\u7ebf\u7a0b \u7684\u5f71\u54cd\uff1f\u7f16\u5199\u4e00\u4e2a\u591a\u7ebf\u7a0b\u6293\u53d6\u7f51\u9875\u7684\u7a0b\u5e8f\uff0c\u5e76\u9610\u660e\u591a\u7ebf\u7a0b\u6293\u53d6\u7a0b\u5e8f\u662f\u5426\u53ef\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u5e76\u89e3\u91ca\u539f\u56e0\u3002 GIL\uff1a\u53c8\u53eb\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u90fd\u9700\u8981\u5148\u83b7\u53d6 GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u76ee\u7684\u662f\u89e3\u51b3\u591a\u7ebf\u7a0b\u540c\u65f6\u7ade\u4e89\u7a0b\u5e8f\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\u800c\u51fa\u73b0\u7684\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898\u3002 \u5b83\u5e76\u4e0d\u662f python \u8bed\u8a00\u7684\u7279\u6027\uff0c\u4ec5\u4ec5\u662f\u7531\u4e8e\u5386\u53f2\u7684\u539f\u56e0\u5728 CPython \u89e3\u91ca\u5668\u4e2d\u96be\u4ee5\u79fb\u9664\uff0c\u56e0\u4e3a python \u8bed\u8a00\u8fd0\u884c\u73af\u5883\u5927\u90e8\u5206\u9ed8\u8ba4\u5728 CPython \u89e3\u91ca\u5668\u4e2d\u3002","title":"Python \u4e2d\u7684 GIL(\u5168\u5c40\u89e3\u91ca\u5668\u9501)\u8be6\u89e3\u53ca\u89e3\u51b3 GIL \u7684\u51e0\u79cd\u65b9\u6848_\u83dc\u9e1f\u6559\u7a0b*\u2026*\u7684\u535a\u5ba2-CSDN \u535a\u5ba2_gil python"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/4%20Python%20%E4%B8%8E%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/GIL%28%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81%29/#1-\u4e24\u4e2a\u4f8b\u5b50\u5206\u6790-gil-\u7684\u5f71\u54cd","text":"\u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u4e86\u89e3\u5355\u7ebf\u7a0b\u548c\u591a\u7ebf\u7a0b\u7684 cpu \u5360\u7528\u7387\uff1a \u6253\u5f00 Ubuntu \u7ec8\u7aef\u547d\u4ee4\uff1a\u8f93\u5165 htop\uff0c\u56de\u8f66\uff0c\u7ea2\u8272\u7bad\u5934\u6307\u5411\u7684 2 \u4ee3\u8868\u6b64\u65f6\u6211\u7684\u865a\u62df\u673a\u4e2d CPU \u6709\u4e24\u4e2a\u6838\u5fc3\u6570 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u4e86\u89e3\u5355\u7ebf\u7a0b\u6b7b\u5faa\u73af\u548c\u591a\u7ebf\u7a0b\u6b7b\u5faa\u73af\u7684 CPU \u5360\u7528\u7387\uff1a \u5355\u7ebf\u7a0b\u6b7b\u5faa\u73af.py\uff1a Python 1 2 while True : pass \u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u51fa\u73b0\u4ee5\u4e0b\u754c\u9762\uff1a \u6b64\u65f6\u65b0\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u8f93\u5165 htop\uff0c\u67e5\u770b CPU \u5360\u7528\u7387\uff0c\u5176\u4e2d\u4e00\u4e2a CPU \u5360\u7528\u7387\u51e0\u4e4e\u4e3a 100%\uff1a \u4e24\u4e2a\u7ebf\u7a0b\u6b7b\u5faa\u73af.py Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #coding=utf-8 import threading #\u5b50\u7ebf\u7a0b\u6b7b\u5faa\u73af def test (): while True : pass t1 = threading . Thread ( target = test ) t1 . start () #\u4e3b\u7ebf\u7a0b\u6b7b\u5faa\u73af, while True : pass \u6b64\u65f6\u65b0\u5f00\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8f93\u5165 htop \u67e5\u770b CPU \u5360\u7528\u7387\uff0c\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a CPU \u4efb\u4f55\u4e00\u4e2a\u5e76\u6ca1\u6709\u5168\u90e8\u5360\u6ee1\uff0c\u800c\u662f\u4ea4\u66ff\u6267\u884c\u7684\uff1a \u8fd9\u4e5f\u5c31\u9a8c\u8bc1\u4e86**\u591a\u7ebf\u7a0b\u4e0b\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u90fd\u9700\u8981\u5148\u83b7\u53d6 GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\u3002** \u7531\u4e8e GIL \u7684\u5b58\u5728\uff0c\u5373\u4f7f\u662f\u591a\u7ebf\u7a0b\uff0c\u4e8b\u5b9e\u4e0a\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u65e2\u7136\u8fd9\u6837\u591a\u7ebf\u7a0b\u7684\u8fd0\u884c\u6548\u7387\u4e0d\u5c31\u548c\u5355\u7ebf\u7a0b\u4e00\u6837\u4e86\u5417\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f7f\u7528\u591a\u7ebf\u7a0b\u5462\uff1f \u7531\u4e8e\u4ee5\u524d\u7684\u7535\u8111\u57fa\u672c\u90fd\u662f\u5355\u6838 CPU\uff0c\u591a\u7ebf\u7a0b\u548c\u5355\u7ebf\u7a0b\u51e0\u4e4e\u770b\u4e0d\u51fa\u5dee\u522b\uff0c\u53ef\u662f\u7531\u4e8e\u8ba1\u7b97\u673a\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u73b0\u5728\u7684\u7535\u8111\u51e0\u4e4e\u90fd\u662f\u591a\u6838 CPU \u4e86\uff0c\u6700\u5c11\u4e5f\u662f\u4e24\u4e2a\u6838\u5fc3\u6570\u7684\uff0c\u8fd9\u65f6\u5dee\u522b\u5c31\u51fa\u6765\u4e86\uff1a \u901a\u8fc7\u4e4b\u524d\u7684\u6848\u4f8b\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u5373\u4f7f\u5728\u591a\u6838 CPU \u4e2d\uff0c\u591a\u7ebf\u7a0b\u540c\u4e00\u65f6\u523b\u4e5f\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8fd0\u884c\uff0c\u8fd9\u6837\u4e0d\u4ec5\u4e0d\u80fd\u5229\u7528\u591a\u6838 CPU \u7684\u4f18\u52bf\uff0c\u53cd\u800c\u7531\u4e8e\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u591a\u4e2a CPU \u4e0a\u662f\u4ea4\u66ff\u6267\u884c\u7684\uff0c\u5bfc\u81f4\u5728\u4e0d\u540c CPU \u4e0a\u5207\u6362\u65f6\u9020\u6210\u8d44\u6e90\u7684\u6d6a\u8d39\uff0c\u53cd\u800c\u4f1a\u66f4\u6162\u3002\u5373\u539f\u56e0\u662f\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u5b58\u5728\u4e00\u628a gil \u9501\uff0c\u5f53\u5728\u6267\u884c\u591a\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5185\u90e8\u4f1a\u4e89\u62a2 gil \u9501\uff0c\u8fd9\u4f1a\u9020\u6210\u5f53\u67d0\u4e00\u4e2a\u7ebf\u7a0b\u6ca1\u6709\u62a2\u5230\u9501\u7684\u65f6\u5019\u4f1a\u8ba9 cpu \u7b49\u5f85\uff0c\u8fdb\u800c\u4e0d\u80fd\u5408\u7406\u5229\u7528\u591a\u6838 cpu \u8d44\u6e90\u3002 \u4f8b\u5982\u5728\u4f7f\u7528\u591a\u7ebf\u7a0b\u6293\u53d6\u7f51\u9875\u5185\u5bb9\u65f6\uff0c\u9047\u5230 IO \u963b\u585e\u65f6\uff0c\u6b63\u5728\u6267\u884c\u7684\u7ebf\u7a0b\u4f1a\u6682\u65f6\u91ca\u653e GIL \u9501\uff0c\u8fd9\u65f6\u5176\u5b83\u7ebf\u7a0b\u4f1a\u5229\u7528\u8fd9\u4e2a\u7a7a\u9699\u65f6\u95f4\uff0c\u6267\u884c\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u56e0\u6b64\u591a\u7ebf\u7a0b\u6293\u53d6\u6bd4\u5355\u7ebf\u7a0b\u6293\u53d6\u6027\u80fd\u8981\u597d\u3002","title":"1. \u4e24\u4e2a\u4f8b\u5b50\u5206\u6790 GIL \u7684\u5f71\u54cd"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/4%20Python%20%E4%B8%8E%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/GIL%28%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81%29/#2-\u8ba1\u7b97\u5bc6\u96c6\u578b\u4e0e-io-\u5bc6\u96c6\u578b","text":"\u8bf4\u5230\u5728\u8fd9\u91cc\u8981\u5148\u4ecb\u7ecd\u4e24\u4e2a\u6982\u5ff5\uff1a \u8ba1\u7b97\u5bc6\u96c6\u578b\u548c IO \u5bc6\u96c6\u578b **\u8ba1\u7b97\u5bc6\u96c6\u578b\uff1a**\u8981\u8fdb\u884c\u5927\u91cf\u7684\u6570\u503c\u8ba1\u7b97\uff0c\u4f8b\u5982\u8fdb\u884c\u4e0a\u4ebf\u7684\u6570\u5b57\u8ba1\u7b97\u3001\u8ba1\u7b97\u5706\u5468\u7387\u3001\u5bf9\u89c6\u9891\u8fdb\u884c\u9ad8\u6e05\u89e3\u7801\u7b49\u7b49\u3002\u8fd9\u79cd\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u591a\u4efb\u52a1\u5b8c\u6210\uff0c\u4f46\u662f\u82b1\u8d39\u7684\u4e3b\u8981\u65f6\u95f4\u5728\u4efb\u52a1\u5207\u6362\u7684\u65f6\u95f4\uff0c\u6b64\u65f6 CPU \u6267\u884c\u4efb\u52a1\u7684\u6548\u7387\u6bd4\u8f83\u4f4e\u3002 **IO \u5bc6\u96c6\u578b\uff1a**\u6d89\u53ca\u5230\u7f51\u7edc\u8bf7\u6c42(time.sleep())\u3001\u78c1\u76d8 IO \u7684\u4efb\u52a1\u90fd\u662f IO \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u8fd9\u7c7b\u4efb\u52a1\u7684\u7279\u70b9\u662f CPU \u6d88\u8017\u5f88\u5c11\uff0c\u4efb\u52a1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u7b49\u5f85 IO \u64cd\u4f5c\u5b8c\u6210\uff08\u56e0\u4e3a IO \u7684\u901f\u5ea6\u8fdc\u8fdc\u4f4e\u4e8e CPU \u548c\u5185\u5b58\u7684\u901f\u5ea6\uff09\u3002\u5bf9\u4e8e IO \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u4efb\u52a1\u8d8a\u591a\uff0cCPU \u6548\u7387\u8d8a\u9ad8\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u9650\u5ea6\u3002","title":"2. \u8ba1\u7b97\u5bc6\u96c6\u578b\u4e0e IO \u5bc6\u96c6\u578b"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/00%20%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Python/4%20Python%20%E4%B8%8E%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/GIL%28%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81%29/#3-\u89e3\u51b3-gil-\u95ee\u9898\u7684\u65b9\u6848","text":"\u89e3\u51b3 GIL \u95ee\u9898\u7684\u65b9\u6848\uff1a 1. \u4f7f\u7528\u5176\u5b83\u8bed\u8a00\uff0c\u4f8b\u5982 C,Java 2. \u4f7f\u7528\u5176\u5b83\u89e3\u91ca\u5668\uff0c\u5982 java \u7684\u89e3\u91ca\u5668 jython 3. \u4f7f\u7528\u591a\u8fdb\u7a0b \u7ebf\u7a0b\u91ca\u653e GIL \u9501\u7684\u60c5\u51b5\uff1a 1.\u5728 IO \u64cd\u4f5c\u7b49\u53ef\u80fd\u4f1a\u5f15\u8d77\u963b\u585e\u7684 system call \u4e4b\u524d,\u53ef\u4ee5\u6682\u65f6\u91ca\u653e GIL,\u4f46\u5728\u6267\u884c\u5b8c\u6bd5\u540e,\u5fc5\u987b\u91cd\u65b0\u83b7\u53d6 GIL\u3002 2.Python 3.x \u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653e GIL\uff09\u6216 Python 2.x\uff0ctickets \u8ba1\u6570\u8fbe\u5230 100\u3002 GIL \u9762\u8bd5\u9898\u53c2\u8003\u7b54\u6848\uff1a 1. Python \u8bed\u8a00\u548c GIL \u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u3002\u4ec5\u4ec5\u662f\u7531\u4e8e\u5386\u53f2\u539f\u56e0\u5728 Cpython \u865a\u62df\u673a(\u89e3\u91ca\u5668)\uff0c\u96be\u4ee5\u79fb\u9664 GIL\u3002 2. GIL\uff1a\u5168\u5c40\u89e3\u91ca\u5668\u9501\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u90fd\u9700\u8981\u5148\u83b7\u53d6 GIL\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u4ee3\u7801\u3002 3. \u7ebf\u7a0b\u91ca\u653e GIL \u9501\u7684\u60c5\u51b5\uff1a \u5728 IO \u64cd\u4f5c\u7b49\u53ef\u80fd\u4f1a\u5f15\u8d77\u963b\u585e\u7684 system call \u4e4b\u524d,\u53ef\u4ee5\u6682\u65f6\u91ca\u653e GIL,\u4f46\u5728\u6267\u884c\u5b8c\u6bd5\u540e,\u5fc5\u987b\u91cd\u65b0\u83b7\u53d6 GIL Python 3.x \u4f7f\u7528\u8ba1\u65f6\u5668\uff08\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u9608\u503c\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u91ca\u653e GIL\uff09\u6216 Python 2.x\uff0ctickets \u8ba1\u6570\u8fbe\u5230 100\u3002 4. Python \u4f7f\u7528\u591a\u8fdb\u7a0b\u662f\u53ef\u4ee5\u5229\u7528\u591a\u6838\u7684 CPU \u8d44\u6e90\u7684\u3002 5. \u591a\u7ebf\u7a0b\u722c\u53d6\u6bd4\u5355\u7ebf\u7a0b\u6027\u80fd\u6709\u63d0\u5347\uff0c\u56e0\u4e3a\u9047\u5230 IO \u963b\u585e\u4f1a\u81ea\u52a8\u91ca\u653e GIL \u9501\u3002","title":"3. \u89e3\u51b3 GIL \u95ee\u9898\u7684\u65b9\u6848"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/%E5%BF%85%E5%88%B782%E9%A2%98/","text":"\u5fc5\u523782 \u9898 \u00b6 1. \u5fc5\u4f1a \u00b6 2. Hard \u00b6 3. Medium \u00b6 \u4f60\u76f4\u63a5 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 # include <iostream> # include <unordered_map> using namespace std ; bool isValid ( string s ) { int n = s . size (); if ( n % 2 == 1 ) { return false ; } unordered_map < char , char > pairs = { { ')' , '(' }, { ']' , '[' }, { '}' , '{' } }; stack < char > stk ; for ( char ch : s ) { if ( pairs . count ( ch )) { if ( stk . empty () || stk . top () != pairs [ ch ]) { return false ; } stk . pop (); } else { stk . push ( ch ); } } return stk . empty (); } int main (){ string s = \"{{{}}}\" ; cout << isValid ( s ) << endl ; } \u4f60\u628a\u95ee\u9898\u8bf4\u51fa\u6765\u5427","title":"\u5fc5\u523782 \u9898"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/%E5%BF%85%E5%88%B782%E9%A2%98/#\u5fc5\u523782-\u9898","text":"","title":"\u5fc5\u523782 \u9898"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/%E5%BF%85%E5%88%B782%E9%A2%98/#1-\u5fc5\u4f1a","text":"","title":"1. \u5fc5\u4f1a"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/%E5%BF%85%E5%88%B782%E9%A2%98/#2-hard","text":"","title":"2. Hard"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/%E5%BF%85%E5%88%B782%E9%A2%98/#3-medium","text":"\u4f60\u76f4\u63a5 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 # include <iostream> # include <unordered_map> using namespace std ; bool isValid ( string s ) { int n = s . size (); if ( n % 2 == 1 ) { return false ; } unordered_map < char , char > pairs = { { ')' , '(' }, { ']' , '[' }, { '}' , '{' } }; stack < char > stk ; for ( char ch : s ) { if ( pairs . count ( ch )) { if ( stk . empty () || stk . top () != pairs [ ch ]) { return false ; } stk . pop (); } else { stk . push ( ch ); } } return stk . empty (); } int main (){ string s = \"{{{}}}\" ; cout << isValid ( s ) << endl ; } \u4f60\u628a\u95ee\u9898\u8bf4\u51fa\u6765\u5427","title":"3. Medium"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E4%BA%8C%E5%88%86%E5%9F%BA%E7%A1%80/","text":"\u7b97\u6cd5/\u4e8c\u5206 \u00b6 \u4e8c\u5206\u57fa\u7840 \u00b6 1. \u7b49\u4e8e x \u7684\u4e0b\u6807 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public : int search ( vector < int >& nums , int target ) { int left = 0 , right = nums . size () - 1 , mid ; while ( left <= right ){ mid = ( left + right ) / 2 ; if ( nums [ mid ] == target ){ return mid ; } else if ( nums [ mid ] < target ){ left = mid + 1 ; } else { right = mid - 1 ; } } return -1 ; } }; 2. \u5927\u4e8e\u7b49\u4e8e target \u7684\u6700\u5c0f\u4e0b\u6807 \u00b6 \u5411\u53f3\u27a1\ufe0f\u8fed\u4ee3 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : int searchInsert ( vector < int >& nums , int target ) { int left = 0 , right = nums . size () -1 ; int ans = -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( target <= nums [ mid ]){ ans = mid ; right = mid - 1 ; } else { left = mid + 1 ; } } return ans ; } }; 3. \u5c0f\u4e8e\u7b49\u4e8e target \u7684\u6700\u5927\u4e0b\u6807 \u00b6 \u5411\u5de6\u8fed\u4ee3 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : int mySqrt ( int x ) { long long left = 0 , right = 10000000 ; long long ans = 0 ; while ( left <= right ){ long long mid = ( left + right ) / 2 ; if ( x == mid * mid ){ return mid ; } else if ( x < mid * mid ){ right = mid -1 ;; } else { ans = mid ; left = mid + 1 ; } } return ans ; } };","title":"\u4e8c\u5206\u57fa\u7840"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E4%BA%8C%E5%88%86%E5%9F%BA%E7%A1%80/#\u7b97\u6cd5\u4e8c\u5206","text":"","title":"\u7b97\u6cd5/\u4e8c\u5206"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E4%BA%8C%E5%88%86%E5%9F%BA%E7%A1%80/#\u4e8c\u5206\u57fa\u7840","text":"","title":"\u4e8c\u5206\u57fa\u7840"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E4%BA%8C%E5%88%86%E5%9F%BA%E7%A1%80/#1-\u7b49\u4e8e-x-\u7684\u4e0b\u6807","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public : int search ( vector < int >& nums , int target ) { int left = 0 , right = nums . size () - 1 , mid ; while ( left <= right ){ mid = ( left + right ) / 2 ; if ( nums [ mid ] == target ){ return mid ; } else if ( nums [ mid ] < target ){ left = mid + 1 ; } else { right = mid - 1 ; } } return -1 ; } };","title":"1. \u7b49\u4e8e x \u7684\u4e0b\u6807"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E4%BA%8C%E5%88%86%E5%9F%BA%E7%A1%80/#2-\u5927\u4e8e\u7b49\u4e8e-target-\u7684\u6700\u5c0f\u4e0b\u6807","text":"\u5411\u53f3\u27a1\ufe0f\u8fed\u4ee3 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : int searchInsert ( vector < int >& nums , int target ) { int left = 0 , right = nums . size () -1 ; int ans = -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( target <= nums [ mid ]){ ans = mid ; right = mid - 1 ; } else { left = mid + 1 ; } } return ans ; } };","title":"2. \u5927\u4e8e\u7b49\u4e8e target \u7684\u6700\u5c0f\u4e0b\u6807"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E4%BA%8C%E5%88%86%E5%9F%BA%E7%A1%80/#3-\u5c0f\u4e8e\u7b49\u4e8e-target-\u7684\u6700\u5927\u4e0b\u6807","text":"\u5411\u5de6\u8fed\u4ee3 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : int mySqrt ( int x ) { long long left = 0 , right = 10000000 ; long long ans = 0 ; while ( left <= right ){ long long mid = ( left + right ) / 2 ; if ( x == mid * mid ){ return mid ; } else if ( x < mid * mid ){ right = mid -1 ;; } else { ans = mid ; left = mid + 1 ; } } return ans ; } };","title":"3. \u5c0f\u4e8e\u7b49\u4e8e target \u7684\u6700\u5927\u4e0b\u6807"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%A0%86%E6%8E%92%E5%BA%8F/","text":"\u7b97\u6cd5/\u5806 \u00b6 \u4e00\u3001\u56fe\u89e3 \u00b6 \u6838\u5fc3\uff0c \u5806\u8c03\u6574 \u00b6 \u6839\u636e\u5927\u9876\u5806\u7684\u6027\u8d28\uff0c \u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u6216\u8005\u7b49\u4e8e\u5b83\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u503c\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u5230\u6240\u6709\u5305\u542b\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u4e5f\u5c31\u662f \u975e\u53f6\u5b50\u8282\u70b9 \uff0c\u7136\u540e\u8c03\u6574\u4ed6\u4eec\u7684\u7236\u5b50\u5173\u7cfb\u3002 \u7b2c\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff1a len/2-1 \u4e8c\u3001\u5806\u6392 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 // // Created by sync on 2022/6/10. // #include <iostream> #include <vector> using namespace std ; void adjustHeap ( int data [], int len ) { if ( len <= 1 ) return ; int cur = len / 2 - 1 ; // \u7b2c\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 while ( cur >= 0 ){ int left = cur * 2 + 1 ; int right = cur * 2 + 2 ; if ( left < len && data [ left ] < data [ cur ]) swap ( data [ left ], data [ cur ]); if ( right < len && data [ right ] < data [ cur ]) swap ( data [ right ], data [ cur ]); cur -- ; } } void heapSort ( int data [], int len ) { for ( int i = 0 ; i < len ; i ++ ){ adjustHeap ( data + i , len - i ); } } int main () { int a [ 10 ] = { 1 , 5 , 4 , 3 , 7 , 6 , 9 , 10 , 8 , 2 }; heapSort ( a , 10 ); for ( int i = 0 ; i < 10 ; i ++ ) cout << a [ i ] << \" \" ; return 0 ; } \u4e09\u3001\u9898 \u00b6 215 \u6570\u7ec4\u4e2d\u7b2c K \u4e2a\u6700\u5927\u5143\u7d20","title":"\u5806\u6392\u5e8f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%A0%86%E6%8E%92%E5%BA%8F/#\u7b97\u6cd5\u5806","text":"","title":"\u7b97\u6cd5/\u5806"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%A0%86%E6%8E%92%E5%BA%8F/#\u4e00\u56fe\u89e3","text":"","title":"\u4e00\u3001\u56fe\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%A0%86%E6%8E%92%E5%BA%8F/#\u6838\u5fc3-\u5806\u8c03\u6574","text":"\u6839\u636e\u5927\u9876\u5806\u7684\u6027\u8d28\uff0c \u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u6216\u8005\u7b49\u4e8e\u5b83\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u503c\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u627e\u5230\u6240\u6709\u5305\u542b\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u4e5f\u5c31\u662f \u975e\u53f6\u5b50\u8282\u70b9 \uff0c\u7136\u540e\u8c03\u6574\u4ed6\u4eec\u7684\u7236\u5b50\u5173\u7cfb\u3002 \u7b2c\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff1a len/2-1","title":"\u6838\u5fc3\uff0c \u5806\u8c03\u6574"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%A0%86%E6%8E%92%E5%BA%8F/#\u4e8c\u5806\u6392","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 // // Created by sync on 2022/6/10. // #include <iostream> #include <vector> using namespace std ; void adjustHeap ( int data [], int len ) { if ( len <= 1 ) return ; int cur = len / 2 - 1 ; // \u7b2c\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9 while ( cur >= 0 ){ int left = cur * 2 + 1 ; int right = cur * 2 + 2 ; if ( left < len && data [ left ] < data [ cur ]) swap ( data [ left ], data [ cur ]); if ( right < len && data [ right ] < data [ cur ]) swap ( data [ right ], data [ cur ]); cur -- ; } } void heapSort ( int data [], int len ) { for ( int i = 0 ; i < len ; i ++ ){ adjustHeap ( data + i , len - i ); } } int main () { int a [ 10 ] = { 1 , 5 , 4 , 3 , 7 , 6 , 9 , 10 , 8 , 2 }; heapSort ( a , 10 ); for ( int i = 0 ; i < 10 ; i ++ ) cout << a [ i ] << \" \" ; return 0 ; }","title":"\u4e8c\u3001\u5806\u6392"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%A0%86%E6%8E%92%E5%BA%8F/#\u4e09\u9898","text":"215 \u6570\u7ec4\u4e2d\u7b2c K \u4e2a\u6700\u5927\u5143\u7d20","title":"\u4e09\u3001\u9898"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/","text":"","title":"\u5f52\u5e76\u6392\u5e8f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/00%20%E5%BF%85%E4%BC%9A%E6%A8%A1%E6%9D%BF/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/","text":"","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/101%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91/","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : bool chech ( TreeNode * p , TreeNode * q ){ if ( ! q && ! p ) return true ; if ( ! q || ! p ) return false ; return p -> val == q -> val && chech ( p -> left , q -> right ) && chech ( p -> right , q -> left ); } bool isSymmetric ( TreeNode * root ) { return chech ( root , root ); } };","title":"101 \u5bf9\u79f0\u4e8c\u53c9\u6811"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/102%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/BFS \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < vector < int >> levelOrder ( TreeNode * root ) { vector < vector < int >> rst ; queue < TreeNode *> Q ; if ( ! root ) return rst ; Q . push ( root ); while ( ! Q . empty ()){ int len = Q . size (); vector < int > layer ; for ( int i = 0 ; i < len ; i ++ ){ TreeNode * head = Q . front (); Q . pop (); layer . push_back ( head -> val ); if ( head -> left ) Q . push ( head -> left ); if ( head -> right ) Q . push ( head -> right ); } rst . push_back ( layer ); } return rst ; } };","title":"102 \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/102%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5bfs","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < vector < int >> levelOrder ( TreeNode * root ) { vector < vector < int >> rst ; queue < TreeNode *> Q ; if ( ! root ) return rst ; Q . push ( root ); while ( ! Q . empty ()){ int len = Q . size (); vector < int > layer ; for ( int i = 0 ; i < len ; i ++ ){ TreeNode * head = Q . front (); Q . pop (); layer . push_back ( head -> val ); if ( head -> left ) Q . push ( head -> left ); if ( head -> right ) Q . push ( head -> right ); } rst . push_back ( layer ); } return rst ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/BFS"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/103%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%94%AF%E9%BD%BF%E9%81%8D%E5%8E%86/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/BFS \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < vector < int >> zigzagLevelOrder ( TreeNode * root ) { vector < vector < int >> rst ; queue < TreeNode *> Q ; if ( ! root ) return rst ; int flag = 1 ; Q . push ( root ); while ( ! Q . empty ()){ int len = Q . size (); vector < int > layer ; for ( int i = 0 ; i < len ; i ++ ){ TreeNode * head = Q . front (); Q . pop (); layer . push_back ( head -> val ); if ( head -> left ) Q . push ( head -> left ); if ( head -> right ) Q . push ( head -> right ); } if ( flag > 0 ) rst . push_back ( layer ); else { reverse ( layer . begin (), layer . end ()); rst . push_back ( layer ); } flag = - flag ; } return rst ; } };","title":"103 \u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u952f\u9f7f\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/103%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%94%AF%E9%BD%BF%E9%81%8D%E5%8E%86/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5bfs","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < vector < int >> zigzagLevelOrder ( TreeNode * root ) { vector < vector < int >> rst ; queue < TreeNode *> Q ; if ( ! root ) return rst ; int flag = 1 ; Q . push ( root ); while ( ! Q . empty ()){ int len = Q . size (); vector < int > layer ; for ( int i = 0 ; i < len ; i ++ ){ TreeNode * head = Q . front (); Q . pop (); layer . push_back ( head -> val ); if ( head -> left ) Q . push ( head -> left ); if ( head -> right ) Q . push ( head -> right ); } if ( flag > 0 ) rst . push_back ( layer ); else { reverse ( layer . begin (), layer . end ()); rst . push_back ( layer ); } flag = - flag ; } return rst ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/BFS"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/105%20%E4%BB%8E%E5%89%8D%E5%BA%8F%E5%92%8C%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : TreeNode * buildTree ( vector < int >& preorder , vector < int >& inorder ) { if ( preorder . empty () || inorder . empty ()) return nullptr ; TreeNode * root = new TreeNode ( preorder [ 0 ]); for ( auto i = 0 ; i < inorder . size (); i ++ ){ if ( inorder [ i ] == root -> val ){ vector < int > pre_left ( preorder . begin () + 1 , preorder . begin () + i + 1 ); vector < int > in_left ( inorder . begin (), inorder . begin () + i ); vector < int > pre_right ( preorder . begin () + i + 1 , preorder . end ()); vector < int > in_right ( inorder . begin () + i + 1 , inorder . end ()); root -> left = buildTree ( pre_left , in_left ); root -> right = buildTree ( pre_right , in_right ); break ; } } return root ; } };","title":"105 \u4ece\u524d\u5e8f\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u9020\u4e8c\u53c9\u6811"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/105%20%E4%BB%8E%E5%89%8D%E5%BA%8F%E5%92%8C%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5\u9012\u5f52","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : TreeNode * buildTree ( vector < int >& preorder , vector < int >& inorder ) { if ( preorder . empty () || inorder . empty ()) return nullptr ; TreeNode * root = new TreeNode ( preorder [ 0 ]); for ( auto i = 0 ; i < inorder . size (); i ++ ){ if ( inorder [ i ] == root -> val ){ vector < int > pre_left ( preorder . begin () + 1 , preorder . begin () + i + 1 ); vector < int > in_left ( inorder . begin (), inorder . begin () + i ); vector < int > pre_right ( preorder . begin () + i + 1 , preorder . end ()); vector < int > in_right ( inorder . begin () + i + 1 , inorder . end ()); root -> left = buildTree ( pre_left , in_left ); root -> right = buildTree ( pre_right , in_right ); break ; } } return root ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/11%20%E7%9B%9B%E6%B0%B4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AE%B9%E5%99%A8/","text":"\u53cc\u6307\u9488\u8be6\u89e3 \u6b63\u786e\u6027\u8bc1\u660e C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public : int maxArea ( vector < int >& height ) { int n = height . size (); // int left = height[0], right = height[n-1]; int left = 0 , right = n -1 ; int ans = 0 ; while ( left < right ){ ans = max ( ans , ( right - left ) * min ( height [ left ], height [ right ])); if ( height [ left ] < height [ right ]) left ++ ; else right -- ; } return ans ; } };","title":"11 \u76db\u6c34\u6700\u591a\u7684\u5bb9\u5668"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/113%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20II/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u56de\u6eaf \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > temp ; vector < vector < int >> paths ; void dfs ( TreeNode * root , int res , int targetSum ){ temp . push_back ( root -> val ); res += root -> val ; if ( ! root -> left && ! root -> right ){ if ( res == targetSum ){ paths . push_back ( temp ); temp . pop_back (); res -= root -> val ; return ; } } if ( root -> left ) dfs ( root -> left , res , targetSum ); if ( root -> right ) dfs ( root -> right , res , targetSum ); res -= root -> val ; temp . pop_back (); return ; } vector < vector < int >> pathSum ( TreeNode * root , int targetSum ) { if ( ! root ) return paths ; dfs ( root , 0 , targetSum ); return paths ; } };","title":"113 \u8def\u5f84\u603b\u548c II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/113%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20II/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5\u56de\u6eaf","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > temp ; vector < vector < int >> paths ; void dfs ( TreeNode * root , int res , int targetSum ){ temp . push_back ( root -> val ); res += root -> val ; if ( ! root -> left && ! root -> right ){ if ( res == targetSum ){ paths . push_back ( temp ); temp . pop_back (); res -= root -> val ; return ; } } if ( root -> left ) dfs ( root -> left , res , targetSum ); if ( root -> right ) dfs ( root -> right , res , targetSum ); res -= root -> val ; temp . pop_back (); return ; } vector < vector < int >> pathSum ( TreeNode * root , int targetSum ) { if ( ! root ) return paths ; dfs ( root , 0 , targetSum ); return paths ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u56de\u6eaf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/114%20%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52 \u00b6 \u628a\u8be5\u95ee\u9898\u7406\u89e3\u4e3a\u5bf9\u5de6\u53f3\u5b50\u6811\u7684\u8c03\u6574 \u901a\u8fc7\u540e\u5e8f\u904d\u5386\u5c06\u95ee\u9898\u89c4\u6a21\u7f29\u5c0f \u5f53\u7b2c\u4e00\u6b21\u4e3a\u975e\u53f6\u5b50\u7ed3\u70b9\u65f6\uff0c\u5c06\u9762\u4e34 3 \u79cd\u60c5\u51b5 \u5de6\u53f3\u5b50\u6811\u90fd\u5b58\u5728\uff1a \u627e\u5230\u5de6\u5b50\u6811\u6700\u53f3\u8282\u70b9\uff0c\u5e76\u5c06\u53f3\u5b50\u6811\u63a5\u4e0a \u4ec5\u5b58\u5728\u5de6\u5b50\u6811\uff1a \u76f4\u63a5\u63a5\u5230\u6839\u8282\u70b9\u53f3\u8fb9 \u4ec5\u5b58\u5728\u53f3\u5b50\u6811 \uff1a \u4e0d\u505a\u5904\u7406 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : void flatten ( TreeNode * root ) { if ( root ){ flatten ( root -> left ); flatten ( root -> right ); if ( root -> left && root -> right ){ auto pre = root -> left ; while ( pre -> right ){ pre = pre -> right ; } pre -> right = root -> right ; root -> right = root -> left ; root -> left = nullptr ; } else if ( root -> left ){ root -> right = root -> left ; root -> left = 0 ; } } } };","title":"114  \u4e8c\u53c9\u6811\u5c55\u5f00\u4e3a\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/114%20%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5\u9012\u5f52","text":"\u628a\u8be5\u95ee\u9898\u7406\u89e3\u4e3a\u5bf9\u5de6\u53f3\u5b50\u6811\u7684\u8c03\u6574 \u901a\u8fc7\u540e\u5e8f\u904d\u5386\u5c06\u95ee\u9898\u89c4\u6a21\u7f29\u5c0f \u5f53\u7b2c\u4e00\u6b21\u4e3a\u975e\u53f6\u5b50\u7ed3\u70b9\u65f6\uff0c\u5c06\u9762\u4e34 3 \u79cd\u60c5\u51b5 \u5de6\u53f3\u5b50\u6811\u90fd\u5b58\u5728\uff1a \u627e\u5230\u5de6\u5b50\u6811\u6700\u53f3\u8282\u70b9\uff0c\u5e76\u5c06\u53f3\u5b50\u6811\u63a5\u4e0a \u4ec5\u5b58\u5728\u5de6\u5b50\u6811\uff1a \u76f4\u63a5\u63a5\u5230\u6839\u8282\u70b9\u53f3\u8fb9 \u4ec5\u5b58\u5728\u53f3\u5b50\u6811 \uff1a \u4e0d\u505a\u5904\u7406 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : void flatten ( TreeNode * root ) { if ( root ){ flatten ( root -> left ); flatten ( root -> right ); if ( root -> left && root -> right ){ auto pre = root -> left ; while ( pre -> right ){ pre = pre -> right ; } pre -> right = root -> right ; root -> right = root -> left ; root -> left = nullptr ; } else if ( root -> left ){ root -> right = root -> left ; root -> left = 0 ; } } } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/1143%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/","text":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : int longestCommonSubsequence ( string text1 , string text2 ) { int len1 = text1 . size (), len2 = text2 . size (); len1 ++ ; len2 ++ ; vector < vector < int >> dp ( len1 + 1 , vector < int > ( len2 + 1 , 0 )); for ( int i = 1 ; i < len1 ; i ++ ){ for ( int j = 1 ; j < len2 ; j ++ ){ if ( text1 [ i -1 ] == text2 [ j -1 ]){ dp [ i ][ j ] = dp [ i -1 ][ j -1 ] + 1 ; } else { dp [ i ][ j ] = max ( dp [ i -1 ][ j ], dp [ i ][ j -1 ]); } } } return dp [ len1 -1 ][ len2 -1 ]; } };","title":"1143 \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/1143%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/#\u7b97\u6cd5dp-\u7b97\u6cd5\u4e8c\u7ef4dp","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : int longestCommonSubsequence ( string text1 , string text2 ) { int len1 = text1 . size (), len2 = text2 . size (); len1 ++ ; len2 ++ ; vector < vector < int >> dp ( len1 + 1 , vector < int > ( len2 + 1 , 0 )); for ( int i = 1 ; i < len1 ; i ++ ){ for ( int j = 1 ; j < len2 ; j ++ ){ if ( text1 [ i -1 ] == text2 [ j -1 ]){ dp [ i ][ j ] = dp [ i -1 ][ j -1 ] + 1 ; } else { dp [ i ][ j ] = max ( dp [ i -1 ][ j ], dp [ i ][ j -1 ]); } } } return dp [ len1 -1 ][ len2 -1 ]; } };","title":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/128%20%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/","text":"\u7b97\u6cd5/hash \u00b6 \u4e24\u8d9f\u626b\u63cf\uff0c\u54c8\u5e0c\u8868 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Solution { public : int longestConsecutive ( vector < int >& nums ) { unordered_set < int > set ; for ( int i = 0 ; i < nums . size (); i ++ ){ set . insert ( nums [ i ]); } int cnt = 0 ; for ( int i = 0 ; i < nums . size (); i ++ ){ if ( set . find ( nums [ i ] -1 ) == set . end ()){ int start = nums [ i ]; int end = nums [ i ]; while ( set . find ( end ) != set . end ()){ end ++ ; } cnt = max ( cnt , end - start ); } } return cnt ; } };","title":"128 \u6700\u957f\u8fde\u7eed\u5e8f\u5217"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/128%20%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/#\u7b97\u6cd5hash","text":"\u4e24\u8d9f\u626b\u63cf\uff0c\u54c8\u5e0c\u8868 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Solution { public : int longestConsecutive ( vector < int >& nums ) { unordered_set < int > set ; for ( int i = 0 ; i < nums . size (); i ++ ){ set . insert ( nums [ i ]); } int cnt = 0 ; for ( int i = 0 ; i < nums . size (); i ++ ){ if ( set . find ( nums [ i ] -1 ) == set . end ()){ int start = nums [ i ]; int end = nums [ i ]; while ( set . find ( end ) != set . end ()){ end ++ ; } cnt = max ( cnt , end - start ); } } return cnt ; } };","title":"\u7b97\u6cd5/hash"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/129%20%E6%B1%82%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int ans = 0 ; void dfs ( TreeNode * root , int res ){ if ( ! root ) return ; if ( ! root -> left && ! root -> right ){ ans = ans + res * 10 + root -> val ; return ; } res = res * 10 + root -> val ; dfs ( root -> left , res ); dfs ( root -> right , res ); } int sumNumbers ( TreeNode * root ) { dfs ( root , 0 ); return ans ; } };","title":"129 \u6c42\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u6570\u5b57\u4e4b\u548c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/129%20%E6%B1%82%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5\u9012\u5f52","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int ans = 0 ; void dfs ( TreeNode * root , int res ){ if ( ! root ) return ; if ( ! root -> left && ! root -> right ){ ans = ans + res * 10 + root -> val ; return ; } res = res * 10 + root -> val ; dfs ( root -> left , res ); dfs ( root -> right , res ); } int sumNumbers ( TreeNode * root ) { dfs ( root , 0 ); return ans ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/142%20%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8%20II/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u5feb\u6162\u6307\u9488 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * detectCycle ( ListNode * head ) { if ( head == NULL || head -> next == NULL ) return NULL ; int N = 0 ; ListNode * fast , * slow ; slow = head ; fast = head -> next ; while ( fast != slow ){ slow = slow -> next ; N ++ ; if ( fast && fast -> next ) fast = fast -> next -> next ; else break ; } if ( fast == NULL || fast -> next == NULL ) return NULL ; if ( fast == slow ){ slow = head ; fast = head -> next ; while ( N -- ){ fast = fast -> next ; } while ( fast != slow ){ fast = fast -> next ; slow = slow -> next ; } return slow ; } return NULL ; } };","title":"142 \u73af\u5f62\u94fe\u8868 II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/142%20%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8%20II/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u5feb\u6162\u6307\u9488","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode(int x) : val(x), next(NULL) {} * }; */ class Solution { public : ListNode * detectCycle ( ListNode * head ) { if ( head == NULL || head -> next == NULL ) return NULL ; int N = 0 ; ListNode * fast , * slow ; slow = head ; fast = head -> next ; while ( fast != slow ){ slow = slow -> next ; N ++ ; if ( fast && fast -> next ) fast = fast -> next -> next ; else break ; } if ( fast == NULL || fast -> next == NULL ) return NULL ; if ( fast == slow ){ slow = head ; fast = head -> next ; while ( N -- ){ fast = fast -> next ; } while ( fast != slow ){ fast = fast -> next ; slow = slow -> next ; } return slow ; } return NULL ; } };","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u5feb\u6162\u6307\u9488"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/143%20%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9 #\u7b97\u6cd5/\u94fe\u8868\u9006\u5e8f #\u7b97\u6cd5/\u5408\u5e76\u94fe\u8868 \u00b6 876 \u94fe\u8868\u7684\u4e2d\u95f4\u8282\u70b9 92 \u53cd\u8f6c\u94fe\u8868 II \u5bfb\u627e\u94fe\u8868\u4e2d\u70b9 + \u94fe\u8868\u9006\u5e8f + \u5408\u5e76\u94fe\u8868 \u6ce8\u610f\u5230\u76ee\u6807\u94fe\u8868\u5373\u4e3a\u5c06\u539f\u94fe\u8868\u7684\u5de6\u534a\u7aef\u548c\u53cd\u8f6c\u540e\u7684\u53f3\u534a\u7aef\u5408\u5e76\u540e\u7684\u7ed3\u679c\u3002 \u8fd9\u6837\u6211\u4eec\u7684\u4efb\u52a1\u5373\u53ef\u5212\u5206\u4e3a\u4e09\u6b65\uff1a \u627e\u5230\u539f\u94fe\u8868\u7684\u4e2d\u70b9\uff08\u53c2\u8003\u300c876. \u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9\u300d\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5feb\u6162\u6307\u9488\u6765 O(N)O(N) \u5730\u627e\u5230\u94fe\u8868\u7684\u4e2d\u95f4\u8282\u70b9\u3002 \u5c06\u539f\u94fe\u8868\u7684\u53f3\u534a\u7aef\u53cd\u8f6c\uff08\u53c2\u8003\u300c206. \u53cd\u8f6c\u94fe\u8868\u300d\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u6cd5\u5b9e\u73b0\u94fe\u8868\u7684\u53cd\u8f6c\u3002 \u5c06\u539f\u94fe\u8868\u7684\u4e24\u7aef\u5408\u5e76\u3002 \u56e0\u4e3a\u4e24\u94fe\u8868\u957f\u5ea6\u76f8\u5dee\u4e0d\u8d85\u8fc7 1\uff0c\u56e0\u6b64\u76f4\u63a5\u5408\u5e76\u5373\u53ef\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 class Solution { public : void reorderList ( ListNode * head ) { if ( head == nullptr ) { return ; } ListNode * mid = middleNode ( head ); ListNode * l1 = head ; ListNode * l2 = mid -> next ; mid -> next = nullptr ; l2 = reverseList ( l2 ); mergeList ( l1 , l2 ); } ListNode * middleNode ( ListNode * head ) { ListNode * slow = head ; ListNode * fast = head ; while ( fast -> next != nullptr && fast -> next -> next != nullptr ) { slow = slow -> next ; fast = fast -> next -> next ; } return slow ; } ListNode * reverseList ( ListNode * head ) { ListNode * prev = nullptr ; ListNode * curr = head ; while ( curr != nullptr ) { ListNode * nextTemp = curr -> next ; curr -> next = prev ; prev = curr ; curr = nextTemp ; } return prev ; } void mergeList ( ListNode * l1 , ListNode * l2 ) { ListNode * l1_tmp ; ListNode * l2_tmp ; while ( l1 != nullptr && l2 != nullptr ) { l1_tmp = l1 -> next ; l2_tmp = l2 -> next ; l1 -> next = l2 ; l1 = l1_tmp ; l2 -> next = l1 ; l2 = l2_tmp ; } } }; C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : void show ( ListNode * head ){ while ( head ){ cout << head -> val << \" \" ; head = head -> next ; } cout << endl ; } void reorderList ( ListNode * head ) { ListNode * l1 ; ListNode * l2 ; ListNode * mid ; l1 = head ; mid = getMid ( head ); l2 = mid -> next ; mid -> next = nullptr ; l2 = reverse ( l2 ); show ( l1 ); show ( l2 ); merge ( l1 , l2 ); } ListNode * getMid ( ListNode * head ){ ListNode * fast ; ListNode * slow ; fast = slow = head ; while ( ! fast -> next && ! fast -> next -> next ){ slow = slow -> next ; fast = fast -> next -> next ; } return slow ; } ListNode * reverse ( ListNode * head ){ if ( ! head || ! head -> next ) return head ; ListNode * last = reverse ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return last ; } void merge ( ListNode * l1 , ListNode * l2 ) { ListNode * l1_tmp ; ListNode * l2_tmp ; while ( l1 != nullptr && l2 != nullptr ) { l1_tmp = l1 -> next ; l2_tmp = l2 -> next ; l1 -> next = l2 ; l1 = l1_tmp ; l2 -> next = l1 ; l2 = l2_tmp ; } } };","title":"143 \u91cd\u6392\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/143%20%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9-\u7b97\u6cd5\u94fe\u8868\u9006\u5e8f-\u7b97\u6cd5\u5408\u5e76\u94fe\u8868","text":"876 \u94fe\u8868\u7684\u4e2d\u95f4\u8282\u70b9 92 \u53cd\u8f6c\u94fe\u8868 II \u5bfb\u627e\u94fe\u8868\u4e2d\u70b9 + \u94fe\u8868\u9006\u5e8f + \u5408\u5e76\u94fe\u8868 \u6ce8\u610f\u5230\u76ee\u6807\u94fe\u8868\u5373\u4e3a\u5c06\u539f\u94fe\u8868\u7684\u5de6\u534a\u7aef\u548c\u53cd\u8f6c\u540e\u7684\u53f3\u534a\u7aef\u5408\u5e76\u540e\u7684\u7ed3\u679c\u3002 \u8fd9\u6837\u6211\u4eec\u7684\u4efb\u52a1\u5373\u53ef\u5212\u5206\u4e3a\u4e09\u6b65\uff1a \u627e\u5230\u539f\u94fe\u8868\u7684\u4e2d\u70b9\uff08\u53c2\u8003\u300c876. \u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9\u300d\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5feb\u6162\u6307\u9488\u6765 O(N)O(N) \u5730\u627e\u5230\u94fe\u8868\u7684\u4e2d\u95f4\u8282\u70b9\u3002 \u5c06\u539f\u94fe\u8868\u7684\u53f3\u534a\u7aef\u53cd\u8f6c\uff08\u53c2\u8003\u300c206. \u53cd\u8f6c\u94fe\u8868\u300d\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u6cd5\u5b9e\u73b0\u94fe\u8868\u7684\u53cd\u8f6c\u3002 \u5c06\u539f\u94fe\u8868\u7684\u4e24\u7aef\u5408\u5e76\u3002 \u56e0\u4e3a\u4e24\u94fe\u8868\u957f\u5ea6\u76f8\u5dee\u4e0d\u8d85\u8fc7 1\uff0c\u56e0\u6b64\u76f4\u63a5\u5408\u5e76\u5373\u53ef\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 class Solution { public : void reorderList ( ListNode * head ) { if ( head == nullptr ) { return ; } ListNode * mid = middleNode ( head ); ListNode * l1 = head ; ListNode * l2 = mid -> next ; mid -> next = nullptr ; l2 = reverseList ( l2 ); mergeList ( l1 , l2 ); } ListNode * middleNode ( ListNode * head ) { ListNode * slow = head ; ListNode * fast = head ; while ( fast -> next != nullptr && fast -> next -> next != nullptr ) { slow = slow -> next ; fast = fast -> next -> next ; } return slow ; } ListNode * reverseList ( ListNode * head ) { ListNode * prev = nullptr ; ListNode * curr = head ; while ( curr != nullptr ) { ListNode * nextTemp = curr -> next ; curr -> next = prev ; prev = curr ; curr = nextTemp ; } return prev ; } void mergeList ( ListNode * l1 , ListNode * l2 ) { ListNode * l1_tmp ; ListNode * l2_tmp ; while ( l1 != nullptr && l2 != nullptr ) { l1_tmp = l1 -> next ; l2_tmp = l2 -> next ; l1 -> next = l2 ; l1 = l1_tmp ; l2 -> next = l1 ; l2 = l2_tmp ; } } }; C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : void show ( ListNode * head ){ while ( head ){ cout << head -> val << \" \" ; head = head -> next ; } cout << endl ; } void reorderList ( ListNode * head ) { ListNode * l1 ; ListNode * l2 ; ListNode * mid ; l1 = head ; mid = getMid ( head ); l2 = mid -> next ; mid -> next = nullptr ; l2 = reverse ( l2 ); show ( l1 ); show ( l2 ); merge ( l1 , l2 ); } ListNode * getMid ( ListNode * head ){ ListNode * fast ; ListNode * slow ; fast = slow = head ; while ( ! fast -> next && ! fast -> next -> next ){ slow = slow -> next ; fast = fast -> next -> next ; } return slow ; } ListNode * reverse ( ListNode * head ){ if ( ! head || ! head -> next ) return head ; ListNode * last = reverse ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return last ; } void merge ( ListNode * l1 , ListNode * l2 ) { ListNode * l1_tmp ; ListNode * l2_tmp ; while ( l1 != nullptr && l2 != nullptr ) { l1_tmp = l1 -> next ; l2_tmp = l2 -> next ; l1 -> next = l2 ; l1 = l1_tmp ; l2 -> next = l1 ; l2 = l2_tmp ; } } };","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9 #\u7b97\u6cd5/\u94fe\u8868\u9006\u5e8f #\u7b97\u6cd5/\u5408\u5e76\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 \u00b6 \u7b97\u6cd5/\u540e\u5e8f\u904d\u5386 \u00b6 \u7b97\u6cd5/\u9012\u5f52 \u00b6 \u7b97\u6cd5/\u8fed\u4ee3 \u00b6 \u7b97\u6cd5/\u4e2d\u5e8f\u904d\u5386 \u00b6 \u9012\u5f52 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > res ; void dfs ( TreeNode * root ){ if ( ! root ) return ; dfs ( root -> left ); dfs ( root -> right ); res . push_back ( root -> val ); } vector < int > postorderTraversal ( TreeNode * root ) { dfs ( root ); return res ; } }; \u8fed\u4ee3\u6cd5 \u00b6 \u6808\u904d\u5386\u7248\u672c\uff1a \u5efa\u8bae\u5148\u505a\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u53ea\u662f\u5728\u4e2d\u5e8f\u4e0a\u591a\u4e86\u4e00\u4e9b\u64cd\u4f5c\u3002 \u4e0e\u4e2d\u5e8f\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a - \u4e2d\u5e8f\u904d\u5386\u4e2d\uff0c\u4ece\u6808\u4e2d\u5f39\u51fa\u7684\u8282\u70b9\uff0c\u5176\u5de6\u5b50\u6811\u662f\u8bbf\u95ee\u5b8c\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u8be5\u8282\u70b9\uff0c\u7136\u540e\u63a5\u4e0b\u6765\u8bbf\u95ee\u53f3\u5b50\u6811\u3002 - \u540e\u5e8f\u904d\u5386\u4e2d\uff0c\u4ece\u6808\u4e2d\u5f39\u51fa\u7684\u8282\u70b9\uff0c \u6211\u4eec\u53ea\u80fd\u786e\u5b9a\u5176\u5de6\u5b50\u6811\u80af\u5b9a\u8bbf\u95ee\u5b8c\u4e86\uff0c\u4f46\u662f\u65e0\u6cd5\u786e\u5b9a\u53f3\u5b50\u6811\u662f\u5426\u8bbf\u95ee\u8fc7\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u540e\u5e8f\u904d\u5386\u4e2d\uff0c\u5f15\u5165\u4e86\u4e00\u4e2aprev\u6765\u8bb0\u5f55\u5386\u53f2\u8bbf\u95ee\u8bb0\u5f55\u3002 - \u5f53\u8bbf\u95ee\u5b8c\u4e00\u68f5\u5b50\u6811\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7528prev\u6307\u5411\u8be5\u8282\u70b9\u3002 - \u8fd9\u6837\uff0c\u5728\u56de\u6eaf\u5230\u7236\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u636eprev\u662f\u6307\u5411\u5de6\u5b50\u8282\u70b9\uff0c\u8fd8\u662f\u53f3\u5b50\u8282\u70b9\uff0c\u6765\u5224\u65ad\u7236\u8282\u70b9\u7684\u8bbf\u95ee\u60c5\u51b5\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > postorderTraversal ( TreeNode * root ) { vector < int > res ; stack < TreeNode *> s ; if ( ! root ) return res ; TreeNode * pre = nullptr ; while ( ! s . empty () || root ){ while ( root ){ s . push ( root ); root = root -> left ; } root = s . top (); s . pop (); if ( ! root -> right || pre = root -> right ){ res . push_back ( root -> val ); pre = root ; root = nullptr ; } else { s . push ( root -> right ); root = root -> right ; } } return res ; } };","title":"145 \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/#\u7b97\u6cd5\u4e8c\u53c9\u6811","text":"","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/#\u7b97\u6cd5\u540e\u5e8f\u904d\u5386","text":"","title":"\u7b97\u6cd5/\u540e\u5e8f\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/#\u7b97\u6cd5\u9012\u5f52","text":"","title":"\u7b97\u6cd5/\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/#\u7b97\u6cd5\u8fed\u4ee3","text":"","title":"\u7b97\u6cd5/\u8fed\u4ee3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/#\u7b97\u6cd5\u4e2d\u5e8f\u904d\u5386","text":"","title":"\u7b97\u6cd5/\u4e2d\u5e8f\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/#\u9012\u5f52","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > res ; void dfs ( TreeNode * root ){ if ( ! root ) return ; dfs ( root -> left ); dfs ( root -> right ); res . push_back ( root -> val ); } vector < int > postorderTraversal ( TreeNode * root ) { dfs ( root ); return res ; } };","title":"\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/145%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86/#\u8fed\u4ee3\u6cd5","text":"\u6808\u904d\u5386\u7248\u672c\uff1a \u5efa\u8bae\u5148\u505a\u4e2d\u5e8f\u904d\u5386\uff0c\u540e\u5e8f\u53ea\u662f\u5728\u4e2d\u5e8f\u4e0a\u591a\u4e86\u4e00\u4e9b\u64cd\u4f5c\u3002 \u4e0e\u4e2d\u5e8f\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a - \u4e2d\u5e8f\u904d\u5386\u4e2d\uff0c\u4ece\u6808\u4e2d\u5f39\u51fa\u7684\u8282\u70b9\uff0c\u5176\u5de6\u5b50\u6811\u662f\u8bbf\u95ee\u5b8c\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u8be5\u8282\u70b9\uff0c\u7136\u540e\u63a5\u4e0b\u6765\u8bbf\u95ee\u53f3\u5b50\u6811\u3002 - \u540e\u5e8f\u904d\u5386\u4e2d\uff0c\u4ece\u6808\u4e2d\u5f39\u51fa\u7684\u8282\u70b9\uff0c \u6211\u4eec\u53ea\u80fd\u786e\u5b9a\u5176\u5de6\u5b50\u6811\u80af\u5b9a\u8bbf\u95ee\u5b8c\u4e86\uff0c\u4f46\u662f\u65e0\u6cd5\u786e\u5b9a\u53f3\u5b50\u6811\u662f\u5426\u8bbf\u95ee\u8fc7\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5728\u540e\u5e8f\u904d\u5386\u4e2d\uff0c\u5f15\u5165\u4e86\u4e00\u4e2aprev\u6765\u8bb0\u5f55\u5386\u53f2\u8bbf\u95ee\u8bb0\u5f55\u3002 - \u5f53\u8bbf\u95ee\u5b8c\u4e00\u68f5\u5b50\u6811\u7684\u65f6\u5019\uff0c\u6211\u4eec\u7528prev\u6307\u5411\u8be5\u8282\u70b9\u3002 - \u8fd9\u6837\uff0c\u5728\u56de\u6eaf\u5230\u7236\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u636eprev\u662f\u6307\u5411\u5de6\u5b50\u8282\u70b9\uff0c\u8fd8\u662f\u53f3\u5b50\u8282\u70b9\uff0c\u6765\u5224\u65ad\u7236\u8282\u70b9\u7684\u8bbf\u95ee\u60c5\u51b5\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > postorderTraversal ( TreeNode * root ) { vector < int > res ; stack < TreeNode *> s ; if ( ! root ) return res ; TreeNode * pre = nullptr ; while ( ! s . empty () || root ){ while ( root ){ s . push ( root ); root = root -> left ; } root = s . top (); s . pop (); if ( ! root -> right || pre = root -> right ){ res . push_back ( root -> val ); pre = root ; root = nullptr ; } else { s . push ( root -> right ); root = root -> right ; } } return res ; } };","title":"\u8fed\u4ee3\u6cd5"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/146%20LRU%20%E7%BC%93%E5%AD%98/","text":"\u7b97\u6cd5/\u6a21\u62df \u00b6 c++\u9898\u89e3 - \u53ea\u5199\u4e24\u4e2a\u56de\u8c03\u51fd\u6570 remove \u548c delete \u00b6 get(key)\uff1a \u9996\u5148\u7528\u54c8\u5e0c\u8868\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a - \u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de-1\uff1b - \u5982\u679ckey\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u5bf9\u5e94\u7684value\uff0c\u540c\u65f6\u5c06key\u5bf9\u5e94\u7684\u8282\u70b9\u653e\u5230\u53cc\u94fe\u8868\u7684\u6700\u5de6\u4fa7\uff1b remove(); insert(); put(key, value)\uff1a \u9996\u5148\u7528\u54c8\u5e0c\u8868\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a - \u5982\u679ckey\u5b58\u5728\uff0c\u5219\u4fee\u6539\u5bf9\u5e94\u7684value\uff0c\u540c\u65f6\u5c06key\u5bf9\u5e94\u7684\u8282\u70b9\u653e\u5230\u53cc\u94fe\u8868\u7684\u6700\u5de6\u4fa7\uff1b remove(); insert(); - \u5982\u679ckey\u4e0d\u5b58\u5728\uff1a \u5c24\u5176\u8981\u6ce8\u610f\u66f4\u65b0\u54c8\u5e0c\u8868 - \u5982\u679c\u7f13\u5b58\u5df2\u6ee1\uff0c\u5219\u5220\u9664\u53cc\u94fe\u8868\u6700\u53f3\u4fa7\u7684\u8282\u70b9\uff08\u4e0a\u6b21\u4f7f\u7528\u65f6\u95f4\u6700\u8001\u7684\u8282\u70b9\uff09\uff0c \u66f4\u65b0\u54c8\u5e0c\u8868\uff1b - \u5426\u5219\uff0c\u63d2\u5165(key, value)\uff1a\u540c\u65f6\u5c06key\u5bf9\u5e94\u7684\u8282\u70b9\u653e\u5230\u53cc\u94fe\u8868\u7684\u6700\u5de6\u4fa7\uff0c \u66f4\u65b0\u54c8\u5e0c\u8868\uff1b C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 // // Created by sync on 2022/6/9. // # include <vector> # include <unordered_map> using namespace std ; struct Node { int key , val ; Node * left ; Node * right ; Node () : key ( 0 ), val ( 0 ), left ( nullptr ), right ( nullptr ) {} Node ( int _key , int _val ) : key ( _key ), val ( _val ), left ( nullptr ), right ( nullptr ) {} }; class LRUCache { private : unordered_map < int , Node *> cache ; int capacity ; int size ; Node * head ; Node * tail ; public : LRUCache ( int _capacity ){ capacity = _capacity ; size = 0 ; head = new Node (); tail = new Node (); head -> right = tail ; tail -> left = head ; } int get ( int key ){ if ( cache . find ( key ) == cache . end ()) return -1 ; auto addr = cache [ key ]; // update LinkList remove ( addr ); insert ( addr ); return addr -> val ; } void put ( int key , int value ){ if ( cache . find ( key ) != cache . end ()){ auto addr = cache [ key ]; // update LinkList remove ( addr ); insert ( addr ); addr -> val = value ; } else { size ++ ; if ( size > capacity ){ auto lastNode = tail -> left ; remove ( lastNode ); cache . erase ( lastNode -> key ); delete lastNode ; size -- ; } auto newNode = new Node ( key , value ); insert ( newNode ); cache [ key ] = newNode ; // \u603b\u662f\u4f1a\u5fd8\u8bb0 } } void remove ( Node * addr ){ addr -> left -> right = addr -> right ; addr -> right -> left = addr -> left ; } void insert ( Node * addr ){ addr -> left = head ; addr -> right = head -> right ; head -> right -> left = addr ; head -> right = addr ; } };","title":"146 LRU \u7f13\u5b58"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/146%20LRU%20%E7%BC%93%E5%AD%98/#\u7b97\u6cd5\u6a21\u62df","text":"c++\u9898\u89e3","title":"\u7b97\u6cd5/\u6a21\u62df"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/146%20LRU%20%E7%BC%93%E5%AD%98/#--\u53ea\u5199\u4e24\u4e2a\u56de\u8c03\u51fd\u6570-remove-\u548c-delete","text":"get(key)\uff1a \u9996\u5148\u7528\u54c8\u5e0c\u8868\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a - \u5982\u679ckey\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de-1\uff1b - \u5982\u679ckey\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u5bf9\u5e94\u7684value\uff0c\u540c\u65f6\u5c06key\u5bf9\u5e94\u7684\u8282\u70b9\u653e\u5230\u53cc\u94fe\u8868\u7684\u6700\u5de6\u4fa7\uff1b remove(); insert(); put(key, value)\uff1a \u9996\u5148\u7528\u54c8\u5e0c\u8868\u5224\u65adkey\u662f\u5426\u5b58\u5728\uff1a - \u5982\u679ckey\u5b58\u5728\uff0c\u5219\u4fee\u6539\u5bf9\u5e94\u7684value\uff0c\u540c\u65f6\u5c06key\u5bf9\u5e94\u7684\u8282\u70b9\u653e\u5230\u53cc\u94fe\u8868\u7684\u6700\u5de6\u4fa7\uff1b remove(); insert(); - \u5982\u679ckey\u4e0d\u5b58\u5728\uff1a \u5c24\u5176\u8981\u6ce8\u610f\u66f4\u65b0\u54c8\u5e0c\u8868 - \u5982\u679c\u7f13\u5b58\u5df2\u6ee1\uff0c\u5219\u5220\u9664\u53cc\u94fe\u8868\u6700\u53f3\u4fa7\u7684\u8282\u70b9\uff08\u4e0a\u6b21\u4f7f\u7528\u65f6\u95f4\u6700\u8001\u7684\u8282\u70b9\uff09\uff0c \u66f4\u65b0\u54c8\u5e0c\u8868\uff1b - \u5426\u5219\uff0c\u63d2\u5165(key, value)\uff1a\u540c\u65f6\u5c06key\u5bf9\u5e94\u7684\u8282\u70b9\u653e\u5230\u53cc\u94fe\u8868\u7684\u6700\u5de6\u4fa7\uff0c \u66f4\u65b0\u54c8\u5e0c\u8868\uff1b C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 // // Created by sync on 2022/6/9. // # include <vector> # include <unordered_map> using namespace std ; struct Node { int key , val ; Node * left ; Node * right ; Node () : key ( 0 ), val ( 0 ), left ( nullptr ), right ( nullptr ) {} Node ( int _key , int _val ) : key ( _key ), val ( _val ), left ( nullptr ), right ( nullptr ) {} }; class LRUCache { private : unordered_map < int , Node *> cache ; int capacity ; int size ; Node * head ; Node * tail ; public : LRUCache ( int _capacity ){ capacity = _capacity ; size = 0 ; head = new Node (); tail = new Node (); head -> right = tail ; tail -> left = head ; } int get ( int key ){ if ( cache . find ( key ) == cache . end ()) return -1 ; auto addr = cache [ key ]; // update LinkList remove ( addr ); insert ( addr ); return addr -> val ; } void put ( int key , int value ){ if ( cache . find ( key ) != cache . end ()){ auto addr = cache [ key ]; // update LinkList remove ( addr ); insert ( addr ); addr -> val = value ; } else { size ++ ; if ( size > capacity ){ auto lastNode = tail -> left ; remove ( lastNode ); cache . erase ( lastNode -> key ); delete lastNode ; size -- ; } auto newNode = new Node ( key , value ); insert ( newNode ); cache [ key ] = newNode ; // \u603b\u662f\u4f1a\u5fd8\u8bb0 } } void remove ( Node * addr ){ addr -> left -> right = addr -> right ; addr -> right -> left = addr -> left ; } void insert ( Node * addr ){ addr -> left = head ; addr -> right = head -> right ; head -> right -> left = addr ; head -> right = addr ; } };","title":"- \u53ea\u5199\u4e24\u4e2a\u56de\u8c03\u51fd\u6570 remove \u548c delete"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/148%20%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/","text":"\u7b97\u6cd5/\u5206\u6cbb #\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u6392\u5e8f #\u7b97\u6cd5/\u94fe\u8868\u5408\u5e76 #\u7b97\u6cd5/\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9 \u00b6 - \u5f52\u5e76\u6392\u5e8f \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * merge ( ListNode * l1 , ListNode * l2 ){ ListNode * dummy = new ListNode ( 0 ); ListNode * cur = dummy ; while ( l1 != nullptr && l2 != nullptr ){ if ( l1 -> val <= l2 -> val ){ cur -> next = l1 ; l1 = l1 -> next ; } else { cur -> next = l2 ; l2 = l2 -> next ; } cur = cur -> next ; } if ( l1 ) cur -> next = l1 ; if ( l2 ) cur -> next = l2 ; return dummy -> next ; } ListNode * divide ( ListNode * head , ListNode * tail ){ if ( ! head ) return head ; if ( head -> next == tail ){ head -> next = nullptr ; return head ; } auto fast = head , slow = head ; while ( fast != tail ){ fast = fast -> next ; slow = slow -> next ; if ( fast != tail ){ fast = fast -> next ; } } auto mid = slow ; return merge ( divide ( head , mid ), divide ( mid , tail )); } ListNode * sortList ( ListNode * head ) { return divide ( head , nullptr ); } };","title":"148 \u6392\u5e8f\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/148%20%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/#\u7b97\u6cd5\u5206\u6cbb-\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u6392\u5e8f-\u7b97\u6cd5\u94fe\u8868\u5408\u5e76-\u7b97\u6cd5\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9","text":"","title":"\u7b97\u6cd5/\u5206\u6cbb #\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u6392\u5e8f #\u7b97\u6cd5/\u94fe\u8868\u5408\u5e76 #\u7b97\u6cd5/\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/148%20%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/#--\u5f52\u5e76\u6392\u5e8f","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * merge ( ListNode * l1 , ListNode * l2 ){ ListNode * dummy = new ListNode ( 0 ); ListNode * cur = dummy ; while ( l1 != nullptr && l2 != nullptr ){ if ( l1 -> val <= l2 -> val ){ cur -> next = l1 ; l1 = l1 -> next ; } else { cur -> next = l2 ; l2 = l2 -> next ; } cur = cur -> next ; } if ( l1 ) cur -> next = l1 ; if ( l2 ) cur -> next = l2 ; return dummy -> next ; } ListNode * divide ( ListNode * head , ListNode * tail ){ if ( ! head ) return head ; if ( head -> next == tail ){ head -> next = nullptr ; return head ; } auto fast = head , slow = head ; while ( fast != tail ){ fast = fast -> next ; slow = slow -> next ; if ( fast != tail ){ fast = fast -> next ; } } auto mid = slow ; return merge ( divide ( head , mid ), divide ( mid , tail )); } ListNode * sortList ( ListNode * head ) { return divide ( head , nullptr ); } };","title":"- \u5f52\u5e76\u6392\u5e8f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/15%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/","text":"\u7b97\u6cd5/\u53cc\u6307\u9488 #\u7b97\u6cd5/\u53bb\u9664\u91cd\u590d\u89e3 \u00b6 \u5206\u6790 \u00b6 \u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u53bb\u9664\u91cd\u590d\u89e3\u3002 \u7b97\u6cd5\u6d41\u7a0b\uff1a \u7279\u5224\uff0c\u5bf9\u4e8e\u6570\u7ec4\u957f\u5ea6 n\uff0c\u5982\u679c\u6570\u7ec4\u4e3a null \u6216\u8005\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e 3\uff0c\u8fd4\u56de [] \u3002 \u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002 \u904d\u5386\u6392\u5e8f\u540e\u6570\u7ec4\uff1a \u82e5 nums[i]>0nums[i]>0\uff1a\u56e0\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\uff0c\u6240\u4ee5\u540e\u9762\u4e0d\u53ef\u80fd\u6709\u4e09\u4e2a\u6570\u52a0\u548c\u7b49\u4e8e 0\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002 \u5bf9\u4e8e\u91cd\u590d\u5143\u7d20\uff1a\u8df3\u8fc7\uff0c\u907f\u514d\u51fa\u73b0\u91cd\u590d\u89e3 \u4ee4\u5de6\u6307\u9488 L=i+1L=i+1\uff0c\u53f3\u6307\u9488 R=n-1R=n\u22121\uff0c\u5f53 L<RL<R \u65f6\uff0c\u6267\u884c\u5faa\u73af\uff1a \u5f53 nums[i]+nums[L]+nums[R]==0 \uff0c\u6267\u884c\u5faa\u73af\uff0c \u5224\u65ad\u5de6\u754c\u548c\u53f3\u754c\u662f\u5426\u548c\u4e0b\u4e00\u4f4d\u7f6e\u91cd\u590d\uff0c\u53bb\u9664\u91cd\u590d\u89e3\u3002 \u5e76\u540c\u65f6\u5c06 L,R \u79fb\u5230\u4e0b\u4e00\u4f4d\u7f6e\uff0c\u5bfb\u627e\u65b0\u7684\u89e3 \u82e5\u548c\u5927\u4e8e 0\uff0c\u8bf4\u660e nums[R]\u592a\u5927\uff0cR \u5de6\u79fb \u82e5\u548c\u5c0f\u4e8e 0\uff0c\u8bf4\u660e nums[L] \u592a\u5c0f\uff0cL \u53f3\u79fb C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 class Solution { public : vector < vector < int >> threeSum ( vector < int >& nums ) { vector < vector < int >> res ; sort ( nums . begin (), nums . end ()); if ( nums . size () < 3 || nums [ 0 ] > 0 ) return res ; int cur = 0 , left , right ; while ( cur <= nums . size () -3 && nums [ cur ] <= 0 ){ left = cur + 1 ; right = nums . size () -1 ; while ( left < right ){ if ( nums [ cur ] + nums [ left ] + nums [ right ] == 0 ){ res . push_back ({ nums [ cur ], nums [ left ], nums [ right ]}); while ( left < right && nums [ left ] == nums [ left + 1 ]){ left ++ ; } while ( left < right && nums [ right -1 ] == nums [ right ]){ right -- ; } left = left + 1 ; right = right -1 ; } else if ( nums [ cur ] + nums [ left ] + nums [ right ] > 0 ){ right -- ; } else { left ++ ; } } while ( cur <= nums . size () -3 && nums [ cur ] == nums [ cur + 1 ]) cur ++ ; cur ++ ; } return res ; } };","title":"15 \u4e09\u6570\u4e4b\u548c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/15%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/#\u7b97\u6cd5\u53cc\u6307\u9488-\u7b97\u6cd5\u53bb\u9664\u91cd\u590d\u89e3","text":"","title":"\u7b97\u6cd5/\u53cc\u6307\u9488 #\u7b97\u6cd5/\u53bb\u9664\u91cd\u590d\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/15%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/#\u5206\u6790","text":"\u672c\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u53bb\u9664\u91cd\u590d\u89e3\u3002 \u7b97\u6cd5\u6d41\u7a0b\uff1a \u7279\u5224\uff0c\u5bf9\u4e8e\u6570\u7ec4\u957f\u5ea6 n\uff0c\u5982\u679c\u6570\u7ec4\u4e3a null \u6216\u8005\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e 3\uff0c\u8fd4\u56de [] \u3002 \u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002 \u904d\u5386\u6392\u5e8f\u540e\u6570\u7ec4\uff1a \u82e5 nums[i]>0nums[i]>0\uff1a\u56e0\u4e3a\u5df2\u7ecf\u6392\u5e8f\u597d\uff0c\u6240\u4ee5\u540e\u9762\u4e0d\u53ef\u80fd\u6709\u4e09\u4e2a\u6570\u52a0\u548c\u7b49\u4e8e 0\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u3002 \u5bf9\u4e8e\u91cd\u590d\u5143\u7d20\uff1a\u8df3\u8fc7\uff0c\u907f\u514d\u51fa\u73b0\u91cd\u590d\u89e3 \u4ee4\u5de6\u6307\u9488 L=i+1L=i+1\uff0c\u53f3\u6307\u9488 R=n-1R=n\u22121\uff0c\u5f53 L<RL<R \u65f6\uff0c\u6267\u884c\u5faa\u73af\uff1a \u5f53 nums[i]+nums[L]+nums[R]==0 \uff0c\u6267\u884c\u5faa\u73af\uff0c \u5224\u65ad\u5de6\u754c\u548c\u53f3\u754c\u662f\u5426\u548c\u4e0b\u4e00\u4f4d\u7f6e\u91cd\u590d\uff0c\u53bb\u9664\u91cd\u590d\u89e3\u3002 \u5e76\u540c\u65f6\u5c06 L,R \u79fb\u5230\u4e0b\u4e00\u4f4d\u7f6e\uff0c\u5bfb\u627e\u65b0\u7684\u89e3 \u82e5\u548c\u5927\u4e8e 0\uff0c\u8bf4\u660e nums[R]\u592a\u5927\uff0cR \u5de6\u79fb \u82e5\u548c\u5c0f\u4e8e 0\uff0c\u8bf4\u660e nums[L] \u592a\u5c0f\uff0cL \u53f3\u79fb C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 class Solution { public : vector < vector < int >> threeSum ( vector < int >& nums ) { vector < vector < int >> res ; sort ( nums . begin (), nums . end ()); if ( nums . size () < 3 || nums [ 0 ] > 0 ) return res ; int cur = 0 , left , right ; while ( cur <= nums . size () -3 && nums [ cur ] <= 0 ){ left = cur + 1 ; right = nums . size () -1 ; while ( left < right ){ if ( nums [ cur ] + nums [ left ] + nums [ right ] == 0 ){ res . push_back ({ nums [ cur ], nums [ left ], nums [ right ]}); while ( left < right && nums [ left ] == nums [ left + 1 ]){ left ++ ; } while ( left < right && nums [ right -1 ] == nums [ right ]){ right -- ; } left = left + 1 ; right = right -1 ; } else if ( nums [ cur ] + nums [ left ] + nums [ right ] > 0 ){ right -- ; } else { left ++ ; } } while ( cur <= nums . size () -3 && nums [ cur ] == nums [ cur + 1 ]) cur ++ ; cur ++ ; } return res ; } };","title":"\u5206\u6790"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/165%20%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7/","text":"\u7b97\u6cd5/\u53cc\u6307\u9488 #\u7b97\u6cd5/\u5b57\u7b26\u4e32 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 class Solution { public : int str_int ( string s ){ int n = s . size (); int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ){ sum = sum * 10 + ( s [ i ] - '0' ); } return sum ; } int compareVersion ( string version1 , string version2 ) { int left_start = 0 , left_end = 0 ; int right_start = 0 , right_end = 0 ; int rst = 0 ; while ( left_end < version1 . size () || right_end < version2 . size ()){ while ( left_end < version1 . size () && version1 [ left_end ] != '.' ) left_end ++ ; while ( right_end < version2 . size () && version2 [ right_end ] != '.' ) right_end ++ ; int left_sum = left_start < version1 . size () ? str_int ( version1 . substr ( left_start , left_end - left_start )) : 0 ; int right_sum = right_start < version2 . size () ? str_int ( version2 . substr ( right_start , right_end - right_start )) : 0 ; if ( left_sum < right_sum ){ rst = -1 ; break ; } if ( left_sum > right_sum ){ rst = 1 ; break ; } left_start = ++ left_end ; right_start = ++ right_end ; } return rst ; } };","title":"165 \u6bd4\u8f83\u7248\u672c\u53f7"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/165%20%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7/#\u7b97\u6cd5\u53cc\u6307\u9488-\u7b97\u6cd5\u5b57\u7b26\u4e32","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 class Solution { public : int str_int ( string s ){ int n = s . size (); int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ){ sum = sum * 10 + ( s [ i ] - '0' ); } return sum ; } int compareVersion ( string version1 , string version2 ) { int left_start = 0 , left_end = 0 ; int right_start = 0 , right_end = 0 ; int rst = 0 ; while ( left_end < version1 . size () || right_end < version2 . size ()){ while ( left_end < version1 . size () && version1 [ left_end ] != '.' ) left_end ++ ; while ( right_end < version2 . size () && version2 [ right_end ] != '.' ) right_end ++ ; int left_sum = left_start < version1 . size () ? str_int ( version1 . substr ( left_start , left_end - left_start )) : 0 ; int right_sum = right_start < version2 . size () ? str_int ( version2 . substr ( right_start , right_end - right_start )) : 0 ; if ( left_sum < right_sum ){ rst = -1 ; break ; } if ( left_sum > right_sum ){ rst = 1 ; break ; } left_start = ++ left_end ; right_start = ++ right_end ; } return rst ; } };","title":"\u7b97\u6cd5/\u53cc\u6307\u9488 #\u7b97\u6cd5/\u5b57\u7b26\u4e32"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/189%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/","text":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f #\u7b97\u6cd5/\u73af\u72b6\u66ff\u6362 \u00b6 \u73af\u72b6\u66ff\u6362 \u8d85\u65f6 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public : void rotate ( vector < int >& nums , int k ) { int len = nums . size (); k %= len ; while ( k -- ){ int temp = nums [ len -1 ]; for ( int i = len -2 ; i >= 0 ; i -- ){ nums [ i + 1 ] = nums [ i ]; } nums [ 0 ] = temp ; } } }; \u7ffb\u8f6c \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public : void reverse ( vector < int >& nums , int start , int end ) { while ( start < end ) { swap ( nums [ start ], nums [ end ]); start += 1 ; end -= 1 ; } } void rotate ( vector < int >& nums , int k ) { k %= nums . size (); reverse ( nums , 0 , nums . size () - 1 ); reverse ( nums , 0 , k - 1 ); reverse ( nums , k , nums . size () - 1 ); } };","title":"189 \u8f6e\u8f6c\u6570\u7ec4"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/189%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#\u7b97\u6cd5\u8111\u7b4b\u6025\u8f6c\u5f2f-\u7b97\u6cd5\u73af\u72b6\u66ff\u6362","text":"","title":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f #\u7b97\u6cd5/\u73af\u72b6\u66ff\u6362"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/189%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#\u73af\u72b6\u66ff\u6362-\u8d85\u65f6","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public : void rotate ( vector < int >& nums , int k ) { int len = nums . size (); k %= len ; while ( k -- ){ int temp = nums [ len -1 ]; for ( int i = len -2 ; i >= 0 ; i -- ){ nums [ i + 1 ] = nums [ i ]; } nums [ 0 ] = temp ; } } };","title":"\u73af\u72b6\u66ff\u6362 \u8d85\u65f6"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/189%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#\u7ffb\u8f6c","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public : void reverse ( vector < int >& nums , int start , int end ) { while ( start < end ) { swap ( nums [ start ], nums [ end ]); start += 1 ; end -= 1 ; } } void rotate ( vector < int >& nums , int k ) { k %= nums . size (); reverse ( nums , 0 , nums . size () - 1 ); reverse ( nums , 0 , k - 1 ); reverse ( nums , k , nums . size () - 1 ); } };","title":"\u7ffb\u8f6c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/19%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC%20N%20%E4%B8%AA%E7%BB%93%E7%82%B9/","text":"\u4e00\u8d9f\u904d\u5386 \u53cc\u6307\u9488 \u00b6 C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * removeNthFromEnd ( ListNode * head , int n ) { ListNode * sentinel = new ListNode ( 0 ); sentinel -> next = head ; ListNode * fast = head ; ListNode * slow = sentinel ; while ( n -- ){ fast = fast -> next ; } while ( fast ){ fast = fast -> next ; slow = slow -> next ; } slow -> next = slow -> next -> next ; return sentinel -> next ; } };","title":"19 \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u7ed3\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/19%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC%20N%20%E4%B8%AA%E7%BB%93%E7%82%B9/#\u53cc\u6307\u9488","text":"C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * removeNthFromEnd ( ListNode * head , int n ) { ListNode * sentinel = new ListNode ( 0 ); sentinel -> next = head ; ListNode * fast = head ; ListNode * slow = sentinel ; while ( n -- ){ fast = fast -> next ; } while ( fast ){ fast = fast -> next ; slow = slow -> next ; } slow -> next = slow -> next -> next ; return sentinel -> next ; } };","title":"\u53cc\u6307\u9488"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/198%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/","text":"\u7b97\u6cd5/dp \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution { public : int rob ( vector < int >& nums ) { // define dp[i] as the max cash when the rob at the ith room // the rob has 2 chioce {rob, not rob} // dp[i] = max(dp[i-2] + nums[i], dp[i-1]) // return dp[n-1] int n = nums . size (); if ( n == 1 ) return nums [ 0 ]; if ( n == 2 ) return max ( nums [ 0 ], nums [ 1 ]); int dp [ n ]; dp [ 0 ] = nums [ 0 ]; dp [ 1 ] = max ( nums [ 0 ], nums [ 1 ]); for ( int i = 2 ; i < n ; i ++ ) dp [ i ] = max ( dp [ i -2 ] + nums [ i ], dp [ i -1 ]); return dp [ n -1 ]; } };","title":"198 \u6253\u5bb6\u52ab\u820d"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/198%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/#\u7b97\u6cd5dp","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Solution { public : int rob ( vector < int >& nums ) { // define dp[i] as the max cash when the rob at the ith room // the rob has 2 chioce {rob, not rob} // dp[i] = max(dp[i-2] + nums[i], dp[i-1]) // return dp[n-1] int n = nums . size (); if ( n == 1 ) return nums [ 0 ]; if ( n == 2 ) return max ( nums [ 0 ], nums [ 1 ]); int dp [ n ]; dp [ 0 ] = nums [ 0 ]; dp [ 1 ] = max ( nums [ 0 ], nums [ 1 ]); for ( int i = 2 ; i < n ; i ++ ) dp [ i ] = max ( dp [ i -2 ] + nums [ i ], dp [ i -1 ]); return dp [ n -1 ]; } };","title":"\u7b97\u6cd5/dp"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/199%20%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > rightSideView ( TreeNode * root ) { vector < int > res ; queue < TreeNode *> Q ; if ( ! root ) return res ; Q . push ( root ); // res.push_back(root->val); while ( ! Q . empty ()){ int n = Q . size (); TreeNode * front ; for ( int i = 0 ; i < n ; i ++ ){ front = Q . front (); Q . pop (); if ( front -> left ) Q . push ( front -> left ); if ( front -> right ) Q . push ( front -> right ); } res . push_back ( front -> val ); } return res ; } };","title":"199  \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/199%20%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE/#\u7b97\u6cd5\u4e8c\u53c9\u6811","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : vector < int > rightSideView ( TreeNode * root ) { vector < int > res ; queue < TreeNode *> Q ; if ( ! root ) return res ; Q . push ( root ); // res.push_back(root->val); while ( ! Q . empty ()){ int n = Q . size (); TreeNode * front ; for ( int i = 0 ; i < n ; i ++ ){ front = Q . front (); Q . pop (); if ( front -> left ) Q . push ( front -> left ); if ( front -> right ) Q . push ( front -> right ); } res . push_back ( front -> val ); } return res ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/2%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/","text":"\u94fe\u8868\u3001\u54e8\u5175\u8282\u70b9 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * addTwoNumbers ( ListNode * l1 , ListNode * l2 ) { int carry = 0 ; ListNode * p = new ListNode (); ListNode * q = p ; while ( l1 || l2 ){ int n1 = l1 ? l1 -> val : 0 ; int n2 = l2 ? l2 -> val : 0 ; int sum = n1 + n2 + carry ; carry = sum / 10 ; sum = sum % 10 ; ListNode * newNode = new ListNode ( sum ); q -> next = newNode ; q = newNode ; if ( l1 ) l1 = l1 -> next ; if ( l2 ) l2 = l2 -> next ; } if ( carry ){ ListNode * newNode = new ListNode ( carry ); q -> next = newNode ; q = newNode ; } return p -> next ; } };","title":"2 \u4e24\u6570\u76f8\u52a0"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/200%20%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F/","text":"DFS\u6a21\u677f C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 void dfs ( int [][] grid , int r , int c ) { // \u5224\u65ad base case if ( ! inArea ( grid , r , c )) { return ; } // \u5982\u679c\u8fd9\u4e2a\u683c\u5b50\u4e0d\u662f\u5c9b\u5c7f\uff0c\u76f4\u63a5\u8fd4\u56de if ( grid [ r ][ c ] != 1 ) { return ; } grid [ r ][ c ] = 2 ; // \u5c06\u683c\u5b50\u6807\u8bb0\u4e3a\u300c\u5df2\u904d\u5386\u8fc7\u300d // \u8bbf\u95ee\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3\u56db\u4e2a\u76f8\u90bb\u7ed3\u70b9 dfs ( grid , r - 1 , c ); dfs ( grid , r + 1 , c ); dfs ( grid , r , c - 1 ); dfs ( grid , r , c + 1 ); } // \u5224\u65ad\u5750\u6807 (r, c) \u662f\u5426\u5728\u7f51\u683c\u4e2d boolean inArea ( int [][] grid , int r , int c ) { return 0 <= r && r < grid . length && 0 <= c && c < grid [ 0 ]. length ; } C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 class Solution { public : int cnt = 0 ; void dfs ( vector < vector < char >> & grid , int row , int col , int i , int j ){ if (( i < 0 || i >= row ) || ( j < 0 || j >= col )){ return ; } if ( grid [ i ][ j ] != '1' ) return ; grid [ i ][ j ] = '2' ; dfs ( grid , row , col , i , j -1 ); dfs ( grid , row , col , i , j + 1 ); dfs ( grid , row , col , i -1 , j ); dfs ( grid , row , col , i + 1 , j ); } int numIslands ( vector < vector < char >>& grid ) { int row = grid . size (); int col = grid [ 0 ]. size (); int ans = 0 ; for ( int i = 0 ; i < row ; i ++ ){ for ( int j = 0 ; j < col ; j ++ ){ if ( grid [ i ][ j ] == '1' ){ ans ++ ; dfs ( grid , row , col , i , j ); } } } return ans ; } };","title":"200 \u5c9b\u5c7f\u6570\u91cf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u53cd\u8f6c\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; ListNode * last = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return last ; } };","title":"206 \u53cd\u8f6c\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/206%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u53cd\u8f6c\u94fe\u8868-\u7b97\u6cd5\u9012\u5f52","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; ListNode * last = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return last ; } };","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u53cd\u8f6c\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/215%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%AC%20K%20%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/","text":"\u7b97\u6cd5/\u5806 #\u7b97\u6cd5/\u4f18\u5148\u961f\u5217 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Solution { public : void build_heap ( vector < int > & heap ){ int len = heap . size (); len /= 2 ; while ( len -- ){ int left = len * 2 + 1 ; int right = len * 2 + 2 ; if ( left < heap . size () && heap [ left ] < heap [ len ]) swap ( heap [ left ], heap [ len ]); if ( right < heap . size () && heap [ right ] < heap [ len ]) swap ( heap [ right ], heap [ len ]); } } int findKthLargest ( vector < int >& nums , int k ) { vector < int > min_heap ( k , 0 ); for ( int i = 0 ; i < k ; i ++ ){ min_heap [ i ] = nums [ i ]; } build_heap ( min_heap ); for ( int i = k ; i < nums . size (); i ++ ){ if ( nums [ i ] > min_heap [ 0 ]){ //min_heap.push_back(nums[i]); min_heap [ 0 ] = nums [ i ]; //min_heap[k-1] = nums[i]; build_heap ( min_heap ); } } return min_heap [ 0 ]; } };","title":"215 \u6570\u7ec4\u4e2d\u7b2c K \u4e2a\u6700\u5927\u5143\u7d20"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/215%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%AC%20K%20%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0/#\u7b97\u6cd5\u5806-\u7b97\u6cd5\u4f18\u5148\u961f\u5217","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Solution { public : void build_heap ( vector < int > & heap ){ int len = heap . size (); len /= 2 ; while ( len -- ){ int left = len * 2 + 1 ; int right = len * 2 + 2 ; if ( left < heap . size () && heap [ left ] < heap [ len ]) swap ( heap [ left ], heap [ len ]); if ( right < heap . size () && heap [ right ] < heap [ len ]) swap ( heap [ right ], heap [ len ]); } } int findKthLargest ( vector < int >& nums , int k ) { vector < int > min_heap ( k , 0 ); for ( int i = 0 ; i < k ; i ++ ){ min_heap [ i ] = nums [ i ]; } build_heap ( min_heap ); for ( int i = k ; i < nums . size (); i ++ ){ if ( nums [ i ] > min_heap [ 0 ]){ //min_heap.push_back(nums[i]); min_heap [ 0 ] = nums [ i ]; //min_heap[k-1] = nums[i]; build_heap ( min_heap ); } } return min_heap [ 0 ]; } };","title":"\u7b97\u6cd5/\u5806 #\u7b97\u6cd5/\u4f18\u5148\u961f\u5217"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/22%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/","text":"\u7b97\u6cd5/\u56de\u6eaf \u00b6 \u56de\u6eaf \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Solution { public : vector < string > rst ; void dfs ( int left , int right , int n , string & temp ){ if ( temp . size () == 2 * n ){ rst . push_back ( temp ); return ; } if ( left < n ){ // \u5982\u679c\u5de6\u62ec\u53f7\u6570\u91cf\u4e0d\u5927\u4e8e n\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u4e00\u4e2a\u5de6\u62ec\u53f7 temp . push_back ( '(' ); dfs ( left + 1 , right , n , temp ); temp . pop_back (); } if ( right < left ){ // \u5982\u679c\u53f3\u62ec\u53f7\u6570\u91cf\u5c0f\u4e8e\u5de6\u62ec\u53f7\u7684\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u4e00\u4e2a\u53f3\u62ec\u53f7 temp . push_back ( ')' ); dfs ( left , right + 1 , n , temp ); temp . pop_back (); } } vector < string > generateParenthesis ( int n ) { string s = \"\" ; dfs ( 0 , 0 , n , s ); return rst ; } };","title":"22 \u62ec\u53f7\u751f\u6210"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/22%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/#\u7b97\u6cd5\u56de\u6eaf","text":"","title":"\u7b97\u6cd5/\u56de\u6eaf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/22%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/#\u56de\u6eaf","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Solution { public : vector < string > rst ; void dfs ( int left , int right , int n , string & temp ){ if ( temp . size () == 2 * n ){ rst . push_back ( temp ); return ; } if ( left < n ){ // \u5982\u679c\u5de6\u62ec\u53f7\u6570\u91cf\u4e0d\u5927\u4e8e n\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u4e00\u4e2a\u5de6\u62ec\u53f7 temp . push_back ( '(' ); dfs ( left + 1 , right , n , temp ); temp . pop_back (); } if ( right < left ){ // \u5982\u679c\u53f3\u62ec\u53f7\u6570\u91cf\u5c0f\u4e8e\u5de6\u62ec\u53f7\u7684\u6570\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u653e\u4e00\u4e2a\u53f3\u62ec\u53f7 temp . push_back ( ')' ); dfs ( left , right + 1 , n , temp ); temp . pop_back (); } } vector < string > generateParenthesis ( int n ) { string s = \"\" ; dfs ( 0 , 0 , n , s ); return rst ; } };","title":"\u56de\u6eaf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/230%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%AC%20k%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u4e2d\u5e8f\u904d\u5386 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u8fed\u4ee3 \u00b6 \u9012\u5f52 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int ans ; int order ; void search ( TreeNode * root ){ if ( ! root ) return ; search ( root -> left ); order -- ; if ( order == 0 ) ans = root -> val ; search ( root -> right ); } int kthSmallest ( TreeNode * root , int k ) { order = k ; search ( root ); return ans ; } }; \u8fed\u4ee3 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int ans = -1 ; int order ; void search ( TreeNode * root ){ stack < TreeNode *> s ; while ( ! s . empty () || root ){ while ( root ){ s . push ( root ); root = root -> left ; } root = s . top (); s . pop (); order -- ; if ( order == 0 ) ans = root -> val ; root = root -> right ; } } int kthSmallest ( TreeNode * root , int k ) { order = k ; search ( root ); return ans ; } };","title":"230 \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7b2c k \u5c0f\u7684\u5143\u7d20"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/230%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%AC%20k%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5\u4e2d\u5e8f\u904d\u5386-\u7b97\u6cd5\u9012\u5f52-\u7b97\u6cd5\u8fed\u4ee3","text":"","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u4e2d\u5e8f\u904d\u5386 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u8fed\u4ee3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/230%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%AC%20k%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/#\u9012\u5f52","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int ans ; int order ; void search ( TreeNode * root ){ if ( ! root ) return ; search ( root -> left ); order -- ; if ( order == 0 ) ans = root -> val ; search ( root -> right ); } int kthSmallest ( TreeNode * root , int k ) { order = k ; search ( root ); return ans ; } };","title":"\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/230%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%AC%20k%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/#\u8fed\u4ee3","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int ans = -1 ; int order ; void search ( TreeNode * root ){ stack < TreeNode *> s ; while ( ! s . empty () || root ){ while ( root ){ s . push ( root ); root = root -> left ; } root = s . top (); s . pop (); order -- ; if ( order == 0 ) ans = root -> val ; root = root -> right ; } } int kthSmallest ( TreeNode * root , int k ) { order = k ; search ( root ); return ans ; } };","title":"\u8fed\u4ee3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/236%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */ class Solution { public : TreeNode * lowestCommonAncestor ( TreeNode * root , TreeNode * p , TreeNode * q ) { if ( root == null || root == p || root == q ){ return root ; } TreeNode * left = lowestCommonAncestor ( root -> left , p , q ); TreeNode * right = lowestCommonAncestor ( root -> right , p , q ); if ( left == null && right == null ) return null ; if ( left == null ) return right ; if ( right == null ) return left ; return root ; } };","title":"236 \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/236%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/#\u7b97\u6cd5\u4e8c\u53c9\u6811","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */ class Solution { public : TreeNode * lowestCommonAncestor ( TreeNode * root , TreeNode * p , TreeNode * q ) { if ( root == null || root == p || root == q ){ return root ; } TreeNode * left = lowestCommonAncestor ( root -> left , p , q ); TreeNode * right = lowestCommonAncestor ( root -> right , p , q ); if ( left == null && right == null ) return null ; if ( left == null ) return right ; if ( right == null ) return left ; return root ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/24%20%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u8fed\u4ee3 \u00b6 \u9012\u5f52 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * swapPairs ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; auto first = head ; auto second = head -> next ; auto left = head -> next -> next ; second -> next = first ; first -> next = swapPairs ( left ); return second ; } }; \u8fed\u4ee3 \u00b6 \u8981\u820d\u5f97\u7528\u53d8\u91cf C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * swapPairs ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; auto dummy = new ListNode ( 0 ); dummy -> next = head ; auto pre = dummy ; auto cur = head ; while ( cur && cur -> next ){ auto first = cur ; auto second = cur -> next ; auto left = cur -> next -> next ; second -> next = first ; first -> next = left ; pre -> next = second ; pre = first ; cur = left ; } return dummy -> next ; } };","title":"24 \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/24%20%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u9012\u5f52-\u7b97\u6cd5\u8fed\u4ee3","text":"","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u8fed\u4ee3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/24%20%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/#\u9012\u5f52","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * swapPairs ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; auto first = head ; auto second = head -> next ; auto left = head -> next -> next ; second -> next = first ; first -> next = swapPairs ( left ); return second ; } };","title":"\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/24%20%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/#\u8fed\u4ee3","text":"\u8981\u820d\u5f97\u7528\u53d8\u91cf C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * swapPairs ( ListNode * head ) { if ( ! head || ! head -> next ) return head ; auto dummy = new ListNode ( 0 ); dummy -> next = head ; auto pre = dummy ; auto cur = head ; while ( cur && cur -> next ){ auto first = cur ; auto second = cur -> next ; auto left = cur -> next -> next ; second -> next = first ; first -> next = left ; pre -> next = second ; pre = first ; cur = left ; } return dummy -> next ; } };","title":"\u8fed\u4ee3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/240%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%20II/","text":"\u7b97\u6cd5/\u4e8c\u5206 #\u7b97\u6cd5/\u51cf\u679d \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 class Solution { public : int bs ( vector < int > nums , int target ){ int left = 0 , right = nums . size () -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( nums [ mid ] == target ){ return mid ; } else if ( target < nums [ mid ]){ right = mid - 1 ; } else { left = mid + 1 ; } } return -1 ; } bool searchMatrix ( vector < vector < int >>& matrix , int target ) { int flag = 0 ; for ( int i = 0 ; i < matrix . size (); i ++ ){ if ( matrix [ i ][ matrix [ 0 ]. size () -1 ] < target ) continue ; auto & nums = matrix [ i ]; int loc = bs ( nums , target ); if ( loc != -1 ){ flag = 1 ; break ; } } if ( flag == 1 ) return true ; return false ; } };","title":"240 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635 II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/240%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%20II/#\u7b97\u6cd5\u4e8c\u5206-\u7b97\u6cd5\u51cf\u679d","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 class Solution { public : int bs ( vector < int > nums , int target ){ int left = 0 , right = nums . size () -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( nums [ mid ] == target ){ return mid ; } else if ( target < nums [ mid ]){ right = mid - 1 ; } else { left = mid + 1 ; } } return -1 ; } bool searchMatrix ( vector < vector < int >>& matrix , int target ) { int flag = 0 ; for ( int i = 0 ; i < matrix . size (); i ++ ){ if ( matrix [ i ][ matrix [ 0 ]. size () -1 ] < target ) continue ; auto & nums = matrix [ i ]; int loc = bs ( nums , target ); if ( loc != -1 ){ flag = 1 ; break ; } } if ( flag == 1 ) return true ; return false ; } };","title":"\u7b97\u6cd5/\u4e8c\u5206 #\u7b97\u6cd5/\u51cf\u679d"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/3%20%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/","text":"s = \"pwwkew\" \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c \"pwke\" \u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Solution { public : int lengthOfLongestSubstring ( string s ) { unordered_set < char > buffer ; int n = s . size (); int left , right ; left = right = 0 ; int ans = 0 ; while ( right < n ){ char ch = s [ right ]; while ( occ . count ( ch )){ occ . erase ( s [ left ]); left ++ ; } occ . insert ( ch ); right ++ ; ans = max ( ans , right - left ); } return ans ; } };","title":"3 \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/300%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%20%EF%BC%88%E4%BA%8C%E5%88%86%E4%BC%98%E5%8C%96%EF%BC%89/","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class Solution { public : int lengthOfLIS ( vector < int >& nums ) { int n = nums . size (); if ( n == 1 ) return 1 ; vector < int > dp ( n , 1 ); int rst = -1 ; for ( int i = 1 ; i < n ; i ++ ){ for ( int j = 0 ; j < i ; j ++ ){ if ( nums [ i ] > nums [ j ]){ dp [ i ] = max ( dp [ i ], dp [ j ] + 1 ); } } rst = max ( dp [ i ], rst ); } return rst ; } }; \u4e8c\u5206\u4f18\u5316\uff1f \u00b6","title":"300 \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217 \uff08\u4e8c\u5206\u4f18\u5316\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/300%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%20%EF%BC%88%E4%BA%8C%E5%88%86%E4%BC%98%E5%8C%96%EF%BC%89/#\u4e8c\u5206\u4f18\u5316","text":"","title":"\u4e8c\u5206\u4f18\u5316\uff1f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/322%20%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/","text":"\u7b97\u6cd5/dp \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public : int coinChange ( vector < int >& coins , int amount ) { vector < int > dp ( amount + 1 , amount + 1 ); dp [ 0 ] = 0 ; for ( int val = 1 ; val <= amount ; val ++ ){ for ( int i = 0 ; i < coins . size (); i ++ ){ if ( val - coins [ i ] >= 0 ){ dp [ val ] = min ( dp [ val ], dp [ val - coins [ i ]] + 1 ); } } } return dp [ amount ] > amount ? -1 : dp [ amount ]; } };","title":"322 \u96f6\u94b1\u5151\u6362"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/322%20%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/#\u7b97\u6cd5dp","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Solution { public : int coinChange ( vector < int >& coins , int amount ) { vector < int > dp ( amount + 1 , amount + 1 ); dp [ 0 ] = 0 ; for ( int val = 1 ; val <= amount ; val ++ ){ for ( int i = 0 ; i < coins . size (); i ++ ){ if ( val - coins [ i ] >= 0 ){ dp [ val ] = min ( dp [ val ], dp [ val - coins [ i ]] + 1 ); } } } return dp [ amount ] > amount ? -1 : dp [ amount ]; } };","title":"\u7b97\u6cd5/dp"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/328%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u8fed\u4ee3 \u00b6 \u5206\u5272 \u5408\u5e76 143 \u91cd\u6392\u94fe\u8868 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * oddDummy = new ListNode ( 1 ); ListNode * evenDummy = new ListNode ( 0 ); ListNode * oddcur = oddDummy ; ListNode * evencur = evenDummy ; void helper ( ListNode * head ){ if ( head == nullptr ) return ; if ( head -> next == nullptr ){ oddcur -> next = head ; oddcur = head ; return ; } ListNode * odd = head ; ListNode * even = head -> next ; oddcur -> next = odd ; evencur -> next = even ; oddcur = odd ; evencur = even ; helper ( head -> next -> next ); } ListNode * oddEvenList ( ListNode * head ) { helper ( head ); oddcur -> next = nullptr ; evencur -> next = nullptr ; oddcur -> next = evenDummy -> next ; return oddDummy -> next ; } }; \u8fed\u4ee3 \u5b98\u65b9\u89e3\u6cd5 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : ListNode * oddEvenList ( ListNode * head ) { if ( head == nullptr ) { return head ; } ListNode * evenHead = head -> next ; ListNode * odd = head ; ListNode * even = evenHead ; while ( even != nullptr && even -> next != nullptr ) { odd -> next = even -> next ; odd = odd -> next ; even -> next = odd -> next ; even = even -> next ; } odd -> next = evenHead ; return head ; } };","title":"328 \u5947\u5076\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/328%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u9012\u5f52-\u7b97\u6cd5\u8fed\u4ee3","text":"\u5206\u5272 \u5408\u5e76 143 \u91cd\u6392\u94fe\u8868 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * oddDummy = new ListNode ( 1 ); ListNode * evenDummy = new ListNode ( 0 ); ListNode * oddcur = oddDummy ; ListNode * evencur = evenDummy ; void helper ( ListNode * head ){ if ( head == nullptr ) return ; if ( head -> next == nullptr ){ oddcur -> next = head ; oddcur = head ; return ; } ListNode * odd = head ; ListNode * even = head -> next ; oddcur -> next = odd ; evencur -> next = even ; oddcur = odd ; evencur = even ; helper ( head -> next -> next ); } ListNode * oddEvenList ( ListNode * head ) { helper ( head ); oddcur -> next = nullptr ; evencur -> next = nullptr ; oddcur -> next = evenDummy -> next ; return oddDummy -> next ; } };","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u8fed\u4ee3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/328%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8/#\u8fed\u4ee3-\u5b98\u65b9\u89e3\u6cd5","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : ListNode * oddEvenList ( ListNode * head ) { if ( head == nullptr ) { return head ; } ListNode * evenHead = head -> next ; ListNode * odd = head ; ListNode * even = evenHead ; while ( even != nullptr && even -> next != nullptr ) { odd -> next = even -> next ; odd = odd -> next ; even -> next = odd -> next ; even = even -> next ; } odd -> next = evenHead ; return head ; } };","title":"\u8fed\u4ee3 \u5b98\u65b9\u89e3\u6cd5"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/33%20%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84/","text":"\u5c06\u6570\u7ec4\u4e00\u5206\u4e3a\u4e8c\uff0c\u5176\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a\u662f\u6709\u5e8f\u7684\uff0c\u53e6\u4e00\u4e2a\u53ef\u80fd\u662f\u6709\u5e8f\uff0c\u4e5f\u80fd\u662f\u90e8\u5206\u6709\u5e8f\u3002 \u6b64\u65f6 \u6709\u5e8f\u90e8\u5206\u7528\u4e8c\u5206\u6cd5\u67e5\u627e \u3002\u65e0\u5e8f\u90e8\u5206\u518d\u4e00\u5206\u4e3a\u4e8c\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e00\u5b9a\u6709\u5e8f\uff0c\u53e6\u4e00\u4e2a\u53ef\u80fd\u6709\u5e8f\uff0c\u53ef\u80fd\u65e0\u5e8f\u3002\u5c31\u8fd9\u6837\u5faa\u73af. C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class Solution { public : int search ( vector < int >& nums , int target ) { int n = nums . size (); if ( ! n ) return -1 ; if ( n == 1 ) return nums [ 0 ] == target ? 0 : -1 ; int l = 0 , r = n -1 ; while ( l <= r ){ int mid = ( l + r ) / 2 ; if ( nums [ mid ] == target ) return mid ; if ( nums [ 0 ] <= nums [ mid ]){ // \u5de6\u8fb9\u6709\u5e8f if ( nums [ 0 ] <= target && target < nums [ mid ]){ r = mid - 1 ; } else { l = mid + 1 ; } } else { // \u53f3\u8fb9\u6709\u5e8f if ( nums [ mid ] < target && target <= nums [ r ]){ l = mid + 1 ; } else { r = mid - 1 ; } } } return -1 ; } };","title":"33 \u641c\u7d22\u65cb\u8f6c\u6570\u7ec4"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/34%20%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/","text":"\u7b97\u6cd5/\u4e8c\u5206 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 class Solution { public : int bs_left ( vector < int > nums , int target ){ int left = 0 , right = nums . size () -1 ; int ans = -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( nums [ mid ] >= target ){ ans = mid ; right = mid -1 ; } else { left = mid + 1 ; } } if ( ans >= 0 && ans <= nums . size () -1 && nums [ ans ] == target ) return ans ; return -1 ; } int bs_right ( vector < int > nums , int target ){ int left = 0 , right = nums . size () -1 ; int ans = -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( nums [ mid ] <= target ){ ans = mid ; left = mid + 1 ; } else { right = mid - 1 ; } } if ( ans >= 0 && ans <= nums . size () -1 && nums [ ans ] == target ) return ans ; return -1 ; } vector < int > searchRange ( vector < int >& nums , int target ) { if ( nums . size () == 0 ) return vector < int > { -1 , -1 }; if ( nums . size () == 1 ) return ( nums [ 0 ] == target ? vector < int > { 0 , 0 } : vector < int > { -1 , -1 }); return vector < int > { bs_left ( nums , target ), bs_right ( nums , target )}; } };","title":"34 \u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/34%20%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/#\u7b97\u6cd5\u4e8c\u5206","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 class Solution { public : int bs_left ( vector < int > nums , int target ){ int left = 0 , right = nums . size () -1 ; int ans = -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( nums [ mid ] >= target ){ ans = mid ; right = mid -1 ; } else { left = mid + 1 ; } } if ( ans >= 0 && ans <= nums . size () -1 && nums [ ans ] == target ) return ans ; return -1 ; } int bs_right ( vector < int > nums , int target ){ int left = 0 , right = nums . size () -1 ; int ans = -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; if ( nums [ mid ] <= target ){ ans = mid ; left = mid + 1 ; } else { right = mid - 1 ; } } if ( ans >= 0 && ans <= nums . size () -1 && nums [ ans ] == target ) return ans ; return -1 ; } vector < int > searchRange ( vector < int >& nums , int target ) { if ( nums . size () == 0 ) return vector < int > { -1 , -1 }; if ( nums . size () == 1 ) return ( nums [ 0 ] == target ? vector < int > { 0 , 0 } : vector < int > { -1 , -1 }); return vector < int > { bs_left ( nums , target ), bs_right ( nums , target )}; } };","title":"\u7b97\u6cd5/\u4e8c\u5206"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/39%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/","text":"\u7b97\u6cd5/\u56de\u6eaf #\u7b97\u6cd5/\u51cf\u679d #\u7b97\u6cd5/\u53bb\u9664\u91cd\u590d\u89e3 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Solution { public : vector < vector < int >> res ; vector < int > path ; void dfs ( vector < int >& c , int start , int target ){ if ( target < 0 ) return ; if ( target == 0 ){ res . push_back ( path ); return ; } for ( int i = start ; i < c . size (); i ++ ){ if ( c [ i ] <= target ){ path . push_back ( c [ i ]); dfs ( c , i , target - c [ i ]); path . pop_back (); } } } vector < vector < int >> combinationSum ( vector < int >& candidates , int target ) { sort ( candidates . begin (), candidates . end ()); dfs ( candidates , 0 , target ); return res ; } };","title":"39 \u7ec4\u5408\u603b\u548c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/39%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C/#\u7b97\u6cd5\u56de\u6eaf-\u7b97\u6cd5\u51cf\u679d-\u7b97\u6cd5\u53bb\u9664\u91cd\u590d\u89e3","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Solution { public : vector < vector < int >> res ; vector < int > path ; void dfs ( vector < int >& c , int start , int target ){ if ( target < 0 ) return ; if ( target == 0 ){ res . push_back ( path ); return ; } for ( int i = start ; i < c . size (); i ++ ){ if ( c [ i ] <= target ){ path . push_back ( c [ i ]); dfs ( c , i , target - c [ i ]); path . pop_back (); } } } vector < vector < int >> combinationSum ( vector < int >& candidates , int target ) { sort ( candidates . begin (), candidates . end ()); dfs ( candidates , 0 , target ); return res ; } };","title":"\u7b97\u6cd5/\u56de\u6eaf #\u7b97\u6cd5/\u51cf\u679d #\u7b97\u6cd5/\u53bb\u9664\u91cd\u590d\u89e3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/40%20%E7%BB%84%E5%90%88%E6%80%BB%E6%95%B0II/","text":"\u89e3\u9898\u601d\u8def\uff1a \u00b6 \u4e0d\u91cd\u590d\u5c31\u9700\u8981\u6309 \u987a\u5e8f \u641c\u7d22\uff0c \u5728\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u68c0\u6d4b\u5206\u652f\u662f\u5426\u4f1a\u51fa\u73b0\u91cd\u590d\u7ed3\u679c \u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u987a\u5e8f\u4e0d\u4ec5\u4ec5\u6307\u6570\u7ec4 candidates \u6709\u5e8f\uff0c \u8fd8\u6307\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u641c\u7d22\u7ed3\u679c\u3002 \u526a\u679d\u53d1\u751f\u5728\uff1a\u540c\u4e00\u5c42\u6570\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u7b2c 2\u30013 ... \u4e2a\u7ed3\u70b9\uff0c\u56e0\u4e3a\u6570\u503c\u76f8\u540c\u7684\u7b2c 11 \u4e2a\u7ed3\u70b9\u5df2\u7ecf\u641c\u7d22\u51fa\u4e86\u5305\u542b\u4e86\u8fd9\u4e2a\u6570\u503c\u7684\u5168\u90e8\u7ed3\u679c C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int >& path , vector < int >& vis , vector < int > candidates , int start , int target ){ if ( target < 0 ) return ; if ( target == 0 ){ res . push_back ( path ); return ; } for ( int i = start ; i < candidates . size (); i ++ ){ if ( i > start && candidates [ i ] == candidates [ i -1 ]) continue ; // \u6267\u884c\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8eBFS\u7684\u6548\u679c if ( vis [ i ] == 0 ){ path . push_back ( candidates [ i ]); vis [ i ] = 1 ; dfs ( path , vis , candidates , i + 1 , target - candidates [ i ]); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> combinationSum2 ( vector < int >& candidates , int target ) { sort ( candidates . begin (), candidates . end ()); vector < int > vis ( candidates . size (), 0 ); vector < int > path ; dfs ( path , vis , candidates , 0 , target ); return res ; } };","title":"40 \u7ec4\u5408\u603b\u6570II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/40%20%E7%BB%84%E5%90%88%E6%80%BB%E6%95%B0II/#\u89e3\u9898\u601d\u8def","text":"\u4e0d\u91cd\u590d\u5c31\u9700\u8981\u6309 \u987a\u5e8f \u641c\u7d22\uff0c \u5728\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u68c0\u6d4b\u5206\u652f\u662f\u5426\u4f1a\u51fa\u73b0\u91cd\u590d\u7ed3\u679c \u3002 \u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u987a\u5e8f\u4e0d\u4ec5\u4ec5\u6307\u6570\u7ec4 candidates \u6709\u5e8f\uff0c \u8fd8\u6307\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\u641c\u7d22\u7ed3\u679c\u3002 \u526a\u679d\u53d1\u751f\u5728\uff1a\u540c\u4e00\u5c42\u6570\u503c\u76f8\u540c\u7684\u7ed3\u70b9\u7b2c 2\u30013 ... \u4e2a\u7ed3\u70b9\uff0c\u56e0\u4e3a\u6570\u503c\u76f8\u540c\u7684\u7b2c 11 \u4e2a\u7ed3\u70b9\u5df2\u7ecf\u641c\u7d22\u51fa\u4e86\u5305\u542b\u4e86\u8fd9\u4e2a\u6570\u503c\u7684\u5168\u90e8\u7ed3\u679c C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int >& path , vector < int >& vis , vector < int > candidates , int start , int target ){ if ( target < 0 ) return ; if ( target == 0 ){ res . push_back ( path ); return ; } for ( int i = start ; i < candidates . size (); i ++ ){ if ( i > start && candidates [ i ] == candidates [ i -1 ]) continue ; // \u6267\u884c\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8eBFS\u7684\u6548\u679c if ( vis [ i ] == 0 ){ path . push_back ( candidates [ i ]); vis [ i ] = 1 ; dfs ( path , vis , candidates , i + 1 , target - candidates [ i ]); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> combinationSum2 ( vector < int >& candidates , int target ) { sort ( candidates . begin (), candidates . end ()); vector < int > vis ( candidates . size (), 0 ); vector < int > path ; dfs ( path , vis , candidates , 0 , target ); return res ; } };","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/450%20%E5%88%A0%E9%99%A4%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52 \u00b6 \u6839\u636e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28 \u5982\u679c\u76ee\u6807\u8282\u70b9\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u503c\uff0c\u5219\u53bb\u53f3\u5b50\u6811\u4e2d\u5220\u9664\uff1b \u5982\u679c\u76ee\u6807\u8282\u70b9\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u503c\uff0c\u5219\u53bb\u5de6\u5b50\u6811\u4e2d\u5220\u9664\uff1b \u5982\u679c\u76ee\u6807\u8282\u70b9\u5c31\u662f\u5f53\u524d\u8282\u70b9\uff0c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a \u5176\u65e0\u5de6\u5b50\uff1a\u5176\u53f3\u5b50\u9876\u66ff\u5176\u4f4d\u7f6e\uff0c\u5220\u9664\u4e86\u8be5\u8282\u70b9\uff1b \u5176\u65e0\u53f3\u5b50\uff1a\u5176\u5de6\u5b50\u9876\u66ff\u5176\u4f4d\u7f6e\uff0c\u5220\u9664\u4e86\u8be5\u8282\u70b9\uff1b \u5176\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u6709\uff1a\u5176\u5de6\u5b50\u6811\u8f6c\u79fb\u5230\u5176\u53f3\u5b50\u6811\u7684\u6700\u5de6\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e0a\uff0c\u7136\u540e\u53f3\u5b50\u6811\u9876\u66ff\u5176\u4f4d\u7f6e\uff0c\u7531\u6b64\u5220\u9664\u4e86\u8be5\u8282\u70b9\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : TreeNode * deleteNode ( TreeNode * root , int key ) { if ( ! root ) return nullptr ; if ( key > root -> val ) root -> right = deleteNode ( root -> right , key ); else if ( key < root -> val ) root -> left = deleteNode ( root -> left , key ); else { if ( ! root -> left ) return root -> right ; if ( ! root -> right ) return root -> left ; auto pre = root -> right ; while ( pre -> left ){ pre = pre -> left ; } pre -> left = root -> left ; root = root -> right ; } return root ; } };","title":"450 \u5220\u9664\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u8282\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/450%20%E5%88%A0%E9%99%A4%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5\u9012\u5f52","text":"\u6839\u636e\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28 \u5982\u679c\u76ee\u6807\u8282\u70b9\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u503c\uff0c\u5219\u53bb\u53f3\u5b50\u6811\u4e2d\u5220\u9664\uff1b \u5982\u679c\u76ee\u6807\u8282\u70b9\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u503c\uff0c\u5219\u53bb\u5de6\u5b50\u6811\u4e2d\u5220\u9664\uff1b \u5982\u679c\u76ee\u6807\u8282\u70b9\u5c31\u662f\u5f53\u524d\u8282\u70b9\uff0c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a \u5176\u65e0\u5de6\u5b50\uff1a\u5176\u53f3\u5b50\u9876\u66ff\u5176\u4f4d\u7f6e\uff0c\u5220\u9664\u4e86\u8be5\u8282\u70b9\uff1b \u5176\u65e0\u53f3\u5b50\uff1a\u5176\u5de6\u5b50\u9876\u66ff\u5176\u4f4d\u7f6e\uff0c\u5220\u9664\u4e86\u8be5\u8282\u70b9\uff1b \u5176\u5de6\u53f3\u5b50\u8282\u70b9\u90fd\u6709\uff1a\u5176\u5de6\u5b50\u6811\u8f6c\u79fb\u5230\u5176\u53f3\u5b50\u6811\u7684\u6700\u5de6\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e0a\uff0c\u7136\u540e\u53f3\u5b50\u6811\u9876\u66ff\u5176\u4f4d\u7f6e\uff0c\u7531\u6b64\u5220\u9664\u4e86\u8be5\u8282\u70b9\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : TreeNode * deleteNode ( TreeNode * root , int key ) { if ( ! root ) return nullptr ; if ( key > root -> val ) root -> right = deleteNode ( root -> right , key ); else if ( key < root -> val ) root -> left = deleteNode ( root -> left , key ); else { if ( ! root -> left ) return root -> right ; if ( ! root -> right ) return root -> left ; auto pre = root -> right ; while ( pre -> left ){ pre = pre -> left ; } pre -> left = root -> left ; root = root -> right ; } return root ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/46%20%E5%85%A8%E6%8E%92%E5%88%97/","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Solution { public : vector < vector < int >> res ; vector < int > path ; void dfs ( vector < int >& nums , vector < int > vis , int len ){ if ( path . size () == len ){ res . push_back ( path ); return ; } for ( int i = 0 ; i < nums . size (); i ++ ){ if ( ! vis [ i ]){ vis [ i ] = 1 ; path . push_back ( nums [ i ]); dfs ( nums , vis , len ); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> permute ( vector < int >& nums ) { sort ( nums . begin (), nums . end ()); int n = nums . size (); vector < int > vis ( n , 0 ); dfs ( nums , vis , n ); return res ; } };","title":"46 \u5168\u6392\u5217"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/470%20%E7%94%A8Rand7%20%E5%AE%9E%E7%8E%B0%20rand10/","text":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public : int rand10 () { int row , col , idx ; do { row = rand7 (); col = rand7 (); idx = col + ( row - 1 ) * 7 ; } while ( idx > 40 ); return 1 + ( idx - 1 ) % 10 ; } };","title":"470 \u7528Rand7 \u5b9e\u73b0 rand10"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/470%20%E7%94%A8Rand7%20%E5%AE%9E%E7%8E%B0%20rand10/#\u7b97\u6cd5\u8111\u7b4b\u6025\u8f6c\u5f2f","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 class Solution { public : int rand10 () { int row , col , idx ; do { row = rand7 (); col = rand7 (); idx = col + ( row - 1 ) * 7 ; } while ( idx > 40 ); return 1 + ( idx - 1 ) % 10 ; } };","title":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/498%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E9%81%8D%E5%8E%86/","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 class Solution { public : vector < int > findDiagonalOrder ( vector < vector < int >>& mat ) { int m = mat . size (), n = mat [ 0 ]. size (); m -- ; n -- ; int start = 0 , end = m + n ; vector < int > ans ; int flag = 1 ; for ( int target = start ; target <= end ; target ++ ){ if ( flag > 0 ){ // \u4ece\u4e0b\u81f3\u4e0a int left , right ; if ( target >= m ){ left = m ; right = target - left ; } else { left = target ; right = 0 ; } while ( left >= 0 && right <= n && ( left + right ) == target ){ ans . push_back ( mat [ left ][ right ]); left -- ; right ++ ; } flag = - flag ; } else { // \u4ece\u4e0a\u81f3\u4e0b int left , right ; if ( target >= n ){ right = n ; left = target - right ; } else { left = 0 ; right = target ; } while ( right >= 0 && left <= m && ( left + right ) == target ){ ans . push_back ( mat [ left ][ right ]); left ++ ; right -- ; } flag = - flag ; } } return ans ; } };","title":"498 \u5bf9\u89d2\u7ebf\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/5%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/","text":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp \u00b6 s = \"pwwkew\" \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c \"pwke\" \u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002 1. \u66b4\u529b \u00b6 C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Solution { public : bool isPar ( string s ){ int len = s . size (); for ( int i = 0 ; i < len / 2 ; i ++ ){ if ( s [ i ] != s [ len - i -1 ]) return false ; } return true ; } string longestPalindrome ( string s ) { int len = s . size (); int maxlen = 0 ; string ans ; for ( int i = 0 ; i < len ; i ++ ){ for ( int j = i ; j < len ; j ++ ){ string temp = s . substr ( i , j - i + 1 ); if ( isPar ( temp ) && temp . size () > maxlen ){ maxlen = temp . size (); ans = temp ; } } } return ans ; } }; \u52a8\u6001\u89c4\u5212 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class Solution { public : string longestPalindrome ( string s ) { vector < vector < bool >> dp ( s . size (), vector < bool > ( s . size (), false )); int maxLen = -1 , maxIdx = 0 ; for ( int j = 0 ; j < s . size () ; j ++ ){ for ( int i = 0 ; i < s . size (); i ++ ){ if ( i == j ){ dp [ i ][ j ] = true ; } else if ( i > j ){ dp [ i ][ j ] = false ; } else if ( j - i == 1 ){ if ( s [ i ] == s [ j ]) dp [ i ][ j ] = true ; else dp [ i ][ j ] = false ; } else { if ( dp [ i + 1 ][ j -1 ] == true && ( s [ i ] == s [ j ])) dp [ i ][ j ] = true ; else dp [ i ][ j ] = false ; } if ( dp [ i ][ j ] == true ){ if ( j - i + 1 > maxLen ){ maxLen = j - i + 1 ; maxIdx = i ; } } } } return s . substr ( maxIdx , maxLen ); } };","title":"5 \u6700\u957f\u56de\u6587\u5b50\u4e32"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/5%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/#\u7b97\u6cd5dp-\u7b97\u6cd5\u4e8c\u7ef4dp","text":"s = \"pwwkew\" \u8bf7\u6ce8\u610f\uff0c\u4f60\u7684\u7b54\u6848\u5fc5\u987b\u662f \u5b50\u4e32 \u7684\u957f\u5ea6\uff0c \"pwke\" \u662f\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u4e0d\u662f\u5b50\u4e32\u3002","title":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/5%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/#1-\u66b4\u529b","text":"C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Solution { public : bool isPar ( string s ){ int len = s . size (); for ( int i = 0 ; i < len / 2 ; i ++ ){ if ( s [ i ] != s [ len - i -1 ]) return false ; } return true ; } string longestPalindrome ( string s ) { int len = s . size (); int maxlen = 0 ; string ans ; for ( int i = 0 ; i < len ; i ++ ){ for ( int j = i ; j < len ; j ++ ){ string temp = s . substr ( i , j - i + 1 ); if ( isPar ( temp ) && temp . size () > maxlen ){ maxlen = temp . size (); ans = temp ; } } } return ans ; } };","title":"1. \u66b4\u529b"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/5%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/#\u52a8\u6001\u89c4\u5212","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 class Solution { public : string longestPalindrome ( string s ) { vector < vector < bool >> dp ( s . size (), vector < bool > ( s . size (), false )); int maxLen = -1 , maxIdx = 0 ; for ( int j = 0 ; j < s . size () ; j ++ ){ for ( int i = 0 ; i < s . size (); i ++ ){ if ( i == j ){ dp [ i ][ j ] = true ; } else if ( i > j ){ dp [ i ][ j ] = false ; } else if ( j - i == 1 ){ if ( s [ i ] == s [ j ]) dp [ i ][ j ] = true ; else dp [ i ][ j ] = false ; } else { if ( dp [ i + 1 ][ j -1 ] == true && ( s [ i ] == s [ j ])) dp [ i ][ j ] = true ; else dp [ i ][ j ] = false ; } if ( dp [ i ][ j ] == true ){ if ( j - i + 1 > maxLen ){ maxLen = j - i + 1 ; maxIdx = i ; } } } } return s . substr ( maxIdx , maxLen ); } };","title":"\u52a8\u6001\u89c4\u5212"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/50%20Pow%28x%2C%20n%29/","text":"\u7b97\u6cd5/\u5feb\u901f\u5e42 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : double fastPow ( double x , long long n ){ double rst = 1.0 ; double base = x ; while ( n ){ if ( n & 1 ) rst *= base ; n >>= 1 ; base *= base ; } return rst ; } double myPow ( double x , int n ) { long long N = ( long long ) n ; return n > 0 ? fastPow ( x , N ) : 1.0 / fastPow ( x , - N ); } };","title":"50 Pow(x, n)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/50%20Pow%28x%2C%20n%29/#\u7b97\u6cd5\u5feb\u901f\u5e42","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public : double fastPow ( double x , long long n ){ double rst = 1.0 ; double base = x ; while ( n ){ if ( n & 1 ) rst *= base ; n >>= 1 ; base *= base ; } return rst ; } double myPow ( double x , int n ) { long long N = ( long long ) n ; return n > 0 ? fastPow ( x , N ) : 1.0 / fastPow ( x , - N ); } };","title":"\u7b97\u6cd5/\u5feb\u901f\u5e42"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/54%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/","text":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f #\u7b97\u6cd5/\u6a21\u62df \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 class Solution { public : vector < int > path ; void getCycle ( vector < vector < int >> matrix , int top , int bottom , int left , int right ){ // right [top][left] -> [top][right] int cur = left ; while ( cur <= right ){ path . push_back ( matrix [ top ][ cur ]); cur ++ ; } //down [top+1][right] -> [bottom][right] cur = top + 1 ; while ( cur <= bottom ){ path . push_back ( matrix [ cur ][ right ]); cur ++ ; } // left [bottom][right-1] -> [bottom][left] cur = right -1 ; while ( cur >= left && top != bottom ){ path . push_back ( matrix [ bottom ][ cur ]); cur -- ; } //up [bottom-1][left] -> [top+1][left] cur = bottom - 1 ; while ( cur >= top + 1 && left != right ){ path . push_back ( matrix [ cur ][ left ]); cur -- ; } } vector < int > spiralOrder ( vector < vector < int >>& matrix ) { int row = matrix . size (); if ( row == 0 ){ return path ; } int col = matrix [ 0 ]. size (); int left , right , top , bottom ; left = 0 ; top = 0 ; right = col -1 ; bottom = row -1 ; while ( left <= right && top <= bottom ){ getCycle ( matrix , top , bottom , left , right ); top ++ ; left ++ ; right -- ; bottom -- ; } return path ; } };","title":"54 \u87ba\u65cb\u77e9\u9635"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/54%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/#\u7b97\u6cd5\u8111\u7b4b\u6025\u8f6c\u5f2f-\u7b97\u6cd5\u6a21\u62df","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 class Solution { public : vector < int > path ; void getCycle ( vector < vector < int >> matrix , int top , int bottom , int left , int right ){ // right [top][left] -> [top][right] int cur = left ; while ( cur <= right ){ path . push_back ( matrix [ top ][ cur ]); cur ++ ; } //down [top+1][right] -> [bottom][right] cur = top + 1 ; while ( cur <= bottom ){ path . push_back ( matrix [ cur ][ right ]); cur ++ ; } // left [bottom][right-1] -> [bottom][left] cur = right -1 ; while ( cur >= left && top != bottom ){ path . push_back ( matrix [ bottom ][ cur ]); cur -- ; } //up [bottom-1][left] -> [top+1][left] cur = bottom - 1 ; while ( cur >= top + 1 && left != right ){ path . push_back ( matrix [ cur ][ left ]); cur -- ; } } vector < int > spiralOrder ( vector < vector < int >>& matrix ) { int row = matrix . size (); if ( row == 0 ){ return path ; } int col = matrix [ 0 ]. size (); int left , right , top , bottom ; left = 0 ; top = 0 ; right = col -1 ; bottom = row -1 ; while ( left <= right && top <= bottom ){ getCycle ( matrix , top , bottom , left , right ); top ++ ; left ++ ; right -- ; bottom -- ; } return path ; } };","title":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f #\u7b97\u6cd5/\u6a21\u62df"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/56%20%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/","text":"\u601d\u8def \u00b6 \u6392\u5e8f\u4e4b\u540e\u7b2c\u4e00\u4e2a\u533a\u95f4\u8bbe\u7f6e\u4e3a s, e \u904d\u5386\u540e\u7eed\u533a\u95f4 \u4e3a ns, ne \u6b64\u65f6\u53ef\u4ee5\u5206\u6210 3 \u79cd\u60c5\u51b5\uff1a - ns > e \u533a\u95f4\u6ca1\u6709\u91cd\u53e0 s, e \u653e\u5165\u7ed3\u679c\u6570\u7ec4\uff0c\u5e76\u5c06 ns, ne \u8bbe\u7f6e\u4e3a s, e - ns < e \u533a\u95f4\u6709\u91cd\u53e0 - ne < e \u5ffd\u7565 - ne > e e \u8bbe\u7f6e\u4e3a ne - ans.push_back({start, end}); Text Only 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Solution { public: vector<vector<int>> merge(vector<vector<int>>& intervals) { vector<vector<int>> ans; sort(intervals.begin(), intervals.end()); int start = intervals[0][0], end = intervals[0][1]; int new_start, new_end; int n = intervals.size(); for(int i = 1; i < n;i++){ new_start = intervals[i][0]; new_end = intervals[i][1]; if(new_start > end){ // \u65e0\u91cd\u53e0 ans.push_back({start, end}); start = new_start; end = new_end; }else{ // \u6709\u91cd\u53e0 if(new_end <= end){ // \u5ffd\u7565 }else{ start = start; end = new_end; } } } ans.push_back({start, end}); return ans; } };","title":"56 \u5408\u5e76\u533a\u95f4"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/56%20%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4/#\u601d\u8def","text":"\u6392\u5e8f\u4e4b\u540e\u7b2c\u4e00\u4e2a\u533a\u95f4\u8bbe\u7f6e\u4e3a s, e \u904d\u5386\u540e\u7eed\u533a\u95f4 \u4e3a ns, ne \u6b64\u65f6\u53ef\u4ee5\u5206\u6210 3 \u79cd\u60c5\u51b5\uff1a - ns > e \u533a\u95f4\u6ca1\u6709\u91cd\u53e0 s, e \u653e\u5165\u7ed3\u679c\u6570\u7ec4\uff0c\u5e76\u5c06 ns, ne \u8bbe\u7f6e\u4e3a s, e - ns < e \u533a\u95f4\u6709\u91cd\u53e0 - ne < e \u5ffd\u7565 - ne > e e \u8bbe\u7f6e\u4e3a ne - ans.push_back({start, end}); Text Only 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Solution { public: vector<vector<int>> merge(vector<vector<int>>& intervals) { vector<vector<int>> ans; sort(intervals.begin(), intervals.end()); int start = intervals[0][0], end = intervals[0][1]; int new_start, new_end; int n = intervals.size(); for(int i = 1; i < n;i++){ new_start = intervals[i][0]; new_end = intervals[i][1]; if(new_start > end){ // \u65e0\u91cd\u53e0 ans.push_back({start, end}); start = new_start; end = new_end; }else{ // \u6709\u91cd\u53e0 if(new_end <= end){ // \u5ffd\u7565 }else{ start = start; end = new_end; } } } ans.push_back({start, end}); return ans; } };","title":"\u601d\u8def"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/59%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20II/","text":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f #\u7b97\u6cd5/\u6a21\u62df \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 class Solution { public : //vector<vector> path; int num = 1 ; void getCycle ( vector < vector < int >>& matrix , int top , int bottom , int left , int right ){ // right [top][left] -> [top][right] int cur = left ; while ( cur <= right ){ matrix [ top ][ cur ] = num ++ ; cur ++ ; } //down [top+1][right] -> [bottom][right] cur = top + 1 ; while ( cur <= bottom ){ matrix [ cur ][ right ] = num ++ ; cur ++ ; } // left [bottom][right-1] -> [bottom][left] cur = right -1 ; while ( cur >= left && top != bottom ){ matrix [ bottom ][ cur ] = num ++ ; cur -- ; } //up [bottom-1][left] -> [top+1][left] cur = bottom - 1 ; while ( cur >= top + 1 && left != right ){ matrix [ cur ][ left ] = num ++ ; cur -- ; } } vector < vector < int >> generateMatrix ( int n ) { vector < vector < int >> matrix ( n , vector < int > ( n , 0 )); int left , right , top , bottom ; left = 0 ; top = 0 ; right = n -1 ; bottom = n -1 ; while ( left <= right && top <= bottom ){ getCycle ( matrix , top , bottom , left , right ); top ++ ; left ++ ; right -- ; bottom -- ; } return matrix ; } };","title":"59 \u87ba\u65cb\u77e9\u9635 II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/59%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20II/#\u7b97\u6cd5\u8111\u7b4b\u6025\u8f6c\u5f2f-\u7b97\u6cd5\u6a21\u62df","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 class Solution { public : //vector<vector> path; int num = 1 ; void getCycle ( vector < vector < int >>& matrix , int top , int bottom , int left , int right ){ // right [top][left] -> [top][right] int cur = left ; while ( cur <= right ){ matrix [ top ][ cur ] = num ++ ; cur ++ ; } //down [top+1][right] -> [bottom][right] cur = top + 1 ; while ( cur <= bottom ){ matrix [ cur ][ right ] = num ++ ; cur ++ ; } // left [bottom][right-1] -> [bottom][left] cur = right -1 ; while ( cur >= left && top != bottom ){ matrix [ bottom ][ cur ] = num ++ ; cur -- ; } //up [bottom-1][left] -> [top+1][left] cur = bottom - 1 ; while ( cur >= top + 1 && left != right ){ matrix [ cur ][ left ] = num ++ ; cur -- ; } } vector < vector < int >> generateMatrix ( int n ) { vector < vector < int >> matrix ( n , vector < int > ( n , 0 )); int left , right , top , bottom ; left = 0 ; top = 0 ; right = n -1 ; bottom = n -1 ; while ( left <= right && top <= bottom ){ getCycle ( matrix , top , bottom , left , right ); top ++ ; left ++ ; right -- ; bottom -- ; } return matrix ; } };","title":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f #\u7b97\u6cd5/\u6a21\u62df"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/62%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/","text":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : int uniquePaths ( int m , int n ) { vector < vector < int >> dp ( m , vector < int > ( n , 0 )); for ( int i = 0 ; i < m ; i ++ ){ for ( int j = 0 ; j < n ; j ++ ){ if ( i == 0 || j == 0 ) dp [ i ][ j ] = 1 ; else { dp [ i ][ j ] = dp [ i -1 ][ j ] + dp [ i ][ j -1 ]; } } } return dp [ m -1 ][ n -1 ]; } };","title":"62 \u4e0d\u540c\u8def\u5f84"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/62%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/#\u7b97\u6cd5dp-\u7b97\u6cd5\u4e8c\u7ef4dp","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Solution { public : int uniquePaths ( int m , int n ) { vector < vector < int >> dp ( m , vector < int > ( n , 0 )); for ( int i = 0 ; i < m ; i ++ ){ for ( int j = 0 ; j < n ; j ++ ){ if ( i == 0 || j == 0 ) dp [ i ][ j ] = 1 ; else { dp [ i ][ j ] = dp [ i -1 ][ j ] + dp [ i ][ j -1 ]; } } } return dp [ m -1 ][ n -1 ]; } };","title":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/64%20%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/","text":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : int minPathSum ( vector < vector < int >>& grid ) { vector < vector < int >> dp ( grid . size (), vector < int > ( grid [ 0 ]. size (), 0 )); dp [ 0 ][ 0 ] = grid [ 0 ][ 0 ]; for ( int j = 1 ; j < grid [ 0 ]. size (); j ++ ) dp [ 0 ][ j ] = dp [ 0 ][ j -1 ] + grid [ 0 ][ j ]; for ( int i = 1 ; i < grid . size (); i ++ ) dp [ i ][ 0 ] = dp [ i -1 ][ 0 ] + grid [ i ][ 0 ]; for ( int i = 1 ; i < grid . size (); i ++ ){ for ( int j = 1 ; j < grid [ 0 ]. size (); j ++ ){ dp [ i ][ j ] = min ( dp [ i -1 ][ j ], dp [ i ][ j -1 ]) + grid [ i ][ j ]; } } return dp [ grid . size () -1 ][ grid [ 0 ]. size () -1 ]; } };","title":"64 \u6700\u5c0f\u8def\u5f84\u548c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/64%20%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/#\u7b97\u6cd5dp-\u7b97\u6cd5\u4e8c\u7ef4dp","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : int minPathSum ( vector < vector < int >>& grid ) { vector < vector < int >> dp ( grid . size (), vector < int > ( grid [ 0 ]. size (), 0 )); dp [ 0 ][ 0 ] = grid [ 0 ][ 0 ]; for ( int j = 1 ; j < grid [ 0 ]. size (); j ++ ) dp [ 0 ][ j ] = dp [ 0 ][ j -1 ] + grid [ 0 ][ j ]; for ( int i = 1 ; i < grid . size (); i ++ ) dp [ i ][ 0 ] = dp [ i -1 ][ 0 ] + grid [ i ][ 0 ]; for ( int i = 1 ; i < grid . size (); i ++ ){ for ( int j = 1 ; j < grid [ 0 ]. size (); j ++ ){ dp [ i ][ j ] = min ( dp [ i -1 ][ j ], dp [ i ][ j -1 ]) + grid [ i ][ j ]; } } return dp [ grid . size () -1 ][ grid [ 0 ]. size () -1 ]; } };","title":"\u7b97\u6cd5/dp #\u7b97\u6cd5/\u4e8c\u7ef4dp"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/662%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AE%BD%E5%BA%A6/","text":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/BFS \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int widthOfBinaryTree ( TreeNode * root ) { if ( root == nullptr ) { return 0 ; } // \u4fdd\u5b58\u6700\u5927\u7684\u5bbd\u5ea6 int res = 0 ; // \u961f\u5217\u7528\u4e8e\u5e7f\u5ea6\u4f18\u5148\u904d\u5386 queue < TreeNode *> q ; // \u5bf9\u4e8e\u6839\u8282\u70b9\u7684\u7f16\u53f7\u4e3a0 root -> val = 0 ; q . push ( root ); while ( ! q . empty ()) { // \u57fa\u4e8e\u76ee\u524d\u961f\u5217\u5934\u548c\u5c3e\u83b7\u5f97\u5f53\u524d\u5c42\u7684\u5bbd\u5ea6 res = max ( res , q . back () -> val - q . front () -> val + 1 ); // \u7f16\u53f7\u7f29\u5c0f\u7684\u5dee\u503c int offset = q . front () -> val ; // \u904d\u5386\u5b8c\u5f53\u524d\u5c42 int n = q . size (); for ( int i = 0 ; i < n ; ++ i ) { TreeNode * curr = q . front (); q . pop (); // \u7f29\u5c0f\u6570\u503c curr -> val -= offset ; if ( curr -> left ) { // \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u7f16\u53f7 curr -> left -> val = curr -> val * 2 ; q . push ( curr -> left ); } if ( curr -> right ) { // \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u7f16\u53f7 curr -> right -> val = curr -> val * 2 + 1 ; q . push ( curr -> right ); } } } return res ; } }; C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int widthOfBinaryTree ( TreeNode * root ) { if ( ! root ) return false ; int res = 0 ; queue < TreeNode *> Q ; Q . push ( root ); root -> val = 0 ; // \u7f16\u53f7\u4e3a0 while ( ! Q . empty ()){ res = max ( res , Q . back () -> val - Q . front () -> val + 1 ); long long offset = ( long long ) Q . front () -> val ; int n = Q . size (); for ( int i = 0 ; i < n ; i ++ ){ TreeNode * cur = Q . front (); Q . pop (); cur -> val -= offset ; if ( cur -> left ){ cur -> left -> val = ( long long ) cur -> val * 2 ; Q . push ( cur -> left ); } if ( cur -> right ){ cur -> right -> val = ( long long ) cur -> val * 2 + 1 ; Q . push ( cur -> right ); } } } return res ; } };","title":"662 \u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/662%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AE%BD%E5%BA%A6/#\u7b97\u6cd5\u4e8c\u53c9\u6811-\u7b97\u6cd5bfs","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int widthOfBinaryTree ( TreeNode * root ) { if ( root == nullptr ) { return 0 ; } // \u4fdd\u5b58\u6700\u5927\u7684\u5bbd\u5ea6 int res = 0 ; // \u961f\u5217\u7528\u4e8e\u5e7f\u5ea6\u4f18\u5148\u904d\u5386 queue < TreeNode *> q ; // \u5bf9\u4e8e\u6839\u8282\u70b9\u7684\u7f16\u53f7\u4e3a0 root -> val = 0 ; q . push ( root ); while ( ! q . empty ()) { // \u57fa\u4e8e\u76ee\u524d\u961f\u5217\u5934\u548c\u5c3e\u83b7\u5f97\u5f53\u524d\u5c42\u7684\u5bbd\u5ea6 res = max ( res , q . back () -> val - q . front () -> val + 1 ); // \u7f16\u53f7\u7f29\u5c0f\u7684\u5dee\u503c int offset = q . front () -> val ; // \u904d\u5386\u5b8c\u5f53\u524d\u5c42 int n = q . size (); for ( int i = 0 ; i < n ; ++ i ) { TreeNode * curr = q . front (); q . pop (); // \u7f29\u5c0f\u6570\u503c curr -> val -= offset ; if ( curr -> left ) { // \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u7f16\u53f7 curr -> left -> val = curr -> val * 2 ; q . push ( curr -> left ); } if ( curr -> right ) { // \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u7f16\u53f7 curr -> right -> val = curr -> val * 2 + 1 ; q . push ( curr -> right ); } } } return res ; } }; C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : int widthOfBinaryTree ( TreeNode * root ) { if ( ! root ) return false ; int res = 0 ; queue < TreeNode *> Q ; Q . push ( root ); root -> val = 0 ; // \u7f16\u53f7\u4e3a0 while ( ! Q . empty ()){ res = max ( res , Q . back () -> val - Q . front () -> val + 1 ); long long offset = ( long long ) Q . front () -> val ; int n = Q . size (); for ( int i = 0 ; i < n ; i ++ ){ TreeNode * cur = Q . front (); Q . pop (); cur -> val -= offset ; if ( cur -> left ){ cur -> left -> val = ( long long ) cur -> val * 2 ; Q . push ( cur -> left ); } if ( cur -> right ){ cur -> right -> val = ( long long ) cur -> val * 2 + 1 ; Q . push ( cur -> right ); } } } return res ; } };","title":"\u7b97\u6cd5/\u4e8c\u53c9\u6811 #\u7b97\u6cd5/BFS"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/74%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5/","text":"\u7b97\u6cd5/\u4e8c\u5206 \u00b6 \u4e8c\u5206\u57fa\u7840 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : bool searchMatrix ( vector < vector < int >>& matrix , int target ) { int row = matrix . size (), col = matrix [ 0 ]. size (); int left = 0 , right = row * col -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; int r = mid / col , c = mid % col ; if ( matrix [ r ][ c ] == target ) return true ; else if ( target < matrix [ r ][ c ]){ right = mid -1 ; } else { left = mid + 1 ; } } return false ; } };","title":"74 \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/74%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5/#\u7b97\u6cd5\u4e8c\u5206","text":"\u4e8c\u5206\u57fa\u7840 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class Solution { public : bool searchMatrix ( vector < vector < int >>& matrix , int target ) { int row = matrix . size (), col = matrix [ 0 ]. size (); int left = 0 , right = row * col -1 ; while ( left <= right ){ int mid = ( left + right ) / 2 ; int r = mid / col , c = mid % col ; if ( matrix [ r ][ c ] == target ) return true ; else if ( target < matrix [ r ][ c ]){ right = mid -1 ; } else { left = mid + 1 ; } } return false ; } };","title":"\u7b97\u6cd5/\u4e8c\u5206"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/78%20%E5%AD%90%E9%9B%86/","text":"\u7b97\u6cd5/\u56de\u6eaf \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int > nums , vector < int > & path , vector < int > & vis , int len , int start ){ if ( path . size () == len ){ res . push_back ( path ); return ; } for ( int i = start ; i < nums . size (); i ++ ){ if ( vis [ i ] == 0 ){ vis [ i ] = 1 ; path . push_back ( nums [ i ]); dfs ( nums , path , vis , len , i ); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> subsets ( vector < int >& nums ) { int len = nums . size (); for ( int i = 0 ; i <= len ; i ++ ){ vector < int > vis ( len , 0 ); vector < int > path ; dfs ( nums , path , vis , i , 0 ); } return res ; } };","title":"78 \u5b50\u96c6"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/78%20%E5%AD%90%E9%9B%86/#\u7b97\u6cd5\u56de\u6eaf","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int > nums , vector < int > & path , vector < int > & vis , int len , int start ){ if ( path . size () == len ){ res . push_back ( path ); return ; } for ( int i = start ; i < nums . size (); i ++ ){ if ( vis [ i ] == 0 ){ vis [ i ] = 1 ; path . push_back ( nums [ i ]); dfs ( nums , path , vis , len , i ); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> subsets ( vector < int >& nums ) { int len = nums . size (); for ( int i = 0 ; i <= len ; i ++ ){ vector < int > vis ( len , 0 ); vector < int > path ; dfs ( nums , path , vis , i , 0 ); } return res ; } };","title":"\u7b97\u6cd5/\u56de\u6eaf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/8%20%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%95%B4%E6%95%B0/","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 class Solution { public : bool isNum ( char ch ){ int num = ch - '0' ; return (( num >= 0 ) && ( num <= 9 )); } int getNum ( char ch ){ return ( ch - '0' ); } int myAtoi ( string s ) { //int start = 0, end = 0; int flag = 0 ; int fflag = 0 ; int res = 0 ; int len = s . size (); int max = 2147483647 / 10 ; int min = 2147483648 / 10 ; for ( int i = 0 ; i < len ; i ++ ){ if ( s [ i ] == ' ' ){ if ( fflag ) break ; continue ; } if ( s [ i ] == '-' ){ if ( fflag ) break ; if ( ! fflag ) fflag = 1 ; flag = 1 ; continue ; } if ( s [ i ] == '+' ){ if ( fflag ) break ; if ( ! fflag ) fflag = 1 ; flag = 0 ; continue ; } if ( ! isNum ( s [ i ])) break ; if ( flag == 0 ){ fflag = 1 ; if ( res < max ){ res = res * 10 + getNum ( s [ i ]); } else { if ( res == max && getNum ( s [ i ]) < 8 ){ res = res * 10 + getNum ( s [ i ]); } else { res = max * 10 + 7 ; break ; } } } else { fflag = 1 ; if ( res < min ){ res = res * 10 + getNum ( s [ i ]); } else { if ( res == min && getNum ( s [ i ]) < 8 ){ res = res * 10 + getNum ( s [ i ]); } else { res = - max * 10 - 8 ; flag = 0 ; break ; } } } } if ( flag == 1 ) return - res ; return res ; } };","title":"8  \u5b57\u7b26\u4e32\u8f6c\u6574\u6570"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u4e00\u6b21\u904d\u5386 \u00b6 \u4e00\u6b21\u904d\u5386 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * deleteDuplicates ( ListNode * head ) { if ( head == nullptr ) return head ; ListNode * pre = new ListNode ( 0 ); pre -> next = head ; head = pre ; ListNode * cur = head -> next ; while ( cur != nullptr && cur -> next != nullptr ){ if ( cur -> val == cur -> next -> val ){ ListNode * last = cur ; while ( last && last -> val == cur -> val ){ // \u627e\u5230\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u7684\u8282\u70b9 last = last -> next ; } pre -> next = last ; cur = last ; } else { pre = pre -> next ; cur = cur -> next ; } } return head -> next ; } }; \u9012\u5f52 \u00b6 \u3010\u8d1f\u96ea\u660e\u70db\u3011\u9012\u5f52+\u8fed\u4ee3\uff0c\u4e00\u7bc7\u9898\u89e3\u5403\u900f\u672c\u9898 \u94fe\u8868\u548c\u6811\u7684\u95ee\u9898\uff0c\u4e00\u822c\u90fd\u53ef\u4ee5\u6709\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u5199\u6cd5\u3002\u5bf9\u4e8e\u672c\u9898\u4e00\u5b9a\u8bb0\u4f4f\u662f\u6709\u5e8f\u94fe\u8868\uff0c\u503c\u76f8\u540c\u7684\u8282\u70b9\u4f1a\u5728\u4e00\u8d77\u3002 1.1 \u9012\u5f52\u51fd\u6570\u5b9a\u4e49 \u00b6 \u9012\u5f52\u6700\u57fa\u672c\u7684\u662f\u8981\u660e\u767d\u9012\u5f52\u51fd\u6570\u7684\u5b9a\u4e49\uff01 \u6211\u53cd\u590d\u5f3a\u8c03\u8fc7\u8fd9\u4e00\u70b9\u3002 \u9012\u5f52\u51fd\u6570\u76f4\u63a5\u4f7f\u7528\u9898\u76ee\u7ed9\u51fa\u7684\u51fd\u6570 deleteDuplicates(head) \uff0c\u5b83\u7684\u542b\u4e49\u662f \u5220\u9664\u4ee5 head \u4f5c\u4e3a\u5f00\u5934\u7684\u6709\u5e8f\u94fe\u8868\u4e2d\uff0c\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\u3002 1.2 \u9012\u5f52\u7ec8\u6b62\u6761\u4ef6 \u00b6 \u7ec8\u6b62\u6761\u4ef6\u5c31\u662f\u80fd\u60f3\u5230\u7684\u57fa\u672c\u7684\u3001\u4e0d\u7528\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u7684case\u3002 - \u5982\u679c head \u4e3a\u7a7a\uff0c\u90a3\u4e48\u80af\u5b9a\u6ca1\u6709\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de head \uff1b - \u5982\u679c head.next \u4e3a\u7a7a\uff0c\u90a3\u4e48\u8bf4\u660e\u94fe\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u6ca1\u6709\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\uff0c\u4e5f\u76f4\u63a5\u8fd4\u56de head \u3002 1.3 \u9012\u5f52\u8c03\u7528 \u00b6 \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u9012\u5f52\u5462\uff1f\u6211\u4eec\u60f3\u4e00\u4e0b\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a \u5982\u679c head.val != head.next.val \uff0c\u8bf4\u660e\u5934\u8282\u70b9\u7684\u503c\u4e0d\u7b49\u4e8e\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u5f53\u524d\u7684 head \u8282\u70b9\u5fc5\u987b\u4fdd\u7559\uff1b\u4f46\u662f head.next \u8282\u70b9\u8981\u4e0d\u8981\u4fdd\u7559\u5462\uff1f\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\uff0c\u9700\u8981\u5bf9 head.next \u8fdb\u884c\u9012\u5f52\uff0c\u5373\u5bf9 head.next \u4f5c\u4e3a\u5934\u8282\u70b9\u7684\u94fe\u8868\uff0c\u53bb\u9664\u503c\u91cd\u590d\u7684\u8282\u70b9\u3002\u6240\u4ee5 head.next = self.deleteDuplicates(head.next). \u5982\u679c head.val == head.next.val \uff0c\u8bf4\u660e\u5934\u8282\u70b9\u7684\u503c\u7b49\u4e8e\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u5f53\u524d\u7684 head \u8282\u70b9\u5fc5\u987b\u5220\u9664\uff0c\u5e76\u4e14 head \u4e4b\u540e\u6240\u6709\u4e0e head.val \u76f8\u7b49\u7684\u8282\u70b9\u4e5f\u90fd\u9700\u8981\u5220\u9664\uff1b\u5220\u9664\u5230\u54ea\u4e2a\u8282\u70b9\u4e3a\u6b62\u5462\uff1f\u9700\u8981\u7528 move \u6307\u9488\u4e00\u76f4\u5411\u540e\u904d\u5386\u5bfb\u627e\u5230\u4e0e head.val \u4e0d\u7b49\u7684\u8282\u70b9\u3002\u6b64\u65f6 move \u4e4b\u524d\u7684\u8282\u70b9\u90fd\u4e0d\u4fdd\u7559\u4e86\uff0c\u56e0\u6b64\u8fd4\u56de deleteDuplicates(move); 1.4 \u8fd4\u56de\u7ed3\u679c \u00b6 \u9898\u76ee\u8ba9\u6211\u4eec\u8fd4\u56de\u5220\u9664\u4e86\u503c\u91cd\u590d\u7684\u8282\u70b9\u540e\u5269\u4f59\u7684\u94fe\u8868\uff0c\u7ed3\u5408\u4e0a\u9762\u4e24\u79cd\u9012\u5f52\u8c03\u7528\u7684\u60c5\u51b5\u3002 \u5982\u679c head.val != head.next.val \uff0c\u5934\u7ed3\u70b9\u9700\u8981\u4fdd\u7559\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u662f head\uff1b \u5982\u679c head.val == head.next.val \uff0c\u5934\u7ed3\u70b9\u9700\u8981\u5220\u9664\uff0c\u9700\u8981\u8fd4\u56de\u7684\u662fdeleteDuplicates(move);\u3002 \u5bf9\u94fe\u8868 1 -> 2 -> 2 -> 3 \u9012\u5f52\u7684\u8fc7\u7a0b\u5982\u4e0b\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * deleteDuplicates ( ListNode * head ) { // 1. \u9012\u5f52\u5b9a\u4e49\uff1a \u5220\u9664\u4ee5 head \u4f5c\u4e3a\u5f00\u5934\u7684\u6709\u5e8f\u94fe\u8868\u4e2d\uff0c\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\u3002 if ( ! head || ! head -> next ) return head ; // 2. \u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\uff1a \u7ec8\u6b62\u6761\u4ef6\u5c31\u662f\u80fd\u60f3\u5230\u7684\u57fa\u672c\u7684\u3001\u4e0d\u7528\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u7684case // 3. \u9012\u5f52\u8c03\u7528 if ( head -> val != head -> next -> val ){ // head -> next = deleteDuplicates ( head -> next ); } else { ListNode * cur = head -> next ; while ( cur && cur -> val == head -> val ){ cur = cur -> next ; } return deleteDuplicates ( cur ); } return head ; } };","title":"82 \u5220\u9664\u94fe\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20 II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u9012\u5f52-\u7b97\u6cd5\u4e00\u6b21\u904d\u5386","text":"","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u9012\u5f52 #\u7b97\u6cd5/\u4e00\u6b21\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#\u4e00\u6b21\u904d\u5386","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * deleteDuplicates ( ListNode * head ) { if ( head == nullptr ) return head ; ListNode * pre = new ListNode ( 0 ); pre -> next = head ; head = pre ; ListNode * cur = head -> next ; while ( cur != nullptr && cur -> next != nullptr ){ if ( cur -> val == cur -> next -> val ){ ListNode * last = cur ; while ( last && last -> val == cur -> val ){ // \u627e\u5230\u6700\u540e\u4e00\u4e2a\u4e0d\u540c\u7684\u8282\u70b9 last = last -> next ; } pre -> next = last ; cur = last ; } else { pre = pre -> next ; cur = cur -> next ; } } return head -> next ; } };","title":"\u4e00\u6b21\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#\u9012\u5f52","text":"\u3010\u8d1f\u96ea\u660e\u70db\u3011\u9012\u5f52+\u8fed\u4ee3\uff0c\u4e00\u7bc7\u9898\u89e3\u5403\u900f\u672c\u9898 \u94fe\u8868\u548c\u6811\u7684\u95ee\u9898\uff0c\u4e00\u822c\u90fd\u53ef\u4ee5\u6709\u9012\u5f52\u548c\u8fed\u4ee3\u4e24\u79cd\u5199\u6cd5\u3002\u5bf9\u4e8e\u672c\u9898\u4e00\u5b9a\u8bb0\u4f4f\u662f\u6709\u5e8f\u94fe\u8868\uff0c\u503c\u76f8\u540c\u7684\u8282\u70b9\u4f1a\u5728\u4e00\u8d77\u3002","title":"\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#11-\u9012\u5f52\u51fd\u6570\u5b9a\u4e49","text":"\u9012\u5f52\u6700\u57fa\u672c\u7684\u662f\u8981\u660e\u767d\u9012\u5f52\u51fd\u6570\u7684\u5b9a\u4e49\uff01 \u6211\u53cd\u590d\u5f3a\u8c03\u8fc7\u8fd9\u4e00\u70b9\u3002 \u9012\u5f52\u51fd\u6570\u76f4\u63a5\u4f7f\u7528\u9898\u76ee\u7ed9\u51fa\u7684\u51fd\u6570 deleteDuplicates(head) \uff0c\u5b83\u7684\u542b\u4e49\u662f \u5220\u9664\u4ee5 head \u4f5c\u4e3a\u5f00\u5934\u7684\u6709\u5e8f\u94fe\u8868\u4e2d\uff0c\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\u3002","title":"1.1 \u9012\u5f52\u51fd\u6570\u5b9a\u4e49"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#12-\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6","text":"\u7ec8\u6b62\u6761\u4ef6\u5c31\u662f\u80fd\u60f3\u5230\u7684\u57fa\u672c\u7684\u3001\u4e0d\u7528\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u7684case\u3002 - \u5982\u679c head \u4e3a\u7a7a\uff0c\u90a3\u4e48\u80af\u5b9a\u6ca1\u6709\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\uff0c\u76f4\u63a5\u8fd4\u56de head \uff1b - \u5982\u679c head.next \u4e3a\u7a7a\uff0c\u90a3\u4e48\u8bf4\u660e\u94fe\u8868\u4e2d\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u6ca1\u6709\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\uff0c\u4e5f\u76f4\u63a5\u8fd4\u56de head \u3002","title":"1.2 \u9012\u5f52\u7ec8\u6b62\u6761\u4ef6"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#13-\u9012\u5f52\u8c03\u7528","text":"\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u9012\u5f52\u5462\uff1f\u6211\u4eec\u60f3\u4e00\u4e0b\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a \u5982\u679c head.val != head.next.val \uff0c\u8bf4\u660e\u5934\u8282\u70b9\u7684\u503c\u4e0d\u7b49\u4e8e\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u5f53\u524d\u7684 head \u8282\u70b9\u5fc5\u987b\u4fdd\u7559\uff1b\u4f46\u662f head.next \u8282\u70b9\u8981\u4e0d\u8981\u4fdd\u7559\u5462\uff1f\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\uff0c\u9700\u8981\u5bf9 head.next \u8fdb\u884c\u9012\u5f52\uff0c\u5373\u5bf9 head.next \u4f5c\u4e3a\u5934\u8282\u70b9\u7684\u94fe\u8868\uff0c\u53bb\u9664\u503c\u91cd\u590d\u7684\u8282\u70b9\u3002\u6240\u4ee5 head.next = self.deleteDuplicates(head.next). \u5982\u679c head.val == head.next.val \uff0c\u8bf4\u660e\u5934\u8282\u70b9\u7684\u503c\u7b49\u4e8e\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u503c\uff0c\u6240\u4ee5\u5f53\u524d\u7684 head \u8282\u70b9\u5fc5\u987b\u5220\u9664\uff0c\u5e76\u4e14 head \u4e4b\u540e\u6240\u6709\u4e0e head.val \u76f8\u7b49\u7684\u8282\u70b9\u4e5f\u90fd\u9700\u8981\u5220\u9664\uff1b\u5220\u9664\u5230\u54ea\u4e2a\u8282\u70b9\u4e3a\u6b62\u5462\uff1f\u9700\u8981\u7528 move \u6307\u9488\u4e00\u76f4\u5411\u540e\u904d\u5386\u5bfb\u627e\u5230\u4e0e head.val \u4e0d\u7b49\u7684\u8282\u70b9\u3002\u6b64\u65f6 move \u4e4b\u524d\u7684\u8282\u70b9\u90fd\u4e0d\u4fdd\u7559\u4e86\uff0c\u56e0\u6b64\u8fd4\u56de deleteDuplicates(move);","title":"1.3 \u9012\u5f52\u8c03\u7528"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/82%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#14-\u8fd4\u56de\u7ed3\u679c","text":"\u9898\u76ee\u8ba9\u6211\u4eec\u8fd4\u56de\u5220\u9664\u4e86\u503c\u91cd\u590d\u7684\u8282\u70b9\u540e\u5269\u4f59\u7684\u94fe\u8868\uff0c\u7ed3\u5408\u4e0a\u9762\u4e24\u79cd\u9012\u5f52\u8c03\u7528\u7684\u60c5\u51b5\u3002 \u5982\u679c head.val != head.next.val \uff0c\u5934\u7ed3\u70b9\u9700\u8981\u4fdd\u7559\uff0c\u56e0\u6b64\u8fd4\u56de\u7684\u662f head\uff1b \u5982\u679c head.val == head.next.val \uff0c\u5934\u7ed3\u70b9\u9700\u8981\u5220\u9664\uff0c\u9700\u8981\u8fd4\u56de\u7684\u662fdeleteDuplicates(move);\u3002 \u5bf9\u94fe\u8868 1 -> 2 -> 2 -> 3 \u9012\u5f52\u7684\u8fc7\u7a0b\u5982\u4e0b\u3002 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * deleteDuplicates ( ListNode * head ) { // 1. \u9012\u5f52\u5b9a\u4e49\uff1a \u5220\u9664\u4ee5 head \u4f5c\u4e3a\u5f00\u5934\u7684\u6709\u5e8f\u94fe\u8868\u4e2d\uff0c\u503c\u51fa\u73b0\u91cd\u590d\u7684\u8282\u70b9\u3002 if ( ! head || ! head -> next ) return head ; // 2. \u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\uff1a \u7ec8\u6b62\u6761\u4ef6\u5c31\u662f\u80fd\u60f3\u5230\u7684\u57fa\u672c\u7684\u3001\u4e0d\u7528\u7ee7\u7eed\u9012\u5f52\u5904\u7406\u7684case // 3. \u9012\u5f52\u8c03\u7528 if ( head -> val != head -> next -> val ){ // head -> next = deleteDuplicates ( head -> next ); } else { ListNode * cur = head -> next ; while ( cur && cur -> val == head -> val ){ cur = cur -> next ; } return deleteDuplicates ( cur ); } return head ; } };","title":"1.4 \u8fd4\u56de\u7ed3\u679c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/876%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u5feb\u6162\u6307\u9488 #\u7b97\u6cd5/\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9 \u00b6 \u6ce8\u610f\u5224\u65ad\u6761\u4ef6\u7684\u5f02\u540c fast != nullptr && fast->next != nullptr \u548c fast->next!= nullptr && fast->next->next != nullptr \u6ce8\u610f\u4e0d\u8981\u7528 !fast \u5bb9\u6613\u51fa\u9519 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public : ListNode * middleNode ( ListNode * head ) { ListNode * fast = head ; ListNode * slow = head ; while ( fast != nullptr && fast -> next != nullptr ){ slow = slow -> next ; fast = fast -> next -> next ; } return slow ; } };","title":"876 \u94fe\u8868\u7684\u4e2d\u95f4\u8282\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/876%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u5feb\u6162\u6307\u9488-\u7b97\u6cd5\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9","text":"\u6ce8\u610f\u5224\u65ad\u6761\u4ef6\u7684\u5f02\u540c fast != nullptr && fast->next != nullptr \u548c fast->next!= nullptr && fast->next->next != nullptr \u6ce8\u610f\u4e0d\u8981\u7528 !fast \u5bb9\u6613\u51fa\u9519 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 class Solution { public : ListNode * middleNode ( ListNode * head ) { ListNode * fast = head ; ListNode * slow = head ; while ( fast != nullptr && fast -> next != nullptr ){ slow = slow -> next ; fast = fast -> next -> next ; } return slow ; } };","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u5feb\u6162\u6307\u9488 #\u7b97\u6cd5/\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/92%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20II/","text":"\u5199\u5f97\u975e\u5e38\u597d\u7684\u4e00\u7bc7\u9898\u89e3\uff1a \u6b65\u6b65\u62c6\u89e3 \u5982\u4f55\u9012\u5f52\u5f97\u53cd\u8f6c\u94fe\u8868\u7684\u4e00\u90e8\u5206 1. \u9012\u5f52\u53cd\u8f6c\u6574\u4e2a\u94fe\u8868 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || head -> next == nullptr ) return head ; ListNode * last = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return last ; } }; 2. \u53cd\u8f6c\u524d N \u4e2a\u8282\u70b9 \u00b6 3. \u53cd\u8f6c\u94fe\u8868\u7684\u4e00\u90e8\u5206 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * successor = nullptr ; ListNode * reverseN ( ListNode * head , int n ){ if ( n == 1 ){ successor = head -> next ; return head ; } ListNode * last = reverseN ( head -> next , n -1 ); head -> next -> next = head ; head -> next = successor ; return last ; } ListNode * reverseBetween ( ListNode * head , int left , int right ) { if ( left == 1 ) return reverseN ( head , right ); head -> next = reverseBetween ( head -> next , left -1 , right -1 ); return head ; } };","title":"92 \u53cd\u8f6c\u94fe\u8868 II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/92%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20II/#1-\u9012\u5f52\u53cd\u8f6c\u6574\u4e2a\u94fe\u8868","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 class Solution { public : ListNode * reverseList ( ListNode * head ) { if ( ! head || head -> next == nullptr ) return head ; ListNode * last = reverseList ( head -> next ); head -> next -> next = head ; head -> next = nullptr ; return last ; } };","title":"1. \u9012\u5f52\u53cd\u8f6c\u6574\u4e2a\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/92%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20II/#2-\u53cd\u8f6c\u524d-n-\u4e2a\u8282\u70b9","text":"","title":"2. \u53cd\u8f6c\u524d N \u4e2a\u8282\u70b9"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/92%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20II/#3-\u53cd\u8f6c\u94fe\u8868\u7684\u4e00\u90e8\u5206","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * successor = nullptr ; ListNode * reverseN ( ListNode * head , int n ){ if ( n == 1 ){ successor = head -> next ; return head ; } ListNode * last = reverseN ( head -> next , n -1 ); head -> next -> next = head ; head -> next = successor ; return last ; } ListNode * reverseBetween ( ListNode * head , int left , int right ) { if ( left == 1 ) return reverseN ( head , right ); head -> next = reverseBetween ( head -> next , left -1 , right -1 ); return head ; } };","title":"3. \u53cd\u8f6c\u94fe\u8868\u7684\u4e00\u90e8\u5206"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/93%20%E5%A4%8D%E5%8E%9Fip%E5%9C%B0%E5%9D%80/","text":"c++ \u4e2d string \u548c int \u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 class Solution { public : vector < string > res ; string vecTostring ( vector < int > list ){ string temp = \"\" ; for ( int i = 0 ; i < list . size (); i ++ ){ string num = std :: to_string ( list [ i ]); temp += num ; if ( i < 3 ) temp += '.' ; } return temp ; } void dfs ( string s , int step , int len , vector < int > & path ){ if ( step > 4 ) return ; if ( step == 4 && s . size () > 0 ) return ; if ( step == 4 && s . size () == 0 ){ res . push_back ( vecTostring ( path )); } for ( int i = 1 ; i <= 3 ; i ++ ){ if ( i <= s . size ()){ string ip = s . substr ( 0 , i ); string left = s . substr ( i , len - i ); int numIP = stoi ( ip ); if ( numIP == 0 && ip . size () > 1 ) continue ; if ( numIP > 0 && ip [ 0 ] == '0' ) continue ; if ( numIP > 255 ) continue ; path . push_back ( numIP ); dfs ( left , step + 1 , len - i , path ); path . pop_back (); } } } vector < string > restoreIpAddresses ( string s ) { int len = s . size (); if ( len <= 3 || len > 12 ) return res ; vector < int > path ; dfs ( s , 0 , len , path ); return res ; } };","title":"93 \u590d\u539fip\u5730\u5740"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/98%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/","text":"\u9012\u5f52 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : bool ranger ( TreeNode * root , long long lower , long long upper ){ if ( ! root ) return true ; if ( root -> val <= lower || root -> val >= upper ) return false ; return (( ranger ( root -> left , lower , root -> val )) && ( ranger ( root -> right , root -> val , upper ))); } bool isValidBST ( TreeNode * root ) { return ranger ( root , LONG_MIN , LONG_MAX ); } }; \u4e2d\u5e8f\u904d\u5386 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : bool isValidBST ( TreeNode * root ) { if ( ! root ) return true ; long long cur = LONG_MIN ; stack < TreeNode *> s ; while ( ! s . empty () || root ){ while ( root ){ s . push ( root ); root = root -> left ; } root = s . top (); if ( root -> val <= cur ) return false ; // cout << root->val; cur = root -> val ; s . pop (); root = root -> right ; } return true ; } };","title":"98 \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/98%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/#\u9012\u5f52","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : bool ranger ( TreeNode * root , long long lower , long long upper ){ if ( ! root ) return true ; if ( root -> val <= lower || root -> val >= upper ) return false ; return (( ranger ( root -> left , lower , root -> val )) && ( ranger ( root -> right , root -> val , upper ))); } bool isValidBST ( TreeNode * root ) { return ranger ( root , LONG_MIN , LONG_MAX ); } };","title":"\u9012\u5f52"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/98%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/#\u4e2d\u5e8f\u904d\u5386","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 /** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode() : val(0), left(nullptr), right(nullptr) {} * TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} * TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {} * }; */ class Solution { public : bool isValidBST ( TreeNode * root ) { if ( ! root ) return true ; long long cur = LONG_MIN ; stack < TreeNode *> s ; while ( ! s . empty () || root ){ while ( root ){ s . push ( root ); root = root -> left ; } root = s . top (); if ( root -> val <= cur ) return false ; // cout << root->val; cur = root -> val ; s . pop (); root = root -> right ; } return true ; } };","title":"\u4e2d\u5e8f\u904d\u5386"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/Medium/","text":"1. undo \u00b6 40 \u7ec4\u5408\u603b\u6570II _undo 61 \u65cb\u8f6c\u94fe\u8868 _undo 79 \u5355\u8bcd\u641c\u7d22 2. Review \u00b6 _review 31 \u4e0b\u4e00\u4e2a\u6392\u5217 _review 47 \u5168\u6392\u5217 II _review 93 \u590d\u539fIP\u5730\u5740 _review 151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd Medium Overview \u00b6 Text Only 1 type: folder_brief_live","title":"1. undo"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/Medium/#1-undo","text":"40 \u7ec4\u5408\u603b\u6570II _undo 61 \u65cb\u8f6c\u94fe\u8868 _undo 79 \u5355\u8bcd\u641c\u7d22","title":"1. undo"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/Medium/#2-review","text":"_review 31 \u4e0b\u4e00\u4e2a\u6392\u5217 _review 47 \u5168\u6392\u5217 II _review 93 \u590d\u539fIP\u5730\u5740 _review 151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd","title":"2. Review"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/Medium/#medium-overview","text":"Text Only 1 type: folder_brief_live","title":"Medium Overview"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%20151%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E7%9A%84%E5%8D%95%E8%AF%8D/","text":"","title":" review 151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u91cc\u7684\u5355\u8bcd"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%2031%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/","text":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f \u00b6 _review 31 \u4e0b\u4e00\u4e2a\u6392\u5217 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public : void nextPermutation ( vector < int >& nums ) { int i = nums . size () - 2 ; while ( i >= 0 && nums [ i ] >= nums [ i + 1 ]) { i -- ; } if ( i >= 0 ) { int j = nums . size () - 1 ; while ( j >= 0 && nums [ i ] >= nums [ j ]) { j -- ; } swap ( nums [ i ], nums [ j ]); } reverse ( nums . begin () + i + 1 , nums . end ()); } };","title":" review 31 \u4e0b\u4e00\u4e2a\u6392\u5217"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%2031%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/#\u7b97\u6cd5\u8111\u7b4b\u6025\u8f6c\u5f2f","text":"","title":"\u7b97\u6cd5/\u8111\u7b4b\u6025\u8f6c\u5f2f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%2031%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97/#_review-31-\u4e0b\u4e00\u4e2a\u6392\u5217","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public : void nextPermutation ( vector < int >& nums ) { int i = nums . size () - 2 ; while ( i >= 0 && nums [ i ] >= nums [ i + 1 ]) { i -- ; } if ( i >= 0 ) { int j = nums . size () - 1 ; while ( j >= 0 && nums [ i ] >= nums [ j ]) { j -- ; } swap ( nums [ i ], nums [ j ]); } reverse ( nums . begin () + i + 1 , nums . end ()); } };","title":"_review 31 \u4e0b\u4e00\u4e2a\u6392\u5217"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%2047%20%E5%85%A8%E6%8E%92%E5%88%97%20II/","text":"\u7b97\u6cd5/\u56de\u6eaf \u00b6 \u6709\u95ee\u9898\u7684\u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int > & path , vector < int > & vis , int n , vector < int > nums ){ if ( path . size () == n ){ res . push_back ( path ); return ; } for ( int i = 0 ; i < path . size (); i ++ ){ cout << path [ i ] << \" \" ; } cout << endl ; for ( int i = 0 ; i < n ; i ++ ){ if ( i == 0 && ! vis [ i ]){ vis [ i ] = 1 ; path . push_back ( i ); dfs ( path , vis , n , nums ); path . pop_back (); vis [ i ] = 0 ; } else { if ( nums [ i ] != nums [ i -1 ] && ! vis [ i ]){ vis [ i ] = 1 ; path . push_back ( i ); dfs ( path , vis , n , nums ); path . pop_back (); vis [ i ] = 0 ; } } } } vector < vector < int >> permuteUnique ( vector < int >& nums ) { vector < int > path ; vector < int > vis ( nums . size (), 0 ); dfs ( path , vis , nums . size (), nums ); return res ; } }; C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Solution { public : vector < vector < int >> res ; vector < int > path ; void dfs ( vector < int >& nums , vector < int > vis , int len ){ if ( path . size () == len ){ res . push_back ( path ); return ; } for ( int i = 0 ; i < nums . size (); i ++ ){ if ( i > 0 && nums [ i ] == nums [ i -1 ] && vis [ i -1 ]) continue ; if ( ! vis [ i ]){ vis [ i ] = 1 ; path . push_back ( nums [ i ]); dfs ( nums , vis , len ); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> permuteUnique ( vector < int >& nums ) { sort ( nums . begin (), nums . end ()); int n = nums . size (); vector < int > vis ( n , 0 ); dfs ( nums , vis , n ); return res ; } };","title":" review 47 \u5168\u6392\u5217 II"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%2047%20%E5%85%A8%E6%8E%92%E5%88%97%20II/#\u7b97\u6cd5\u56de\u6eaf","text":"\u6709\u95ee\u9898\u7684\u4ee3\u7801 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int > & path , vector < int > & vis , int n , vector < int > nums ){ if ( path . size () == n ){ res . push_back ( path ); return ; } for ( int i = 0 ; i < path . size (); i ++ ){ cout << path [ i ] << \" \" ; } cout << endl ; for ( int i = 0 ; i < n ; i ++ ){ if ( i == 0 && ! vis [ i ]){ vis [ i ] = 1 ; path . push_back ( i ); dfs ( path , vis , n , nums ); path . pop_back (); vis [ i ] = 0 ; } else { if ( nums [ i ] != nums [ i -1 ] && ! vis [ i ]){ vis [ i ] = 1 ; path . push_back ( i ); dfs ( path , vis , n , nums ); path . pop_back (); vis [ i ] = 0 ; } } } } vector < vector < int >> permuteUnique ( vector < int >& nums ) { vector < int > path ; vector < int > vis ( nums . size (), 0 ); dfs ( path , vis , nums . size (), nums ); return res ; } }; C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 class Solution { public : vector < vector < int >> res ; vector < int > path ; void dfs ( vector < int >& nums , vector < int > vis , int len ){ if ( path . size () == len ){ res . push_back ( path ); return ; } for ( int i = 0 ; i < nums . size (); i ++ ){ if ( i > 0 && nums [ i ] == nums [ i -1 ] && vis [ i -1 ]) continue ; if ( ! vis [ i ]){ vis [ i ] = 1 ; path . push_back ( nums [ i ]); dfs ( nums , vis , len ); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> permuteUnique ( vector < int >& nums ) { sort ( nums . begin (), nums . end ()); int n = nums . size (); vector < int > vis ( n , 0 ); dfs ( nums , vis , n ); return res ; } };","title":"\u7b97\u6cd5/\u56de\u6eaf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%2084%20%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2/","text":"\u5355\u8c03\u6808\u5165\u95e8 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public : int largestRectangleArea ( vector < int >& heights ) { stack < int > s ; int ans = 0 ; // \u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u63d2 0 \u5462 heights . insert ( heights . begin (), 0 ); heights . push_back ( 0 ); for ( int i = 0 ; i < heights . size (); i ++ ){ while ( ! s . empty () && heights [ i ] < heights [ s . top ()]){ int cur = s . top (); s . pop (); int left = s . top () + 1 ; int right = i ; ans = max ( ans , ( right - left ) * heights [ cur ]); } s . push ( i ); } return ans ; } };","title":" review 84 \u67f1\u72b6\u56fe\u4e2d\u6700\u5927\u7684\u77e9\u5f62"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_review%2093%20%E5%A4%8D%E5%8E%9FIP%E5%9C%B0%E5%9D%80/","text":"","title":" review 93 \u590d\u539fIP\u5730\u5740"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2061%20%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/","text":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u8fed\u4ee3 #\u7b97\u6cd5/\u5feb\u6162\u6307\u9488 \u00b6 \u5012\u6570\u7b2ck\u4e2a\u8282\u70b9 \u5feb\u6162\u6307\u9488\u9519\u4e86 \u00b6 \u6ca1\u6709\u8003\u8651\u5230\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u6ca1\u6709\u8003\u8651\u5230\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\u7684\u60c5\u51b5 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * rotateAtk ( ListNode * head , int k ){ if ( k == 0 ) return head ; auto fast = head , slow = head ; while ( k -- ){ fast = fast -> next -> next ; slow = slow -> next ; } while ( fast -> next ){ fast = fast -> next ; slow = slow -> next ; } auto res = slow -> next ; slow -> next = nullptr ; fast -> next = head ; return res ; } ListNode * rotateRight ( ListNode * head , int k ) { if ( head == nullptr ) return head ; int len = 0 ; auto cur = head ; while ( cur ){ cur = cur -> next ; len ++ ; } return rotateAtk ( head , k % len ); } }; \u7b80\u5355\u7684\u8fed\u4ee3\u5373\u53ef \u6807\u51c6\u7b54\u6848 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public : ListNode * rotateRight ( ListNode * head , int k ) { if ( k == 0 || head == nullptr || head -> next == nullptr ) { return head ; } int n = 1 ; ListNode * iter = head ; while ( iter -> next != nullptr ) { iter = iter -> next ; n ++ ; } int add = n - k % n ; if ( add == n ) { return head ; } iter -> next = head ; while ( add -- ) { iter = iter -> next ; } ListNode * ret = iter -> next ; iter -> next = nullptr ; return ret ; } }; 6\u670819\u65e5\u8ffd\u52a0 \u901a\u8fc7 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * rotateAtK ( ListNode * head , int k , int len ){ ListNode * dummy = new ListNode ( 0 ); dummy -> next = head ; auto fast = dummy , slow = dummy ; while ( k -- ){ fast = fast -> next ; } while ( fast -> next ){ slow = slow -> next ; fast = fast -> next ; } ListNode * firstHead = dummy -> next ; ListNode * firstTail = slow ; ListNode * secondHead = slow -> next ; ListNode * secondTail = fast ; dummy -> next = secondHead ; secondTail -> next = firstHead ; firstTail -> next = nullptr ; return dummy -> next ; } ListNode * rotateRight ( ListNode * head , int k ) { if ( k == 0 || head == nullptr || head -> next == nullptr ) return head ; int len = 0 ; ListNode * cur = head ; while ( cur ){ cur = cur -> next ; len ++ ; } k = k % len ; if ( k == 0 ) return head ; head = rotateAtK ( head , k , len ); return head ; } };","title":" undo 61 \u65cb\u8f6c\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2061%20%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/#\u7b97\u6cd5\u94fe\u8868-\u7b97\u6cd5\u8fed\u4ee3-\u7b97\u6cd5\u5feb\u6162\u6307\u9488","text":"\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9","title":"\u7b97\u6cd5/\u94fe\u8868 #\u7b97\u6cd5/\u8fed\u4ee3 #\u7b97\u6cd5/\u5feb\u6162\u6307\u9488"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2061%20%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/#\u5feb\u6162\u6307\u9488\u9519\u4e86","text":"\u6ca1\u6709\u8003\u8651\u5230\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u6ca1\u6709\u8003\u8651\u5230\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\u7684\u60c5\u51b5 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * rotateAtk ( ListNode * head , int k ){ if ( k == 0 ) return head ; auto fast = head , slow = head ; while ( k -- ){ fast = fast -> next -> next ; slow = slow -> next ; } while ( fast -> next ){ fast = fast -> next ; slow = slow -> next ; } auto res = slow -> next ; slow -> next = nullptr ; fast -> next = head ; return res ; } ListNode * rotateRight ( ListNode * head , int k ) { if ( head == nullptr ) return head ; int len = 0 ; auto cur = head ; while ( cur ){ cur = cur -> next ; len ++ ; } return rotateAtk ( head , k % len ); } };","title":"\u5feb\u6162\u6307\u9488\u9519\u4e86"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2061%20%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/#\u7b80\u5355\u7684\u8fed\u4ee3\u5373\u53ef-\u6807\u51c6\u7b54\u6848","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public : ListNode * rotateRight ( ListNode * head , int k ) { if ( k == 0 || head == nullptr || head -> next == nullptr ) { return head ; } int n = 1 ; ListNode * iter = head ; while ( iter -> next != nullptr ) { iter = iter -> next ; n ++ ; } int add = n - k % n ; if ( add == n ) { return head ; } iter -> next = head ; while ( add -- ) { iter = iter -> next ; } ListNode * ret = iter -> next ; iter -> next = nullptr ; return ret ; } };","title":"\u7b80\u5355\u7684\u8fed\u4ee3\u5373\u53ef \u6807\u51c6\u7b54\u6848"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2061%20%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8/#6\u670819\u65e5\u8ffd\u52a0-\u901a\u8fc7","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : ListNode * rotateAtK ( ListNode * head , int k , int len ){ ListNode * dummy = new ListNode ( 0 ); dummy -> next = head ; auto fast = dummy , slow = dummy ; while ( k -- ){ fast = fast -> next ; } while ( fast -> next ){ slow = slow -> next ; fast = fast -> next ; } ListNode * firstHead = dummy -> next ; ListNode * firstTail = slow ; ListNode * secondHead = slow -> next ; ListNode * secondTail = fast ; dummy -> next = secondHead ; secondTail -> next = firstHead ; firstTail -> next = nullptr ; return dummy -> next ; } ListNode * rotateRight ( ListNode * head , int k ) { if ( k == 0 || head == nullptr || head -> next == nullptr ) return head ; int len = 0 ; ListNode * cur = head ; while ( cur ){ cur = cur -> next ; len ++ ; } k = k % len ; if ( k == 0 ) return head ; head = rotateAtK ( head , k , len ); return head ; } };","title":"6\u670819\u65e5\u8ffd\u52a0 \u901a\u8fc7"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2079%20%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/","text":"\u7b97\u6cd5/\u56de\u6eaf \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 class Solution { public : bool rst = false ; int row , col ; string target ; void dfs ( int i , int j , string & temp , vector < vector < int >> & vis , vector < vector < char >> board ){ if ( i < 0 || i >= row || j < 0 || j >= col || vis [ i ][ j ]) return ; vis [ i ][ j ] = 1 ; temp . push_back ( board [ i ][ j ]); if ( temp == target ){ rst = true ; return ; } dfs ( i , j -1 , temp , vis , board ); dfs ( i , j + 1 , temp , vis , board ); dfs ( i -1 , j , temp , vis , board ); dfs ( i + 1 , j , temp , vis , board ); vis [ i ][ j ] = 0 ; temp . pop_back (); } bool exist ( vector < vector < char >>& board , string word ) { row = board . size (); col = board [ 0 ]. size (); target = word ; for ( int i = 0 ; i < row ; i ++ ){ for ( int j = 0 ; j < col ; j ++ ){ if ( ! rst && board [ i ][ j ] == word [ 0 ]){ string temp = \"\" ; vector < vector < int >> vis ( row , vector < int > ( col , 0 )); dfs ( i , j , temp , vis , board ); } } } return rst ; } }; \u8d85\u65f6 C++ 1 2 [[ \"b\" , \"b\" , \"a\" , \"a\" , \"b\" , \"a\" ],[ \"b\" , \"b\" , \"a\" , \"b\" , \"a\" , \"a\" ],[ \"b\" , \"b\" , \"b\" , \"b\" , \"b\" , \"b\" ],[ \"a\" , \"a\" , \"a\" , \"b\" , \"a\" , \"a\" ],[ \"a\" , \"b\" , \"a\" , \"a\" , \"b\" , \"b\" ]] \"abbbababaa\" \u8be5\u6a21\u677f\u6d89\u5acc\u5927\u91cf\u65e0\u6548\u51fd\u6570\u8c03\u7528 \u6284\u7684 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int >& path , vector < int >& vis , vector < int > candidates , int start , int target ){ if ( target < 0 ) return ; if ( target == 0 ){ res . push_back ( path ); return ; } for ( int i = start ; i < candidates . size (); i ++ ){ if ( i > start && candidates [ i ] == candidates [ i -1 ]) continue ; if ( vis [ i ] == 0 ){ path . push_back ( candidates [ i ]); vis [ i ] = 1 ; dfs ( path , vis , candidates , i + 1 , target - candidates [ i ]); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> combinationSum2 ( vector < int >& candidates , int target ) { sort ( candidates . begin (), candidates . end ()); vector < int > vis ( candidates . size (), 0 ); vector < int > path ; dfs ( path , vis , candidates , 0 , target ); return res ; } };","title":" undo 79 \u5355\u8bcd\u641c\u7d22"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2079%20%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/#\u7b97\u6cd5\u56de\u6eaf","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 class Solution { public : bool rst = false ; int row , col ; string target ; void dfs ( int i , int j , string & temp , vector < vector < int >> & vis , vector < vector < char >> board ){ if ( i < 0 || i >= row || j < 0 || j >= col || vis [ i ][ j ]) return ; vis [ i ][ j ] = 1 ; temp . push_back ( board [ i ][ j ]); if ( temp == target ){ rst = true ; return ; } dfs ( i , j -1 , temp , vis , board ); dfs ( i , j + 1 , temp , vis , board ); dfs ( i -1 , j , temp , vis , board ); dfs ( i + 1 , j , temp , vis , board ); vis [ i ][ j ] = 0 ; temp . pop_back (); } bool exist ( vector < vector < char >>& board , string word ) { row = board . size (); col = board [ 0 ]. size (); target = word ; for ( int i = 0 ; i < row ; i ++ ){ for ( int j = 0 ; j < col ; j ++ ){ if ( ! rst && board [ i ][ j ] == word [ 0 ]){ string temp = \"\" ; vector < vector < int >> vis ( row , vector < int > ( col , 0 )); dfs ( i , j , temp , vis , board ); } } } return rst ; } }; \u8d85\u65f6 C++ 1 2 [[ \"b\" , \"b\" , \"a\" , \"a\" , \"b\" , \"a\" ],[ \"b\" , \"b\" , \"a\" , \"b\" , \"a\" , \"a\" ],[ \"b\" , \"b\" , \"b\" , \"b\" , \"b\" , \"b\" ],[ \"a\" , \"a\" , \"a\" , \"b\" , \"a\" , \"a\" ],[ \"a\" , \"b\" , \"a\" , \"a\" , \"b\" , \"b\" ]] \"abbbababaa\" \u8be5\u6a21\u677f\u6d89\u5acc\u5927\u91cf\u65e0\u6548\u51fd\u6570\u8c03\u7528","title":"\u7b97\u6cd5/\u56de\u6eaf"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo%2079%20%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/#\u6284\u7684","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 class Solution { public : vector < vector < int >> res ; void dfs ( vector < int >& path , vector < int >& vis , vector < int > candidates , int start , int target ){ if ( target < 0 ) return ; if ( target == 0 ){ res . push_back ( path ); return ; } for ( int i = start ; i < candidates . size (); i ++ ){ if ( i > start && candidates [ i ] == candidates [ i -1 ]) continue ; if ( vis [ i ] == 0 ){ path . push_back ( candidates [ i ]); vis [ i ] = 1 ; dfs ( path , vis , candidates , i + 1 , target - candidates [ i ]); vis [ i ] = 0 ; path . pop_back (); } } } vector < vector < int >> combinationSum2 ( vector < int >& candidates , int target ) { sort ( candidates . begin (), candidates . end ()); vector < int > vis ( candidates . size (), 0 ); vector < int > path ; dfs ( path , vis , candidates , 0 , target ); return res ; } };","title":"\u6284\u7684"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/01%20Medium/_undo/","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public : void rotateElement ( int cur , int top , int bottom , int left , int right , vector < vector < int >>& matrix ){ swap ( matrix [ cur ][ left ], matrix [ bottom ][ cur ]); swap ( matrix [ bottom ][ cur ], matrix [ cur ][ right ]); swap ( matrix [ cur ][ right ], matrix [ top ][ cur ]); } void rotate ( vector < vector < int >>& matrix ) { int row = matrix . size (), col = matrix [ 0 ]. size (); int left , right , top , bottom ; left = top = 0 ; bottom = row - 1 ; right = col - 1 ; while ( left < right && top < bottom ){ for ( int cur = top ; cur < bottom ; cur ++ ){ rotateElement ( cur , top , bottom , left , right , matrix ); } top ++ ; bottom -- ; left ++ ; right -- ; } } };","title":" undo"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/02%20Hard/23.%20%E5%90%88%E5%B9%B6%20K%20%E4%B8%AA%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/","text":"\u7b97\u6cd5/\u5206\u6cbb #\u7b97\u6cd5/\u94fe\u8868 \u00b6 C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : // merge 2 list ListNode * merge2Lists ( ListNode * l1 , ListNode * l2 ){ if ( ! l1 ) return l2 ; if ( ! l2 ) return l1 ; ListNode * head = new ListNode ( 0 ); ListNode * cur = head ; while ( l1 && l2 ){ ListNode * newNode = new ListNode ( 0 ); cur -> next = newNode ; cur = newNode ; if ( l1 -> val < l2 -> val ){ newNode -> val = l1 -> val ; l1 = l1 -> next ; } else { newNode -> val = l2 -> val ; l2 = l2 -> next ; } } if ( l1 ) cur -> next = l1 ; if ( l2 ) cur -> next = l2 ; return head -> next ; } ListNode * merge ( vector < ListNode *>& lists , int left , int right ){ if ( left == right ) return lists [ left ]; if ( left > right ) return nullptr ; int mid = ( left + right ) >> 1 ; return merge2Lists ( merge ( lists , left , mid ), merge ( lists , mid + 1 , right )); } ListNode * mergeKLists ( vector < ListNode *>& lists ) { return merge ( lists , 0 , lists . size () -1 ); } };","title":"23. \u5408\u5e76 K \u4e2a\u6392\u5e8f\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/02%20Hard/23.%20%E5%90%88%E5%B9%B6%20K%20%E4%B8%AA%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8/#\u7b97\u6cd5\u5206\u6cbb-\u7b97\u6cd5\u94fe\u8868","text":"C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public : // merge 2 list ListNode * merge2Lists ( ListNode * l1 , ListNode * l2 ){ if ( ! l1 ) return l2 ; if ( ! l2 ) return l1 ; ListNode * head = new ListNode ( 0 ); ListNode * cur = head ; while ( l1 && l2 ){ ListNode * newNode = new ListNode ( 0 ); cur -> next = newNode ; cur = newNode ; if ( l1 -> val < l2 -> val ){ newNode -> val = l1 -> val ; l1 = l1 -> next ; } else { newNode -> val = l2 -> val ; l2 = l2 -> next ; } } if ( l1 ) cur -> next = l1 ; if ( l2 ) cur -> next = l2 ; return head -> next ; } ListNode * merge ( vector < ListNode *>& lists , int left , int right ){ if ( left == right ) return lists [ left ]; if ( left > right ) return nullptr ; int mid = ( left + right ) >> 1 ; return merge2Lists ( merge ( lists , left , mid ), merge ( lists , mid + 1 , right )); } ListNode * mergeKLists ( vector < ListNode *>& lists ) { return merge ( lists , 0 , lists . size () -1 ); } };","title":"\u7b97\u6cd5/\u5206\u6cbb #\u7b97\u6cd5/\u94fe\u8868"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/02%20Hard/42.%20%E6%8E%A5%E9%9B%A8%E6%B0%B4/","text":"739 \u6bcf\u65e5\u6e29\u5ea6 \u00b6 C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public : vector < int > dailyTemperatures ( vector < int >& temperatures ) { int len = temperatures . size (); vector < int > rst ( len , 0 ); stack < pair < int , int >> unknow_ans ; // \u5f53\u65e0\u6cd5\u786e\u5b9a\u7b54\u6848\u7684\u65f6\u5019\u624d\u8981\u5165\u6808 for ( int i = 0 ; i < len ; i ++ ){ while ( ! unknow_ans . empty () && temperatures [ i ] > unknow_ans . top (). second ){ int pos = unknow_ans . top (). first ; rst [ pos ] = i - pos ; unknow_ans . pop (); } unknow_ans . push ( make_pair ( i , temperatures [ i ])); } return rst ; } };","title":"739 \u6bcf\u65e5\u6e29\u5ea6"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/02%20Hard/42.%20%E6%8E%A5%E9%9B%A8%E6%B0%B4/#739-\u6bcf\u65e5\u6e29\u5ea6","text":"C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class Solution { public : vector < int > dailyTemperatures ( vector < int >& temperatures ) { int len = temperatures . size (); vector < int > rst ( len , 0 ); stack < pair < int , int >> unknow_ans ; // \u5f53\u65e0\u6cd5\u786e\u5b9a\u7b54\u6848\u7684\u65f6\u5019\u624d\u8981\u5165\u6808 for ( int i = 0 ; i < len ; i ++ ){ while ( ! unknow_ans . empty () && temperatures [ i ] > unknow_ans . top (). second ){ int pos = unknow_ans . top (). first ; rst [ pos ] = i - pos ; unknow_ans . pop (); } unknow_ans . push ( make_pair ( i , temperatures [ i ])); } return rst ; } };","title":"739 \u6bcf\u65e5\u6e29\u5ea6"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/03%20%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA/50%E4%BA%BF%E6%9D%A1URL%20%E4%B8%A4%E4%B8%AA%E6%96%87%E4%BB%B6%E5%86%85%E5%AD%984G%EF%BC%8C%E6%B1%82%E7%9B%B8%E5%90%8CURL/","text":"created: 2022-05-24T11:27:46 tags: [] source: \u539f\u6587\u5730\u5740 author: aspirant \u5173\u6ce8 - 21 \u7c89\u4e1d - 1094 1. \u7ed9\u5b9a a\u3001b \u4e24\u4e2a\u6587\u4ef6\uff0c\u5404\u5b58\u653e 50 \u4ebf\u4e2a url\uff0c\u6bcf\u4e2a url \u5404\u5360 64 \u5b57\u8282\uff0c\u5185\u5b58\u9650\u5236\u662f 4G\uff0c\u8ba9\u4f60\u627e\u51fa a\u3001b \u6587\u4ef6\u5171\u540c\u7684 url? \u00b6 \u5047\u5982\u6bcf\u4e2a url \u5927\u5c0f\u4e3a 10bytes\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f30\u8ba1\u6bcf\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\u4e3a 50G\u00d764=320G\uff0c\u8fdc\u8fdc\u5927\u4e8e\u5185\u5b58\u9650\u5236\u7684 4G\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u5c06\u5176\u5b8c\u5168\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5904\u7406\uff0c\u53ef\u4ee5\u91c7\u7528\u5206\u6cbb\u7684\u601d\u60f3\u6765\u89e3\u51b3\u3002 Step1\uff1a\u904d\u5386\u6587\u4ef6 a\uff0c\u5bf9\u6bcf\u4e2a url \u6c42\u53d6 hash(url)%1000\uff0c\u7136\u540e\u6839\u636e\u6240\u53d6\u5f97\u7684\u503c\u5c06 url \u5206\u522b\u5b58\u50a8\u5230 1000 \u4e2a\u5c0f\u6587\u4ef6(\u8bb0\u4e3a a0,a1,...,a999\uff0c\u6bcf\u4e2a\u5c0f\u6587\u4ef6\u7ea6 300M); Step2:\u904d\u5386\u6587\u4ef6 b\uff0c\u91c7\u53d6\u548c a \u76f8\u540c\u7684\u65b9\u5f0f\u5c06 url \u5206\u522b\u5b58\u50a8\u5230 1000 \u4e2a\u5c0f\u6587\u4ef6(\u8bb0\u4e3a b0,b1,...,b999); \u5de7\u5999\u4e4b\u5904\uff1a\u8fd9\u6837\u5904\u7406\u540e\uff0c\u6240\u6709\u53ef\u80fd\u76f8\u540c\u7684 url \u90fd\u88ab\u4fdd\u5b58\u5728\u5bf9\u5e94\u7684\u5c0f\u6587\u4ef6(a0vsb0,a1vsb1,...,a999vsb999)\u4e2d\uff0c\u4e0d\u5bf9\u5e94\u7684\u5c0f\u6587\u4ef6\u4e0d\u53ef\u80fd\u6709\u76f8\u540c\u7684 url\u3002\u7136\u540e\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u8fd9\u4e2a 1000 \u5bf9\u5c0f\u6587\u4ef6\u4e2d\u76f8\u540c\u7684 url \u5373\u53ef\u3002 Step3\uff1a\u6c42\u6bcf\u5bf9\u5c0f\u6587\u4ef6 ai \u548c bi \u4e2d\u76f8\u540c\u7684 url \u65f6\uff0c\u53ef\u4ee5\u628a ai \u7684 url \u5b58\u50a8\u5230 hash_set/hash_map \u4e2d\u3002\u7136\u540e\u904d\u5386 bi \u7684\u6bcf\u4e2a url\uff0c\u770b\u5176\u662f\u5426\u5728\u521a\u624d\u6784\u5efa\u7684 hash_set \u4e2d\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u5c31\u662f\u5171\u540c\u7684 url\uff0c\u5b58\u5230\u6587\u4ef6\u91cc\u9762\u5c31\u53ef\u4ee5\u4e86\u3002 \u8349\u56fe\u5982\u4e0b(\u5de6\u8fb9\u5206\u89e3 A\uff0c\u53f3\u8fb9\u5206\u89e3 B\uff0c\u4e2d\u95f4\u6c42\u89e3\u76f8\u540c url)\uff1a 2.\u6709\u4e00\u4e2a 1G \u5927\u5c0f\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u91cc\u9762\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u8bcd\uff0c\u8bcd\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 16 \u5b57\u8282\uff0c\u5185\u5b58\u9650\u5236\u5927\u5c0f\u662f 1M\uff0c\u8981\u6c42\u8fd4\u56de\u9891\u6570\u6700\u9ad8\u7684 100 \u4e2a\u8bcd\u3002 \u00b6 Step1\uff1a\u987a\u5e8f\u8bfb\u6587\u4ef6\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8bcd x\uff0c\u53d6 hash(x)%5000\uff0c\u7136\u540e\u6309\u7167\u8be5\u503c\u5b58\u5230 5000 \u4e2a\u5c0f\u6587\u4ef6(\u8bb0\u4e3a f0,f1,...,f4999)\u4e2d\uff0c\u8fd9\u6837\u6bcf\u4e2a\u6587\u4ef6\u5927\u6982\u662f 200k \u5de6\u53f3\uff0c\u5982\u679c\u5176\u4e2d\u7684\u6709\u7684\u6587\u4ef6\u8d85\u8fc7\u4e86 1M \u5927\u5c0f\uff0c\u8fd8\u53ef\u4ee5\u6309\u7167\u7c7b\u4f3c\u7684\u65b9\u6cd5\u7ee7\u7eed\u5f80\u4e0b\u5206\uff0c\u76f4\u5230\u5206\u89e3\u5f97\u5230\u7684\u5c0f\u6587\u4ef6\u7684\u5927\u5c0f\u90fd\u4e0d\u8d85\u8fc7 1M; Step2\uff1a\u5bf9\u6bcf\u4e2a\u5c0f\u6587\u4ef6\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u8bcd\u4ee5\u53ca\u76f8\u5e94\u7684\u9891\u7387(\u53ef\u4ee5\u91c7\u7528 trie \u6811/hash_map \u7b49)\uff0c\u5e76\u53d6\u51fa\u51fa\u73b0\u9891\u7387\u6700\u5927\u7684 100 \u4e2a\u8bcd(\u53ef\u4ee5\u7528\u542b 100 \u4e2a\u7ed3\u70b9\u7684\u6700\u5c0f\u5806)\uff0c\u5e76\u628a 100 \u8bcd\u53ca\u76f8\u5e94\u7684\u9891\u7387\u5b58\u5165\u6587\u4ef6\uff0c\u8fd9\u6837\u53c8\u5f97\u5230\u4e86 5000 \u4e2a\u6587\u4ef6; Step3\uff1a\u628a\u8fd9 5000 \u4e2a\u6587\u4ef6\u8fdb\u884c\u5f52\u5e76(\u7c7b\u4f3c\u4e0e\u5f52\u5e76\u6392\u5e8f); \u8349\u56fe\u5982\u4e0b(\u5206\u5272\u5927\u95ee\u9898\uff0c\u6c42\u89e3\u5c0f\u95ee\u9898\uff0c\u5f52\u5e76)\uff1a \u8349\u56fe\u5982\u4e0b(\u5206\u5272\u5927\u95ee\u9898\uff0c\u6c42\u89e3\u5c0f\u95ee\u9898\uff0c\u5f52\u5e76)\uff1a 3.\u73b0\u6709\u6d77\u91cf\u65e5\u5fd7\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u8d85\u7ea7\u5927\u7684\u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u65e0\u6cd5\u76f4\u63a5\u8bfb\u5165\u5185\u5b58\uff0c\u8981\u6c42\u4ece\u4e2d\u63d0\u53d6\u67d0\u5929\u51fa\u8bbf\u95ee\u767e\u5ea6\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a IP\u3002 \u00b6 Step1\uff1a\u4ece\u8fd9\u4e00\u5929\u7684\u65e5\u5fd7\u6570\u636e\u4e2d\u628a\u8bbf\u95ee\u767e\u5ea6\u7684 IP \u53d6\u51fa\u6765\uff0c\u9010\u4e2a\u5199\u5165\u5230\u4e00\u4e2a\u5927\u6587\u4ef6\u4e2d; Step2\uff1a\u6ce8\u610f\u5230 IP \u662f 32 \u4f4d\u7684\uff0c\u6700\u591a\u6709 2^32 \u4e2a IP\u3002\u540c\u6837\u53ef\u4ee5\u91c7\u7528\u6620\u5c04\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u6a21 1000\uff0c\u628a\u6574\u4e2a\u5927\u6587\u4ef6\u6620\u5c04\u4e3a 1000 \u4e2a\u5c0f\u6587\u4ef6; Step3\uff1a\u627e\u51fa\u6bcf\u4e2a\u5c0f\u6587\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u5927\u7684 IP(\u53ef\u4ee5\u91c7\u7528 hash_map \u8fdb\u884c\u9891\u7387\u7edf\u8ba1\uff0c\u7136\u540e\u518d\u627e\u51fa\u9891\u7387\u6700\u5927\u7684\u51e0\u4e2a)\u53ca\u76f8\u5e94\u7684\u9891\u7387; Step4\uff1a\u5728\u8fd9 1000 \u4e2a\u6700\u5927\u7684 IP \u4e2d\uff0c\u627e\u51fa\u90a3\u4e2a\u9891\u7387\u6700\u5927\u7684 IP\uff0c\u5373\u4e3a\u6240\u6c42\u3002 \u8349\u56fe\u5982\u4e0b\uff1a","title":"50\u4ebf\u6761URL \u4e24\u4e2a\u6587\u4ef6\u5185\u5b584G\uff0c\u6c42\u76f8\u540cURL"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/03%20%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA/50%E4%BA%BF%E6%9D%A1URL%20%E4%B8%A4%E4%B8%AA%E6%96%87%E4%BB%B6%E5%86%85%E5%AD%984G%EF%BC%8C%E6%B1%82%E7%9B%B8%E5%90%8CURL/#1-\u7ed9\u5b9a-ab-\u4e24\u4e2a\u6587\u4ef6\u5404\u5b58\u653e-50-\u4ebf\u4e2a-url\u6bcf\u4e2a-url-\u5404\u5360-64-\u5b57\u8282\u5185\u5b58\u9650\u5236\u662f-4g\u8ba9\u4f60\u627e\u51fa-ab-\u6587\u4ef6\u5171\u540c\u7684-url","text":"\u5047\u5982\u6bcf\u4e2a url \u5927\u5c0f\u4e3a 10bytes\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f30\u8ba1\u6bcf\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\u4e3a 50G\u00d764=320G\uff0c\u8fdc\u8fdc\u5927\u4e8e\u5185\u5b58\u9650\u5236\u7684 4G\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u5c06\u5176\u5b8c\u5168\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5904\u7406\uff0c\u53ef\u4ee5\u91c7\u7528\u5206\u6cbb\u7684\u601d\u60f3\u6765\u89e3\u51b3\u3002 Step1\uff1a\u904d\u5386\u6587\u4ef6 a\uff0c\u5bf9\u6bcf\u4e2a url \u6c42\u53d6 hash(url)%1000\uff0c\u7136\u540e\u6839\u636e\u6240\u53d6\u5f97\u7684\u503c\u5c06 url \u5206\u522b\u5b58\u50a8\u5230 1000 \u4e2a\u5c0f\u6587\u4ef6(\u8bb0\u4e3a a0,a1,...,a999\uff0c\u6bcf\u4e2a\u5c0f\u6587\u4ef6\u7ea6 300M); Step2:\u904d\u5386\u6587\u4ef6 b\uff0c\u91c7\u53d6\u548c a \u76f8\u540c\u7684\u65b9\u5f0f\u5c06 url \u5206\u522b\u5b58\u50a8\u5230 1000 \u4e2a\u5c0f\u6587\u4ef6(\u8bb0\u4e3a b0,b1,...,b999); \u5de7\u5999\u4e4b\u5904\uff1a\u8fd9\u6837\u5904\u7406\u540e\uff0c\u6240\u6709\u53ef\u80fd\u76f8\u540c\u7684 url \u90fd\u88ab\u4fdd\u5b58\u5728\u5bf9\u5e94\u7684\u5c0f\u6587\u4ef6(a0vsb0,a1vsb1,...,a999vsb999)\u4e2d\uff0c\u4e0d\u5bf9\u5e94\u7684\u5c0f\u6587\u4ef6\u4e0d\u53ef\u80fd\u6709\u76f8\u540c\u7684 url\u3002\u7136\u540e\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u8fd9\u4e2a 1000 \u5bf9\u5c0f\u6587\u4ef6\u4e2d\u76f8\u540c\u7684 url \u5373\u53ef\u3002 Step3\uff1a\u6c42\u6bcf\u5bf9\u5c0f\u6587\u4ef6 ai \u548c bi \u4e2d\u76f8\u540c\u7684 url \u65f6\uff0c\u53ef\u4ee5\u628a ai \u7684 url \u5b58\u50a8\u5230 hash_set/hash_map \u4e2d\u3002\u7136\u540e\u904d\u5386 bi \u7684\u6bcf\u4e2a url\uff0c\u770b\u5176\u662f\u5426\u5728\u521a\u624d\u6784\u5efa\u7684 hash_set \u4e2d\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u5c31\u662f\u5171\u540c\u7684 url\uff0c\u5b58\u5230\u6587\u4ef6\u91cc\u9762\u5c31\u53ef\u4ee5\u4e86\u3002 \u8349\u56fe\u5982\u4e0b(\u5de6\u8fb9\u5206\u89e3 A\uff0c\u53f3\u8fb9\u5206\u89e3 B\uff0c\u4e2d\u95f4\u6c42\u89e3\u76f8\u540c url)\uff1a","title":"1. \u7ed9\u5b9a a\u3001b \u4e24\u4e2a\u6587\u4ef6\uff0c\u5404\u5b58\u653e 50 \u4ebf\u4e2a url\uff0c\u6bcf\u4e2a url \u5404\u5360 64 \u5b57\u8282\uff0c\u5185\u5b58\u9650\u5236\u662f 4G\uff0c\u8ba9\u4f60\u627e\u51fa a\u3001b \u6587\u4ef6\u5171\u540c\u7684 url?"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/03%20%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA/50%E4%BA%BF%E6%9D%A1URL%20%E4%B8%A4%E4%B8%AA%E6%96%87%E4%BB%B6%E5%86%85%E5%AD%984G%EF%BC%8C%E6%B1%82%E7%9B%B8%E5%90%8CURL/#2\u6709\u4e00\u4e2a-1g-\u5927\u5c0f\u7684\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u8bcd\u8bcd\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7-16-\u5b57\u8282\u5185\u5b58\u9650\u5236\u5927\u5c0f\u662f-1m\u8981\u6c42\u8fd4\u56de\u9891\u6570\u6700\u9ad8\u7684-100-\u4e2a\u8bcd","text":"Step1\uff1a\u987a\u5e8f\u8bfb\u6587\u4ef6\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8bcd x\uff0c\u53d6 hash(x)%5000\uff0c\u7136\u540e\u6309\u7167\u8be5\u503c\u5b58\u5230 5000 \u4e2a\u5c0f\u6587\u4ef6(\u8bb0\u4e3a f0,f1,...,f4999)\u4e2d\uff0c\u8fd9\u6837\u6bcf\u4e2a\u6587\u4ef6\u5927\u6982\u662f 200k \u5de6\u53f3\uff0c\u5982\u679c\u5176\u4e2d\u7684\u6709\u7684\u6587\u4ef6\u8d85\u8fc7\u4e86 1M \u5927\u5c0f\uff0c\u8fd8\u53ef\u4ee5\u6309\u7167\u7c7b\u4f3c\u7684\u65b9\u6cd5\u7ee7\u7eed\u5f80\u4e0b\u5206\uff0c\u76f4\u5230\u5206\u89e3\u5f97\u5230\u7684\u5c0f\u6587\u4ef6\u7684\u5927\u5c0f\u90fd\u4e0d\u8d85\u8fc7 1M; Step2\uff1a\u5bf9\u6bcf\u4e2a\u5c0f\u6587\u4ef6\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u8bcd\u4ee5\u53ca\u76f8\u5e94\u7684\u9891\u7387(\u53ef\u4ee5\u91c7\u7528 trie \u6811/hash_map \u7b49)\uff0c\u5e76\u53d6\u51fa\u51fa\u73b0\u9891\u7387\u6700\u5927\u7684 100 \u4e2a\u8bcd(\u53ef\u4ee5\u7528\u542b 100 \u4e2a\u7ed3\u70b9\u7684\u6700\u5c0f\u5806)\uff0c\u5e76\u628a 100 \u8bcd\u53ca\u76f8\u5e94\u7684\u9891\u7387\u5b58\u5165\u6587\u4ef6\uff0c\u8fd9\u6837\u53c8\u5f97\u5230\u4e86 5000 \u4e2a\u6587\u4ef6; Step3\uff1a\u628a\u8fd9 5000 \u4e2a\u6587\u4ef6\u8fdb\u884c\u5f52\u5e76(\u7c7b\u4f3c\u4e0e\u5f52\u5e76\u6392\u5e8f); \u8349\u56fe\u5982\u4e0b(\u5206\u5272\u5927\u95ee\u9898\uff0c\u6c42\u89e3\u5c0f\u95ee\u9898\uff0c\u5f52\u5e76)\uff1a \u8349\u56fe\u5982\u4e0b(\u5206\u5272\u5927\u95ee\u9898\uff0c\u6c42\u89e3\u5c0f\u95ee\u9898\uff0c\u5f52\u5e76)\uff1a","title":"2.\u6709\u4e00\u4e2a 1G \u5927\u5c0f\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u91cc\u9762\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u8bcd\uff0c\u8bcd\u7684\u5927\u5c0f\u4e0d\u8d85\u8fc7 16 \u5b57\u8282\uff0c\u5185\u5b58\u9650\u5236\u5927\u5c0f\u662f 1M\uff0c\u8981\u6c42\u8fd4\u56de\u9891\u6570\u6700\u9ad8\u7684 100 \u4e2a\u8bcd\u3002"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/03%20%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA/50%E4%BA%BF%E6%9D%A1URL%20%E4%B8%A4%E4%B8%AA%E6%96%87%E4%BB%B6%E5%86%85%E5%AD%984G%EF%BC%8C%E6%B1%82%E7%9B%B8%E5%90%8CURL/#3\u73b0\u6709\u6d77\u91cf\u65e5\u5fd7\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u8d85\u7ea7\u5927\u7684\u6587\u4ef6\u4e2d\u8be5\u6587\u4ef6\u65e0\u6cd5\u76f4\u63a5\u8bfb\u5165\u5185\u5b58\u8981\u6c42\u4ece\u4e2d\u63d0\u53d6\u67d0\u5929\u51fa\u8bbf\u95ee\u767e\u5ea6\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a-ip","text":"Step1\uff1a\u4ece\u8fd9\u4e00\u5929\u7684\u65e5\u5fd7\u6570\u636e\u4e2d\u628a\u8bbf\u95ee\u767e\u5ea6\u7684 IP \u53d6\u51fa\u6765\uff0c\u9010\u4e2a\u5199\u5165\u5230\u4e00\u4e2a\u5927\u6587\u4ef6\u4e2d; Step2\uff1a\u6ce8\u610f\u5230 IP \u662f 32 \u4f4d\u7684\uff0c\u6700\u591a\u6709 2^32 \u4e2a IP\u3002\u540c\u6837\u53ef\u4ee5\u91c7\u7528\u6620\u5c04\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u6a21 1000\uff0c\u628a\u6574\u4e2a\u5927\u6587\u4ef6\u6620\u5c04\u4e3a 1000 \u4e2a\u5c0f\u6587\u4ef6; Step3\uff1a\u627e\u51fa\u6bcf\u4e2a\u5c0f\u6587\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u5927\u7684 IP(\u53ef\u4ee5\u91c7\u7528 hash_map \u8fdb\u884c\u9891\u7387\u7edf\u8ba1\uff0c\u7136\u540e\u518d\u627e\u51fa\u9891\u7387\u6700\u5927\u7684\u51e0\u4e2a)\u53ca\u76f8\u5e94\u7684\u9891\u7387; Step4\uff1a\u5728\u8fd9 1000 \u4e2a\u6700\u5927\u7684 IP \u4e2d\uff0c\u627e\u51fa\u90a3\u4e2a\u9891\u7387\u6700\u5927\u7684 IP\uff0c\u5373\u4e3a\u6240\u6c42\u3002 \u8349\u56fe\u5982\u4e0b\uff1a","title":"3.\u73b0\u6709\u6d77\u91cf\u65e5\u5fd7\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u8d85\u7ea7\u5927\u7684\u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u65e0\u6cd5\u76f4\u63a5\u8bfb\u5165\u5185\u5b58\uff0c\u8981\u6c42\u4ece\u4e2d\u63d0\u53d6\u67d0\u5929\u51fa\u8bbf\u95ee\u767e\u5ea6\u6b21\u6570\u6700\u591a\u7684\u90a3\u4e2a IP\u3002"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/01%20Leetcode/03%20%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA/c%2B%2B%20%E4%B8%AD%20string%20%E5%92%8C%20int%20%E4%B9%8B%E9%97%B4%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/","text":"string -> int \u4f7f\u7528 atoi \u51fd\u6570 C++ 1 2 3 string s = \"12\" int a = atoi ( s ); int -> string \u4f7f\u7528 to_string \u51fd\u6570 C++ 1 2 int i = 12 ; string s = to_string ( i );","title":"C++ \u4e2d string \u548c int \u4e4b\u95f4\u76f8\u4e92\u8f6c\u6362"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/","text":"\u9898\u76ee \u00b6 \u901a\u8fc7 func \u722c\u53d6\u6570\u636e\uff1b \u5f97\u5230\u6570\u636e\u653e\u5230\u89c2\u6d4b\u4e91\u91cc\uff1b \u901a\u8fc7 dql \u67e5\u6570\u636e\uff0c\u53d6\u5230 func \u91cc\uff1b \u901a\u8fc7 func \u517c\u5bb9\u7684\u7b97\u6cd5\u5305\u8fdb\u884c\u5206\u6790-\u5efa\u6a21-\u9884\u6d4b-\u9a8c\u8bc1\uff1b \u901a\u8fc7\u89c2\u6d4b\u4e91\u4eea\u8868\u76d8\u8fdb\u884c\u53ef\u89c6\u5316\u3002 1. \u901a\u8fc7 func \u722c\u53d6\u6570\u636e (GetData) \u00b6 \u4f7f\u7528 python \u7f16\u5199\u7a0b\u5e8f\u6293\u53d6\u6307\u5b9a\u5e74\u6307\u5b9a\u6708\u7684\u6570\u636e\uff08\u5e74\u6708\u53cd\u5e94\u5728 url \u4e2d\uff09 - \u4f7f\u7528 request \u5305\u83b7\u53d6\u7f51\u9875\u5185\u5bb9 - \u4f7f\u7528 BeatuifulSoup \u5305\u63d0\u53d6\u7f51\u9875\u8868\u683c\u5185\u5bb9 - \u8f6c\u6362\u6210 DataFrame \u683c\u5f0f\u5185\u5bb9 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import requests from bs4 import BeautifulSoup import pandas as pd import os def url_table_to_pandas ( url ): ''' request html data from url find_all table table to pandas ''' kv = { 'user-agent' : 'Mozilla/5.0' } # \u4f2a\u88c5\u6210\u6d4f\u89c8\u5668\uff0cheaders content = requests . get ( url , headers = kv ) table = BeautifulSoup ( content . text , 'lxml' ) . find_all ( 'table' ) df = pd . read_html ( str ( table ))[ 0 ] # Format dataframe df . columns = df . loc [ 0 , :] df = df [ 1 : ] return df 2. \u5f97\u5230\u6570\u636e\u653e\u5230\u89c2\u6d4b\u4e91\u91cc (PushData) \u00b6 GetData \u51fd\u6570\u8c03\u7528 url_table_to_pandas \u83b7\u53d6\u6570\u636e\uff08 dataframe \u683c\u5f0f\uff09\uff0c\u5e76\u5c06\u6570\u636e\u8f6c\u6362\u6210 records \u901a\u8fc7 datakit.write_metric_many \u4e0a\u4f20 records \u9047\u5230\u95ee\u9898 1: \u5c06\u771f\u5b9e\u65f6\u95f4\u6233\u4f5c\u4e3a\u4e0a\u4f20\u65f6\u95f4\u6233\uff0c\u53ea\u80fd\u4fdd\u5b58\u8fd1 7 \u5929\u6570\u636e\uff1b\u5c06\u65f6\u95f4\u6233\u4f5c\u4e3a\u5b57\u6bb5\u4e0a\u4f20\uff08\u9762\u8bd5\u5b98\u63d0\u793a\uff09 \u9047\u5230\u95ee\u9898 2: \u540c\u4e00 tag \u5728\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u4fdd\u5b58\u4e00\u6761\u6570\u636e\uff1b\u8bbe\u7f6e tag \u552f\u4e00\u6027 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 def GetData ( year = 2021 ) -> list : ''' Get the 12 months data by `url_table_to_pandas` and merge them to data(`DataFrame format`) Reorgnized them to records like: records = [ { 'measurement': 'measurement_name', 'tags': {'dataTag': '2021-12-31'}, \u6b64\u5904\u6bcf\u6761 tag \u5fc5\u987b\u8981\u6709\u552f\u4e00\u6027 'fields': {'date': '2021-12-31', 'level': \u4f18, 'AQI': 50, etc.} }, ... ] ''' data = [] for i in range ( 1 , 13 ): url = f 'http://tianqihoubao.com/aqi/shanghai- { year }{ i : 02d } .html' data . append ( url_table_to_pandas ( url )) data = pd . concat ( data , ignore_index = True ) data . columns = [ 'date' , 'level' , 'AQI' , 'AQI_rank' , 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] records = [] for item in data . to_dict ( orient = \"records\" ): records . append ({ 'measurement' : 'test_air' , 'tags' : { 'dataTag' : item [ 'date' ]}, 'fields' : item }) return records Python 1 2 3 4 5 6 7 8 @DFF . API ( 'Push_Data' ) def Push_Data ( records ): datakit = DFF . CONN ( 'datakit' ) try : status_code , result = datakit . write_metric_many ( data = records ) print ( f \"Push Success! Status_code: { status_code } , Result: { result } \" ) except Exception as e : print ( \"Push Failed!\" ) \u4e0a\u4f20\u6210\u529f\u5c55\u793a 3. \u901a\u8fc7 dql \u67e5\u6570\u636e\uff0c\u53d6\u5230 func \u91cc \u00b6 \u901a\u8fc7 dql \u8bed\u8a00\u8c03\u7528 datakit.query \u5373\u53ef Python 1 2 3 dql = \"M::`test_air`:(`date`, `level`, `AQI`, `AQI_rank`, `PM2.5`, `PM10`, `So2`, `No2`, `Co`,`O3`)\" datakit = DFF . CONN ( 'datakit' ) status_code , dql_res = datakit . query ( dql , dict_output = True ) \u9047\u5230\u95ee\u9898 1: dql \u53ea\u80fd\u6839\u636e\u4e0a\u4f20\u65f6\u95f4\u6267\u884c\u6570\u636e\u5728\u65f6\u95f4\u4e0a\u7684\u9009\u62e9\u548c\u6392\u5e8f\uff0c\u4e0d\u80fd\u5bf9\u81ea\u5b9a date \u8fdb\u884c\u6392\u5e8f\uff1b\u5c06\u6570\u636e\u91cd\u65b0\u683c\u5f0f\u5316\u4e3a dataframe \u683c\u5f0f\u5e76\u5c06 date \u5217 Dtype \u8bbe\u4e3a datetime \uff0c \u6570\u5b57\u5217\u8bbe\u4e3a float64 \u6dfb\u52a0\u4e00\u4e2a\u5904\u7406\u51fd\u6570\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 @DFF . API ( 'RUNDQL' ) def run ( dql ): ''' Run dql and get the json data Transfer the data to DataFrame(Set Dtye datetime columns and float64 columns) Return: DataFrame data ''' datakit = DFF . CONN ( 'datakit' ) status_code , dql_res = datakit . query ( dql , dict_output = True ) # Transfer to DataFrame data = [] series = dql_res [ 'series' ][ 0 ] for point in series : data . append ({ 'date' : point [ 'date' ], 'level' : point [ 'level' ], 'AQI' : point [ 'AQI' ], 'AQI_rank' : point [ 'AQI_rank' ], 'PM2.5' : point [ 'PM2.5' ], 'PM10' : point [ 'PM10' ], 'So2' : point [ 'So2' ], 'No2' : point [ 'No2' ], 'Co' : point [ 'Co' ], 'O3' : point [ 'O3' ] }) data = pd . DataFrame ( data ) # Reset Dtye numeric_feartures = [ 'AQI' , 'AQI_rank' , 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] data [ numeric_feartures ] = data [ numeric_feartures ] . astype ( float ) data . date = pd . to_datetime ( data . date , format = \"%Y-%m- %d \" ) data = data . sort_values ( by = 'date' , ignore_index = True ) return data 4. \u901a\u8fc7 func \u517c\u5bb9\u7684\u7b97\u6cd5\u5305\u8fdb\u884c\u5206\u6790-\u5efa\u6a21-\u9884\u6d4b-\u9a8c\u8bc1 \u00b6 4.1 RandomForest \u00b6 RandomForest \u9762\u5411\u8868\u683c\u6570\u636e\uff0c\u4e3a\u6ee1\u8db3\u9884\u6d4b\u4efb\u52a1\uff0c\u5229\u7528\u524d\u4e00\u5929\u7684\u6570\u636e\u4fe1\u606f\u8ba1\u7b97\u5f53\u5929\u7684 AQI \u503c\uff1b \u5728\u6570\u636e\u4e0a\u8fdb\u884c\u9519\u4f4d RF \u8bad\u7ec3 \u00b6 \u4f7f\u75282020\u5e74\u7684\u6570\u636e\u8bad\u7ec3\u5e76\u8fd4\u56de\u6a21\u578b Python 1 2 3 4 5 6 7 8 9 10 11 12 13 def Model (): dql = \"M::`air_2020`:(`date`, `level`, `AQI`, `AQI_rank`, `PM2.5`, `PM10`, `So2`, `No2`, `Co`,`O3`)\" # 2020 \u5e74\u6570\u636e data = run ( dql ) indepent_values = [ 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] X = data [: - 1 ][ indepent_values # \u9519\u4f4d depent_values = [ 'AQI' ] y = data [ 1 :][ depent_values ] # \u9519\u4f4d regressor = RandomForestRegressor ( n_estimators = 200 , random_state = 0 ) regressor . fit ( X . values , y . values ) return regressor \u7f16\u5199\u63a5\u53e3\u8fd4\u56de\u7ed3\u679c \u00b6 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 @DFF . API ( 'RandomForest Result' ) def RandomForestResult ( date ): ''' Get `date` data and predict aqi of date Return result like: { \"Date\":\"datetime.date(2021, 3, 1)\", \"Indepent_Values:[{\"PM2.5\":15,\"PM10\":18,\"So2\":4,\"No2\":33,\"Co\":0.5,\"O3\":46}], \"True_AQI\":40, \"RF_Predict_AQI\":38.805, \"RF_ERROR\":-1.19 } ''' model = Model () dql = \"M::`air_2021`:(`date`, `level`, `AQI`, `AQI_rank`, `PM2.5`, `PM10`, `So2`, `No2`, `Co`,`O3`)\" data = run ( dql ) date = pd . to_datetime ( date ) lag = datetime . timedelta ( days = 1 ) indepent_values = [ 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] indepent = data [ data . date == ( date - lag )][ indepent_values ] true_aqi = data [ data . date == date ][ \"AQI\" ] . values [ 0 ] predict_aqi = model . predict ( indepent . values )[ 0 ] error = predict_aqi - true_aqi result = { \"Date\" : date . date (), \"Indepent_Values\" : indepent . to_dict ( orient = \"records\" ), \"True_AQI\" : true_aqi , \"RF_Predict_AQI\" : predict_aqi , \"RF_ERROR\" : error } return result GET \u8bf7\u6c42\u5c55\u793a \u00b6 - \u81ea\u52a8\u722c\u53d6\u548c\u81ea\u52a8\u9884\u6d4b\u8c03\u5ea6\u8d77\u6765 -> \u5b8c\u6210\u4e0a\u7ebf\u5de5\u4f5c \u00b6","title":"\u89c2\u6d4b\u4e91\u7b14\u8bd5"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#\u9898\u76ee","text":"\u901a\u8fc7 func \u722c\u53d6\u6570\u636e\uff1b \u5f97\u5230\u6570\u636e\u653e\u5230\u89c2\u6d4b\u4e91\u91cc\uff1b \u901a\u8fc7 dql \u67e5\u6570\u636e\uff0c\u53d6\u5230 func \u91cc\uff1b \u901a\u8fc7 func \u517c\u5bb9\u7684\u7b97\u6cd5\u5305\u8fdb\u884c\u5206\u6790-\u5efa\u6a21-\u9884\u6d4b-\u9a8c\u8bc1\uff1b \u901a\u8fc7\u89c2\u6d4b\u4e91\u4eea\u8868\u76d8\u8fdb\u884c\u53ef\u89c6\u5316\u3002","title":"\u9898\u76ee"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#1--\u901a\u8fc7-func-\u722c\u53d6\u6570\u636e-getdata","text":"\u4f7f\u7528 python \u7f16\u5199\u7a0b\u5e8f\u6293\u53d6\u6307\u5b9a\u5e74\u6307\u5b9a\u6708\u7684\u6570\u636e\uff08\u5e74\u6708\u53cd\u5e94\u5728 url \u4e2d\uff09 - \u4f7f\u7528 request \u5305\u83b7\u53d6\u7f51\u9875\u5185\u5bb9 - \u4f7f\u7528 BeatuifulSoup \u5305\u63d0\u53d6\u7f51\u9875\u8868\u683c\u5185\u5bb9 - \u8f6c\u6362\u6210 DataFrame \u683c\u5f0f\u5185\u5bb9 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import requests from bs4 import BeautifulSoup import pandas as pd import os def url_table_to_pandas ( url ): ''' request html data from url find_all table table to pandas ''' kv = { 'user-agent' : 'Mozilla/5.0' } # \u4f2a\u88c5\u6210\u6d4f\u89c8\u5668\uff0cheaders content = requests . get ( url , headers = kv ) table = BeautifulSoup ( content . text , 'lxml' ) . find_all ( 'table' ) df = pd . read_html ( str ( table ))[ 0 ] # Format dataframe df . columns = df . loc [ 0 , :] df = df [ 1 : ] return df","title":"1.  \u901a\u8fc7 func \u722c\u53d6\u6570\u636e (GetData)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#2-\u5f97\u5230\u6570\u636e\u653e\u5230\u89c2\u6d4b\u4e91\u91cc-pushdata","text":"GetData \u51fd\u6570\u8c03\u7528 url_table_to_pandas \u83b7\u53d6\u6570\u636e\uff08 dataframe \u683c\u5f0f\uff09\uff0c\u5e76\u5c06\u6570\u636e\u8f6c\u6362\u6210 records \u901a\u8fc7 datakit.write_metric_many \u4e0a\u4f20 records \u9047\u5230\u95ee\u9898 1: \u5c06\u771f\u5b9e\u65f6\u95f4\u6233\u4f5c\u4e3a\u4e0a\u4f20\u65f6\u95f4\u6233\uff0c\u53ea\u80fd\u4fdd\u5b58\u8fd1 7 \u5929\u6570\u636e\uff1b\u5c06\u65f6\u95f4\u6233\u4f5c\u4e3a\u5b57\u6bb5\u4e0a\u4f20\uff08\u9762\u8bd5\u5b98\u63d0\u793a\uff09 \u9047\u5230\u95ee\u9898 2: \u540c\u4e00 tag \u5728\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u4fdd\u5b58\u4e00\u6761\u6570\u636e\uff1b\u8bbe\u7f6e tag \u552f\u4e00\u6027 Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 def GetData ( year = 2021 ) -> list : ''' Get the 12 months data by `url_table_to_pandas` and merge them to data(`DataFrame format`) Reorgnized them to records like: records = [ { 'measurement': 'measurement_name', 'tags': {'dataTag': '2021-12-31'}, \u6b64\u5904\u6bcf\u6761 tag \u5fc5\u987b\u8981\u6709\u552f\u4e00\u6027 'fields': {'date': '2021-12-31', 'level': \u4f18, 'AQI': 50, etc.} }, ... ] ''' data = [] for i in range ( 1 , 13 ): url = f 'http://tianqihoubao.com/aqi/shanghai- { year }{ i : 02d } .html' data . append ( url_table_to_pandas ( url )) data = pd . concat ( data , ignore_index = True ) data . columns = [ 'date' , 'level' , 'AQI' , 'AQI_rank' , 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] records = [] for item in data . to_dict ( orient = \"records\" ): records . append ({ 'measurement' : 'test_air' , 'tags' : { 'dataTag' : item [ 'date' ]}, 'fields' : item }) return records Python 1 2 3 4 5 6 7 8 @DFF . API ( 'Push_Data' ) def Push_Data ( records ): datakit = DFF . CONN ( 'datakit' ) try : status_code , result = datakit . write_metric_many ( data = records ) print ( f \"Push Success! Status_code: { status_code } , Result: { result } \" ) except Exception as e : print ( \"Push Failed!\" ) \u4e0a\u4f20\u6210\u529f\u5c55\u793a","title":"2. \u5f97\u5230\u6570\u636e\u653e\u5230\u89c2\u6d4b\u4e91\u91cc (PushData)"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#3--\u901a\u8fc7-dql-\u67e5\u6570\u636e\u53d6\u5230-func-\u91cc","text":"\u901a\u8fc7 dql \u8bed\u8a00\u8c03\u7528 datakit.query \u5373\u53ef Python 1 2 3 dql = \"M::`test_air`:(`date`, `level`, `AQI`, `AQI_rank`, `PM2.5`, `PM10`, `So2`, `No2`, `Co`,`O3`)\" datakit = DFF . CONN ( 'datakit' ) status_code , dql_res = datakit . query ( dql , dict_output = True ) \u9047\u5230\u95ee\u9898 1: dql \u53ea\u80fd\u6839\u636e\u4e0a\u4f20\u65f6\u95f4\u6267\u884c\u6570\u636e\u5728\u65f6\u95f4\u4e0a\u7684\u9009\u62e9\u548c\u6392\u5e8f\uff0c\u4e0d\u80fd\u5bf9\u81ea\u5b9a date \u8fdb\u884c\u6392\u5e8f\uff1b\u5c06\u6570\u636e\u91cd\u65b0\u683c\u5f0f\u5316\u4e3a dataframe \u683c\u5f0f\u5e76\u5c06 date \u5217 Dtype \u8bbe\u4e3a datetime \uff0c \u6570\u5b57\u5217\u8bbe\u4e3a float64 \u6dfb\u52a0\u4e00\u4e2a\u5904\u7406\u51fd\u6570\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 @DFF . API ( 'RUNDQL' ) def run ( dql ): ''' Run dql and get the json data Transfer the data to DataFrame(Set Dtye datetime columns and float64 columns) Return: DataFrame data ''' datakit = DFF . CONN ( 'datakit' ) status_code , dql_res = datakit . query ( dql , dict_output = True ) # Transfer to DataFrame data = [] series = dql_res [ 'series' ][ 0 ] for point in series : data . append ({ 'date' : point [ 'date' ], 'level' : point [ 'level' ], 'AQI' : point [ 'AQI' ], 'AQI_rank' : point [ 'AQI_rank' ], 'PM2.5' : point [ 'PM2.5' ], 'PM10' : point [ 'PM10' ], 'So2' : point [ 'So2' ], 'No2' : point [ 'No2' ], 'Co' : point [ 'Co' ], 'O3' : point [ 'O3' ] }) data = pd . DataFrame ( data ) # Reset Dtye numeric_feartures = [ 'AQI' , 'AQI_rank' , 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] data [ numeric_feartures ] = data [ numeric_feartures ] . astype ( float ) data . date = pd . to_datetime ( data . date , format = \"%Y-%m- %d \" ) data = data . sort_values ( by = 'date' , ignore_index = True ) return data","title":"3.  \u901a\u8fc7 dql \u67e5\u6570\u636e\uff0c\u53d6\u5230 func \u91cc"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#4-\u901a\u8fc7-func-\u517c\u5bb9\u7684\u7b97\u6cd5\u5305\u8fdb\u884c\u5206\u6790-\u5efa\u6a21-\u9884\u6d4b-\u9a8c\u8bc1","text":"","title":"4. \u901a\u8fc7 func \u517c\u5bb9\u7684\u7b97\u6cd5\u5305\u8fdb\u884c\u5206\u6790-\u5efa\u6a21-\u9884\u6d4b-\u9a8c\u8bc1"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#41-randomforest","text":"RandomForest \u9762\u5411\u8868\u683c\u6570\u636e\uff0c\u4e3a\u6ee1\u8db3\u9884\u6d4b\u4efb\u52a1\uff0c\u5229\u7528\u524d\u4e00\u5929\u7684\u6570\u636e\u4fe1\u606f\u8ba1\u7b97\u5f53\u5929\u7684 AQI \u503c\uff1b \u5728\u6570\u636e\u4e0a\u8fdb\u884c\u9519\u4f4d","title":"4.1 RandomForest"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#rf-\u8bad\u7ec3","text":"\u4f7f\u75282020\u5e74\u7684\u6570\u636e\u8bad\u7ec3\u5e76\u8fd4\u56de\u6a21\u578b Python 1 2 3 4 5 6 7 8 9 10 11 12 13 def Model (): dql = \"M::`air_2020`:(`date`, `level`, `AQI`, `AQI_rank`, `PM2.5`, `PM10`, `So2`, `No2`, `Co`,`O3`)\" # 2020 \u5e74\u6570\u636e data = run ( dql ) indepent_values = [ 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] X = data [: - 1 ][ indepent_values # \u9519\u4f4d depent_values = [ 'AQI' ] y = data [ 1 :][ depent_values ] # \u9519\u4f4d regressor = RandomForestRegressor ( n_estimators = 200 , random_state = 0 ) regressor . fit ( X . values , y . values ) return regressor","title":"RF \u8bad\u7ec3"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#\u7f16\u5199\u63a5\u53e3\u8fd4\u56de\u7ed3\u679c","text":"Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 @DFF . API ( 'RandomForest Result' ) def RandomForestResult ( date ): ''' Get `date` data and predict aqi of date Return result like: { \"Date\":\"datetime.date(2021, 3, 1)\", \"Indepent_Values:[{\"PM2.5\":15,\"PM10\":18,\"So2\":4,\"No2\":33,\"Co\":0.5,\"O3\":46}], \"True_AQI\":40, \"RF_Predict_AQI\":38.805, \"RF_ERROR\":-1.19 } ''' model = Model () dql = \"M::`air_2021`:(`date`, `level`, `AQI`, `AQI_rank`, `PM2.5`, `PM10`, `So2`, `No2`, `Co`,`O3`)\" data = run ( dql ) date = pd . to_datetime ( date ) lag = datetime . timedelta ( days = 1 ) indepent_values = [ 'PM2.5' , 'PM10' , 'So2' , 'No2' , 'Co' , 'O3' ] indepent = data [ data . date == ( date - lag )][ indepent_values ] true_aqi = data [ data . date == date ][ \"AQI\" ] . values [ 0 ] predict_aqi = model . predict ( indepent . values )[ 0 ] error = predict_aqi - true_aqi result = { \"Date\" : date . date (), \"Indepent_Values\" : indepent . to_dict ( orient = \"records\" ), \"True_AQI\" : true_aqi , \"RF_Predict_AQI\" : predict_aqi , \"RF_ERROR\" : error } return result","title":"\u7f16\u5199\u63a5\u53e3\u8fd4\u56de\u7ed3\u679c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#get-\u8bf7\u6c42\u5c55\u793a","text":"","title":"GET \u8bf7\u6c42\u5c55\u793a"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E7%AC%94%E8%AF%95/#--\u81ea\u52a8\u722c\u53d6\u548c\u81ea\u52a8\u9884\u6d4b\u8c03\u5ea6\u8d77\u6765---\u5b8c\u6210\u4e0a\u7ebf\u5de5\u4f5c","text":"","title":"- \u81ea\u52a8\u722c\u53d6\u548c\u81ea\u52a8\u9884\u6d4b\u8c03\u5ea6\u8d77\u6765 -&gt; \u5b8c\u6210\u4e0a\u7ebf\u5de5\u4f5c"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/","text":"\u9898\u76ee \u00b6 \u9879\u76ee\u5468\u671f 5 \u5929, \u8003\u5bdf\u76ee\u6807: \u5b66\u4ee5\u81f4\u7528\u7684\u80fd\u529b.. \u6d89\u53ca\u5bf9 Func \u7684\u5b89\u88c5\u914d\u7f6e, Func \u7684\u4f7f\u7528, DQL \u7684\u4f7f\u7528, \u89c2\u6d4b\u4e91\u7684\u4f7f\u7528. python \u7f16\u7a0b\u80fd\u529b\u548c\u7b97\u6cd5\u5e93\u4e0a\u624b\u80fd\u529b; \u5f00\u6e90\u8003\u8bd5, \u53ef\u67e5\u9605\u4efb\u4f55\u8d44\u6599; \u5b8c\u6210\u5373\u53ef\u5f55\u7528 . \u4ee5 2021 \u5e74\u4e0a\u6d77\u5e02\u7a7a\u6c14\u8d28\u91cf\u6570\u636e\u96c6\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e00\u79cd\u57fa\u4e8e DataFlux func \u670d\u52a1\u5feb\u901f\u5b9e\u73b0\u7a7a\u6c14\u8d28\u91cf\u6570\u636e\u91c7\u96c6\uff0c\u6570\u636e\u5206\u6790\uff0c\u5e76\u8fdb\u884c\u9884\u6d4b\u7684\u89e3\u51b3\u65b9\u6848\u3002\u53ef\u5212\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a \u901a\u8fc7 func \u722c\u53d6\u6570\u636e\uff1b \u5f97\u5230\u6570\u636e\u653e\u5230\u89c2\u6d4b\u4e91\u91cc\uff1b \u901a\u8fc7 dql \u67e5\u6570\u636e\uff0c\u53d6\u5230 func \u91cc\uff1b \u901a\u8fc7 func \u517c\u5bb9\u7684\u7b97\u6cd5\u5305\u8fdb\u884c\u5206\u6790-\u5efa\u6a21-\u9884\u6d4b-\u9a8c\u8bc1\uff1b \u901a\u8fc7\u89c2\u6d4b\u4e91\u4eea\u8868\u76d8\u8fdb\u884c\u53ef\u89c6\u5316\u3002 \u6570\u636e\u6e90\u8bf4\u660e \u6570\u636e\u6765\u6e90\uff1a http://tianqihoubao.com/ (\u53ea\u8981\u4e0a\u6d77\u5e02) \u9009\u53d6\u6307\u6807\uff1adate,level,AQI,AQI_rank,PM2.5,PM10,So2,No2,Co,O3 \u81ea\u53d8\u91cf\uff1aPM2.5,PM10,So2,No2,Co,O3 \u56e0\u53d8\u91cf\uff1aAQI \u7c7b\u522b\u53d8\u91cf\uff1alevel \u53ef\u7528\u5e93\u8bf4\u660e\uff1a numpy==1.19.5\uff1bpandas==1.3.1\uff1bscipy==1.8.0\uff1b adtk==0.6.2\uff1bstatsmodels==0.13.2\uff1bscikit-learn==0.23.2 arima holt-winters \u968f\u673a\u68ee\u6797 \u6df1\u5ea6\u5b66\u4e60lstm \u00b6 \u53c2\u8003\u94fe\u63a5: https://func.guance.com/#/ https://docs.guance.com/dql \u5b89\u88c5\u865a\u62df\u673a Parrall \u00b6 \u5982\u4f55\u901a\u8fc7 DataFlux Func \u81ea\u52a8\u4e0a\u4f20\u6570\u636e \u00b6 1. \u57fa\u7840\u8bbe\u65bd\u81ea\u5b9a\u4e49\u529f\u80fd\u4ecb\u7ecd \u00b6 2. DataKit API \u4ecb\u7ecd\uff08\u81ea\u5b9a\u4e49\u5bf9\u8c61\u793a\u4f8b\uff09 \u00b6 3. DataFlux Func \u4ecb\u7ecd \u00b6 Func \u5982\u4f55\u4e0a\u62a5\u6570\u636e\uff1f \u00b6 Dataway \u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u7684 token DataKit \u5c01\u88c5\u4e86 source\uff0c\u4e0d\u9700\u8981\u6307\u5b9a token Func \u5982\u4f55\u4e0a\u62a5\u5230 DataKit \u00b6 4. \u64cd\u4f5c\u6f14\u793a\uff1a \u5982\u4f55\u4e0a\u62a5\u81ea\u5b9a\u4e49\u5bf9\u8c61\u6570\u636e \u00b6 1. \u5b89\u88c5 DataKit \u00b6 2. \u5b89\u88c5 DataFlux Func \u00b6 3. \u8fde\u901a Func \u548c DataKit \u00b6 \u8fdb\u5165\u5230 DataKit \u7684\u76ee\u5f55 Bash 1 2 3 4 5 6 7 8 9 cd /usr/local/datakit/conf.d vim datalit.conf listen = \"0.0.0.0:9529\" datakit --restart # \u91cd\u542f curl -i xxxx # \u786e\u8ba4datakit\u662f\u5426\u6253\u5f00 \u6dfb\u52a0\u6570\u636e\u6e90 \u6dfb\u52a0\u811a\u672c\u96c6\u5408 4. \u4f7f\u7528 Func \u4e0a\u62a5\u81ea\u5b9a\u4e49\u5bf9\u8c61\u6570\u636e \u00b6 5. \u5728\u5de5\u4f5c\u7a7a\u95f4\u67e5\u770b\u4e0a\u62a5\u7684\u81ea\u5b9a\u4e49\u5bf9\u8c61 \u00b6","title":"\u89c2\u6d4b\u4e91\u9898\u76ee"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#\u9898\u76ee","text":"\u9879\u76ee\u5468\u671f 5 \u5929, \u8003\u5bdf\u76ee\u6807: \u5b66\u4ee5\u81f4\u7528\u7684\u80fd\u529b.. \u6d89\u53ca\u5bf9 Func \u7684\u5b89\u88c5\u914d\u7f6e, Func \u7684\u4f7f\u7528, DQL \u7684\u4f7f\u7528, \u89c2\u6d4b\u4e91\u7684\u4f7f\u7528. python \u7f16\u7a0b\u80fd\u529b\u548c\u7b97\u6cd5\u5e93\u4e0a\u624b\u80fd\u529b; \u5f00\u6e90\u8003\u8bd5, \u53ef\u67e5\u9605\u4efb\u4f55\u8d44\u6599; \u5b8c\u6210\u5373\u53ef\u5f55\u7528 . \u4ee5 2021 \u5e74\u4e0a\u6d77\u5e02\u7a7a\u6c14\u8d28\u91cf\u6570\u636e\u96c6\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e00\u79cd\u57fa\u4e8e DataFlux func \u670d\u52a1\u5feb\u901f\u5b9e\u73b0\u7a7a\u6c14\u8d28\u91cf\u6570\u636e\u91c7\u96c6\uff0c\u6570\u636e\u5206\u6790\uff0c\u5e76\u8fdb\u884c\u9884\u6d4b\u7684\u89e3\u51b3\u65b9\u6848\u3002\u53ef\u5212\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a \u901a\u8fc7 func \u722c\u53d6\u6570\u636e\uff1b \u5f97\u5230\u6570\u636e\u653e\u5230\u89c2\u6d4b\u4e91\u91cc\uff1b \u901a\u8fc7 dql \u67e5\u6570\u636e\uff0c\u53d6\u5230 func \u91cc\uff1b \u901a\u8fc7 func \u517c\u5bb9\u7684\u7b97\u6cd5\u5305\u8fdb\u884c\u5206\u6790-\u5efa\u6a21-\u9884\u6d4b-\u9a8c\u8bc1\uff1b \u901a\u8fc7\u89c2\u6d4b\u4e91\u4eea\u8868\u76d8\u8fdb\u884c\u53ef\u89c6\u5316\u3002 \u6570\u636e\u6e90\u8bf4\u660e \u6570\u636e\u6765\u6e90\uff1a http://tianqihoubao.com/ (\u53ea\u8981\u4e0a\u6d77\u5e02) \u9009\u53d6\u6307\u6807\uff1adate,level,AQI,AQI_rank,PM2.5,PM10,So2,No2,Co,O3 \u81ea\u53d8\u91cf\uff1aPM2.5,PM10,So2,No2,Co,O3 \u56e0\u53d8\u91cf\uff1aAQI \u7c7b\u522b\u53d8\u91cf\uff1alevel \u53ef\u7528\u5e93\u8bf4\u660e\uff1a numpy==1.19.5\uff1bpandas==1.3.1\uff1bscipy==1.8.0\uff1b adtk==0.6.2\uff1bstatsmodels==0.13.2\uff1bscikit-learn==0.23.2 arima holt-winters \u968f\u673a\u68ee\u6797","title":"\u9898\u76ee"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#\u6df1\u5ea6\u5b66\u4e60lstm","text":"\u53c2\u8003\u94fe\u63a5: https://func.guance.com/#/ https://docs.guance.com/dql","title":"\u6df1\u5ea6\u5b66\u4e60lstm"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#\u5b89\u88c5\u865a\u62df\u673a-parrall","text":"","title":"\u5b89\u88c5\u865a\u62df\u673a Parrall"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#\u5982\u4f55\u901a\u8fc7-dataflux-func-\u81ea\u52a8\u4e0a\u4f20\u6570\u636e","text":"","title":"\u5982\u4f55\u901a\u8fc7 DataFlux Func \u81ea\u52a8\u4e0a\u4f20\u6570\u636e"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#1-\u57fa\u7840\u8bbe\u65bd\u81ea\u5b9a\u4e49\u529f\u80fd\u4ecb\u7ecd","text":"","title":"1. \u57fa\u7840\u8bbe\u65bd\u81ea\u5b9a\u4e49\u529f\u80fd\u4ecb\u7ecd"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#2-datakit-api-\u4ecb\u7ecd\u81ea\u5b9a\u4e49\u5bf9\u8c61\u793a\u4f8b","text":"","title":"2. DataKit API \u4ecb\u7ecd\uff08\u81ea\u5b9a\u4e49\u5bf9\u8c61\u793a\u4f8b\uff09"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#3-dataflux-func-\u4ecb\u7ecd","text":"","title":"3. DataFlux Func \u4ecb\u7ecd"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#func-\u5982\u4f55\u4e0a\u62a5\u6570\u636e","text":"Dataway \u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u7684 token DataKit \u5c01\u88c5\u4e86 source\uff0c\u4e0d\u9700\u8981\u6307\u5b9a token","title":"Func \u5982\u4f55\u4e0a\u62a5\u6570\u636e\uff1f"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#func-\u5982\u4f55\u4e0a\u62a5\u5230-datakit","text":"","title":"Func \u5982\u4f55\u4e0a\u62a5\u5230 DataKit"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#4-\u64cd\u4f5c\u6f14\u793a-\u5982\u4f55\u4e0a\u62a5\u81ea\u5b9a\u4e49\u5bf9\u8c61\u6570\u636e","text":"","title":"4. \u64cd\u4f5c\u6f14\u793a\uff1a \u5982\u4f55\u4e0a\u62a5\u81ea\u5b9a\u4e49\u5bf9\u8c61\u6570\u636e"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#1-\u5b89\u88c5-datakit","text":"","title":"1. \u5b89\u88c5 DataKit"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#2-\u5b89\u88c5-dataflux-func","text":"","title":"2. \u5b89\u88c5 DataFlux Func"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#3-\u8fde\u901a-func-\u548c-datakit","text":"\u8fdb\u5165\u5230 DataKit \u7684\u76ee\u5f55 Bash 1 2 3 4 5 6 7 8 9 cd /usr/local/datakit/conf.d vim datalit.conf listen = \"0.0.0.0:9529\" datakit --restart # \u91cd\u542f curl -i xxxx # \u786e\u8ba4datakit\u662f\u5426\u6253\u5f00 \u6dfb\u52a0\u6570\u636e\u6e90 \u6dfb\u52a0\u811a\u672c\u96c6\u5408","title":"3. \u8fde\u901a Func \u548c DataKit"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#4-\u4f7f\u7528-func-\u4e0a\u62a5\u81ea\u5b9a\u4e49\u5bf9\u8c61\u6570\u636e","text":"","title":"4. \u4f7f\u7528 Func \u4e0a\u62a5\u81ea\u5b9a\u4e49\u5bf9\u8c61\u6570\u636e"},{"location":"1%20%E6%B1%82%E8%81%8C%E5%87%86%E5%A4%87/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/%E8%A7%82%E6%B5%8B%E4%BA%91%E9%A2%98%E7%9B%AE/#5-\u5728\u5de5\u4f5c\u7a7a\u95f4\u67e5\u770b\u4e0a\u62a5\u7684\u81ea\u5b9a\u4e49\u5bf9\u8c61","text":"","title":"5. \u5728\u5de5\u4f5c\u7a7a\u95f4\u67e5\u770b\u4e0a\u62a5\u7684\u81ea\u5b9a\u4e49\u5bf9\u8c61"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/","text":"GIT \u89c4\u8303 \u00b6 created: 2022-10-05T13:43:26 tags: [git \u89c4\u8303] source: \u539f\u6587\u5730\u5740 author: \u4e00\u3001\u5206\u652f\u7ba1\u7406 \u00b6 1.1 \u5206\u652f\u5b9a\u4e49 \u00b6 a. master \u5206\u652f \u00b6 \u4e3b\u5206\u652f\uff0c\u6700\u7a33\u5b9a\uff0c\u529f\u80fd\u6700\u5b8c\u6574\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u968f\u65f6\u53d1\u5e03\u7684\u4ee3\u7801 \u4ee5 Tag \u6807\u8bb0\u4e00\u4e2a\u7248\u672c\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a tag \u90fd\u5bf9\u5e94\u4e00\u4e2a\u7ebf\u4e0a\uff08\u751f\u4ea7\uff09\u7248\u672c master \u5206\u652f\u4e00\u822c\u7531 dev \u4ee5\u53ca fix \u5206\u652f\u5408\u5e76\uff0c\u4e0d\u5141\u5728 master \u5206\u652f\u76f4\u63a5\u63d0\u4ea4\u4ee3\u7801\uff01\uff01 b. dev \u5206\u652f \u00b6 dev \u5206\u652f\u59cb\u7ec8\u4fdd\u6301\u529f\u80fd\u6700\u5168\u3001bug \u4fee\u590d\u540e\u7684\u4ee3\u7801\uff0c\u672a\u53d1\u5e03\u6b63\u5f0f\u524d\uff0c\u529f\u80fd\u6700\u65b0\u6700\u5168\u7684\u5206\u652f \u65b0\u529f\u80fd\u5f00\u53d1\u5fc5\u987b\u57fa\u4e8e dev \u5206\u652f\u521b\u5efa\u65b0\u529f\u80fd\u7684 feat \u5206\u652f c. feat \u5206\u652f \u00b6 \u5f00\u53d1\u65b0\u529f\u80fd\uff08feature\uff09\u7531 dev \u4e3a\u57fa\u7840\u521b\u5efa\u7684\u65b0\u5206\u652f \u5206\u652f\u547d\u540d\u89c4\u5219\uff1afeat-\u529f\u80fd\u7279\u6027\uff0c\u5982\uff1afeat-profile \u8be5\u5206\u652f\u539f\u5219\u4e0a\u4e0d\u8981\u63d0\u4ea4\u5230 git \u4e2d\u592e\u5e93\uff0c\u529f\u80fd\u5f00\u53d1\u6d4b\u8bd5\u5b8c\u540e\uff0c\u53ca\u65f6\u5408\u5e76\u5230 dev \u5206\u652f\uff0c\u5e76\u5220\u9664\u8be5\u5206\u652f\u3002\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u65b0\u529f\u80fd\u662f\u548c\u591a\u4eba\u5408\u4f5c\u5f00\u53d1\u9700\u5c06\u540c\u6b65\u5230 git \u4e2d\u592e\u5e93\u3002 d. fix \u5206\u652f \u00b6 \u7ebf\u4e0a\u51fa\u73b0\u7d27\u6025 bug\uff0c\u9700\u8981\u53ca\u65f6\u4fee\u590d\uff0c\u4ee5 master \u5206\u652f\u4e3a\u57fa\u7840\uff0c\u5efa fix \u5206\u652f\uff0c\u4fee\u590d\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5408\u5e76\u5230 master \u5206\u652f\u548c dev \u5206\u652f\uff0c\u5e76\u5220\u9664\u8be5\u5206\u652f\u3002 \u5206\u652f\u547d\u540d\u89c4\u5219\uff1a\u9879\u76ee-fix-\u529f\u80fd\u7279\u6027\uff0c\u5982\uff1afix-profile e. \u8865\u5145 \u00b6 \u7a33\u5b9a\u4e14\u957f\u671f\u5b58\u5728\u7684\u5206\u652f\u53ea\u6709 master \u548c dev \u5206\u652f\uff0c\u522b\u7684\u5206\u652f\u5219\u5728\u5b8c\u6210\u5bf9\u5e94\u5f00\u53d1\u4f7f\u547d\u4e4b\u540e\u90fd\u4f1a\u5408\u5e76\u5230\u8fd9\u4e24\u4e2a\u5206\u652f\u7136\u540e\u88ab\u5220\u9664\u3002 1.2 git \u542f\u7528\u5206\u652f\u540e\u7684\u6807\u51c6\u6d41\u7a0b\u53ca\u547d\u4ee4 \u00b6 1.\u7ba1\u7406\u5458\u521b\u5efa git \u4ed3\u5e93\uff0c\u5efa\u7acb master \u5206\u652f\uff0cdev \u5206\u652f, \u547d\u4ee4\u884c\u521b\u5efa\u5982\u4e0b\uff1a Bash 1 2 3 4 5 6 7 git branch master git push -u origin master git branch dev git push -u origin dev 2.\u9879\u76ee\u6210\u5458 clone \u4ed3\u5e93\uff0c\u5e76\u5efa\u7acb\u81ea\u5df1\u7684 feat \u529f\u80fd\u5206\u652f Bash 1 2 3 4 5 git clone \u9879\u76ee\u5730\u5740 git fetch git checkout dev \u521b\u5efa\u672c\u5730\u529f\u80fd\u5206\u652f git checkout -b \u9879\u76ee-feat-\u529f\u80fd\u7279\u6027 3.\u5728\u672c\u5730\u529f\u80fd\u5206\u652f\u5f00\u53d1\uff0c git add, git commit &etc , \u6ce8\u610f\u529f\u80fd\u6a21\u5757\u4e3a\u5b8c\u6210\u6d4b\u8bd5\u4e4b\u524d\uff0c\u7981\u6b62\u5408\u5e76\u5230 dev \u6216\u8005 master \u4e0a 4.\u529f\u80fd\u5b8c\u6210\u540e\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u672c\u5730\u7684 dev \u5206\u652f\u540e push \u5230\u8fdc\u7a0b \uff0c\u5408\u5e76\u7684\u65f6\u5019\u5f88\u5927\u51e0\u7387 \u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u6b64\u65f6\u9700\u8981\u5408\u5e76\u4ee3\u7801\uff0c\u5408\u5e76\u7684\u786e\u5019\u786e\u4fdd\u4e0d\u5f71\u54cd\u9879\u76ee\u5176\u4ed6\u6210\u5458\uff0c\u5982\u679c\u591a\u4e2a\u4eba\u90fd\u64cd\u4f5c\u4e86\u540c\u4e00\u6bb5\u4ee3\u7801\uff0c\u6700\u597d\u5f53\u9762\u786e\u8ba4\u540e \u5728\u8fdb\u884c\u4fee\u6539\u3002\u7b49\u5408\u5e76\u5b8c\u6210\u786e\u8ba4\u65e0\u8bef\u540e\uff0c\u5220\u9664\u672c\u5730 feat \u5f00\u53d1\u5206\u652f, \u547d\u4ee4\u884c\u63d0\u793a: Bash 1 2 3 4 5 6 7 8 9 git checkout dev git pull origin dev git merge \u9879\u76ee-feat-\u529f\u80fd\u7279\u6027 git push origin dev git branch -d \u9879\u76ee-feat-\u529f\u80fd\u7279\u6027 5.\u53d1\u5e03\u7248\u672c\u4e4b\u540e\uff0c\u4e3a master \u6253\u4e0a tag Bash 1 2 3 4 5 git checkout master git tag -a 0 .1 -m \"Initial public release\" master git push --tags 6.bug \u4fee\u590d\u5206\u652f\uff0c\u5982\u679c\u6b63\u5728\u5f00\u53d1\u529f\u80fd\u7684\u540c\u65f6\uff0cdev \u4e0a\u7ebf\u53d1\u73b0 bug\uff0c\u6216\u8005\u672a\u4e0a\u7ebf\u53d1\u73b0\u7684 bug\uff0c\u53ef\u4ee5\u5f00\u4e00 \u4e2a fix \u5206\u652f\u6765\u4fee\u590d bug Bash 1 2 3 4 5 6 7 8 9 10 11 git checkout -b fix- ( bug-\u5206\u652f\u3001\u7279\u6027 ) ** \u4fee\u590d\u5b8c\u6210 ** git checkout bug \u5206\u652f git merge fix- ( bug-\u5206\u652f\u3001\u7279\u6027 ) git push origin bug \u5206\u652f git branch -d fix- ( bug \u5206\u652f\u3001\u7279\u6027 ) \u4e8c\u3001\u89c4\u8303\u8bf4\u660e \u00b6 2.1 \u7528\u6237\u89c4\u8303 \u00b6 1\u3001\u4f7f\u7528\u771f\u5b9e\u59d3\u540d\u63d0\u4ea4\u4ee3\u7801\uff0c\u65b9\u4fbf\u67e5\u8be2\uff0c\u901a\u8fc7\u547d\u4ee4\uff1agit config --global user.name \u771f\u5b9e\u59d3\u540d \u66f4\u65b0\u7528\u6237\u540d 2\u3001\u4e0d\u8981\u4f7f\u7528\u5176\u4ed6\u4eba\u7684\u8d26\u53f7\u83b7\u53d6\u6216\u63d0\u4ea4\u4ee3\u7801\uff0c\u6ca1\u6709\u8d26\u53f7\u6216\u5bc6\u7801\u7684\u81ea\u884c\u6ce8\u518c\uff0c\u5e76\u627e\u7ba1\u7406\u5458\u6388\u6743\u8981\u8bbf\u95ee\u7684\u9879\u76ee\u3002 2.2 \u5206\u652f\u89c4\u8303 \u00b6 1\u3001\u7981\u6b62\u5728 master \u5206\u652f\u4e0a\u5f00\u53d1\u4ee3\u7801 2\u3001\u65b0\u529f\u80fd\u5206\u652f\u4ee5 feat-\u5f00\u5934\uff0cbug \u4fee\u590d\u5206\u652f\u4ee5 fix-\u5f00\u5934 3\u3001\u521b\u5efa\u5206\u652f\u4e4b\u524d\u5148\u540c\u6b65 dev \u4ee3\u7801\uff0c\u907f\u514d\u5206\u652f\u4ece\u4e00\u5f00\u59cb\u5c31\u662f\u6bd4\u8f83\u65e7\u7684\u4ee3\u7801\uff0c\u7ed9\u5c06\u6765\u5408\u5e76\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002 4\u3001\u9700\u8981\u7d27\u6025\u4fee\u590d\u5e76\u53d1\u5e03\u7684 bug\uff0c\u4ece\u6807\u7b7e\u7248\u672c\u521b\u5efa\u5206\u652f\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u6ca1\u6709\u6807\u7b7e\u4ece master \u5206\u652f\u521b\u5efa\uff0c\u800c\u4e0d\u662f\u5176\u4ed6 5\u3001\u81ea\u5df1\u521b\u5efa\u7684\u4e34\u65f6\u5206\u652f\u6bd4\u5982 fix \u5206\u652f\u4e0d\u8981 pull \u5230 git \u670d\u52a1\u5668\u4e0a\uff0cfeature \u5206\u652f\u662f\u5426\u63a8\u5230\u8fdc\u7a0b\uff0c\u53d6\u51b3\u4e8e\u4f60\u662f\u5426\u548c\u4f60\u7684\u5c0f\u4f19\u4f34\u5408\u4f5c\u5728\u8be5\u5206\u652f\u4e0a\u5f00\u53d1 6\u3001\u5408\u5e76\u5206\u652f\u65f6\uff0c\u5982\u679c\u4ee3\u7801\u548c\u53e6\u5916\u4e00\u4eba\u51b2\u7a81\uff0c\u9700\u548c\u4ed6\u4e00\u8d77\u51b3\u5b9a\u4ee3\u7801\u7684\u53bb\u7559\uff0c\u800c\u4e0d\u662f\u81ea\u884c\u51b3\u5b9a 2.3 commit \u89c4\u8303 \u00b6 commit message \u683c\u5f0f \u793a\u4f8b\u5982\u4e0b fix(dashboard): \u66f4\u65b0 table \u5b57\u6bb5 type - feat : \u65b0\u529f\u80fd - fix : \u4fee\u590d bug - docs : \u6587\u6863\u6539\u53d8 - style : \u4ee3\u7801\u683c\u5f0f\u6539\u53d8 - refactor : \u67d0\u4e2a\u5df2\u6709\u529f\u80fd\u91cd\u6784 - perf : \u6027\u80fd\u4f18\u5316 - test : \u589e\u52a0\u6d4b\u8bd5 - build : \u6539\u53d8\u4e86 build \u5de5\u5177 \u5982 grunt \u6362\u6210\u4e86 npm - revert : \u64a4\u9500\u4e0a\u4e00\u6b21\u7684 commit - chore : \u6784\u5efa\u8fc7\u7a0b\u6216\u8f85\u52a9\u5de5\u5177\u7684\u53d8\u52a8 - ci: \u5bf9 CI \u914d\u7f6e\u6587\u4ef6\u548c\u811a\u672c\u7684\u66f4\u6539 scope - \u7528\u6765\u8bf4\u660e\u672c\u6b21 Commit \u5f71\u54cd\u7684\u8303\u56f4\uff0c\u5373\u7b80\u8981\u8bf4\u660e\u4fee\u6539\u4f1a\u6d89\u53ca\u7684\u90e8\u5206\u3002 Subject - \u7528\u6765\u7b80\u8981\u63cf\u8ff0\u672c\u6b21\u6539\u52a8\uff0c\u6982\u8ff0\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u540e\u9762\u8fd8\u4f1a\u5728 Body \u91cc\u5217\u51fa\u5177\u4f53\u4fe1\u606f\u3002 body - \u672c\u6b21\u4ee3\u7801\u6539\u52a8\u7684\u8be6\u7ec6\u4fe1\u606f \u4e3a\u4e86\u5199\u51fa\u7b26\u5408\u89c4\u8303\u7684\u63d0\u4ea4\u4fe1\u606f\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u5b89\u88c5\u63d2\u4ef6 Git Commit Template\u2193\uff1a\u8be5\u63d2\u4ef6\u8ba9\u5f00\u53d1\u4eba\u5458\u5728\u754c\u9762\u4e0a\u52fe\u52fe\u586b\u586b\u5373\u53ef\u62fc\u88c5\u51fa\u89c4\u8303\u7684 commit \u5185\u5bb9 \u5e38\u89c1\u4e0d\u5408\u89c4\u8303\u7684\u64cd\u4f5c\u4e3e\u4f8b\uff1a \u521b\u5efa\u5206\u652f\u524d\u672a\uff0c\u4e0d\u540c\u6b65\u6700\u65b0\u7684\u4ee3\u7801\uff0c\u4ece\u4e00\u5f00\u59cb\u5c31\u5bfc\u81f4\u4ee3\u7801\u4e0d\u4e00\u81f4\u4e86\u3002 \u5728\u67d0\u4e2a feat \u5206\u652f\u4e0a\u6572\u4ee3\u7801\uff0c\u4ee3\u7801\u6572\u5230\u4e00\u534a\uff0c\u9700\u8981\u7d27\u6025\u4fee\u590d bug\uff0c\u5207\u6362\u5230 master \u5206\u652f\u524d\u6ca1\u6709\u63d0\u4ea4 feat \u5206\u652f\u7684\u4ee3\u7801\uff0c\u5bfc\u81f4\u90e8\u5206 feat \u5206\u652f\u91cc\u9762\u7684\u4ee3\u7801\u8dd1\u5230 master \u5206\u652f\u4e0a\u3002 fix \u5206\u652f\u4e0d\u662f\u4ee5 master \u5206\u652f\u6216 tag \u6807\u7b7e\u4e3a\u57fa\u7840\u521b\u5efa\u7684\uff0c\u800c\u662f\u76f4\u63a5\u5728 dev \u4e0a\u521b\u5efa\u5206\u652f\uff0c\u5bfc\u81f4\u5927\u91cf\u65b0\u7684\u672a\u7ecf\u6d4b\u8bd5\u7684\u529f\u80fd\u53d1\u5e03 \u901a\u8fc7 master \u5206\u652f\u521b\u5efa\u7684\u5206\u652f\uff0c\u5408\u5e76\u7684\u65f6\u5019\u5374\u5f80 dev \u4e0a\u5408\u5e76\uff0c\u4f1a\u5bfc\u81f4\u5927\u91cf\u51b2\u7a81\uff0c\u8bb0\u4f4f\uff0c\u5206\u652f\u5c31\u50cf\u5e73\u884c\u5b87\u5b99\uff0c\u4f60\u4ece\u54ea\u4e2a\u5b87\u5b99\u7a7f\u8d8a\u8fc7\u6765\u7684\uff0c\u5728\u65b0\u7684\u5b87\u5b99\u7a7a\u95f4\u4e2d\u5fd9\u6d3b\u5b8c\u4e86\uff0c\u4e00\u5b9a\u8981\u56de\u5230\u4f60\u6765\u7684\u90a3\u4e2a\u5b87\u5b99\uff0c\u800c\u4e0d\u662f\u53c8\u7a7f\u8d8a\u5230\u7b2c\u4e09\u4e2a\u5b87\u5b99\uff0c\u5426\u5219\u65f6\u95f4\u7ebf\u4f1a\u4e71\u6389\uff0c\u53cd\u6620\u5230\u4ee3\u7801\u4e2d\u5c31\u662f\u5404\u79cd\u51b2\u7a81\u3002 \u4ee3\u7801\u53d1\u5e03\u540e\u6ca1\u6709\u6253 tag \u6807\u7b7e\uff0c\u5bfc\u81f4\u7d27\u6025\u4fee\u590d bug \u65f6\uff0c\u627e\u4e0d\u5230\u4e0a\u6b21\u53d1\u5e03\u7684\u7248\u672c\uff0c\u56e0\u4e3a master \u5206\u652f\u4e0a\u7684\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u6ca1\u6709\u5408\u5e76\u8fc7 dev \u7684\u4ee3\u7801\u3002 \u5408\u5e76\u4ee3\u7801\u51fa\u73b0\u548c\u522b\u7684\u5f00\u53d1\u4eba\u5458\u6709\u51b2\u7a81\uff0c\u81ea\u884c\u51b3\u5b9a\u4ee3\u7801\u7684\u53bb\u7559\uff0c\u800c\u4e0d\u662f\u4e24\u4eba\u4e00\u8d77\u5408\u5e76\u3002 \u63d0\u4ea4\u4ee3\u7801 commit message \u968f\u610f\u5199 123\u3001aaa\u3001\u51e0\u4e2a\u7a7a\u683c\u7b49\u4e00\u4e9b\u65e0\u610f\u4e49\u7684\u63cf\u8ff0\u4fe1\u606f\u3002 \u4e09\u3001git \u5206\u652f\u64cd\u4f5c\u624b\u518c \u00b6 1\u3001\u5f00\u53d1\u65b0\u529f\u80fd\u65f6 git \u64cd\u4f5c\u6d41\u7a0b\uff1a \u00b6 \u65b0\u5efa\u5206\u652f\uff1a Bash 1 2 3 4 5 6 7 8 9 10 11 git checkout dev # \u8fdb\u5165 dev \u5206\u652f git pull\uff08\u6216\u8005\u76f4\u63a5\u754c\u9762\u6309\u94ae\uff09 # \u62c9\u53d6\u6700\u65b0\u4ee3\u7801 git checkout -b feat-*** # \u521b\u5efa\u5e76\u5207\u6362\u81f3\u65b0\u7684\u529f\u80fd\u5f00\u53d1\u5206\u652f\u3002 \u8fdb\u884c\u5f00\u53d1\u5de5\u4f5c........ # \u4e2d\u95f4\u53ca\u65f6\u63d0\u4ea4\u4ee3\u7801\uff1a git add . git commit -m \"***' #\uff08\u6216\u8005\u754c\u9762\u64cd\u4f5c\uff0c\u53ea commit,\u4e0d\u8981 push,\u9664\u975e\u8be5 feat \u662f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\uff09 \u5408\u5e76\u5206\u652f\uff1a \u5408\u5e76\u5206\u652f\u524d\u7684\u5de5\u4f5c\uff1a \u786e\u4fdd feat-*** \u5206\u652f\u7684\u4ee3\u7801\u90fd\u5df2 commit,\u6216\u8005 stash\uff0c \u5982\u679c feat \u5206\u652f\u4e3a\u591a\u4eba\u5408\u4f5c\u5f00\u53d1\uff0c\u8fd8\u9700\u8981 git pull \u62c9\u53d6\u8fdc\u7a0b\u4ee3\u7801\u3002 Bash 1 2 3 4 5 git checkout dev # \u5207\u6362\u5230 dev \u5206\u652f git pull # \u62c9\u53d6 dev \u65b0\u4ee3\u7801 git merge feat-*** # \u5408\u5e76\u65b0\u5f00\u53d1\u5206\u652f \u5f53\u524d dev \u5206\u652f\u5305\u542b\u4e86\u65b0\u529f\u80fd\u7684\u4ee3\u7801\uff0c\u6253\u5305\u53d1\u5e03\u6d4b\u8bd5\u73af\u5883\uff0c\u4ea4\u6d4b\u8bd5\u4eba\u5458\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u6ca1\u95ee\u9898\u5408\u5e76\u5230 master \u5206\u652f\uff0c Bash 1 2 3 4 5 6 7 git checkout master # \u5207\u6362\u5230 master \u5206\u652f git pull master # \u62c9\u53d6 master \u6700\u65b0\u4ee3\u7801 git merge dev # \u5408\u5e76 dev \u5206\u652f\u4ee3\u7801 git tag -a v2.1.0 -m 'v2.1.0 \u53d1\u5e03\u7248\u672c' # \u4e3a\u5f53\u524d master \u8282\u70b9\u6253\u4e00\u4e2a v2.1.0 \u7684\u6807\u7b7e 2\u3001\u4fee\u590d bug \u65f6 git \u64cd\u4f5c\u6d41\u7a0b\uff1a \u00b6 \u6bcf\u4e00\u6b21\u7248\u672c\u53d1\u5e03\u6211\u4eec\u90fd\u4f1a\u4e3a\u65b0\u7248\u672c\u6253\u4e00\u4e2a tag,\u5982\u679c\u4e0a\u4e2a\u7248\u672c\u4e3a v2.1.0\uff0c\u5219\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a Bash 1 2 3 4 5 6 7 8 git checkout -b fix-*** v2.1.0 # \u4ee5 v2.1.0 \u7248\u672c\u4e3a\u57fa\u7840\u521b\u5efa\u4fee\u590d\u5206\u652f fix-*** ***\u8fdb\u884c bug \u4fee\u590d\u5de5\u4f5c......*** # \u4e2d\u95f4\u53ca\u65f6\u63d0\u4ea4\u4ee3\u7801 git add . git commit -m '***' # (\u6216\u8005\u754c\u9762\u64cd\u4f5c\uff0c\u53ea commit,\u4e0d\u8981 push,\u9664\u975e\u8be5 fix \u662f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\uff09 \u4fee\u590d\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u6253\u5305\u53d1\u5e03\u6d4b\u8bd5\u73af\u5883\uff0c\u4ea4\u5f00\u53d1\u4eba\u5458\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u6ca1\u95ee\u9898\u5c06\u4ee3\u7801\u5408\u5e76\u81f3 master Bash 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 git checkout master # \u5207\u6362\u81f3 master \u5206\u652f git pull # \u62c9\u53d6 master \u4ee3\u7801 git merge fix-*** # \u628a\u4fee\u590d\u7684\u4ee3\u7801\u5408\u5e76\u56de master \u5206\u652f git tag -a v2.1.1 -m 'v2.1.1 \u4fee\u590d***\u7684\u53d1\u5e03\u7248\u672c' # \u4e3a\u5f53\u524d\u5e26\u53d1\u5e03\u7684\u66f4\u65b0\u7248\u672c\u6253 v2.1.1 \u7684\u6807\u7b7e git log # \u67e5\u770b master \u5206\u652f\u4ee3\u7801\u63d0\u4ea4 id\uff0c\u8bb0\u5f55\u4e0b bug \u4fee\u590d\u7684 id git checkout dev # \u5207\u6362\u81f3 dev \u5206\u652f git pull # \u62c9\u4ee3\u7801 git cherry-pick commitId # \u628a master \u5206\u652f\u4e0a\u7684\u4fee\u590d\u4ee3\u7801\u7684\u90a3\u6b21\u63d0\u4ea4\u5408\u5e76\u5230 dev \u5206\u652f\uff0c\u8fd9\u6837\u4fee\u590d\u7684\u4ee3\u7801\u5728 dev \u548c master \u4e0a\u90fd\u6709\u4e86 git branch -d fix-**** # (\u5220\u9664\u4e34\u65f6\u4fee\u590d\u5206\u652f) \u56db\u3001\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u7ba1\u7406\u6d41\u7a0b\uff08\u5fc5\u770b\uff09\uff1a \u00b6 git branch \u67e5\u770b\u5f53\u524d\u5206\u652f\u72b6\u6001\uff1a git pull \uff08\u5f00\u59cb\u6572\u4ee3\u7801\u4e4b\u524d\u5148\u540c\u6b65\u5927\u5bb6\u7684\u4ee3\u7801\uff09 git checkout -b feat-yljgdm \uff08\u5207\u6362\u5230\u5206\u652f feat-yljgdm\uff0c\u53c2\u6570-b \u7684\u610f\u601d\u662f\u5982\u679c\u6ca1\u6709\u5206\u652f\u81ea\u52a8\u521b\u5efa\u8be5\u5206\u652f\uff09 git branch \uff08\u67e5\u770b\u5206\u652f\u72b6\u6001\uff0c\u5f53\u524d\u5206\u652f\u524d\u9762\u6709\u4e00\u4e2a\u661f\u53f7\uff09 \u4e4b\u6240\u4ee5\u65b0\u5efa\u4e00\u4e2a feat \u5206\u652f\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5728 dev \u4e0a\u5f00\u53d1\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1 dev \u4e0a\u9762\u90fd\u662f\u5f00\u53d1\u5b8c\u6210\u7684\u529f\u80fd\uff0c\u80fd\u505a\u5230\u968f\u65f6\u5408\u5e76\u5230 master \u5206\u652f\u5e76\u8fdb\u884c\u53d1\u5e03\u7684\u72b6\u6001\u3002 ......\u521b\u5efa\u7c7b\uff0c\u5199\u4ee3\u7801\uff0c\u7b49\u7b49\u7b49\u4e00\u7cfb\u5217\u64cd\u4f5c.....\u7136\u540e\u63d0\u4ea4\u4ee3\u7801\uff0c\u8fd9\u79cd\u4e34\u65f6\u7684\u5c0f\u7684\u5206\u652f\uff0c\u53ea\u9700 commit,\u4e0d\u8981 push \u8fd9\u4e2a\u65f6\u5019\u7a81\u7136\u63a5\u6536\u5230\u4e00\u4e2a\u7528\u6237\u53cd\u9988\u7684 bug,\u9700\u8981\u7d27\u6025\u4fee\u590d\uff0c\u5e76\u4e0e\u4eca\u665a\u53d1\u5e03\u3002 git checkout master \uff08\u5207\u6362\u81f3\u4e3b\u5206\u652f\uff0c\u5207\u6362\u5206\u652f\u4e4b\u524d\uff0c\u786e\u4fdd\u4e4b\u524d feat \u5206\u652f\u7684\u4ee3\u7801\u5df2\u7ecf commit\uff0c\u5426\u5219\u5207\u6362\u5176\u4ed6\u5206\u652f\u540e\uff0c\u8fd9\u4e9b\u6ca1\u63d0\u4ea4\u7684\u4ee3\u7801\u4e5f\u4f1a\u5e26\u8fc7\u53bb\uff0c\u56e0\u4e3a\u6ca1\u6709\u63d0\u4ea4\u5230\u4ed3\u5e93\u7684\u4ee3\u7801\uff0cgit \u662f\u4e0d\u4f1a\u5e2e\u4f60\u7ba1\u7406\u7684\uff01\uff01\u5982\u679c\u5de5\u4f5c\u53ea\u8fdb\u884c\u4e00\u534a\u4ee3\u7801\u8fd8\u6709\u95ee\u9898\u786e\u5b9e\u4e0d\u80fd\u63d0\u4ea4\u3002\u800c\u522b\u4eba\u53c8\u7740\u6025\u7b49\u7740\u4f60\u53bb\u53e6\u4e00\u4e2a\u5206\u652f\u89e3\u51b3\u95ee\u9898\uff0c\u4f7f\u7528 git stash \u547d\u4ee4\u628a\u4f60\u5f53\u524d\u5206\u652f\u672a\u63d0\u4ea4\u7684\u4ee3\u7801\u9690\u85cf\u8d77\u6765\u3002\u53bb\u5176\u4ed6\u5206\u652f\u5e72\u5b8c\u6d3b\u540e\u518d\u6b21\u6765\u5230\u4f60\u7684\u5206\u652f\uff0c\u4f7f\u7528 git stash pop \u547d\u540d\u6062\u590d\u4f60\u4e0a\u6b21\u7684\u5de5\u4f5c\u73b0\u573a\uff09 git pull (\u66f4\u65b0\u4e3b\u5206\u652f\u6700\u65b0\u4ee3\u7801) git checkout -b fix-ztbz\uff08\u4ece\u4e3b\u5206\u652f\u521b\u5efa\u4fee\u590d\u5206\u652f\uff09 \uff08\u8981\u70b9\uff1a\u4e00\u5b9a\u8981\u4ece\u4e3b\u5206\u652f\u4e3a\u57fa\u7840\u521b\u5efa\u5206\u652f\uff0c\u800c\u4e0d\u662f dev\uff0c\u5426\u5219\u4fee\u590d bug \u53d1\u5e03\uff0c\u4f1a\u5e26\u4e0a\u5f88\u591a\u65b0\u5f00\u53d1\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u65b0\u7279\u6027\u53ef\u80fd\u8fd8\u6ca1\u6d4b\u8bd5\uff0c\u6216\u8005\u529f\u80fd\u8fd8\u4e0d\u5b8c\u6574\uff01\uff09 \u5207\u6362\u5206\u652f\u540e\u53d1\u73b0\uff0c\u4e4b\u524d\u5728 feat \u5206\u652f\u4e0a\u6dfb\u52a0\u7684\u5185\u5bb9\u5df2\u7ecf\u5df2\u7ecf\u770b\u4e0d\u5230\u4e86 \u5728\u65b0\u5efa\u7684 fix \u5206\u652f\u4e0a\u6109\u5feb\u7684\u6572\u4ee3\u7801\u6539 bug git add, git commit \uff08\u63d0\u4ea4\u4ee3\u7801\uff09 mvn clean package (\u9879\u76ee\u6253\u5305\uff0c\u4ea4\u7ed9\u6d4b\u8bd5\u4eba\u5458\uff0c\u8fd9\u6837\u6253\u51fa\u6765\u7684\u5305\uff0c\u53ea\u6709\uff0c\u4e0a\u6b21\u53d1\u5e03\u7684\u4ee3\u7801\u548c bug \u4fee\u590d\u7684\u4ee3\u7801) \u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\uff1a git tag -a v2.1.2 -m '\u4fee\u590d ztbz \u4e3a\u7a7a\u7684 bug' (\u4fdd\u8bc1\u6bcf\u4e00\u6b21\u53d1\u5e03\u7684\u7248\u672c\u90fd\u6253\u6807\u7b7e) git push origin v2.1.2 \uff08\u63a8\u9001\u6807\u7b7e\uff09 git checkout master (\u5207\u6362\u5230 master \u5206\u652f) git pull origin master (\u62c9\u53d6 master \u6700\u65b0\u4ee3\u7801) git merge fix-ztbz (\u628a\u4fee\u590d\u7684\u4ee3\u7801\u5408\u5e76\u5230 master \u5206\u652f) git branch -d fix-ztbz (\u5220\u9664\u4e34\u65f6\u5206\u652f) \u4fee\u590d bug \u7684\u4ee3\u7801 master \u91cc\u9762\u5df2\u7ecf\u6709\u4e86\uff0c\u5982\u4f55\u628a\u8fd9\u90e8\u5206\u4ee3\u7801\u540c\u6b65\u5230 dev \u5206\u652f\u5462\uff1a git log (master \u5206\u652f\u67e5\u770b\u53d8\u66f4\u8bb0\u5f55\uff0c\u627e\u5230 bug \u4fee\u590d\u7684\u90a3\u6b21\u63d0\u4ea4\uff0c\u5e76\u5f97\u5230 git \u53d8\u66f4 id) git checkout dev \uff08\u5207\u6362\u81f3 dev \u5206\u652f\uff09 git cherry-pick d42e907ee4fb714e24fc0eb6c48b1265710a2ccb (\u901a\u8fc7 cherry-pick \u547d\u4ee4\u5c06\u8fd9\u6b21\u63d0\u4ea4\u7684\u4ee3\u7801\u590d\u5236\u5230 dev \u5206\u652f) \u5b8c\u4e8b\uff01\u53ef\u4ee5\u901a\u8fc7 git checkout feat-yljgdm \u547d\u4ee4\u5207\u6362\u5230\u4e0a\u6b21\u65b0\u529f\u80fd\u5f00\u53d1\u7684\u5206\u652f\uff0c\u7ee7\u7eed\u642c\u7816\u3002 \u8fc7\u4e86\u4e24\u5929\uff0c\u6d4b\u8bd5\u53d1\u73b0\u4e0a\u6b21\u4fee\u590d\u7684 ztbz,\u628a 0 \u548c 1 \u641e\u53cd\u4e86\uff0c\u8981\u6c42\u628a\u72b6\u6001\u6807\u5fd7\u5b9a\u4e49\u6210\u679a\u4e3e\u6216\u8005\u5e38\u91cf\uff0c\u4e0d\u8981\u4f7f\u7528\u9b54\u6cd5\u503c\uff0c\u4f46\u662f\u4e0a\u6b21\u7684 fix-\u5206\u652f\u5df2\u7ecf\u5220\u6389\u4e86\uff0c\u5982\u4f55\u627e\u5230\u4e0a\u6b21\u4fee\u590d\u7684\u4ee3\u7801\u5462\u3002\u4e0a\u6b21\u4fee\u590d\u5b8c\u53d1\u5e03\u66f4\u65b0\u7a0b\u5e8f\uff0c\u6211\u4eec\u6253\u4e86\u4e2a tag git checkout -b fix-ztbz2 v2.1.2 (\u4ee5\u6807\u7b7e v2.1.2 \u4e3a\u57fa\u7840\u521b\u5efa\u5206\u652f\uff1afix-ztbz2) git branch (\u5df2\u521b\u5efa\u5e76\u5207\u6362\u81f3\u5206\u652f fix-ztbz2) \u8fd9\u65f6\u7684\u5206\u652f\u72b6\u6001\u4e3a\u4e0a\u6b21\u4fee\u590d\u5b8c bug \u540e\u7684\u4ee3\u7801\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u7ee7\u7eed\u4fee\u6539\u3002 \u518d\u6b21\u4fee\u590d bug git add . git commit -m 'fix:(\u4fee\u590d\u72b6\u6001\u6807\u5fd7 bug)' mvn clean package \u6253\u5305\u53d1\u5e03 git tag -a v2.1.3 -m '\u6dfb\u52a0\u72b6\u6001\u6807\u5fd7' git checkout master (\u5207\u6362\u5230 master \u5206\u652f) git merge fix-ztbz2 (\u5408\u5e76 fix-ztbz2 \u81f3 masterv \u5206\u652f) git branch -d fix-ztbz2 (\u5220\u9664\u4e34\u65f6\u5206\u652f) \u53ef\u4ee5\u770b\u5230\u518d\u6b21\u4fee\u590d bug \u7684 git \u8fc7\u7a0b\uff0c\u8ddf\u7b2c\u4e00\u6b21\u4fee\u590d bug \u5f88\u50cf\uff0c\u552f\u4e00\u7684\u533a\u522b\u8fd9\u6b21\u6211\u4eec\u662f\u4ece tag \u4e2d\u521b\u5efa\u7684\u5206\u652f\u3002 bug \u4fee\u590d\u7684\u5de5\u4f5c\u505a\u5b8c\u4e86\uff0c\u73b0\u5728\u56de\u5230\u65b0\u529f\u80fd\u7684\u5f00\u53d1\uff1a git checkout feat-yljgdm ....\u5f00\u59cb\u65b0\u7684\u5de5\u4f5c \u641e\u5b8c\u4e86\u53ca\u65f6\u5408\u5e76\u5230 dev \u5206\u652f\uff0c\u8fc7\u7a0b\u540c\u4e0a\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"GIT \u89c4\u8303"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#git-\u89c4\u8303","text":"created: 2022-10-05T13:43:26 tags: [git \u89c4\u8303] source: \u539f\u6587\u5730\u5740 author:","title":"GIT \u89c4\u8303"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#\u4e00\u5206\u652f\u7ba1\u7406","text":"","title":"\u4e00\u3001\u5206\u652f\u7ba1\u7406"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#11-\u5206\u652f\u5b9a\u4e49","text":"","title":"1.1 \u5206\u652f\u5b9a\u4e49"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#a-master-\u5206\u652f","text":"\u4e3b\u5206\u652f\uff0c\u6700\u7a33\u5b9a\uff0c\u529f\u80fd\u6700\u5b8c\u6574\u7684\u5206\u652f\uff0c\u53ef\u4ee5\u968f\u65f6\u53d1\u5e03\u7684\u4ee3\u7801 \u4ee5 Tag \u6807\u8bb0\u4e00\u4e2a\u7248\u672c\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a tag \u90fd\u5bf9\u5e94\u4e00\u4e2a\u7ebf\u4e0a\uff08\u751f\u4ea7\uff09\u7248\u672c master \u5206\u652f\u4e00\u822c\u7531 dev \u4ee5\u53ca fix \u5206\u652f\u5408\u5e76\uff0c\u4e0d\u5141\u5728 master \u5206\u652f\u76f4\u63a5\u63d0\u4ea4\u4ee3\u7801\uff01\uff01","title":"a. master \u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#b-dev-\u5206\u652f","text":"dev \u5206\u652f\u59cb\u7ec8\u4fdd\u6301\u529f\u80fd\u6700\u5168\u3001bug \u4fee\u590d\u540e\u7684\u4ee3\u7801\uff0c\u672a\u53d1\u5e03\u6b63\u5f0f\u524d\uff0c\u529f\u80fd\u6700\u65b0\u6700\u5168\u7684\u5206\u652f \u65b0\u529f\u80fd\u5f00\u53d1\u5fc5\u987b\u57fa\u4e8e dev \u5206\u652f\u521b\u5efa\u65b0\u529f\u80fd\u7684 feat \u5206\u652f","title":"b. dev \u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#c-feat-\u5206\u652f","text":"\u5f00\u53d1\u65b0\u529f\u80fd\uff08feature\uff09\u7531 dev \u4e3a\u57fa\u7840\u521b\u5efa\u7684\u65b0\u5206\u652f \u5206\u652f\u547d\u540d\u89c4\u5219\uff1afeat-\u529f\u80fd\u7279\u6027\uff0c\u5982\uff1afeat-profile \u8be5\u5206\u652f\u539f\u5219\u4e0a\u4e0d\u8981\u63d0\u4ea4\u5230 git \u4e2d\u592e\u5e93\uff0c\u529f\u80fd\u5f00\u53d1\u6d4b\u8bd5\u5b8c\u540e\uff0c\u53ca\u65f6\u5408\u5e76\u5230 dev \u5206\u652f\uff0c\u5e76\u5220\u9664\u8be5\u5206\u652f\u3002\u4f46\u662f\u5982\u679c\u4e00\u4e2a\u65b0\u529f\u80fd\u662f\u548c\u591a\u4eba\u5408\u4f5c\u5f00\u53d1\u9700\u5c06\u540c\u6b65\u5230 git \u4e2d\u592e\u5e93\u3002","title":"c. feat \u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#d-fix-\u5206\u652f","text":"\u7ebf\u4e0a\u51fa\u73b0\u7d27\u6025 bug\uff0c\u9700\u8981\u53ca\u65f6\u4fee\u590d\uff0c\u4ee5 master \u5206\u652f\u4e3a\u57fa\u7840\uff0c\u5efa fix \u5206\u652f\uff0c\u4fee\u590d\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5408\u5e76\u5230 master \u5206\u652f\u548c dev \u5206\u652f\uff0c\u5e76\u5220\u9664\u8be5\u5206\u652f\u3002 \u5206\u652f\u547d\u540d\u89c4\u5219\uff1a\u9879\u76ee-fix-\u529f\u80fd\u7279\u6027\uff0c\u5982\uff1afix-profile","title":"d. fix \u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#e-\u8865\u5145","text":"\u7a33\u5b9a\u4e14\u957f\u671f\u5b58\u5728\u7684\u5206\u652f\u53ea\u6709 master \u548c dev \u5206\u652f\uff0c\u522b\u7684\u5206\u652f\u5219\u5728\u5b8c\u6210\u5bf9\u5e94\u5f00\u53d1\u4f7f\u547d\u4e4b\u540e\u90fd\u4f1a\u5408\u5e76\u5230\u8fd9\u4e24\u4e2a\u5206\u652f\u7136\u540e\u88ab\u5220\u9664\u3002","title":"e. \u8865\u5145"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#12-git-\u542f\u7528\u5206\u652f\u540e\u7684\u6807\u51c6\u6d41\u7a0b\u53ca\u547d\u4ee4","text":"1.\u7ba1\u7406\u5458\u521b\u5efa git \u4ed3\u5e93\uff0c\u5efa\u7acb master \u5206\u652f\uff0cdev \u5206\u652f, \u547d\u4ee4\u884c\u521b\u5efa\u5982\u4e0b\uff1a Bash 1 2 3 4 5 6 7 git branch master git push -u origin master git branch dev git push -u origin dev 2.\u9879\u76ee\u6210\u5458 clone \u4ed3\u5e93\uff0c\u5e76\u5efa\u7acb\u81ea\u5df1\u7684 feat \u529f\u80fd\u5206\u652f Bash 1 2 3 4 5 git clone \u9879\u76ee\u5730\u5740 git fetch git checkout dev \u521b\u5efa\u672c\u5730\u529f\u80fd\u5206\u652f git checkout -b \u9879\u76ee-feat-\u529f\u80fd\u7279\u6027 3.\u5728\u672c\u5730\u529f\u80fd\u5206\u652f\u5f00\u53d1\uff0c git add, git commit &etc , \u6ce8\u610f\u529f\u80fd\u6a21\u5757\u4e3a\u5b8c\u6210\u6d4b\u8bd5\u4e4b\u524d\uff0c\u7981\u6b62\u5408\u5e76\u5230 dev \u6216\u8005 master \u4e0a 4.\u529f\u80fd\u5b8c\u6210\u540e\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u672c\u5730\u7684 dev \u5206\u652f\u540e push \u5230\u8fdc\u7a0b \uff0c\u5408\u5e76\u7684\u65f6\u5019\u5f88\u5927\u51e0\u7387 \u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u6b64\u65f6\u9700\u8981\u5408\u5e76\u4ee3\u7801\uff0c\u5408\u5e76\u7684\u786e\u5019\u786e\u4fdd\u4e0d\u5f71\u54cd\u9879\u76ee\u5176\u4ed6\u6210\u5458\uff0c\u5982\u679c\u591a\u4e2a\u4eba\u90fd\u64cd\u4f5c\u4e86\u540c\u4e00\u6bb5\u4ee3\u7801\uff0c\u6700\u597d\u5f53\u9762\u786e\u8ba4\u540e \u5728\u8fdb\u884c\u4fee\u6539\u3002\u7b49\u5408\u5e76\u5b8c\u6210\u786e\u8ba4\u65e0\u8bef\u540e\uff0c\u5220\u9664\u672c\u5730 feat \u5f00\u53d1\u5206\u652f, \u547d\u4ee4\u884c\u63d0\u793a: Bash 1 2 3 4 5 6 7 8 9 git checkout dev git pull origin dev git merge \u9879\u76ee-feat-\u529f\u80fd\u7279\u6027 git push origin dev git branch -d \u9879\u76ee-feat-\u529f\u80fd\u7279\u6027 5.\u53d1\u5e03\u7248\u672c\u4e4b\u540e\uff0c\u4e3a master \u6253\u4e0a tag Bash 1 2 3 4 5 git checkout master git tag -a 0 .1 -m \"Initial public release\" master git push --tags 6.bug \u4fee\u590d\u5206\u652f\uff0c\u5982\u679c\u6b63\u5728\u5f00\u53d1\u529f\u80fd\u7684\u540c\u65f6\uff0cdev \u4e0a\u7ebf\u53d1\u73b0 bug\uff0c\u6216\u8005\u672a\u4e0a\u7ebf\u53d1\u73b0\u7684 bug\uff0c\u53ef\u4ee5\u5f00\u4e00 \u4e2a fix \u5206\u652f\u6765\u4fee\u590d bug Bash 1 2 3 4 5 6 7 8 9 10 11 git checkout -b fix- ( bug-\u5206\u652f\u3001\u7279\u6027 ) ** \u4fee\u590d\u5b8c\u6210 ** git checkout bug \u5206\u652f git merge fix- ( bug-\u5206\u652f\u3001\u7279\u6027 ) git push origin bug \u5206\u652f git branch -d fix- ( bug \u5206\u652f\u3001\u7279\u6027 )","title":"1.2 git \u542f\u7528\u5206\u652f\u540e\u7684\u6807\u51c6\u6d41\u7a0b\u53ca\u547d\u4ee4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#\u4e8c\u89c4\u8303\u8bf4\u660e","text":"","title":"\u4e8c\u3001\u89c4\u8303\u8bf4\u660e"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#21-\u7528\u6237\u89c4\u8303","text":"1\u3001\u4f7f\u7528\u771f\u5b9e\u59d3\u540d\u63d0\u4ea4\u4ee3\u7801\uff0c\u65b9\u4fbf\u67e5\u8be2\uff0c\u901a\u8fc7\u547d\u4ee4\uff1agit config --global user.name \u771f\u5b9e\u59d3\u540d \u66f4\u65b0\u7528\u6237\u540d 2\u3001\u4e0d\u8981\u4f7f\u7528\u5176\u4ed6\u4eba\u7684\u8d26\u53f7\u83b7\u53d6\u6216\u63d0\u4ea4\u4ee3\u7801\uff0c\u6ca1\u6709\u8d26\u53f7\u6216\u5bc6\u7801\u7684\u81ea\u884c\u6ce8\u518c\uff0c\u5e76\u627e\u7ba1\u7406\u5458\u6388\u6743\u8981\u8bbf\u95ee\u7684\u9879\u76ee\u3002","title":"2.1 \u7528\u6237\u89c4\u8303"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#22-\u5206\u652f\u89c4\u8303","text":"1\u3001\u7981\u6b62\u5728 master \u5206\u652f\u4e0a\u5f00\u53d1\u4ee3\u7801 2\u3001\u65b0\u529f\u80fd\u5206\u652f\u4ee5 feat-\u5f00\u5934\uff0cbug \u4fee\u590d\u5206\u652f\u4ee5 fix-\u5f00\u5934 3\u3001\u521b\u5efa\u5206\u652f\u4e4b\u524d\u5148\u540c\u6b65 dev \u4ee3\u7801\uff0c\u907f\u514d\u5206\u652f\u4ece\u4e00\u5f00\u59cb\u5c31\u662f\u6bd4\u8f83\u65e7\u7684\u4ee3\u7801\uff0c\u7ed9\u5c06\u6765\u5408\u5e76\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002 4\u3001\u9700\u8981\u7d27\u6025\u4fee\u590d\u5e76\u53d1\u5e03\u7684 bug\uff0c\u4ece\u6807\u7b7e\u7248\u672c\u521b\u5efa\u5206\u652f\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u6ca1\u6709\u6807\u7b7e\u4ece master \u5206\u652f\u521b\u5efa\uff0c\u800c\u4e0d\u662f\u5176\u4ed6 5\u3001\u81ea\u5df1\u521b\u5efa\u7684\u4e34\u65f6\u5206\u652f\u6bd4\u5982 fix \u5206\u652f\u4e0d\u8981 pull \u5230 git \u670d\u52a1\u5668\u4e0a\uff0cfeature \u5206\u652f\u662f\u5426\u63a8\u5230\u8fdc\u7a0b\uff0c\u53d6\u51b3\u4e8e\u4f60\u662f\u5426\u548c\u4f60\u7684\u5c0f\u4f19\u4f34\u5408\u4f5c\u5728\u8be5\u5206\u652f\u4e0a\u5f00\u53d1 6\u3001\u5408\u5e76\u5206\u652f\u65f6\uff0c\u5982\u679c\u4ee3\u7801\u548c\u53e6\u5916\u4e00\u4eba\u51b2\u7a81\uff0c\u9700\u548c\u4ed6\u4e00\u8d77\u51b3\u5b9a\u4ee3\u7801\u7684\u53bb\u7559\uff0c\u800c\u4e0d\u662f\u81ea\u884c\u51b3\u5b9a","title":"2.2 \u5206\u652f\u89c4\u8303"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#23-commit-\u89c4\u8303","text":"commit message \u683c\u5f0f \u793a\u4f8b\u5982\u4e0b fix(dashboard): \u66f4\u65b0 table \u5b57\u6bb5 type - feat : \u65b0\u529f\u80fd - fix : \u4fee\u590d bug - docs : \u6587\u6863\u6539\u53d8 - style : \u4ee3\u7801\u683c\u5f0f\u6539\u53d8 - refactor : \u67d0\u4e2a\u5df2\u6709\u529f\u80fd\u91cd\u6784 - perf : \u6027\u80fd\u4f18\u5316 - test : \u589e\u52a0\u6d4b\u8bd5 - build : \u6539\u53d8\u4e86 build \u5de5\u5177 \u5982 grunt \u6362\u6210\u4e86 npm - revert : \u64a4\u9500\u4e0a\u4e00\u6b21\u7684 commit - chore : \u6784\u5efa\u8fc7\u7a0b\u6216\u8f85\u52a9\u5de5\u5177\u7684\u53d8\u52a8 - ci: \u5bf9 CI \u914d\u7f6e\u6587\u4ef6\u548c\u811a\u672c\u7684\u66f4\u6539 scope - \u7528\u6765\u8bf4\u660e\u672c\u6b21 Commit \u5f71\u54cd\u7684\u8303\u56f4\uff0c\u5373\u7b80\u8981\u8bf4\u660e\u4fee\u6539\u4f1a\u6d89\u53ca\u7684\u90e8\u5206\u3002 Subject - \u7528\u6765\u7b80\u8981\u63cf\u8ff0\u672c\u6b21\u6539\u52a8\uff0c\u6982\u8ff0\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a\u540e\u9762\u8fd8\u4f1a\u5728 Body \u91cc\u5217\u51fa\u5177\u4f53\u4fe1\u606f\u3002 body - \u672c\u6b21\u4ee3\u7801\u6539\u52a8\u7684\u8be6\u7ec6\u4fe1\u606f \u4e3a\u4e86\u5199\u51fa\u7b26\u5408\u89c4\u8303\u7684\u63d0\u4ea4\u4fe1\u606f\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u5b89\u88c5\u63d2\u4ef6 Git Commit Template\u2193\uff1a\u8be5\u63d2\u4ef6\u8ba9\u5f00\u53d1\u4eba\u5458\u5728\u754c\u9762\u4e0a\u52fe\u52fe\u586b\u586b\u5373\u53ef\u62fc\u88c5\u51fa\u89c4\u8303\u7684 commit \u5185\u5bb9 \u5e38\u89c1\u4e0d\u5408\u89c4\u8303\u7684\u64cd\u4f5c\u4e3e\u4f8b\uff1a \u521b\u5efa\u5206\u652f\u524d\u672a\uff0c\u4e0d\u540c\u6b65\u6700\u65b0\u7684\u4ee3\u7801\uff0c\u4ece\u4e00\u5f00\u59cb\u5c31\u5bfc\u81f4\u4ee3\u7801\u4e0d\u4e00\u81f4\u4e86\u3002 \u5728\u67d0\u4e2a feat \u5206\u652f\u4e0a\u6572\u4ee3\u7801\uff0c\u4ee3\u7801\u6572\u5230\u4e00\u534a\uff0c\u9700\u8981\u7d27\u6025\u4fee\u590d bug\uff0c\u5207\u6362\u5230 master \u5206\u652f\u524d\u6ca1\u6709\u63d0\u4ea4 feat \u5206\u652f\u7684\u4ee3\u7801\uff0c\u5bfc\u81f4\u90e8\u5206 feat \u5206\u652f\u91cc\u9762\u7684\u4ee3\u7801\u8dd1\u5230 master \u5206\u652f\u4e0a\u3002 fix \u5206\u652f\u4e0d\u662f\u4ee5 master \u5206\u652f\u6216 tag \u6807\u7b7e\u4e3a\u57fa\u7840\u521b\u5efa\u7684\uff0c\u800c\u662f\u76f4\u63a5\u5728 dev \u4e0a\u521b\u5efa\u5206\u652f\uff0c\u5bfc\u81f4\u5927\u91cf\u65b0\u7684\u672a\u7ecf\u6d4b\u8bd5\u7684\u529f\u80fd\u53d1\u5e03 \u901a\u8fc7 master \u5206\u652f\u521b\u5efa\u7684\u5206\u652f\uff0c\u5408\u5e76\u7684\u65f6\u5019\u5374\u5f80 dev \u4e0a\u5408\u5e76\uff0c\u4f1a\u5bfc\u81f4\u5927\u91cf\u51b2\u7a81\uff0c\u8bb0\u4f4f\uff0c\u5206\u652f\u5c31\u50cf\u5e73\u884c\u5b87\u5b99\uff0c\u4f60\u4ece\u54ea\u4e2a\u5b87\u5b99\u7a7f\u8d8a\u8fc7\u6765\u7684\uff0c\u5728\u65b0\u7684\u5b87\u5b99\u7a7a\u95f4\u4e2d\u5fd9\u6d3b\u5b8c\u4e86\uff0c\u4e00\u5b9a\u8981\u56de\u5230\u4f60\u6765\u7684\u90a3\u4e2a\u5b87\u5b99\uff0c\u800c\u4e0d\u662f\u53c8\u7a7f\u8d8a\u5230\u7b2c\u4e09\u4e2a\u5b87\u5b99\uff0c\u5426\u5219\u65f6\u95f4\u7ebf\u4f1a\u4e71\u6389\uff0c\u53cd\u6620\u5230\u4ee3\u7801\u4e2d\u5c31\u662f\u5404\u79cd\u51b2\u7a81\u3002 \u4ee3\u7801\u53d1\u5e03\u540e\u6ca1\u6709\u6253 tag \u6807\u7b7e\uff0c\u5bfc\u81f4\u7d27\u6025\u4fee\u590d bug \u65f6\uff0c\u627e\u4e0d\u5230\u4e0a\u6b21\u53d1\u5e03\u7684\u7248\u672c\uff0c\u56e0\u4e3a master \u5206\u652f\u4e0a\u7684\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u6ca1\u6709\u5408\u5e76\u8fc7 dev \u7684\u4ee3\u7801\u3002 \u5408\u5e76\u4ee3\u7801\u51fa\u73b0\u548c\u522b\u7684\u5f00\u53d1\u4eba\u5458\u6709\u51b2\u7a81\uff0c\u81ea\u884c\u51b3\u5b9a\u4ee3\u7801\u7684\u53bb\u7559\uff0c\u800c\u4e0d\u662f\u4e24\u4eba\u4e00\u8d77\u5408\u5e76\u3002 \u63d0\u4ea4\u4ee3\u7801 commit message \u968f\u610f\u5199 123\u3001aaa\u3001\u51e0\u4e2a\u7a7a\u683c\u7b49\u4e00\u4e9b\u65e0\u610f\u4e49\u7684\u63cf\u8ff0\u4fe1\u606f\u3002","title":"2.3 commit \u89c4\u8303"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#\u4e09git-\u5206\u652f\u64cd\u4f5c\u624b\u518c","text":"","title":"\u4e09\u3001git \u5206\u652f\u64cd\u4f5c\u624b\u518c"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#1\u5f00\u53d1\u65b0\u529f\u80fd\u65f6-git-\u64cd\u4f5c\u6d41\u7a0b","text":"\u65b0\u5efa\u5206\u652f\uff1a Bash 1 2 3 4 5 6 7 8 9 10 11 git checkout dev # \u8fdb\u5165 dev \u5206\u652f git pull\uff08\u6216\u8005\u76f4\u63a5\u754c\u9762\u6309\u94ae\uff09 # \u62c9\u53d6\u6700\u65b0\u4ee3\u7801 git checkout -b feat-*** # \u521b\u5efa\u5e76\u5207\u6362\u81f3\u65b0\u7684\u529f\u80fd\u5f00\u53d1\u5206\u652f\u3002 \u8fdb\u884c\u5f00\u53d1\u5de5\u4f5c........ # \u4e2d\u95f4\u53ca\u65f6\u63d0\u4ea4\u4ee3\u7801\uff1a git add . git commit -m \"***' #\uff08\u6216\u8005\u754c\u9762\u64cd\u4f5c\uff0c\u53ea commit,\u4e0d\u8981 push,\u9664\u975e\u8be5 feat \u662f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\uff09 \u5408\u5e76\u5206\u652f\uff1a \u5408\u5e76\u5206\u652f\u524d\u7684\u5de5\u4f5c\uff1a \u786e\u4fdd feat-*** \u5206\u652f\u7684\u4ee3\u7801\u90fd\u5df2 commit,\u6216\u8005 stash\uff0c \u5982\u679c feat \u5206\u652f\u4e3a\u591a\u4eba\u5408\u4f5c\u5f00\u53d1\uff0c\u8fd8\u9700\u8981 git pull \u62c9\u53d6\u8fdc\u7a0b\u4ee3\u7801\u3002 Bash 1 2 3 4 5 git checkout dev # \u5207\u6362\u5230 dev \u5206\u652f git pull # \u62c9\u53d6 dev \u65b0\u4ee3\u7801 git merge feat-*** # \u5408\u5e76\u65b0\u5f00\u53d1\u5206\u652f \u5f53\u524d dev \u5206\u652f\u5305\u542b\u4e86\u65b0\u529f\u80fd\u7684\u4ee3\u7801\uff0c\u6253\u5305\u53d1\u5e03\u6d4b\u8bd5\u73af\u5883\uff0c\u4ea4\u6d4b\u8bd5\u4eba\u5458\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u6ca1\u95ee\u9898\u5408\u5e76\u5230 master \u5206\u652f\uff0c Bash 1 2 3 4 5 6 7 git checkout master # \u5207\u6362\u5230 master \u5206\u652f git pull master # \u62c9\u53d6 master \u6700\u65b0\u4ee3\u7801 git merge dev # \u5408\u5e76 dev \u5206\u652f\u4ee3\u7801 git tag -a v2.1.0 -m 'v2.1.0 \u53d1\u5e03\u7248\u672c' # \u4e3a\u5f53\u524d master \u8282\u70b9\u6253\u4e00\u4e2a v2.1.0 \u7684\u6807\u7b7e","title":"1\u3001\u5f00\u53d1\u65b0\u529f\u80fd\u65f6 git \u64cd\u4f5c\u6d41\u7a0b\uff1a"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#2\u4fee\u590d-bug-\u65f6-git-\u64cd\u4f5c\u6d41\u7a0b","text":"\u6bcf\u4e00\u6b21\u7248\u672c\u53d1\u5e03\u6211\u4eec\u90fd\u4f1a\u4e3a\u65b0\u7248\u672c\u6253\u4e00\u4e2a tag,\u5982\u679c\u4e0a\u4e2a\u7248\u672c\u4e3a v2.1.0\uff0c\u5219\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a Bash 1 2 3 4 5 6 7 8 git checkout -b fix-*** v2.1.0 # \u4ee5 v2.1.0 \u7248\u672c\u4e3a\u57fa\u7840\u521b\u5efa\u4fee\u590d\u5206\u652f fix-*** ***\u8fdb\u884c bug \u4fee\u590d\u5de5\u4f5c......*** # \u4e2d\u95f4\u53ca\u65f6\u63d0\u4ea4\u4ee3\u7801 git add . git commit -m '***' # (\u6216\u8005\u754c\u9762\u64cd\u4f5c\uff0c\u53ea commit,\u4e0d\u8981 push,\u9664\u975e\u8be5 fix \u662f\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\uff09 \u4fee\u590d\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u6253\u5305\u53d1\u5e03\u6d4b\u8bd5\u73af\u5883\uff0c\u4ea4\u5f00\u53d1\u4eba\u5458\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u6ca1\u95ee\u9898\u5c06\u4ee3\u7801\u5408\u5e76\u81f3 master Bash 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 git checkout master # \u5207\u6362\u81f3 master \u5206\u652f git pull # \u62c9\u53d6 master \u4ee3\u7801 git merge fix-*** # \u628a\u4fee\u590d\u7684\u4ee3\u7801\u5408\u5e76\u56de master \u5206\u652f git tag -a v2.1.1 -m 'v2.1.1 \u4fee\u590d***\u7684\u53d1\u5e03\u7248\u672c' # \u4e3a\u5f53\u524d\u5e26\u53d1\u5e03\u7684\u66f4\u65b0\u7248\u672c\u6253 v2.1.1 \u7684\u6807\u7b7e git log # \u67e5\u770b master \u5206\u652f\u4ee3\u7801\u63d0\u4ea4 id\uff0c\u8bb0\u5f55\u4e0b bug \u4fee\u590d\u7684 id git checkout dev # \u5207\u6362\u81f3 dev \u5206\u652f git pull # \u62c9\u4ee3\u7801 git cherry-pick commitId # \u628a master \u5206\u652f\u4e0a\u7684\u4fee\u590d\u4ee3\u7801\u7684\u90a3\u6b21\u63d0\u4ea4\u5408\u5e76\u5230 dev \u5206\u652f\uff0c\u8fd9\u6837\u4fee\u590d\u7684\u4ee3\u7801\u5728 dev \u548c master \u4e0a\u90fd\u6709\u4e86 git branch -d fix-**** # (\u5220\u9664\u4e34\u65f6\u4fee\u590d\u5206\u652f)","title":"2\u3001\u4fee\u590d bug \u65f6 git \u64cd\u4f5c\u6d41\u7a0b\uff1a"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E8%A7%84%E8%8C%83/#\u56db\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u7ba1\u7406\u6d41\u7a0b\u5fc5\u770b","text":"git branch \u67e5\u770b\u5f53\u524d\u5206\u652f\u72b6\u6001\uff1a git pull \uff08\u5f00\u59cb\u6572\u4ee3\u7801\u4e4b\u524d\u5148\u540c\u6b65\u5927\u5bb6\u7684\u4ee3\u7801\uff09 git checkout -b feat-yljgdm \uff08\u5207\u6362\u5230\u5206\u652f feat-yljgdm\uff0c\u53c2\u6570-b \u7684\u610f\u601d\u662f\u5982\u679c\u6ca1\u6709\u5206\u652f\u81ea\u52a8\u521b\u5efa\u8be5\u5206\u652f\uff09 git branch \uff08\u67e5\u770b\u5206\u652f\u72b6\u6001\uff0c\u5f53\u524d\u5206\u652f\u524d\u9762\u6709\u4e00\u4e2a\u661f\u53f7\uff09 \u4e4b\u6240\u4ee5\u65b0\u5efa\u4e00\u4e2a feat \u5206\u652f\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5728 dev \u4e0a\u5f00\u53d1\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1 dev \u4e0a\u9762\u90fd\u662f\u5f00\u53d1\u5b8c\u6210\u7684\u529f\u80fd\uff0c\u80fd\u505a\u5230\u968f\u65f6\u5408\u5e76\u5230 master \u5206\u652f\u5e76\u8fdb\u884c\u53d1\u5e03\u7684\u72b6\u6001\u3002 ......\u521b\u5efa\u7c7b\uff0c\u5199\u4ee3\u7801\uff0c\u7b49\u7b49\u7b49\u4e00\u7cfb\u5217\u64cd\u4f5c.....\u7136\u540e\u63d0\u4ea4\u4ee3\u7801\uff0c\u8fd9\u79cd\u4e34\u65f6\u7684\u5c0f\u7684\u5206\u652f\uff0c\u53ea\u9700 commit,\u4e0d\u8981 push \u8fd9\u4e2a\u65f6\u5019\u7a81\u7136\u63a5\u6536\u5230\u4e00\u4e2a\u7528\u6237\u53cd\u9988\u7684 bug,\u9700\u8981\u7d27\u6025\u4fee\u590d\uff0c\u5e76\u4e0e\u4eca\u665a\u53d1\u5e03\u3002 git checkout master \uff08\u5207\u6362\u81f3\u4e3b\u5206\u652f\uff0c\u5207\u6362\u5206\u652f\u4e4b\u524d\uff0c\u786e\u4fdd\u4e4b\u524d feat \u5206\u652f\u7684\u4ee3\u7801\u5df2\u7ecf commit\uff0c\u5426\u5219\u5207\u6362\u5176\u4ed6\u5206\u652f\u540e\uff0c\u8fd9\u4e9b\u6ca1\u63d0\u4ea4\u7684\u4ee3\u7801\u4e5f\u4f1a\u5e26\u8fc7\u53bb\uff0c\u56e0\u4e3a\u6ca1\u6709\u63d0\u4ea4\u5230\u4ed3\u5e93\u7684\u4ee3\u7801\uff0cgit \u662f\u4e0d\u4f1a\u5e2e\u4f60\u7ba1\u7406\u7684\uff01\uff01\u5982\u679c\u5de5\u4f5c\u53ea\u8fdb\u884c\u4e00\u534a\u4ee3\u7801\u8fd8\u6709\u95ee\u9898\u786e\u5b9e\u4e0d\u80fd\u63d0\u4ea4\u3002\u800c\u522b\u4eba\u53c8\u7740\u6025\u7b49\u7740\u4f60\u53bb\u53e6\u4e00\u4e2a\u5206\u652f\u89e3\u51b3\u95ee\u9898\uff0c\u4f7f\u7528 git stash \u547d\u4ee4\u628a\u4f60\u5f53\u524d\u5206\u652f\u672a\u63d0\u4ea4\u7684\u4ee3\u7801\u9690\u85cf\u8d77\u6765\u3002\u53bb\u5176\u4ed6\u5206\u652f\u5e72\u5b8c\u6d3b\u540e\u518d\u6b21\u6765\u5230\u4f60\u7684\u5206\u652f\uff0c\u4f7f\u7528 git stash pop \u547d\u540d\u6062\u590d\u4f60\u4e0a\u6b21\u7684\u5de5\u4f5c\u73b0\u573a\uff09 git pull (\u66f4\u65b0\u4e3b\u5206\u652f\u6700\u65b0\u4ee3\u7801) git checkout -b fix-ztbz\uff08\u4ece\u4e3b\u5206\u652f\u521b\u5efa\u4fee\u590d\u5206\u652f\uff09 \uff08\u8981\u70b9\uff1a\u4e00\u5b9a\u8981\u4ece\u4e3b\u5206\u652f\u4e3a\u57fa\u7840\u521b\u5efa\u5206\u652f\uff0c\u800c\u4e0d\u662f dev\uff0c\u5426\u5219\u4fee\u590d bug \u53d1\u5e03\uff0c\u4f1a\u5e26\u4e0a\u5f88\u591a\u65b0\u5f00\u53d1\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u65b0\u7279\u6027\u53ef\u80fd\u8fd8\u6ca1\u6d4b\u8bd5\uff0c\u6216\u8005\u529f\u80fd\u8fd8\u4e0d\u5b8c\u6574\uff01\uff09 \u5207\u6362\u5206\u652f\u540e\u53d1\u73b0\uff0c\u4e4b\u524d\u5728 feat \u5206\u652f\u4e0a\u6dfb\u52a0\u7684\u5185\u5bb9\u5df2\u7ecf\u5df2\u7ecf\u770b\u4e0d\u5230\u4e86 \u5728\u65b0\u5efa\u7684 fix \u5206\u652f\u4e0a\u6109\u5feb\u7684\u6572\u4ee3\u7801\u6539 bug git add, git commit \uff08\u63d0\u4ea4\u4ee3\u7801\uff09 mvn clean package (\u9879\u76ee\u6253\u5305\uff0c\u4ea4\u7ed9\u6d4b\u8bd5\u4eba\u5458\uff0c\u8fd9\u6837\u6253\u51fa\u6765\u7684\u5305\uff0c\u53ea\u6709\uff0c\u4e0a\u6b21\u53d1\u5e03\u7684\u4ee3\u7801\u548c bug \u4fee\u590d\u7684\u4ee3\u7801) \u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\uff1a git tag -a v2.1.2 -m '\u4fee\u590d ztbz \u4e3a\u7a7a\u7684 bug' (\u4fdd\u8bc1\u6bcf\u4e00\u6b21\u53d1\u5e03\u7684\u7248\u672c\u90fd\u6253\u6807\u7b7e) git push origin v2.1.2 \uff08\u63a8\u9001\u6807\u7b7e\uff09 git checkout master (\u5207\u6362\u5230 master \u5206\u652f) git pull origin master (\u62c9\u53d6 master \u6700\u65b0\u4ee3\u7801) git merge fix-ztbz (\u628a\u4fee\u590d\u7684\u4ee3\u7801\u5408\u5e76\u5230 master \u5206\u652f) git branch -d fix-ztbz (\u5220\u9664\u4e34\u65f6\u5206\u652f) \u4fee\u590d bug \u7684\u4ee3\u7801 master \u91cc\u9762\u5df2\u7ecf\u6709\u4e86\uff0c\u5982\u4f55\u628a\u8fd9\u90e8\u5206\u4ee3\u7801\u540c\u6b65\u5230 dev \u5206\u652f\u5462\uff1a git log (master \u5206\u652f\u67e5\u770b\u53d8\u66f4\u8bb0\u5f55\uff0c\u627e\u5230 bug \u4fee\u590d\u7684\u90a3\u6b21\u63d0\u4ea4\uff0c\u5e76\u5f97\u5230 git \u53d8\u66f4 id) git checkout dev \uff08\u5207\u6362\u81f3 dev \u5206\u652f\uff09 git cherry-pick d42e907ee4fb714e24fc0eb6c48b1265710a2ccb (\u901a\u8fc7 cherry-pick \u547d\u4ee4\u5c06\u8fd9\u6b21\u63d0\u4ea4\u7684\u4ee3\u7801\u590d\u5236\u5230 dev \u5206\u652f) \u5b8c\u4e8b\uff01\u53ef\u4ee5\u901a\u8fc7 git checkout feat-yljgdm \u547d\u4ee4\u5207\u6362\u5230\u4e0a\u6b21\u65b0\u529f\u80fd\u5f00\u53d1\u7684\u5206\u652f\uff0c\u7ee7\u7eed\u642c\u7816\u3002 \u8fc7\u4e86\u4e24\u5929\uff0c\u6d4b\u8bd5\u53d1\u73b0\u4e0a\u6b21\u4fee\u590d\u7684 ztbz,\u628a 0 \u548c 1 \u641e\u53cd\u4e86\uff0c\u8981\u6c42\u628a\u72b6\u6001\u6807\u5fd7\u5b9a\u4e49\u6210\u679a\u4e3e\u6216\u8005\u5e38\u91cf\uff0c\u4e0d\u8981\u4f7f\u7528\u9b54\u6cd5\u503c\uff0c\u4f46\u662f\u4e0a\u6b21\u7684 fix-\u5206\u652f\u5df2\u7ecf\u5220\u6389\u4e86\uff0c\u5982\u4f55\u627e\u5230\u4e0a\u6b21\u4fee\u590d\u7684\u4ee3\u7801\u5462\u3002\u4e0a\u6b21\u4fee\u590d\u5b8c\u53d1\u5e03\u66f4\u65b0\u7a0b\u5e8f\uff0c\u6211\u4eec\u6253\u4e86\u4e2a tag git checkout -b fix-ztbz2 v2.1.2 (\u4ee5\u6807\u7b7e v2.1.2 \u4e3a\u57fa\u7840\u521b\u5efa\u5206\u652f\uff1afix-ztbz2) git branch (\u5df2\u521b\u5efa\u5e76\u5207\u6362\u81f3\u5206\u652f fix-ztbz2) \u8fd9\u65f6\u7684\u5206\u652f\u72b6\u6001\u4e3a\u4e0a\u6b21\u4fee\u590d\u5b8c bug \u540e\u7684\u4ee3\u7801\u3002\u5728\u6b64\u57fa\u7840\u4e0a\u7ee7\u7eed\u4fee\u6539\u3002 \u518d\u6b21\u4fee\u590d bug git add . git commit -m 'fix:(\u4fee\u590d\u72b6\u6001\u6807\u5fd7 bug)' mvn clean package \u6253\u5305\u53d1\u5e03 git tag -a v2.1.3 -m '\u6dfb\u52a0\u72b6\u6001\u6807\u5fd7' git checkout master (\u5207\u6362\u5230 master \u5206\u652f) git merge fix-ztbz2 (\u5408\u5e76 fix-ztbz2 \u81f3 masterv \u5206\u652f) git branch -d fix-ztbz2 (\u5220\u9664\u4e34\u65f6\u5206\u652f) \u53ef\u4ee5\u770b\u5230\u518d\u6b21\u4fee\u590d bug \u7684 git \u8fc7\u7a0b\uff0c\u8ddf\u7b2c\u4e00\u6b21\u4fee\u590d bug \u5f88\u50cf\uff0c\u552f\u4e00\u7684\u533a\u522b\u8fd9\u6b21\u6211\u4eec\u662f\u4ece tag \u4e2d\u521b\u5efa\u7684\u5206\u652f\u3002 bug \u4fee\u590d\u7684\u5de5\u4f5c\u505a\u5b8c\u4e86\uff0c\u73b0\u5728\u56de\u5230\u65b0\u529f\u80fd\u7684\u5f00\u53d1\uff1a git checkout feat-yljgdm ....\u5f00\u59cb\u65b0\u7684\u5de5\u4f5c \u641e\u5b8c\u4e86\u53ca\u65f6\u5408\u5e76\u5230 dev \u5206\u652f\uff0c\u8fc7\u7a0b\u540c\u4e0a\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002","title":"\u56db\u3001\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u7ba1\u7406\u6d41\u7a0b\uff08\u5fc5\u770b\uff09\uff1a"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/","text":"created: 2022-10-05T12:18:00 tags: [gitflow] source: \u539f\u6587\u5730\u5740 author: Gitflow \u5206\u652f\u8be6\u89e3 \u00b6 1 gitflow \u4ecb\u7ecd \u00b6 \u6bd4\u5982\u6211\u5f88\u559c\u6b22\u7684 git stash \u547d\u4ee4\uff0c\u53ef\u4ee5\u628a\u5f53\u524d\u6ca1\u6709\u5b8c\u6210\u7684\u4e8b\u5148\u6682\u5b58\u4e00\u4e0b\uff0c\u7136\u540e\u53bb\u5fd9\u522b\u7684\u4e8b\u3002 git cherry-pick \u547d\u4ee4\u53ef\u4ee5\u8ba9\u4f60\u6709\u9009\u62e9\u5730\u5408\u5e76\u63d0\u4ea4\u3002 git add -p \u53ef\u4ee5\u8ba9\u4f60\u6311\u9009\u6539\u52a8\u63d0\u4ea4\uff0c git grep $regexp $(git rev-list --all) \u53ef\u4ee5\u7528\u6765\u5728\u6240\u6709\u7684\u63d0\u4ea4\u4e2d\u627e\u4ee3\u7801\u3002\u56e0\u4e3a\u90fd\u662f\u672c\u5730\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f60\u4f1a\u89c9\u5f97\u901f\u5ea6\u98de\u5feb\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u7531 Git \u884d\u751f\u51fa\u6765\u7684 GitHub/GitLab \u53ef\u4ee5\u5e2e\u4f60\u5f88\u597d\u5730\u7ba1\u7406\u7f16\u7a0b\u5de5\u4f5c\uff0c\u6bd4\u5982 wiki\u3001fork\u3001pull\u3001request\u3001issue\u2026\u2026\u96c6\u6210\u4e86\u4e0e\u7f16\u7a0b\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u8ba9\u4eba\u89c9\u5f97\u8fd9\u4e0d\u662f\u4e00\u4e2a\u51b7\u51b0\u51b0\u7684\u5de5\u5177\uff0c\u800c\u771f\u6b63\u548c\u6211\u4eec\u7684\u65e5\u5e38\u5de5\u4f5c\u53d1\u751f\u4e86\u5f88\u597d\u7684\u4ea4\u4e92\u3002 GitHub/GitLab \u8fd9\u6837\u5de5\u5177\u7684\u51fa\u73b0\uff0c\u8ba9\u6211\u4eec\u7684\u5de5\u4f5c\u53ef\u4ee5\u5448\u73b0\u5728\u4e00\u4e2a\u5de5\u4f5c\u5e73\u53f0\u4e0a\uff0c\u5e76\u4ee5\u6b64\u6765\u89c4\u8303\u6574\u4e2a\u56e2\u961f\u7684\u5de5\u4f5c\uff0c\u8fd9\u624d\u6b63\u662f Git \u8fd9\u4e2a\u7248\u672c\u7ba1\u7406\u5de5\u5177\u6210\u529f\u7684\u539f\u56e0\u3002 1.1 \u4e2d\u5fc3\u5f0f\u534f\u540c\u5de5\u4f5c\u6d41 \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u5148\u8bf4\u660e\u4e00\u4e0b\uff0cGit \u662f\u53ef\u4ee5\u50cf SVN \u8fd9\u6837\u7684\u4e2d\u5fc3\u5de5\u4f5c\u6d41\u4e00\u6837\u5de5\u4f5c\u7684\u3002\u6211\u76f8\u4fe1\u5f88\u591a\u7a0b\u5e8f\u5458\u90fd\u662f\u5728\u91c7\u7528\u8fd9\u6837\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u4e00\u822c\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u7684\u3002 1. \u4ece\u670d\u52a1\u5668\u4e0a\u505a git pull origin master \u628a\u4ee3\u7801\u540c\u6b65\u4e0b\u6765\u3002 2. \u6539\u5b8c\u540e\uff0c git commit \u5230\u672c\u5730\u4ed3\u5e93\u4e2d\u3002 3. \u7136\u540e git push origin master \u5230\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\uff0c\u8fd9\u6837\u5176\u4ed6\u540c\u5b66\u5c31\u53ef\u4ee5\u5f97\u5230\u4f60\u7684\u4ee3\u7801\u4e86\u3002 \u5982\u679c\u5728\u7b2c 3 \u6b65\u53d1\u73b0 push \u5931\u8d25\uff0c\u56e0\u4e3a\u522b\u4eba\u5df2\u7ecf\u63d0\u4ea4\u4e86\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5148\u628a\u670d\u52a1\u5668\u4e0a\u7684\u4ee3\u7801\u7ed9 pull \u4e0b\u6765\uff0c\u4e3a\u4e86\u907f\u514d\u6709 merge \u52a8\u4f5c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 git pull --rebase \u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u4e0a\u7684\u63d0\u4ea4\u76f4\u63a5\u5408\u5e76\u5230\u4f60\u7684\u4ee3\u7801\u4e2d \uff0c\u5bf9\u6b64\uff0cGit \u7684\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\u3002 1. \u5148\u628a\u4f60\u672c\u5730\u63d0\u4ea4\u7684\u4ee3\u7801\u653e\u5230\u4e00\u8fb9\u3002 2. \u7136\u540e\u628a\u670d\u52a1\u5668\u4e0a\u7684\u6539\u52a8\u4e0b\u8f7d\u4e0b\u6765\u3002 3. \u7136\u540e\u5728\u672c\u5730\u628a\u4f60\u4e4b\u524d\u7684\u6539\u52a8\u518d\u91cd\u65b0\u4e00\u4e2a\u4e00\u4e2a\u5730\u505a commit\uff0c\u76f4\u5230\u5168\u90e8\u6210\u529f\u3002 \u5982\u4e0b\u56fe\u6240\u793a\u3002Git \u4f1a\u628a Origin/Master \u7684\u8fdc\u7a0b\u5206\u652f\u4e0b\u8f7d\u4e0b\u6765\uff08\u7d2b\u8272\u7684\uff09\uff0c\u7136\u540e\u628a\u672c\u5730\u7684 Master \u5206\u652f\u4e0a\u7684\u6539\u52a8\u4e00\u4e2a\u4e00\u4e2a\u5730\u63d0\u4ea4\u4e0a\u53bb\uff08\u84dd\u8272\u7684\uff09\u3002 \u5982\u679c\u6709\u51b2\u7a81\uff0c\u90a3\u4e48\u4f60\u8981\u5148\u89e3\u51b3\u51b2\u7a81\uff0c\u7136\u540e\u505a git rebase --continue \u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0cgit \u5728\u505a pull --rebase \u65f6\uff0c\u4f1a\u4e00\u4e2a\u4e00\u4e2a\u5730\u5e94\u7528\uff08apply\uff09\u672c\u5730\u63d0\u4ea4\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6709\u51b2\u7a81\u5c31\u4f1a\u505c\u4e0b\u6765\uff0c\u7b49\u4f60\u89e3\u51b3\u51b2\u7a81\u3002 1.2 \u529f\u80fd\u5206\u652f\u534f\u540c\u5de5\u4f5c\u6d41 \u00b6 \u4e0a\u9762\u7684\u90a3\u79cd\u65b9\u5f0f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5927\u5bb6\u90fd\u5728\u4e00\u4e2a\u4e3b\u5e72\u4e0a\u5f00\u53d1\u7a0b\u5e8f\uff0c\u5bf9\u4e8e\u5c0f\u56e2\u961f\u6216\u662f\u5c0f\u9879\u76ee\u4f60\u53ef\u4ee5\u8fd9\u4e48\u5e72\uff0c\u4f46\u662f\u5bf9\u6bd4\u8f83\u5927\u7684\u9879\u76ee\u6216\u662f\u4eba\u6bd4\u8f83\u591a\u7684\u56e2\u961f\uff0c\u8fd9\u4e48\u5e72\u5c31\u4f1a\u6709\u5f88\u591a\u95ee\u9898\u3002 \u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u4ee3\u7801\u53ef\u80fd\u5e72\u6270\u592a\u4e25\u91cd\u3002 \u5c24\u5176\u662f\uff0c\u6211\u4eec\u60f3\u5b89\u5b89\u9759\u9759\u5730\u5f00\u53d1\u4e00\u4e2a\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u60f3\u628a\u5404\u4e2a\u529f\u80fd\u7684\u4ee3\u7801\u53d8\u52a8\u9694\u79bb\u5f00\u6765\uff0c\u540c\u65f6\u5404\u4e2a\u529f\u80fd\u53c8\u4f1a\u6709\u591a\u4e2a\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u3002 \u8fd9\u65f6\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9\u5404\u4e2a\u529f\u80fd\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u5728 Master \u5206\u652f\u4e0a\u5171\u4eab\u4ed6\u4eec\u7684\u4ee3\u7801\u3002\u6211\u4eec\u60f3\u8981\u7684\u534f\u540c\u65b9\u5f0f\u662f\u8fd9\u6837\u7684\uff1a \u540c\u65f6\u5f00\u53d1\u4e00\u4e2a\u529f\u80fd\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5206\u4eab\u5404\u81ea\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u4e0d\u4f1a\u628a\u4ee3\u7801\u5206\u4eab\u7ed9\u5f00\u53d1\u5176\u4ed6\u529f\u80fd\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u76f4\u5230\u6574\u4e2a\u529f\u80fd\u5f00\u53d1\u5b8c\u6bd5\u540e\uff0c\u624d\u4f1a\u5206\u4eab\u7ed9\u5176\u4ed6\u7684\u5f00\u53d1\u4eba\u5458\uff08\u4e5f\u5c31\u662f\u8fdb\u5165\u4e3b\u5e72\u5206\u652f\uff09\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u201c\u529f\u80fd\u5206\u652f\u201d\u3002\u8fd9\u4e2a\u534f\u540c\u5de5\u4f5c\u6d41\u7684\u5f00\u53d1\u8fc7\u7a0b\u5982\u4e0b\u3002 1. \u9996\u5148\u4f7f\u7528 git checkout -b new-feature \u521b\u5efa \u201cnew-feature\u201d\u5206\u652f\u3002 2. \u7136\u540e\u5171\u540c\u5f00\u53d1\u8fd9\u4e2a\u529f\u80fd\u7684\u7a0b\u5e8f\u5458\u5c31\u5728\u8fd9\u4e2a\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u8fdb\u884c add\u3001commit \u7b49\u64cd\u4f5c\u3002 3. \u7136\u540e\u901a\u8fc7 git push -u origin new-feature \u628a\u5206\u652f\u4ee3\u7801 push \u5230\u670d\u52a1\u5668\u4e0a\u3002 4. \u5176\u4ed6\u7a0b\u5e8f\u5458\u53ef\u4ee5\u901a\u8fc7 git pull --rebase \u6765\u62ff\u5230\u6700\u65b0\u7684\u8fd9\u4e2a\u5206\u652f\u7684\u4ee3\u7801\u3002 5. \u6700\u540e\u901a\u8fc7 Pull Request \u7684\u65b9\u5f0f\u505a\u5b8c Code Review \u540e\u5408\u5e76\u5230 Master \u5206\u652f\u4e0a\u3002 \u5c31\u50cf\u4e0a\u9762\u8fd9\u4e2a\u56fe\u663e\u793a\u7684\u4e00\u6837\uff0c\u7d2b\u8272\u7684\u5206\u652f\u5c31\u662f\u529f\u80fd\u5206\u652f\uff0c\u5408\u5e76\u540e\u5c31\u4f1a\u50cf\u4e0a\u9762\u8fd9\u4e2a\u6837\u5b50\u3002 1.3 GitFlow \u534f\u540c\u5de5\u4f5c\u6d41 \u00b6 \u5728\u771f\u5b9e\u7684\u751f\u4ea7\u8fc7\u7a0b\u4e2d\uff0c\u524d\u9762\u7684\u534f\u540c\u5de5\u4f5c\u6d41\u8fd8\u662f\u4e0d\u80fd\u6ee1\u8db3\u5de5\u4f5c\u7684\u8981\u6c42\u3002\u8fd9\u4e3b\u8981\u56e0\u4e3a\u6211\u4eec\u7684\u751f\u4ea7\u8fc7\u7a0b\u662f\u6bd4\u8f83\u590d\u6742\u7684\uff0c\u8f6f\u4ef6\u751f\u4ea7\u4e2d\u4f1a\u6709\u5404\u5f0f\u5404\u6837\u7684\u95ee\u9898\uff0c\u5e76\u8981\u9762\u5bf9\u4e0d\u540c\u7684\u73af\u5883\u3002\u6211\u4eec\u8981\u5728\u4e0d\u505c\u5730\u5f00\u53d1\u65b0\u4ee3\u7801\u7684\u540c\u65f6\uff0c\u7ef4\u62a4\u7ebf\u4e0a\u7684\u4ee3\u7801\uff0c\u4e8e\u662f\uff0c\u5c31\u6709\u4e86\u4e0b\u9762\u8fd9\u4e9b\u9700\u6c42\u3002 1. \u5e0c\u671b\u6709\u4e00\u4e2a\u5206\u652f\u662f\u975e\u5e38\u5e72\u51c0\u7684\uff0c\u4e0a\u9762\u662f\u53ef\u4ee5\u53d1\u5e03\u7684\u4ee3\u7801\uff0c\u4e0a\u9762\u7684\u6539\u52a8\u6c38\u8fdc\u90fd\u662f\u53ef\u4ee5\u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u3002 \u8fd9\u4e2a\u5206\u652f\u4e0a\u4e0d\u80fd\u6709\u4e2d\u95f4\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u4ee5\u4e0a\u751f\u4ea7\u7ebf\u7684\u4ee3\u7801\u63d0\u4ea4\u3002 2. \u5e0c\u671b\u5f53\u4ee3\u7801\u8fbe\u5230\u53ef\u4ee5\u4e0a\u7ebf\u7684\u72b6\u6001\u65f6\uff0c\u4e5f\u5c31\u662f\u5728 alpha/beta release \u65f6\uff0c \u5728\u6d4b\u8bd5\u548c\u4ea4\u4ed8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u7136\u53ef\u4ee5\u5f00\u53d1\u4e0b\u4e00\u4e2a\u7248\u672c\u7684\u4ee3\u7801\u3002 3. \u6700\u540e\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u53d1\u5e03\u7684\u4ee3\u7801\uff0c\u4e5f\u4f1a\u6709\u4e00\u4e9b Bug-fix \u7684\u6539\u52a8\uff0c\u4e0d\u4f1a\u5c06\u6b63\u5728\u5f00\u53d1\u7684\u4ee3\u7801\u63d0\u4ea4\u5230\u751f\u4ea7\u7ebf\u4e0a\u53bb\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0cGitFlow \u534f\u540c\u5de5\u4f5c\u6d41\u5c31\u51fa\u6765\u4e86\u3002 \u8fd9\u4e2a\u534f\u540c\u5de5\u4f5c\u6d41\u7684\u6838\u5fc3\u601d\u60f3\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6574\u4e2a\u4ee3\u7801\u5e93\u4e2d\u4e00\u5171\u6709**\u4e94\u79cd\u5206\u652f** \u3002 - Master \u5206\u652f \u3002\u4e5f\u5c31\u662f\u4e3b\u5e72\u5206\u652f\uff0c\u7528\u4f5c\u53d1\u5e03\u73af\u5883\uff0c\u4e0a\u9762\u7684\u6bcf\u4e00\u6b21\u63d0\u4ea4\u90fd\u662f\u53ef\u4ee5\u53d1\u5e03\u7684\u3002 - Feature \u5206\u652f \u3002\u4e5f\u5c31\u662f\u529f\u80fd\u5206\u652f\uff0c\u7528\u4e8e\u5f00\u53d1\u529f\u80fd\uff0c\u5176\u5bf9\u5e94\u7684\u662f\u5f00\u53d1\u73af\u5883\u3002 - Developer \u5206\u652f \u3002\u662f\u5f00\u53d1\u5206\u652f\uff0c\u4e00\u65e6\u529f\u80fd\u5f00\u53d1\u5b8c\u6210\uff0c\u5c31\u5411 Developer \u5206\u652f\u5408\u5e76\uff0c\u5408\u5e76\u5b8c\u6210\u540e\uff0c\u5220\u9664\u529f\u80fd\u5206\u652f\u3002\u8fd9\u4e2a\u5206\u652f\u5bf9\u5e94\u7684\u662f\u96c6\u6210\u6d4b\u8bd5\u73af\u5883\u3002 - Release \u5206\u652f\u3002\u5f53 Developer \u5206\u652f\u6d4b\u8bd5\u8fbe\u5230\u53ef\u4ee5\u53d1\u5e03\u72b6\u6001\u65f6\uff0c\u5f00\u51fa\u4e00\u4e2a Release \u5206\u652f\u6765\uff0c\u7136\u540e\u505a\u53d1\u5e03\u524d\u7684\u51c6\u5907\u5de5\u4f5c\u3002\u8fd9\u4e2a\u5206\u652f\u5bf9\u5e94\u7684\u662f\u9884\u53d1\u73af\u5883\u3002 \u4e4b\u6240\u4ee5\u9700\u8981\u8fd9\u4e2a Release \u5206\u652f\uff0c\u662f\u6211\u4eec\u7684\u5f00\u53d1\u53ef\u4ee5\u7ee7\u7eed\u5411\u524d\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u8981\u53d1\u5e03\u800c\u88ab block \u4f4f\u800c\u4e0d\u80fd\u63d0\u4ea4\u3002\u4e00\u65e6 Release \u5206\u652f\u4e0a\u7684\u4ee3\u7801\u8fbe\u5230\u53ef\u4ee5\u4e0a\u7ebf\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u9700\u8981\u628a Release \u5206\u652f\u5411 Master \u5206\u652f\u548c Developer \u5206\u652f\u540c\u65f6\u5408\u5e76\uff0c\u4ee5\u4fdd\u8bc1\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u3002\u7136\u540e\u518d\u628a Release \u5206\u652f\u5220\u9664\u6389\u3002 Hotfix \u5206\u652f\u3002 \u662f\u7528\u4e8e\u5904\u7406\u751f\u4ea7\u7ebf\u4e0a\u4ee3\u7801\u7684 Bug-fix\uff0c\u6bcf\u4e2a\u7ebf\u4e0a\u4ee3\u7801\u7684 Bug-fix \u90fd\u9700\u8981\u5f00\u4e00\u4e2a Hotfix \u5206\u652f\uff0c\u5b8c\u6210\u540e\uff0c\u5411 Developer \u5206\u652f\u548c Master \u5206\u652f\u4e0a\u5408\u5e76\u3002 \u5408\u5e76\u5b8c\u6210\u540e\uff0c\u5220\u9664 Hotfix \u5206\u652f\u3002 \u8fd9\u5c31\u662f\u6574\u4e2a GitFlow \u534f\u540c\u5de5\u4f5c\u6d41\u7684\u5de5\u4f5c\u8fc7\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff1a 1. \u6211\u4eec\u9700\u8981\u957f\u671f\u7ef4\u62a4 Master \u548c Developer \u4e24\u4e2a\u5206\u652f\u3002 2. \u8fd9\u5176\u4e2d\u7684\u65b9\u5f0f\u8fd8\u662f\u6709\u4e00\u5b9a\u590d\u6742\u5ea6\u7684\uff0c\u5c24\u5176\u662f Release \u548c Hotfix \u5206\u652f\u9700\u8981\u540c\u65f6\u5411\u4e24\u4e2a\u5206\u652f\u4f5c\u5408\u5e76\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u597d\u7684\u5de5\u5177\u6765\u652f\u6491\u7684\u8bdd\uff0c\u8fd9\u4f1a\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u5fd8\u4e86\u505a\u4e00\u4e9b\u64cd\u4f5c\u800c\u5bfc\u81f4\u4ee3\u7801\u4e0d\u4e00\u81f4\u3002 3. GitFlow \u534f\u540c\u867d\u7136\u5de5\u4f5c\u6d41\u6bd4\u8f83\u91cd\u3002\u4f46\u662f\u5b83\u51e0\u4e4e\u53ef\u4ee5\u5e94\u5bf9\u6240\u6709\u516c\u53f8\u7684\u5404\u79cd\u5f00\u53d1\u6d41\u7a0b\uff0c\u5305\u62ec\u7011\u5e03\u6a21\u578b\uff0c\u6216\u662f\u5feb\u901f\u8fed\u4ee3\u6a21\u578b\u3002 1.4 Gitflow \u534f\u540c\u5de5\u4f5c\u6d41\u7684\u7f3a\u70b9 \u00b6 \u5176\u4e2d\u6709\u4e2a\u95ee\u9898\u5c31\u662f\u56e0\u4e3a\u5206\u652f\u592a\u591a\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0 git log \u6df7\u4e71\u7684\u5c40\u9762\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4e3b\u8981\u662f git- flow \u4f7f\u7528 gitmerge --no-ff \u6765\u5408\u5e76\u5206\u652f\uff0c\u5728 git-flow \u8fd9\u6837\u591a\u4e2a\u5206\u652f\u7684\u73af\u5883\u4e0b\u4f1a\u8ba9\u4f60\u7684\u5206\u652f\u7ba1\u7406\u7684 log \u53d8\u5f97\u5f88\u96be\u770b\u3002\u5982\u4e0b\u6240\u793a\uff0c\u5de6\u8fb9\u662f\u4f7f\u7528\u2013no-ff \u53c2\u6570\u5728\u591a\u4e2a\u5206\u652f\u4e0b\u7684\u95ee\u9898\u3002 \u6240\u8c13 --no-ff \u53c2\u6570\u7684\u610f\u601d\u662f \u2014\u2014no fast forward \u7684\u610f\u601d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5408\u5e76\u7684\u65b9\u6cd5\u4e0d\u8981\u628a\u8fd9\u4e2a\u5206\u652f\u4ee5 \u524d\u7f6e\u5408\u5e76 \u7684\u65b9\u5f0f\u63d0\u4ea4\uff0c\u800c\u662f\u7559\u4e0b\u4e00\u4e2a merge \u7684\u63d0\u4ea4\u3002\u8fd9\u662f\u628a\u53cc\u5203\u5251\uff0c\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684 --no-ff \u80fd\u50cf\u53f3\u8fb9\u90a3\u6837\uff0c\u800c\u4e0d\u662f\u50cf\u5de6\u8fb9\u90a3\u6837\u3002 \u5bf9\u6b64\u7684\u5efa\u8bae\u662f\uff1a\u53ea\u6709 feature \u5408\u5e76\u5230 developer \u5206\u652f\u65f6\uff0c\u4f7f\u7528\u2013no-ff \u53c2\u6570\uff0c\u5176\u4ed6\u7684\u5408\u5e76\u90fd\u4e0d\u4f7f\u7528 --no-ff \u53c2\u6570\u6765\u505a\u5408\u5e76\u3002 Text Only 1 2 3 4 5 6 7 8 9 10 11 --no-ff\u6307\u7684\u662f\u5f3a\u884c\u5173\u95edfast-forward\u65b9\u5f0f\u3002 fast-forward\u65b9\u5f0f\u5c31\u662f\u5f53\u6761\u4ef6\u5141\u8bb8\u7684\u65f6\u5019\uff0cgit\u76f4\u63a5\u628aHEAD\u6307\u9488\u6307\u5411\u5408\u5e76\u5206\u652f\u7684\u5934\uff0c\u5b8c\u6210\u5408\u5e76\u3002\u5c5e\u4e8e\u201c\u5feb\u8fdb\u65b9\u5f0f\u201d\uff0c \u4e0d\u8fd9\u79cd\u60c5\u51b5\u5982\u679c\u5220\u9664\u5206\u652f\uff0c\u5219\u4f1a\u4e22\u5931\u5206\u652f\u4fe1\u606f\u3002\u56e0\u4e3a\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u521b\u5efacommit git merge --squash \u662f\u7528\u6765\u628a\u4e00\u4e9b\u4e0d\u5fc5\u8981commit\u8fdb\u884c\u538b\u7f29\uff0c\u6bd4\u5982\u8bf4\uff0c\u4f60\u7684feature\u5728\u5f00\u53d1\u7684\u65f6\u5019\u5199\u7684commit\u5f88\u4e71\uff0c \u90a3\u4e48\u6211\u4eec\u5408\u5e76\u7684\u65f6\u5019\u4e0d\u5e0c\u671b\u628a\u8fd9\u4e9b\u5386\u53f2commit\u5e26\u8fc7\u6765\uff0c\u4e8e\u662f\u4f7f\u7528--squash\u8fdb\u884c\u5408\u5e76\uff0c\u6b64\u65f6\u6587\u4ef6\u5df2\u7ecf\u540c\u5408\u5e76\u540e\u4e00\u6837\u4e86, \u4f46\u4e0d\u79fb\u52a8HEAD\uff0c\u4e0d\u63d0\u4ea4\u3002\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u989d\u5916\u7684commit\u6765\u201c\u603b\u7ed3\u201d\u4e00\u4e0b\uff0c\u7136\u540e\u5b8c\u6210\u6700\u7ec8\u7684\u5408\u5e76\u3002 \u603b\u7ed3\uff1a --no-ff\uff1a\u4e0d\u4f7f\u7528fast-forward\u65b9\u5f0f\u5408\u5e76\uff0c\u4fdd\u7559\u5206\u652f\u7684commit\u5386\u53f2 --squash\uff1a\u4f7f\u7528squash\u65b9\u5f0f\u5408\u5e76\uff0c\u628a\u591a\u6b21\u5206\u652fcommit\u5386\u53f2\u538b\u7f29\u4e3a\u4e00\u6b21 \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u5728\u5f00\u53d1\u5f97\u8db3\u591f\u5feb\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u89c9\u5f97\u540c\u65f6\u7ef4\u62a4 Master \u548c Developer \u4e24\u4e2a\u5206\u652f\u662f\u4e00\u4ef6\u5f88\u65e0\u804a\u7684\u4e8b\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u5206\u652f\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u4e00\u6837\u7684\u3002\u5305\u62ec Release \u5206\u652f\uff0c\u4f60\u4f1a\u89c9\u5f97\u521b\u5efa\u7684\u8fd9\u4e9b\u5206\u652f\u592a\u65e0\u804a\u3002 \u800c\u4f60\u7684\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u4e5f\u4f1a\u56e0\u4e3a\u8fd9\u4e48\u590d\u6742\u7684\u7ba1\u7406\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\u5c24\u5176\u5f53\u4f60\u60f3\u56de\u6eda\u67d0\u4e9b\u4eba\u7684\u63d0\u4ea4\u65f6\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e8b\u4f3c\u4e4e\u6709\u70b9\u513f\u4e0d\u597d\u5e72\u4e86\u3002\u800c\u4e14\u5728\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u6765\u6765\u56de\u56de\u5730\u5207\u6362\u5de5\u4f5c\u7684\u5206\u652f\uff0c\u6709\u65f6\u5019\u4e00\u4e0d\u5c0f\u5fc3\u6ca1\u6709\u5207\u6362\uff0c\u5c31\u63d0\u4ea4\u5230\u4e86\u4e0d\u6b63\u786e\u7684\u5206\u652f\u4e0a\uff0c\u4f60\u8fd8\u8981\u56de\u6eda\u548c\u91cd\u65b0\u63d0\u4ea4\uff0c\u7b49\u7b49\u3002 2 \u5206\u652f\u8be6\u7ec6\u4ecb\u7ecd \u00b6 \u9996\u5148\u6709\u4e00\u4e2a master \u7248\u672c\uff0c\u5982\u679c\u65b0\u5f00\u53d1\u4e00\u4e2a\u529f\u80fd\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a develop \u5206\u652f \u6211\u4eec\u73b0\u5728\u60f3\u5f00\u53d1\u4e00\u4e2a \u65b0\u529f\u80fd \uff0cglodstyle , \u6539\u53d8\u754c\u9762\u7684\u76ae\u80a4\uff0c\u5206\u522b\u521b\u5efa\u5bf9\u5e94\u7684\u5206\u652f \u518d\u5f00\u53d1\u4e00\u4e2a \u5c0f\u6e38\u620f\u529f\u80fd \uff0c\u5206\u522b\u521b\u5efa\u5bf9\u5e94\u7684\u5206\u652f \u5982\u679c\u7ebf\u4e0a\u8dd1\u7684\u7a0b\u5e8f\u51fa\u73b0 bug \u4e86\uff0c\u521b\u5efa\u4e00\u4e2a \u70ed\u4fee\u590d\u5206\u652f \u3002 \u4fee\u590d bug \u4ee5\u540e\uff0c\u5c3d\u5feb\u5408\u5e76\u5230 master \u4e2d\u3002\u540c\u65f6\u4fee\u590d\u7684\u7248\u672c\uff0c\u4e5f\u8981\u5408\u5e76\u5230 develop \u5206\u652f\u4e0a \u4e24\u4e2a\u529f\u80fd\u5206\u652f\u7ee7\u7eed\u5f80\u524d\u63a8\u8fdb\uff0cfeature_goldstyle \u5148\u5f00\u53d1\u5b8c\u6210\uff0c\u5408\u5e76\u5230 develop \u5206\u652f\u4e0a feature_goldstyle \u5b8c\u6210\u540e\uff0c\u5408\u5e76\u5230 develop \u5206\u652f\uff0c\u7136\u540e\u57fa\u4e8e develop \u5206\u652f \u521b\u5efa\u9884\u53d1\u5e03\u5206\u652f(release) ,\u5728\u8bbe\u4e2a\u5206\u652f\u4e0a\u8fdb\u884c\u4e0a\u7ebf\u524d\u7684\u6d4b\u8bd5\u3002 \u5982\u679c release \u5206\u652f\u51fa\u73b0 bug,\u5219\u76f4\u63a5\u5728 release \u5206\u652f\u4e0a\u8fdb\u884c\u53d1\u5e03\uff0c\u4fee\u590d\u4ee5\u540e\uff0c\u5408\u5e76\u5230 master \u5206\u652f\u4e0a\u3002\u5f00\u53d1\u5206\u652f\u4e5f\u9700\u8981\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e5f\u8981\u5408\u5e76\u5230\u5f00\u53d1\u5206\u652f\u4e0a\u3002 \u7136\u540e \u5c0f\u6e38\u620f\u5206\u652f\u4e5f\u5f00\u53d1\u5b8c\u6210\u4e86\uff0c\u5408\u5e76\u5230 develop \u5206\u652f\u4e0a\uff0c\u7136\u540e\u521b\u5efa release \u5206\u652f\uff0c\u5982\u679c\u6d4b\u8bd5\u6ca1\u95ee\u9898\uff0c\u5219\u5408\u5e76\u5230 master \u5206\u652f\u4e0a\u3002 hotfix \u5206\u652f \u4fee\u590d\u5b8c bug \u540e\uff0c\u76f4\u63a5\u5c31\u5220\u9664\u4e86\u3002\u4e5f\u53ef\u4ee5\u4e0d\u9700\u8981 release \u5206\u652f\uff0c\u76f4\u63a5\u5728 develop \u5206\u652f\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002 \u5206\u652f\u7c7b\u578b - master \u4e3b\u5206\u4e4b(\u751f\u4ea7\u73af\u5883\u5206\u652f)\uff0c \u786e\u4fdd\u4efb\u4f55\u65f6\u523b\u8be5\u5206\u4e4b\u4e0a\u7684\u4ee3\u7801\u90fd\u662f\u53ef\u53d1\u5e03\u7684\u7a33\u5b9a\u7684\uff0c\u4e0d\u5141\u8bb8\u76f4\u63a5\u63d0\u4ea4\u4ee3\u7801\u5230\u8be5\u5206\u652f\u3002 \u4e3a\u5b9e\u73b0\u66f4\u4e25\u683c\u7684\u63a7\u5236\u53ef\u4ee5\u6dfb\u52a0\u6743\u9650\uff0c\u53ea\u6709\u4e3b\u7a0b\u5e8f\u5458\u624d\u53ef\u64cd\u4f5c\u8be5\u5206\u652f\uff0c\u666e\u901a\u5f00\u53d1\u5458\u65e0\u6743\u9650\u3002 - develop \u5f00\u53d1\u5206\u652f\uff0c\u8be5\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u662f\u5f00\u53d1\u5b8c\u6210\u4e14\u7ecf\u8fc7\u6d4b\u8bd5(\u81ea\u6d4b)\u7684\u4ee3\u7801\u3002\u5728\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u7684\u573a\u666f\u4e0b\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728\u8be5\u5206\u652f\u4e0a\u63d0\u4ea4\u4ee3\u7801\u5e94\u8be5\u914d\u5408\u529f\u80fd\u5206\u652f\u3001\u9884\u53d1\u5e03\u5206\u652f\u548c\u8865\u4e01\u5206\u652f\u6765\u8fdb\u884c\u4ee3\u7801\u7684\u5408\u5e76 - feature/FEATURE_NAME \u529f\u80fd\u5206\u652f - release/vSEMATIC_VERSION \u9884\u53d1\u5e03\u5206\u652f - hotfix/HOTFIX_NAME \u8865\u4e01\u5206\u652f - vMAJOR.MINOR.PATCH \u7248\u672c\u6807\u7b7e \u5206\u652f\u8bf4\u660e \u5206\u652f\u7c7b\u578b \u5b9a\u4e49 \u4f5c\u7528 \u5408\u5e76\u5173\u7cfb \u5efa\u7acb\u65f6\u673a \u521d\u59cb\u4ee3\u7801\u6765\u6e90 master \u4e3b\u5206\u652f \u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6b63\u5f0f\u53d1\u5e03\u7248\u672c\uff0cTAG \u6240\u5728\u5206\u652f \u5141\u8bb8\u6765\u81ea release \u548c hotfix \u5206\u652f\u7684\u5408\u5e76 \u4ed3\u5e93\u521d\u59cb\u5316 \u4ed3\u5e93\u521d\u59cb\u5316 hotfix \u8865\u4e01\u5206\u652f \u4fee\u590d\u5df2\u53d1\u5e03\u7248\u672c\u7684 bug \u4e0d\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u5206\u652f\u7684\u5408\u5e76 \u5df2\u53d1\u5e03\u7248\u672c\u51fa\u73b0 BUG \u65f6 master(\u6216 master \u4e0a\u7684 TAG) release \u9884\u53d1\u5e03\u5206\u652f \u8868\u793a\u9884\u53d1\u5e03\u5728\u6d4b\u8bd5 QA \u73af\u5883\u7684\u5206\u652f\uff0c\u5f85\u6d4b\u8bd5\u4eba\u5458\u8fdb\u884c\u6d4b\u8bd5 \u4e0d\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u5206\u652f\u7684\u5408\u5e76 develop \u4e0a\u4ee3\u7801\u6ee1\u8db3\u53d1\u5e03\u8981\u6c42 \u63a8\u8350\u4f7f\u7528 develop \u4e0a\u6700\u65b0\u7684 commit develop \u5f00\u53d1\u5206\u652f \u4fdd\u6301\u6700\u65b0\u7684\u7ecf\u8fc7\u81ea\u6d4b\u7684\u4ee3\u7801 \u5141\u8bb8\u6765\u81ea feature\u3001release \u548c hotfix \u5206\u652f\u7684\u5408\u5e76 master \u521b\u5efa\u5b8c\u6210\u540e master feature \u529f\u80fd\u5206\u652f \u5f00\u53d1\u72ec\u7acb\u7684\u529f\u80fd\u9700\u6c42 \u4e0d\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u5206\u652f\u7684\u5408\u5e76 \u6709\u72ec\u7acb\u7684\u65b0\u529f\u80fd\u9700\u6c42\u65f6 \u63a8\u8350\u4f7f\u7528 develop \u4e0a\u6700\u65b0\u7684 commit 2.1 \u5386\u53f2\u5206\u652f \u00b6 \u76f8\u5bf9\u4f7f\u7528\u4ec5\u6709\u7684\u4e00\u4e2a master \u5206\u652f\uff0c Gitflow \u5de5\u4f5c\u6d41\u4f7f\u7528 2 \u4e2a\u5206\u652f\u6765\u8bb0\u5f55\u9879\u76ee\u7684\u5386\u53f2\u3002 master \u5206\u652f \u5b58\u50a8\u4e86\u6b63\u5f0f\u53d1\u5e03\u7684\u5386\u53f2\uff0c\u800c develop \u5206\u652f \u4f5c\u4e3a\u529f\u80fd\u7684\u96c6\u6210\u5206\u652f\u3002 \u8fd9\u6837\u4e5f\u65b9\u4fbf master \u5206\u652f\u4e0a\u7684\u6240\u6709\u63d0\u4ea4\u5206\u914d\u4e00\u4e2a \u7248\u672c\u53f7 \u3002 2.2 \u529f\u80fd\u5206\u652f \u00b6 \u6bcf\u4e2a\u65b0\u529f\u80fd\u4f4d\u4e8e\u4e00\u4e2a\u81ea\u5df1\u7684\u5206\u652f\uff0c\u8fd9\u6837\u53ef\u4ee5 push \u5230\u4e2d\u592e\u4ed3\u5e93\u4ee5\u5907\u4efd\u548c\u534f\u4f5c\u3002 \u4f46\u529f\u80fd\u5206\u652f\u4e0d\u662f\u4ece master \u5206\u652f\u4e0a\u62c9\u51fa\u65b0\u5206\u652f\uff0c\u800c\u662f\u4f7f\u7528 develop \u5206\u652f\u4f5c\u4e3a\u7236\u5206\u652f\u3002\u5f53\u65b0\u529f\u80fd\u5b8c\u6210\u65f6\uff0c\u5408\u5e76\u56de develop \u5206\u652f\u3002 \u65b0\u529f\u80fd\u63d0\u4ea4\u5e94\u8be5\u4ece\u4e0d\u76f4\u63a5\u4e0e master \u5206\u652f\u4ea4\u4e92\u3002 \u6ce8\u610f\uff0c\u4ece\u5404\u79cd\u542b\u4e49\u548c\u76ee\u7684\u4e0a\u6765\u770b\uff0c\u529f\u80fd\u5206\u652f\u52a0\u4e0a develop \u5206\u652f\u5c31\u662f\u529f\u80fd\u5206\u652f\u5de5\u4f5c\u6d41\u7684\u7528\u6cd5\u3002\u4f46 Gitflow \u5de5\u4f5c\u6d41\u6ca1\u6709\u5728\u8fd9\u91cc\u6b62\u6b65\u3002 2.3 \u53d1\u5e03\u5206\u652f \u00b6 \u4e00\u65e6 develop \u5206\u652f\u4e0a\u6709\u4e86\u505a\u4e00\u6b21\u53d1\u5e03\uff08\u6216\u8005\u8bf4\u5feb\u5230\u4e86\u65e2\u5b9a\u7684\u53d1\u5e03\u65e5\uff09\u7684\u8db3\u591f\u529f\u80fd\uff0c \u5c31\u4ece develop \u5206\u652f\u4e0a fork \u4e00\u4e2a\u53d1\u5e03\u5206\u652f\uff08Release\uff09\u3002 \u65b0\u5efa\u7684\u5206\u652f\u7528\u4e8e\u5f00\u59cb\u53d1\u5e03\u5faa\u73af\uff0c \u6240\u4ee5\u4ece\u8fd9\u4e2a\u65f6\u95f4\u70b9\u5f00\u59cb\u4e4b\u540e\u65b0\u7684\u529f\u80fd\u4e0d\u80fd\u518d\u52a0\u5230\u8fd9\u4e2a\u5206\u652f\uff08Release\uff09\u4e0a\u2014\u2014 \u8fd9\u4e2a\u5206\u652f\uff08Release\uff09\u53ea\u5e94\u8be5\u505a Bug \u4fee\u590d\u3001\u6587\u6863\u751f\u6210\u548c\u5176\u5b83\u9762\u5411\u53d1\u5e03\u4efb\u52a1\u3002 \u4e00\u65e6\u5bf9\u5916\u53d1\u5e03\u7684\u5de5\u4f5c\u90fd\u5b8c\u6210\u4e86\uff0c\u53d1\u5e03\u5206\u652f\uff08Release\uff09\u5408\u5e76\u5230 master \u5206\u652f\u5e76\u5206\u914d\u4e00\u4e2a\u7248\u672c\u53f7\u6253\u597d Tag\u3002 \u53e6\u5916\uff0c\u8fd9\u4e9b\u4ece\u65b0\u5efa\u53d1\u5e03\u5206\u652f\u4ee5\u6765\u7684\u505a\u7684\u4fee\u6539\u8981\u5408\u5e76\u56de develop \u5206\u652f\u3002 (\u6700\u540e\u518d\u5220\u9664 Release \u5206\u652f)\u4f7f\u7528\u4e00\u4e2a\u7528\u4e8e\u53d1\u5e03\u51c6\u5907\u7684\u4e13\u95e8\u5206\u652f\uff0c\u4f7f\u5f97\u4e00\u4e2a\u56e2\u961f\u53ef\u4ee5\u5728\u5b8c\u5584\u5f53\u524d\u7684\u53d1\u5e03\u7248\u672c\u7684\u540c\u65f6\uff0c\u53e6\u4e00\u4e2a\u56e2\u961f\u53ef\u4ee5\u7ee7\u7eed\u5f00\u53d1\u4e0b\u4e2a\u7248\u672c\u7684\u529f\u80fd\u3002 \u8fd9\u4e5f\u6253\u9020\u5b9a\u4e49\u826f\u597d\u7684\u5f00\u53d1\u9636\u6bb5\uff08\u6bd4\u5982\uff0c\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u8bf4\uff0c\u300e\u8fd9\u5468\u6211\u4eec\u8981\u505a\u51c6\u5907\u53d1\u5e03\u7248\u672c 4.0\u300f\uff0c\u5e76\u4e14\u5728\u4ed3\u5e93\u7684\u76ee\u5f55\u7ed3\u6784\u4e2d\u53ef\u4ee5\u5b9e\u9645\u770b\u5230\uff09\u3002 \u5e38\u7528\u7684\u5206\u652f\u4ecb\u7ecd Text Only 1 2 3 \u7528\u4e8e\u65b0\u5efa\u53d1\u5e03\u5206\u652f\u7684\u5206\u652f: develop \u7528\u4e8e\u5408\u5e76\u7684\u5206\u652f: master \u5206\u652f\u547d\u540d: release-* \u6216 release/* 2.4 \u7ef4\u62a4\u5206\u652f \u00b6 \u7ef4\u62a4\u5206\u652f\u6216\u8bf4\u662f\u70ed\u4fee\u590d\uff08hotfix\uff09\u5206\u652f\u7528\u4e8e\u751f\u6210\u5feb\u901f\u7ed9\u4ea7\u54c1\u53d1\u5e03\u7248\u672c\uff08production releases\uff09\u6253\u8865\u4e01\uff0c\u8fd9\u662f\u552f\u4e00\u53ef\u4ee5\u76f4\u63a5\u4ece master \u5206\u652f fork \u51fa\u6765\u7684\u5206\u652f\u3002 \u4fee\u590d\u5b8c\u6210\uff0c\u4fee\u6539\u5e94\u8be5\u9a6c\u4e0a\u5408\u5e76\u56de master \u5206\u652f\u548c develop \u5206\u652f\uff08\u5f53\u524d\u7684\u53d1\u5e03\u5206\u652f\uff09\uff0cmaster \u5206\u652f\u5e94\u8be5\u7528\u65b0\u7684\u7248\u672c\u53f7\u6253\u597d Tag\u3002\u4e3a Bug \u4fee\u590d\u4f7f\u7528\u4e13\u95e8\u5206\u652f\uff0c\u8ba9\u56e2\u961f\u53ef\u4ee5\u5904\u7406\u6389\u95ee\u9898\u800c\u4e0d\u7528\u6253\u65ad\u5176\u5b83\u5de5\u4f5c\u6216\u662f\u7b49\u5f85\u4e0b\u4e00\u4e2a\u53d1\u5e03\u5faa\u73af\u3002 \u4f60\u53ef\u4ee5\u628a\u7ef4\u62a4\u5206\u652f\u60f3\u6210\u662f\u4e00\u4e2a\u76f4\u63a5\u5728 master \u5206\u652f\u4e0a\u5904\u7406\u7684\u4e34\u65f6\u53d1\u5e03\u3002 3 GItFlow \u7684\u5b9e\u73b0 \u00b6 3.1 \u4f7f\u7528\u547d\u4ee4\u6765\u5b9e\u73b0 \u00b6 \u521b\u5efa\u4e00\u4e2a\u4ed3\u5e93 \u7136\u540e clone \u9879\u76ee \u4e3a master \u5206\u652f\u914d\u5957\u4e00\u4e2a develop \u5206\u652f\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u53ef\u4ee5\u5728\u672c\u5730\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 develop \u5206\u652f\uff0cpush \u5230\u670d\u52a1\u5668\u4e0a Text Only 1 git checkout -b develop #\u57fa\u4e8e\u5f53\u524d\u5206\u652f \u521d\u59cb\u5316\u9879\u76ee\u5de5\u7a0b\uff0c\u521b\u5efa springBoot \u9879\u76ee \u63d0\u4ea4\u5206\u652f\u5230\u670d\u52a1\u5668\u4e0a Text Only 1 git push --set-upstream origin develop \u521d\u59cb\u5316\u6846\u67b6\uff0c\u52a0\u4e0a springBoot \u6846\u67b6\u53ca\u6837\u4f8b \u4ee5\u540e\u8fd9\u4e2a\u5206\u652f\u5c06\u4f1a\u5305\u542b\u4e86\u9879\u76ee\u7684\u5168\u90e8\u5386\u53f2\uff0c\u800c master \u5206\u652f\u5c06\u5305\u542b\u4e86\u90e8\u5206\u5386\u53f2\u3002\u5176\u4ed6\u5f00\u53d1\u8005\u8fd9\u65f6\u5e94\u8be5\u514b\u9686\u4e2d\u592e\u4ed3\u5e93\uff0c\u5efa\u597d develop \u5206\u652f\u7684\u8ddf\u8e2a\u5206\u652f: \u521b\u5efa\u529f\u80fd\u5206\u652f \u7a0b\u5e8f\u5458 A Text Only 1 2 3 4 git clone http://192.168.53.197:3000/root/gitflow.git git checkout develop # \u5207\u6362\u5230develop\u5206\u652f git checkout -b feature/FEATURE-01 # \u57fa\u4e8edevelop \u5206\u652f\u521b\u5efa\u529f\u80fd\u5206\u652f git push -u origin feature/FEATURE-01 - \u505a\u529f\u80fd\u4fee\u6539\uff0c\u6dfb\u52a0\u529f\u80fd - \u63d0\u4ea4 - \u7a0b\u5e8f\u5458 A \u5b8c\u6210\u4e86\u5f00\u53d1\u7684\u529f\u80fd\u3002\u5982\u679c\u56e2\u961f \u4f7f\u7528 Pull requests ,\u8fd9\u65f6\u5019\u53d1\u8d77\u4e00\u4e2a\u7528\u4e8e\u5408\u5e76\u5230 develop \u5206\u652f\u3002 \u5426\u5219\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u5230\u4ed6\u672c\u5730\u7684 develop \u5206\u652f\u540e push \u5230\u4e2d\u592e\u4ed3\u5e93 Text Only 1 2 3 4 5 6 7 8 9 10 # \u62c9\u53d6\u8fdc\u7a0b\u7684develop\u5206\u652f\uff0c\u5e76\u4e14\u5f53\u524d\u5206\u652f\uff08\u672c\u5730\u5206\u652fsome-feature\uff09\u5408\u5e76\u4e0a\u8fdc\u7a0b\u5206\u652fdevelop #\u7b2c\u4e00\u6761\u547d\u4ee4\u5728\u5408\u5e76\u529f\u80fd\u524d\u786e\u4fdddevelop\u5206\u652f\u662f\u6700\u65b0\u7684\u3002\u6ce8\u610f\uff0c\u529f\u80fd\u51b3\u4e0d\u5e94\u8be5\u76f4\u63a5\u5408\u5e76\u5230master\u5206\u652f\u3002 \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u548c\u96c6\u4e2d\u5f0f\u5de5\u4f5c\u6d41\u4e00\u6837\u3002 git pull origin develop git checkout develop git merge --no-ff feature/FEATURE-01 #\u5408\u5e76\u5206\u652f\u5230develop\u5206\u652f\u4e0a git push # \u5220\u9664\u672c\u5730\u5206\u652f git branch -d feature/FEATURE-01 # \u5982\u679c\u5728\u670d\u52a1\u5668\u4e0a\u6709\u8fd9\u4e2a\u5206\u652f\uff0c\u5219\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4 git push origin --delete feature/FEATURE-01 \u521b\u5efa\u529f\u80fd\u5206\u652f\u7a0b\u5e8f\u5458 B : Text Only 1 2 3 git clone http://192.168.50.197:3000/root/gitflow.git git checkout develop # \u5207\u6362\u5230develop\u5206\u652f git checkout -b feature/FEATURE-02 # \u529f\u80fd\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5408\u5e76\u5206\u652f Text Only 1 2 3 4 5 6 7 8 # \u62c9\u53d6\u8fdc\u7a0b\u7684develop\u5206\u652f\uff0c\u5e76\u4e14\u5f53\u524d\u5206\u652f\uff08\u672c\u5730\u5206\u652fsome-feature\uff09\u5408\u5e76\u4e0a\u8fdc\u7a0b\u5206\u652fdevelop #\u7b2c\u4e00\u6761\u547d\u4ee4\u5728\u5408\u5e76\u529f\u80fd\u524d\u786e\u4fdddevelop\u5206\u652f\u662f\u6700\u65b0\u7684\u3002\u6ce8\u610f\uff0c\u529f\u80fd\u51b3\u4e0d\u5e94\u8be5\u76f4\u63a5\u5408\u5e76\u5230master\u5206\u652f\u3002 \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u548c\u96c6\u4e2d\u5f0f\u5de5\u4f5c\u6d41\u4e00\u6837\u3002 git pull origin develop git checkout develop git merge --no-ff feature/FEATURE-01 #\u5408\u5e76\u5206\u652f\u5230develop\u5206\u652f\u4e0a git push # \u5220\u9664\u672c\u5730\u5206\u652f git branch -d feature/FEATURE-02 6.\u5728 develop \u5206\u652f\u4e0a\u521b\u5efa release \u5206\u652f \u8fd9\u65f6\u5019\u5f00\u59cb\u7b2c\u4e00\u4e2a\u9879\u76ee\u7684\u6b63\u5f0f\u53d1\u5e03\u3002\u50cf\u529f\u80fd\u5f00\u53d1\uff0c\u7528\u4e00\u4e2a\u5206\u652f\u6765\u505a\u53d1\u5e03\u51c6\u5907\u3002 Text Only 1 2 git checkout develop git checkout -b release/v0.9.0 \u8fd9\u4e2a\u5206\u652f\u662f\u6e05\u7406\u53d1\u5e03\u3001\u6267\u884c\u6240\u6709\u6d4b\u8bd5\u3001\u66f4\u65b0\u6587\u6863\u548c\u5176\u5b83\u4e3a\u4e0b\u4e2a\u53d1\u5e03\u505a\u51c6\u5907\u64cd\u4f5c\u7684\u5e95\u4ed3 \u6d4b\u8bd5\u4eba\u5458\u8fdb\u884c\u6d4b\u8bd5 \u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u4fee\u590d\u6d4b\u8bd5\u95ee\u9898 Text Only 1 2 git add . git commit -m \"fix:fix some ... \" \u5982\u679c\u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\uff0c\u5219\u5408\u5e76\u5230 master \u5206\u652f\u4e0a \u4e00\u65e6\u51c6\u5907\u597d\u4e86\u5bf9\u5916\u53d1\u5e03\uff0c\u5c31\u9700\u8981\u5408\u5e76\u4fee\u6539\u5230 master \u5206\u652f\u4e0a\u548c develop \u5206\u652f\u4e0a\u3002\u5220\u9664\u53d1\u5e03\u5206\u652f\u3002 \u5408\u5e76\u56de develop \u5206\u652f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5728\u53d1\u5e03\u5206\u652f\u4e2d\u5df2\u7ecf\u63d0\u4ea4\u7684\u66f4\u65b0\u9700\u8981\u5728\u540e\u9762\u7684\u65b0\u529f\u80fd\u4e2d\u4e5f\u8981\u662f\u53ef \u7528\u7684\u3002\u53e6\u5916\uff0c\u5982\u679c\u56e2\u961f\u8981\u6c42 Code Review \uff0c\u8fd9\u65f6\u4e00\u4e2a\u53d1\u8d77 Pull Request \u7684\u674e\u60f3\u65f6\u673a\u3002 Text Only 1 2 3 4 5 6 7 8 9 10 11 12 git checkout master git merge --no-ff release/v0.9.0 git push # \u628arelease \u7248\u672c\u4e5f\u5408\u5e76\u5230develop\u5206\u652f\u4e0a git checkout develop git merge --no-ff release/v0.9.0 git push git branch -d release-0.1.0 # If you pushed branch to origin: git push origin --delete release-0.1.0 \u53d1\u5e03\u5206\u652f\u662f\u4f5c\u4e3a\u529f\u80fd\u5f00\u53d1\uff08develop \u5206\u652f\uff09\u548c\u5bf9\u5916\u53d1\u5e03\uff08master \u5206\u652f\uff09\u95f4\u7684\u7f13\u51b2\u3002\u53ea\u8981\u6709\u5408\u5e76\u5230 master \u5206\u652f\uff0c\u5c31\u5e94\u8be5\u6253\u597d Tag \u4ee5\u65b9\u4fbf\u8ddf\u8e2a\u3002 Text Only 1 2 git tag -a v0.9.0 -m \"Initial public release\" master git push --tags Git \u6709\u63d0\u4f9b\u5404\u79cd\u94a9\u5b50(hook) , \u5373\u4ed3\u5e93\u6709\u4e8b\u4ef6\u53d1\u751f\u65f6\u89e6\u53d1\u6267\u884c\u7684\u811a\u672c\u3002\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u94a9\u5b50\uff0c\u5728\u4f60 push \u4e2d\u592e\u4ed3\u5e93\u7684 master \u5206\u652f\u4e0a\u65f6\uff0c\u81ea\u52a8\u6784\u5efa\u597d\u5bf9\u5916\u53d1\u5e03\u3002 \u5982\u679c master \u5728\u751f\u4ea7\u73af\u5883\u4e0a\u51fa\u73b0 bug Text Only 1 2 git checkout master git checkout -b hotfix/v0.9.0 \u8fdb\u884c\u4fee\u590d bug \u628a\u4fee\u590d\u7684\u7248\u672c\u5408\u5e76\u5230 master \u5206\u652f\u4e0a Text Only 1 2 3 4 5 6 7 8 9 10 11 git checkout master git merge --no-ff hotfix/v0.9.0 git tag v0.9.1 git push git push origin v0.9.1 # \u628a\u8865\u4e01\u5206\u652f \u5408\u5e76\u5230develop \u5206\u652f\u4e0a git checkout develop git merge --no-ff hotfix/v0.9.0 git push git branch -d hotfix/v0.9.0 3.2 \u4f7f\u7528 source tree \u6765\u5b9e\u73b0 \u00b6 1.\u9996\u5148\u5728 gitlab \u4e0a\u521b\u5efa\u4e00\u4e2a\u9879\u76ee 2.\u5728 source tree \u521b\u5efa\u5206\u652f \u5728\u672c\u5730\u628a\u670d\u52a1\u5668\u4e0a\u7684\u9879\u76ee\u62c9\u4e0b\u6765 Text Only 1 2 3 # \u7528\u547d\u4ee4\u884c\u521b\u5efadevelop\u5206\u652f git checkout -n develop git push --set-upstream origin develop \u7136\u540e\u7528 source tree \u6253\u5f00 \u521b\u5efa feature-01 \u5206\u652f \u5bf9 feature-01 \u5206\u652f \u8fdb\u884c \u4fee\u6539\u4e0a\u4f20 \u53ef\u4ee5\u5728\u6b64\u9875\u9762\u8fdb\u884c\u63d0\u4ea4\uff0c\u70b9\u51fb + \u53f7 \u529f\u80fd\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f \u518d\u6b21\u70b9\u51fb git \u5de5\u4f5c\u6d41\uff1a \u70b9\u51fb\u5b8c\u6210\u529f\u80fd \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u9009\u62e9\u5728\u5f00\u53d1\u5206\u652f\u4e0a\u8fdb\u884c\u53d8\u57fa \u70b9\u51fb\u786e\u5b9a \u518d\u6b21\u70b9\u51fb GIt \u5de5\u4f5c\u6d41\uff0c\u521b\u5efa\u9884\u53d1\u5e03\u7248\u672c\uff0c\u4e00\u822c\u5728 develop \u5206\u652f\u4e0a\u3002 \u70b9\u51fb\u786e\u5b9a \u5982\u679c\u9884\u53d1\u5e03\u7248\u672c\u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\uff0c\u5219\u518d\u6b21\u70b9\u51fb Git \u5de5\u4f5c\u6d41\uff0c\u5b8c\u6210\u53d1\u5e03\u7248\u672c \u70b9\u51fb\u786e\u5b9a\uff1a \u52a0\u5165\u6211\u4eec\u5728\u751f\u4ea7\u73af\u5883\u4e0a\u51fa\u73b0 bug,\u8865\u4e01\u5206\u652f\u662f\u57fa\u4e8e master \u7684 \u4fee\u590d\u5b8c\u6210\u540e\uff0c\u518d\u6b21\u70b9\u51fb GIt \u5de5\u4f5c\u6d41 3.3 \u4f7f\u7528 gitlab \u5b9e\u73b0 git flow \u00b6 \u53ef\u4ee5\u5b89\u88c5 git flow \u63d2\u4ef6 \u9996\u5148\u5728 gitlab \u4e0a\u521b\u5efa\u4ed3\u5e93 \u628a\u4ed3\u5e93\u4ee3\u7801\u62c9\u5230\u672c\u5730 \u521b\u5efa develop \u5206\u652f Text Only 1 2 3 4 5 6 7 8 # clone \u9879\u76ee git clone http://192.168.50.197:82/rorm_group/recas.git # \u521b\u5efadevelop \u5206\u652f \u5e76\u5207\u6362\u5206\u652f git checkout -b develop # \u6dfb\u52a0\u548c\u4fee\u6539\u6587\u4ef6 # \u628adevelop \u5206\u652f\u63d0\u4ea4\u5230\u670d\u52a1\u5668 git push --set-upstream origin develop \u8bbe\u7f6e master \u548c develop \u4e3a\u4fdd\u62a4\u5206\u652f\uff0c\u4e14\u53ea\u6709 master \u89d2\u8272\u624d\u80fd merge \u548c push 2.\u6210\u5458\u8fdb\u884c clone git clone \u6dfb\u52a0\u6210\u5458 3.\u9879\u76ee\u7ec4\u957f\u5206\u914d\u91cc\u7a0b\u7891\u4e0e\u8bae\u9898 \u521b\u5efa\u5b8c\u6210\u5982\u4e0b: \u4e0b\u9762\u662f\u521b\u5efa issue \u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u91cc\u7a0b\u7891\u4e2d\u770b\u5230\u6dfb\u52a0\u7684\u95ee\u9898 \u53ef\u4ee5\u6307\u6d3e\u4eba\u89e3\u51b3 4.\u9879\u76ee\u6210\u5458\u6839\u636e\u81ea\u5df1\u88ab\u5206\u914d\u7684\u4efb\u52a1\u5efa\u7acb\u5bf9\u5e94\u7684\u5206\u652f \u5148\u5728\u9879\u76ee\u4e2d\u5efa\u7acb\u5206\u652f\uff0c\u518d\u62c9\u53d6\u5f00\u53d1 \u5148\u5728\u672c\u5730\u5efa\u7acb\u5206\u652f\uff0c\u518d\u63d0\u4ea4 Text Only 1 2 3 4 5 6 7 8 9 # \u62c9\u53d6\u4ee3\u7801 # clone \u9879\u76ee git clone http://192.168.53.197:82/rorm_group/xx.git # \u521b\u5efadevelop \u5206\u652f \u5e76\u5207\u6362\u5206\u652f git checkout -b question01 # \u6dfb\u52a0\u548c\u4fee\u6539\u6587\u4ef6 # \u628adevelop \u5206\u652f\u63d0\u4ea4\u5230\u670d\u52a1\u5668 git push --set-upstream origin question1 \u7136\u540e\u7f16\u8f91\u6587\u4ef6 Text Only 1 2 3 git add . git commit -m \"ddd\" git push origin feature/question01 \u5f00\u53d1\u4eba\u5458\u5b8c\u6210\u5f00\u53d1\u540e\uff0c\u5728 gitlab \u4e0a \u521b\u5efa MergeRequest fixes #xxx fixed #xxx \uff1a \u5173\u95ed\u67d0\u4e00 issue fix #xxx closes #xxx close #xxx closed #xxx \uff1a \u5173\u95ed\u67d0\u4e00 issue \u70b9\u51fb \u4fee\u6539\u5206\u652f \u70b9\u51fb\u63d0\u4ea4\u5408\u5e76\u8bf7\u6c42\u3002 \u7528\u7ba1\u7406\u5458\u7528\u6237\u767b\u5f55\uff0c\u53f3\u4e0a\u89d2\u6709\u5408\u5e76\u8bf7\u6c42 \u70b9\u51fb\u8fdb\u53bb","title":"Gitflow \u5206\u652f\u8be6\u89e3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#gitflow-\u5206\u652f\u8be6\u89e3","text":"","title":"Gitflow \u5206\u652f\u8be6\u89e3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#1-gitflow-\u4ecb\u7ecd","text":"\u6bd4\u5982\u6211\u5f88\u559c\u6b22\u7684 git stash \u547d\u4ee4\uff0c\u53ef\u4ee5\u628a\u5f53\u524d\u6ca1\u6709\u5b8c\u6210\u7684\u4e8b\u5148\u6682\u5b58\u4e00\u4e0b\uff0c\u7136\u540e\u53bb\u5fd9\u522b\u7684\u4e8b\u3002 git cherry-pick \u547d\u4ee4\u53ef\u4ee5\u8ba9\u4f60\u6709\u9009\u62e9\u5730\u5408\u5e76\u63d0\u4ea4\u3002 git add -p \u53ef\u4ee5\u8ba9\u4f60\u6311\u9009\u6539\u52a8\u63d0\u4ea4\uff0c git grep $regexp $(git rev-list --all) \u53ef\u4ee5\u7528\u6765\u5728\u6240\u6709\u7684\u63d0\u4ea4\u4e2d\u627e\u4ee3\u7801\u3002\u56e0\u4e3a\u90fd\u662f\u672c\u5730\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f60\u4f1a\u89c9\u5f97\u901f\u5ea6\u98de\u5feb\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u7531 Git \u884d\u751f\u51fa\u6765\u7684 GitHub/GitLab \u53ef\u4ee5\u5e2e\u4f60\u5f88\u597d\u5730\u7ba1\u7406\u7f16\u7a0b\u5de5\u4f5c\uff0c\u6bd4\u5982 wiki\u3001fork\u3001pull\u3001request\u3001issue\u2026\u2026\u96c6\u6210\u4e86\u4e0e\u7f16\u7a0b\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u8ba9\u4eba\u89c9\u5f97\u8fd9\u4e0d\u662f\u4e00\u4e2a\u51b7\u51b0\u51b0\u7684\u5de5\u5177\uff0c\u800c\u771f\u6b63\u548c\u6211\u4eec\u7684\u65e5\u5e38\u5de5\u4f5c\u53d1\u751f\u4e86\u5f88\u597d\u7684\u4ea4\u4e92\u3002 GitHub/GitLab \u8fd9\u6837\u5de5\u5177\u7684\u51fa\u73b0\uff0c\u8ba9\u6211\u4eec\u7684\u5de5\u4f5c\u53ef\u4ee5\u5448\u73b0\u5728\u4e00\u4e2a\u5de5\u4f5c\u5e73\u53f0\u4e0a\uff0c\u5e76\u4ee5\u6b64\u6765\u89c4\u8303\u6574\u4e2a\u56e2\u961f\u7684\u5de5\u4f5c\uff0c\u8fd9\u624d\u6b63\u662f Git \u8fd9\u4e2a\u7248\u672c\u7ba1\u7406\u5de5\u5177\u6210\u529f\u7684\u539f\u56e0\u3002","title":"1 gitflow \u4ecb\u7ecd"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#11-\u4e2d\u5fc3\u5f0f\u534f\u540c\u5de5\u4f5c\u6d41","text":"\u9996\u5148\uff0c\u6211\u4eec\u5148\u8bf4\u660e\u4e00\u4e0b\uff0cGit \u662f\u53ef\u4ee5\u50cf SVN \u8fd9\u6837\u7684\u4e2d\u5fc3\u5de5\u4f5c\u6d41\u4e00\u6837\u5de5\u4f5c\u7684\u3002\u6211\u76f8\u4fe1\u5f88\u591a\u7a0b\u5e8f\u5458\u90fd\u662f\u5728\u91c7\u7528\u8fd9\u6837\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u4e00\u822c\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u7684\u3002 1. \u4ece\u670d\u52a1\u5668\u4e0a\u505a git pull origin master \u628a\u4ee3\u7801\u540c\u6b65\u4e0b\u6765\u3002 2. \u6539\u5b8c\u540e\uff0c git commit \u5230\u672c\u5730\u4ed3\u5e93\u4e2d\u3002 3. \u7136\u540e git push origin master \u5230\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\uff0c\u8fd9\u6837\u5176\u4ed6\u540c\u5b66\u5c31\u53ef\u4ee5\u5f97\u5230\u4f60\u7684\u4ee3\u7801\u4e86\u3002 \u5982\u679c\u5728\u7b2c 3 \u6b65\u53d1\u73b0 push \u5931\u8d25\uff0c\u56e0\u4e3a\u522b\u4eba\u5df2\u7ecf\u63d0\u4ea4\u4e86\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u5148\u628a\u670d\u52a1\u5668\u4e0a\u7684\u4ee3\u7801\u7ed9 pull \u4e0b\u6765\uff0c\u4e3a\u4e86\u907f\u514d\u6709 merge \u52a8\u4f5c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 git pull --rebase \u3002 \u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u4e0a\u7684\u63d0\u4ea4\u76f4\u63a5\u5408\u5e76\u5230\u4f60\u7684\u4ee3\u7801\u4e2d \uff0c\u5bf9\u6b64\uff0cGit \u7684\u64cd\u4f5c\u662f\u8fd9\u6837\u7684\u3002 1. \u5148\u628a\u4f60\u672c\u5730\u63d0\u4ea4\u7684\u4ee3\u7801\u653e\u5230\u4e00\u8fb9\u3002 2. \u7136\u540e\u628a\u670d\u52a1\u5668\u4e0a\u7684\u6539\u52a8\u4e0b\u8f7d\u4e0b\u6765\u3002 3. \u7136\u540e\u5728\u672c\u5730\u628a\u4f60\u4e4b\u524d\u7684\u6539\u52a8\u518d\u91cd\u65b0\u4e00\u4e2a\u4e00\u4e2a\u5730\u505a commit\uff0c\u76f4\u5230\u5168\u90e8\u6210\u529f\u3002 \u5982\u4e0b\u56fe\u6240\u793a\u3002Git \u4f1a\u628a Origin/Master \u7684\u8fdc\u7a0b\u5206\u652f\u4e0b\u8f7d\u4e0b\u6765\uff08\u7d2b\u8272\u7684\uff09\uff0c\u7136\u540e\u628a\u672c\u5730\u7684 Master \u5206\u652f\u4e0a\u7684\u6539\u52a8\u4e00\u4e2a\u4e00\u4e2a\u5730\u63d0\u4ea4\u4e0a\u53bb\uff08\u84dd\u8272\u7684\uff09\u3002 \u5982\u679c\u6709\u51b2\u7a81\uff0c\u90a3\u4e48\u4f60\u8981\u5148\u89e3\u51b3\u51b2\u7a81\uff0c\u7136\u540e\u505a git rebase --continue \u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0cgit \u5728\u505a pull --rebase \u65f6\uff0c\u4f1a\u4e00\u4e2a\u4e00\u4e2a\u5730\u5e94\u7528\uff08apply\uff09\u672c\u5730\u63d0\u4ea4\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6709\u51b2\u7a81\u5c31\u4f1a\u505c\u4e0b\u6765\uff0c\u7b49\u4f60\u89e3\u51b3\u51b2\u7a81\u3002","title":"1.1 \u4e2d\u5fc3\u5f0f\u534f\u540c\u5de5\u4f5c\u6d41"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#12-\u529f\u80fd\u5206\u652f\u534f\u540c\u5de5\u4f5c\u6d41","text":"\u4e0a\u9762\u7684\u90a3\u79cd\u65b9\u5f0f\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5927\u5bb6\u90fd\u5728\u4e00\u4e2a\u4e3b\u5e72\u4e0a\u5f00\u53d1\u7a0b\u5e8f\uff0c\u5bf9\u4e8e\u5c0f\u56e2\u961f\u6216\u662f\u5c0f\u9879\u76ee\u4f60\u53ef\u4ee5\u8fd9\u4e48\u5e72\uff0c\u4f46\u662f\u5bf9\u6bd4\u8f83\u5927\u7684\u9879\u76ee\u6216\u662f\u4eba\u6bd4\u8f83\u591a\u7684\u56e2\u961f\uff0c\u8fd9\u4e48\u5e72\u5c31\u4f1a\u6709\u5f88\u591a\u95ee\u9898\u3002 \u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u4ee3\u7801\u53ef\u80fd\u5e72\u6270\u592a\u4e25\u91cd\u3002 \u5c24\u5176\u662f\uff0c\u6211\u4eec\u60f3\u5b89\u5b89\u9759\u9759\u5730\u5f00\u53d1\u4e00\u4e2a\u529f\u80fd\u65f6\uff0c\u6211\u4eec\u60f3\u628a\u5404\u4e2a\u529f\u80fd\u7684\u4ee3\u7801\u53d8\u52a8\u9694\u79bb\u5f00\u6765\uff0c\u540c\u65f6\u5404\u4e2a\u529f\u80fd\u53c8\u4f1a\u6709\u591a\u4e2a\u5f00\u53d1\u4eba\u5458\u5728\u5f00\u53d1\u3002 \u8fd9\u65f6\uff0c\u6211\u4eec\u4e0d\u60f3\u8ba9\u5404\u4e2a\u529f\u80fd\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u5728 Master \u5206\u652f\u4e0a\u5171\u4eab\u4ed6\u4eec\u7684\u4ee3\u7801\u3002\u6211\u4eec\u60f3\u8981\u7684\u534f\u540c\u65b9\u5f0f\u662f\u8fd9\u6837\u7684\uff1a \u540c\u65f6\u5f00\u53d1\u4e00\u4e2a\u529f\u80fd\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5206\u4eab\u5404\u81ea\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u4e0d\u4f1a\u628a\u4ee3\u7801\u5206\u4eab\u7ed9\u5f00\u53d1\u5176\u4ed6\u529f\u80fd\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u76f4\u5230\u6574\u4e2a\u529f\u80fd\u5f00\u53d1\u5b8c\u6bd5\u540e\uff0c\u624d\u4f1a\u5206\u4eab\u7ed9\u5176\u4ed6\u7684\u5f00\u53d1\u4eba\u5458\uff08\u4e5f\u5c31\u662f\u8fdb\u5165\u4e3b\u5e72\u5206\u652f\uff09\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u5f15\u5165\u201c\u529f\u80fd\u5206\u652f\u201d\u3002\u8fd9\u4e2a\u534f\u540c\u5de5\u4f5c\u6d41\u7684\u5f00\u53d1\u8fc7\u7a0b\u5982\u4e0b\u3002 1. \u9996\u5148\u4f7f\u7528 git checkout -b new-feature \u521b\u5efa \u201cnew-feature\u201d\u5206\u652f\u3002 2. \u7136\u540e\u5171\u540c\u5f00\u53d1\u8fd9\u4e2a\u529f\u80fd\u7684\u7a0b\u5e8f\u5458\u5c31\u5728\u8fd9\u4e2a\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u8fdb\u884c add\u3001commit \u7b49\u64cd\u4f5c\u3002 3. \u7136\u540e\u901a\u8fc7 git push -u origin new-feature \u628a\u5206\u652f\u4ee3\u7801 push \u5230\u670d\u52a1\u5668\u4e0a\u3002 4. \u5176\u4ed6\u7a0b\u5e8f\u5458\u53ef\u4ee5\u901a\u8fc7 git pull --rebase \u6765\u62ff\u5230\u6700\u65b0\u7684\u8fd9\u4e2a\u5206\u652f\u7684\u4ee3\u7801\u3002 5. \u6700\u540e\u901a\u8fc7 Pull Request \u7684\u65b9\u5f0f\u505a\u5b8c Code Review \u540e\u5408\u5e76\u5230 Master \u5206\u652f\u4e0a\u3002 \u5c31\u50cf\u4e0a\u9762\u8fd9\u4e2a\u56fe\u663e\u793a\u7684\u4e00\u6837\uff0c\u7d2b\u8272\u7684\u5206\u652f\u5c31\u662f\u529f\u80fd\u5206\u652f\uff0c\u5408\u5e76\u540e\u5c31\u4f1a\u50cf\u4e0a\u9762\u8fd9\u4e2a\u6837\u5b50\u3002","title":"1.2 \u529f\u80fd\u5206\u652f\u534f\u540c\u5de5\u4f5c\u6d41"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#13-gitflow-\u534f\u540c\u5de5\u4f5c\u6d41","text":"\u5728\u771f\u5b9e\u7684\u751f\u4ea7\u8fc7\u7a0b\u4e2d\uff0c\u524d\u9762\u7684\u534f\u540c\u5de5\u4f5c\u6d41\u8fd8\u662f\u4e0d\u80fd\u6ee1\u8db3\u5de5\u4f5c\u7684\u8981\u6c42\u3002\u8fd9\u4e3b\u8981\u56e0\u4e3a\u6211\u4eec\u7684\u751f\u4ea7\u8fc7\u7a0b\u662f\u6bd4\u8f83\u590d\u6742\u7684\uff0c\u8f6f\u4ef6\u751f\u4ea7\u4e2d\u4f1a\u6709\u5404\u5f0f\u5404\u6837\u7684\u95ee\u9898\uff0c\u5e76\u8981\u9762\u5bf9\u4e0d\u540c\u7684\u73af\u5883\u3002\u6211\u4eec\u8981\u5728\u4e0d\u505c\u5730\u5f00\u53d1\u65b0\u4ee3\u7801\u7684\u540c\u65f6\uff0c\u7ef4\u62a4\u7ebf\u4e0a\u7684\u4ee3\u7801\uff0c\u4e8e\u662f\uff0c\u5c31\u6709\u4e86\u4e0b\u9762\u8fd9\u4e9b\u9700\u6c42\u3002 1. \u5e0c\u671b\u6709\u4e00\u4e2a\u5206\u652f\u662f\u975e\u5e38\u5e72\u51c0\u7684\uff0c\u4e0a\u9762\u662f\u53ef\u4ee5\u53d1\u5e03\u7684\u4ee3\u7801\uff0c\u4e0a\u9762\u7684\u6539\u52a8\u6c38\u8fdc\u90fd\u662f\u53ef\u4ee5\u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u3002 \u8fd9\u4e2a\u5206\u652f\u4e0a\u4e0d\u80fd\u6709\u4e2d\u95f4\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u4ee5\u4e0a\u751f\u4ea7\u7ebf\u7684\u4ee3\u7801\u63d0\u4ea4\u3002 2. \u5e0c\u671b\u5f53\u4ee3\u7801\u8fbe\u5230\u53ef\u4ee5\u4e0a\u7ebf\u7684\u72b6\u6001\u65f6\uff0c\u4e5f\u5c31\u662f\u5728 alpha/beta release \u65f6\uff0c \u5728\u6d4b\u8bd5\u548c\u4ea4\u4ed8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f9d\u7136\u53ef\u4ee5\u5f00\u53d1\u4e0b\u4e00\u4e2a\u7248\u672c\u7684\u4ee3\u7801\u3002 3. \u6700\u540e\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u53d1\u5e03\u7684\u4ee3\u7801\uff0c\u4e5f\u4f1a\u6709\u4e00\u4e9b Bug-fix \u7684\u6539\u52a8\uff0c\u4e0d\u4f1a\u5c06\u6b63\u5728\u5f00\u53d1\u7684\u4ee3\u7801\u63d0\u4ea4\u5230\u751f\u4ea7\u7ebf\u4e0a\u53bb\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0cGitFlow \u534f\u540c\u5de5\u4f5c\u6d41\u5c31\u51fa\u6765\u4e86\u3002 \u8fd9\u4e2a\u534f\u540c\u5de5\u4f5c\u6d41\u7684\u6838\u5fc3\u601d\u60f3\u5982\u4e0b\u56fe\u6240\u793a\u3002 \u6574\u4e2a\u4ee3\u7801\u5e93\u4e2d\u4e00\u5171\u6709**\u4e94\u79cd\u5206\u652f** \u3002 - Master \u5206\u652f \u3002\u4e5f\u5c31\u662f\u4e3b\u5e72\u5206\u652f\uff0c\u7528\u4f5c\u53d1\u5e03\u73af\u5883\uff0c\u4e0a\u9762\u7684\u6bcf\u4e00\u6b21\u63d0\u4ea4\u90fd\u662f\u53ef\u4ee5\u53d1\u5e03\u7684\u3002 - Feature \u5206\u652f \u3002\u4e5f\u5c31\u662f\u529f\u80fd\u5206\u652f\uff0c\u7528\u4e8e\u5f00\u53d1\u529f\u80fd\uff0c\u5176\u5bf9\u5e94\u7684\u662f\u5f00\u53d1\u73af\u5883\u3002 - Developer \u5206\u652f \u3002\u662f\u5f00\u53d1\u5206\u652f\uff0c\u4e00\u65e6\u529f\u80fd\u5f00\u53d1\u5b8c\u6210\uff0c\u5c31\u5411 Developer \u5206\u652f\u5408\u5e76\uff0c\u5408\u5e76\u5b8c\u6210\u540e\uff0c\u5220\u9664\u529f\u80fd\u5206\u652f\u3002\u8fd9\u4e2a\u5206\u652f\u5bf9\u5e94\u7684\u662f\u96c6\u6210\u6d4b\u8bd5\u73af\u5883\u3002 - Release \u5206\u652f\u3002\u5f53 Developer \u5206\u652f\u6d4b\u8bd5\u8fbe\u5230\u53ef\u4ee5\u53d1\u5e03\u72b6\u6001\u65f6\uff0c\u5f00\u51fa\u4e00\u4e2a Release \u5206\u652f\u6765\uff0c\u7136\u540e\u505a\u53d1\u5e03\u524d\u7684\u51c6\u5907\u5de5\u4f5c\u3002\u8fd9\u4e2a\u5206\u652f\u5bf9\u5e94\u7684\u662f\u9884\u53d1\u73af\u5883\u3002 \u4e4b\u6240\u4ee5\u9700\u8981\u8fd9\u4e2a Release \u5206\u652f\uff0c\u662f\u6211\u4eec\u7684\u5f00\u53d1\u53ef\u4ee5\u7ee7\u7eed\u5411\u524d\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u8981\u53d1\u5e03\u800c\u88ab block \u4f4f\u800c\u4e0d\u80fd\u63d0\u4ea4\u3002\u4e00\u65e6 Release \u5206\u652f\u4e0a\u7684\u4ee3\u7801\u8fbe\u5230\u53ef\u4ee5\u4e0a\u7ebf\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u9700\u8981\u628a Release \u5206\u652f\u5411 Master \u5206\u652f\u548c Developer \u5206\u652f\u540c\u65f6\u5408\u5e76\uff0c\u4ee5\u4fdd\u8bc1\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u3002\u7136\u540e\u518d\u628a Release \u5206\u652f\u5220\u9664\u6389\u3002 Hotfix \u5206\u652f\u3002 \u662f\u7528\u4e8e\u5904\u7406\u751f\u4ea7\u7ebf\u4e0a\u4ee3\u7801\u7684 Bug-fix\uff0c\u6bcf\u4e2a\u7ebf\u4e0a\u4ee3\u7801\u7684 Bug-fix \u90fd\u9700\u8981\u5f00\u4e00\u4e2a Hotfix \u5206\u652f\uff0c\u5b8c\u6210\u540e\uff0c\u5411 Developer \u5206\u652f\u548c Master \u5206\u652f\u4e0a\u5408\u5e76\u3002 \u5408\u5e76\u5b8c\u6210\u540e\uff0c\u5220\u9664 Hotfix \u5206\u652f\u3002 \u8fd9\u5c31\u662f\u6574\u4e2a GitFlow \u534f\u540c\u5de5\u4f5c\u6d41\u7684\u5de5\u4f5c\u8fc7\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff1a 1. \u6211\u4eec\u9700\u8981\u957f\u671f\u7ef4\u62a4 Master \u548c Developer \u4e24\u4e2a\u5206\u652f\u3002 2. \u8fd9\u5176\u4e2d\u7684\u65b9\u5f0f\u8fd8\u662f\u6709\u4e00\u5b9a\u590d\u6742\u5ea6\u7684\uff0c\u5c24\u5176\u662f Release \u548c Hotfix \u5206\u652f\u9700\u8981\u540c\u65f6\u5411\u4e24\u4e2a\u5206\u652f\u4f5c\u5408\u5e76\u3002\u6240\u4ee5\uff0c\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u597d\u7684\u5de5\u5177\u6765\u652f\u6491\u7684\u8bdd\uff0c\u8fd9\u4f1a\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u5fd8\u4e86\u505a\u4e00\u4e9b\u64cd\u4f5c\u800c\u5bfc\u81f4\u4ee3\u7801\u4e0d\u4e00\u81f4\u3002 3. GitFlow \u534f\u540c\u867d\u7136\u5de5\u4f5c\u6d41\u6bd4\u8f83\u91cd\u3002\u4f46\u662f\u5b83\u51e0\u4e4e\u53ef\u4ee5\u5e94\u5bf9\u6240\u6709\u516c\u53f8\u7684\u5404\u79cd\u5f00\u53d1\u6d41\u7a0b\uff0c\u5305\u62ec\u7011\u5e03\u6a21\u578b\uff0c\u6216\u662f\u5feb\u901f\u8fed\u4ee3\u6a21\u578b\u3002","title":"1.3 GitFlow \u534f\u540c\u5de5\u4f5c\u6d41"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#14-gitflow-\u534f\u540c\u5de5\u4f5c\u6d41\u7684\u7f3a\u70b9","text":"\u5176\u4e2d\u6709\u4e2a\u95ee\u9898\u5c31\u662f\u56e0\u4e3a\u5206\u652f\u592a\u591a\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0 git log \u6df7\u4e71\u7684\u5c40\u9762\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4e3b\u8981\u662f git- flow \u4f7f\u7528 gitmerge --no-ff \u6765\u5408\u5e76\u5206\u652f\uff0c\u5728 git-flow \u8fd9\u6837\u591a\u4e2a\u5206\u652f\u7684\u73af\u5883\u4e0b\u4f1a\u8ba9\u4f60\u7684\u5206\u652f\u7ba1\u7406\u7684 log \u53d8\u5f97\u5f88\u96be\u770b\u3002\u5982\u4e0b\u6240\u793a\uff0c\u5de6\u8fb9\u662f\u4f7f\u7528\u2013no-ff \u53c2\u6570\u5728\u591a\u4e2a\u5206\u652f\u4e0b\u7684\u95ee\u9898\u3002 \u6240\u8c13 --no-ff \u53c2\u6570\u7684\u610f\u601d\u662f \u2014\u2014no fast forward \u7684\u610f\u601d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5408\u5e76\u7684\u65b9\u6cd5\u4e0d\u8981\u628a\u8fd9\u4e2a\u5206\u652f\u4ee5 \u524d\u7f6e\u5408\u5e76 \u7684\u65b9\u5f0f\u63d0\u4ea4\uff0c\u800c\u662f\u7559\u4e0b\u4e00\u4e2a merge \u7684\u63d0\u4ea4\u3002\u8fd9\u662f\u628a\u53cc\u5203\u5251\uff0c\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684 --no-ff \u80fd\u50cf\u53f3\u8fb9\u90a3\u6837\uff0c\u800c\u4e0d\u662f\u50cf\u5de6\u8fb9\u90a3\u6837\u3002 \u5bf9\u6b64\u7684\u5efa\u8bae\u662f\uff1a\u53ea\u6709 feature \u5408\u5e76\u5230 developer \u5206\u652f\u65f6\uff0c\u4f7f\u7528\u2013no-ff \u53c2\u6570\uff0c\u5176\u4ed6\u7684\u5408\u5e76\u90fd\u4e0d\u4f7f\u7528 --no-ff \u53c2\u6570\u6765\u505a\u5408\u5e76\u3002 Text Only 1 2 3 4 5 6 7 8 9 10 11 --no-ff\u6307\u7684\u662f\u5f3a\u884c\u5173\u95edfast-forward\u65b9\u5f0f\u3002 fast-forward\u65b9\u5f0f\u5c31\u662f\u5f53\u6761\u4ef6\u5141\u8bb8\u7684\u65f6\u5019\uff0cgit\u76f4\u63a5\u628aHEAD\u6307\u9488\u6307\u5411\u5408\u5e76\u5206\u652f\u7684\u5934\uff0c\u5b8c\u6210\u5408\u5e76\u3002\u5c5e\u4e8e\u201c\u5feb\u8fdb\u65b9\u5f0f\u201d\uff0c \u4e0d\u8fd9\u79cd\u60c5\u51b5\u5982\u679c\u5220\u9664\u5206\u652f\uff0c\u5219\u4f1a\u4e22\u5931\u5206\u652f\u4fe1\u606f\u3002\u56e0\u4e3a\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u521b\u5efacommit git merge --squash \u662f\u7528\u6765\u628a\u4e00\u4e9b\u4e0d\u5fc5\u8981commit\u8fdb\u884c\u538b\u7f29\uff0c\u6bd4\u5982\u8bf4\uff0c\u4f60\u7684feature\u5728\u5f00\u53d1\u7684\u65f6\u5019\u5199\u7684commit\u5f88\u4e71\uff0c \u90a3\u4e48\u6211\u4eec\u5408\u5e76\u7684\u65f6\u5019\u4e0d\u5e0c\u671b\u628a\u8fd9\u4e9b\u5386\u53f2commit\u5e26\u8fc7\u6765\uff0c\u4e8e\u662f\u4f7f\u7528--squash\u8fdb\u884c\u5408\u5e76\uff0c\u6b64\u65f6\u6587\u4ef6\u5df2\u7ecf\u540c\u5408\u5e76\u540e\u4e00\u6837\u4e86, \u4f46\u4e0d\u79fb\u52a8HEAD\uff0c\u4e0d\u63d0\u4ea4\u3002\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u989d\u5916\u7684commit\u6765\u201c\u603b\u7ed3\u201d\u4e00\u4e0b\uff0c\u7136\u540e\u5b8c\u6210\u6700\u7ec8\u7684\u5408\u5e76\u3002 \u603b\u7ed3\uff1a --no-ff\uff1a\u4e0d\u4f7f\u7528fast-forward\u65b9\u5f0f\u5408\u5e76\uff0c\u4fdd\u7559\u5206\u652f\u7684commit\u5386\u53f2 --squash\uff1a\u4f7f\u7528squash\u65b9\u5f0f\u5408\u5e76\uff0c\u628a\u591a\u6b21\u5206\u652fcommit\u5386\u53f2\u538b\u7f29\u4e3a\u4e00\u6b21 \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u5728\u5f00\u53d1\u5f97\u8db3\u591f\u5feb\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u89c9\u5f97\u540c\u65f6\u7ef4\u62a4 Master \u548c Developer \u4e24\u4e2a\u5206\u652f\u662f\u4e00\u4ef6\u5f88\u65e0\u804a\u7684\u4e8b\uff0c\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u5206\u652f\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u4e00\u6837\u7684\u3002\u5305\u62ec Release \u5206\u652f\uff0c\u4f60\u4f1a\u89c9\u5f97\u521b\u5efa\u7684\u8fd9\u4e9b\u5206\u652f\u592a\u65e0\u804a\u3002 \u800c\u4f60\u7684\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u4e5f\u4f1a\u56e0\u4e3a\u8fd9\u4e48\u590d\u6742\u7684\u7ba1\u7406\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\u5c24\u5176\u5f53\u4f60\u60f3\u56de\u6eda\u67d0\u4e9b\u4eba\u7684\u63d0\u4ea4\u65f6\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e8b\u4f3c\u4e4e\u6709\u70b9\u513f\u4e0d\u597d\u5e72\u4e86\u3002\u800c\u4e14\u5728\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u6765\u6765\u56de\u56de\u5730\u5207\u6362\u5de5\u4f5c\u7684\u5206\u652f\uff0c\u6709\u65f6\u5019\u4e00\u4e0d\u5c0f\u5fc3\u6ca1\u6709\u5207\u6362\uff0c\u5c31\u63d0\u4ea4\u5230\u4e86\u4e0d\u6b63\u786e\u7684\u5206\u652f\u4e0a\uff0c\u4f60\u8fd8\u8981\u56de\u6eda\u548c\u91cd\u65b0\u63d0\u4ea4\uff0c\u7b49\u7b49\u3002","title":"1.4 Gitflow \u534f\u540c\u5de5\u4f5c\u6d41\u7684\u7f3a\u70b9"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#2-\u5206\u652f\u8be6\u7ec6\u4ecb\u7ecd","text":"\u9996\u5148\u6709\u4e00\u4e2a master \u7248\u672c\uff0c\u5982\u679c\u65b0\u5f00\u53d1\u4e00\u4e2a\u529f\u80fd\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a develop \u5206\u652f \u6211\u4eec\u73b0\u5728\u60f3\u5f00\u53d1\u4e00\u4e2a \u65b0\u529f\u80fd \uff0cglodstyle , \u6539\u53d8\u754c\u9762\u7684\u76ae\u80a4\uff0c\u5206\u522b\u521b\u5efa\u5bf9\u5e94\u7684\u5206\u652f \u518d\u5f00\u53d1\u4e00\u4e2a \u5c0f\u6e38\u620f\u529f\u80fd \uff0c\u5206\u522b\u521b\u5efa\u5bf9\u5e94\u7684\u5206\u652f \u5982\u679c\u7ebf\u4e0a\u8dd1\u7684\u7a0b\u5e8f\u51fa\u73b0 bug \u4e86\uff0c\u521b\u5efa\u4e00\u4e2a \u70ed\u4fee\u590d\u5206\u652f \u3002 \u4fee\u590d bug \u4ee5\u540e\uff0c\u5c3d\u5feb\u5408\u5e76\u5230 master \u4e2d\u3002\u540c\u65f6\u4fee\u590d\u7684\u7248\u672c\uff0c\u4e5f\u8981\u5408\u5e76\u5230 develop \u5206\u652f\u4e0a \u4e24\u4e2a\u529f\u80fd\u5206\u652f\u7ee7\u7eed\u5f80\u524d\u63a8\u8fdb\uff0cfeature_goldstyle \u5148\u5f00\u53d1\u5b8c\u6210\uff0c\u5408\u5e76\u5230 develop \u5206\u652f\u4e0a feature_goldstyle \u5b8c\u6210\u540e\uff0c\u5408\u5e76\u5230 develop \u5206\u652f\uff0c\u7136\u540e\u57fa\u4e8e develop \u5206\u652f \u521b\u5efa\u9884\u53d1\u5e03\u5206\u652f(release) ,\u5728\u8bbe\u4e2a\u5206\u652f\u4e0a\u8fdb\u884c\u4e0a\u7ebf\u524d\u7684\u6d4b\u8bd5\u3002 \u5982\u679c release \u5206\u652f\u51fa\u73b0 bug,\u5219\u76f4\u63a5\u5728 release \u5206\u652f\u4e0a\u8fdb\u884c\u53d1\u5e03\uff0c\u4fee\u590d\u4ee5\u540e\uff0c\u5408\u5e76\u5230 master \u5206\u652f\u4e0a\u3002\u5f00\u53d1\u5206\u652f\u4e5f\u9700\u8981\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e5f\u8981\u5408\u5e76\u5230\u5f00\u53d1\u5206\u652f\u4e0a\u3002 \u7136\u540e \u5c0f\u6e38\u620f\u5206\u652f\u4e5f\u5f00\u53d1\u5b8c\u6210\u4e86\uff0c\u5408\u5e76\u5230 develop \u5206\u652f\u4e0a\uff0c\u7136\u540e\u521b\u5efa release \u5206\u652f\uff0c\u5982\u679c\u6d4b\u8bd5\u6ca1\u95ee\u9898\uff0c\u5219\u5408\u5e76\u5230 master \u5206\u652f\u4e0a\u3002 hotfix \u5206\u652f \u4fee\u590d\u5b8c bug \u540e\uff0c\u76f4\u63a5\u5c31\u5220\u9664\u4e86\u3002\u4e5f\u53ef\u4ee5\u4e0d\u9700\u8981 release \u5206\u652f\uff0c\u76f4\u63a5\u5728 develop \u5206\u652f\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002 \u5206\u652f\u7c7b\u578b - master \u4e3b\u5206\u4e4b(\u751f\u4ea7\u73af\u5883\u5206\u652f)\uff0c \u786e\u4fdd\u4efb\u4f55\u65f6\u523b\u8be5\u5206\u4e4b\u4e0a\u7684\u4ee3\u7801\u90fd\u662f\u53ef\u53d1\u5e03\u7684\u7a33\u5b9a\u7684\uff0c\u4e0d\u5141\u8bb8\u76f4\u63a5\u63d0\u4ea4\u4ee3\u7801\u5230\u8be5\u5206\u652f\u3002 \u4e3a\u5b9e\u73b0\u66f4\u4e25\u683c\u7684\u63a7\u5236\u53ef\u4ee5\u6dfb\u52a0\u6743\u9650\uff0c\u53ea\u6709\u4e3b\u7a0b\u5e8f\u5458\u624d\u53ef\u64cd\u4f5c\u8be5\u5206\u652f\uff0c\u666e\u901a\u5f00\u53d1\u5458\u65e0\u6743\u9650\u3002 - develop \u5f00\u53d1\u5206\u652f\uff0c\u8be5\u5206\u652f\u4e0a\u7684\u4ee3\u7801\u662f\u5f00\u53d1\u5b8c\u6210\u4e14\u7ecf\u8fc7\u6d4b\u8bd5(\u81ea\u6d4b)\u7684\u4ee3\u7801\u3002\u5728\u591a\u4eba\u534f\u4f5c\u5f00\u53d1\u7684\u573a\u666f\u4e0b\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728\u8be5\u5206\u652f\u4e0a\u63d0\u4ea4\u4ee3\u7801\u5e94\u8be5\u914d\u5408\u529f\u80fd\u5206\u652f\u3001\u9884\u53d1\u5e03\u5206\u652f\u548c\u8865\u4e01\u5206\u652f\u6765\u8fdb\u884c\u4ee3\u7801\u7684\u5408\u5e76 - feature/FEATURE_NAME \u529f\u80fd\u5206\u652f - release/vSEMATIC_VERSION \u9884\u53d1\u5e03\u5206\u652f - hotfix/HOTFIX_NAME \u8865\u4e01\u5206\u652f - vMAJOR.MINOR.PATCH \u7248\u672c\u6807\u7b7e \u5206\u652f\u8bf4\u660e \u5206\u652f\u7c7b\u578b \u5b9a\u4e49 \u4f5c\u7528 \u5408\u5e76\u5173\u7cfb \u5efa\u7acb\u65f6\u673a \u521d\u59cb\u4ee3\u7801\u6765\u6e90 master \u4e3b\u5206\u652f \u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6b63\u5f0f\u53d1\u5e03\u7248\u672c\uff0cTAG \u6240\u5728\u5206\u652f \u5141\u8bb8\u6765\u81ea release \u548c hotfix \u5206\u652f\u7684\u5408\u5e76 \u4ed3\u5e93\u521d\u59cb\u5316 \u4ed3\u5e93\u521d\u59cb\u5316 hotfix \u8865\u4e01\u5206\u652f \u4fee\u590d\u5df2\u53d1\u5e03\u7248\u672c\u7684 bug \u4e0d\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u5206\u652f\u7684\u5408\u5e76 \u5df2\u53d1\u5e03\u7248\u672c\u51fa\u73b0 BUG \u65f6 master(\u6216 master \u4e0a\u7684 TAG) release \u9884\u53d1\u5e03\u5206\u652f \u8868\u793a\u9884\u53d1\u5e03\u5728\u6d4b\u8bd5 QA \u73af\u5883\u7684\u5206\u652f\uff0c\u5f85\u6d4b\u8bd5\u4eba\u5458\u8fdb\u884c\u6d4b\u8bd5 \u4e0d\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u5206\u652f\u7684\u5408\u5e76 develop \u4e0a\u4ee3\u7801\u6ee1\u8db3\u53d1\u5e03\u8981\u6c42 \u63a8\u8350\u4f7f\u7528 develop \u4e0a\u6700\u65b0\u7684 commit develop \u5f00\u53d1\u5206\u652f \u4fdd\u6301\u6700\u65b0\u7684\u7ecf\u8fc7\u81ea\u6d4b\u7684\u4ee3\u7801 \u5141\u8bb8\u6765\u81ea feature\u3001release \u548c hotfix \u5206\u652f\u7684\u5408\u5e76 master \u521b\u5efa\u5b8c\u6210\u540e master feature \u529f\u80fd\u5206\u652f \u5f00\u53d1\u72ec\u7acb\u7684\u529f\u80fd\u9700\u6c42 \u4e0d\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u5206\u652f\u7684\u5408\u5e76 \u6709\u72ec\u7acb\u7684\u65b0\u529f\u80fd\u9700\u6c42\u65f6 \u63a8\u8350\u4f7f\u7528 develop \u4e0a\u6700\u65b0\u7684 commit","title":"2 \u5206\u652f\u8be6\u7ec6\u4ecb\u7ecd"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#21-\u5386\u53f2\u5206\u652f","text":"\u76f8\u5bf9\u4f7f\u7528\u4ec5\u6709\u7684\u4e00\u4e2a master \u5206\u652f\uff0c Gitflow \u5de5\u4f5c\u6d41\u4f7f\u7528 2 \u4e2a\u5206\u652f\u6765\u8bb0\u5f55\u9879\u76ee\u7684\u5386\u53f2\u3002 master \u5206\u652f \u5b58\u50a8\u4e86\u6b63\u5f0f\u53d1\u5e03\u7684\u5386\u53f2\uff0c\u800c develop \u5206\u652f \u4f5c\u4e3a\u529f\u80fd\u7684\u96c6\u6210\u5206\u652f\u3002 \u8fd9\u6837\u4e5f\u65b9\u4fbf master \u5206\u652f\u4e0a\u7684\u6240\u6709\u63d0\u4ea4\u5206\u914d\u4e00\u4e2a \u7248\u672c\u53f7 \u3002","title":"2.1 \u5386\u53f2\u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#22-\u529f\u80fd\u5206\u652f","text":"\u6bcf\u4e2a\u65b0\u529f\u80fd\u4f4d\u4e8e\u4e00\u4e2a\u81ea\u5df1\u7684\u5206\u652f\uff0c\u8fd9\u6837\u53ef\u4ee5 push \u5230\u4e2d\u592e\u4ed3\u5e93\u4ee5\u5907\u4efd\u548c\u534f\u4f5c\u3002 \u4f46\u529f\u80fd\u5206\u652f\u4e0d\u662f\u4ece master \u5206\u652f\u4e0a\u62c9\u51fa\u65b0\u5206\u652f\uff0c\u800c\u662f\u4f7f\u7528 develop \u5206\u652f\u4f5c\u4e3a\u7236\u5206\u652f\u3002\u5f53\u65b0\u529f\u80fd\u5b8c\u6210\u65f6\uff0c\u5408\u5e76\u56de develop \u5206\u652f\u3002 \u65b0\u529f\u80fd\u63d0\u4ea4\u5e94\u8be5\u4ece\u4e0d\u76f4\u63a5\u4e0e master \u5206\u652f\u4ea4\u4e92\u3002 \u6ce8\u610f\uff0c\u4ece\u5404\u79cd\u542b\u4e49\u548c\u76ee\u7684\u4e0a\u6765\u770b\uff0c\u529f\u80fd\u5206\u652f\u52a0\u4e0a develop \u5206\u652f\u5c31\u662f\u529f\u80fd\u5206\u652f\u5de5\u4f5c\u6d41\u7684\u7528\u6cd5\u3002\u4f46 Gitflow \u5de5\u4f5c\u6d41\u6ca1\u6709\u5728\u8fd9\u91cc\u6b62\u6b65\u3002","title":"2.2 \u529f\u80fd\u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#23-\u53d1\u5e03\u5206\u652f","text":"\u4e00\u65e6 develop \u5206\u652f\u4e0a\u6709\u4e86\u505a\u4e00\u6b21\u53d1\u5e03\uff08\u6216\u8005\u8bf4\u5feb\u5230\u4e86\u65e2\u5b9a\u7684\u53d1\u5e03\u65e5\uff09\u7684\u8db3\u591f\u529f\u80fd\uff0c \u5c31\u4ece develop \u5206\u652f\u4e0a fork \u4e00\u4e2a\u53d1\u5e03\u5206\u652f\uff08Release\uff09\u3002 \u65b0\u5efa\u7684\u5206\u652f\u7528\u4e8e\u5f00\u59cb\u53d1\u5e03\u5faa\u73af\uff0c \u6240\u4ee5\u4ece\u8fd9\u4e2a\u65f6\u95f4\u70b9\u5f00\u59cb\u4e4b\u540e\u65b0\u7684\u529f\u80fd\u4e0d\u80fd\u518d\u52a0\u5230\u8fd9\u4e2a\u5206\u652f\uff08Release\uff09\u4e0a\u2014\u2014 \u8fd9\u4e2a\u5206\u652f\uff08Release\uff09\u53ea\u5e94\u8be5\u505a Bug \u4fee\u590d\u3001\u6587\u6863\u751f\u6210\u548c\u5176\u5b83\u9762\u5411\u53d1\u5e03\u4efb\u52a1\u3002 \u4e00\u65e6\u5bf9\u5916\u53d1\u5e03\u7684\u5de5\u4f5c\u90fd\u5b8c\u6210\u4e86\uff0c\u53d1\u5e03\u5206\u652f\uff08Release\uff09\u5408\u5e76\u5230 master \u5206\u652f\u5e76\u5206\u914d\u4e00\u4e2a\u7248\u672c\u53f7\u6253\u597d Tag\u3002 \u53e6\u5916\uff0c\u8fd9\u4e9b\u4ece\u65b0\u5efa\u53d1\u5e03\u5206\u652f\u4ee5\u6765\u7684\u505a\u7684\u4fee\u6539\u8981\u5408\u5e76\u56de develop \u5206\u652f\u3002 (\u6700\u540e\u518d\u5220\u9664 Release \u5206\u652f)\u4f7f\u7528\u4e00\u4e2a\u7528\u4e8e\u53d1\u5e03\u51c6\u5907\u7684\u4e13\u95e8\u5206\u652f\uff0c\u4f7f\u5f97\u4e00\u4e2a\u56e2\u961f\u53ef\u4ee5\u5728\u5b8c\u5584\u5f53\u524d\u7684\u53d1\u5e03\u7248\u672c\u7684\u540c\u65f6\uff0c\u53e6\u4e00\u4e2a\u56e2\u961f\u53ef\u4ee5\u7ee7\u7eed\u5f00\u53d1\u4e0b\u4e2a\u7248\u672c\u7684\u529f\u80fd\u3002 \u8fd9\u4e5f\u6253\u9020\u5b9a\u4e49\u826f\u597d\u7684\u5f00\u53d1\u9636\u6bb5\uff08\u6bd4\u5982\uff0c\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u8bf4\uff0c\u300e\u8fd9\u5468\u6211\u4eec\u8981\u505a\u51c6\u5907\u53d1\u5e03\u7248\u672c 4.0\u300f\uff0c\u5e76\u4e14\u5728\u4ed3\u5e93\u7684\u76ee\u5f55\u7ed3\u6784\u4e2d\u53ef\u4ee5\u5b9e\u9645\u770b\u5230\uff09\u3002 \u5e38\u7528\u7684\u5206\u652f\u4ecb\u7ecd Text Only 1 2 3 \u7528\u4e8e\u65b0\u5efa\u53d1\u5e03\u5206\u652f\u7684\u5206\u652f: develop \u7528\u4e8e\u5408\u5e76\u7684\u5206\u652f: master \u5206\u652f\u547d\u540d: release-* \u6216 release/*","title":"2.3 \u53d1\u5e03\u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#24-\u7ef4\u62a4\u5206\u652f","text":"\u7ef4\u62a4\u5206\u652f\u6216\u8bf4\u662f\u70ed\u4fee\u590d\uff08hotfix\uff09\u5206\u652f\u7528\u4e8e\u751f\u6210\u5feb\u901f\u7ed9\u4ea7\u54c1\u53d1\u5e03\u7248\u672c\uff08production releases\uff09\u6253\u8865\u4e01\uff0c\u8fd9\u662f\u552f\u4e00\u53ef\u4ee5\u76f4\u63a5\u4ece master \u5206\u652f fork \u51fa\u6765\u7684\u5206\u652f\u3002 \u4fee\u590d\u5b8c\u6210\uff0c\u4fee\u6539\u5e94\u8be5\u9a6c\u4e0a\u5408\u5e76\u56de master \u5206\u652f\u548c develop \u5206\u652f\uff08\u5f53\u524d\u7684\u53d1\u5e03\u5206\u652f\uff09\uff0cmaster \u5206\u652f\u5e94\u8be5\u7528\u65b0\u7684\u7248\u672c\u53f7\u6253\u597d Tag\u3002\u4e3a Bug \u4fee\u590d\u4f7f\u7528\u4e13\u95e8\u5206\u652f\uff0c\u8ba9\u56e2\u961f\u53ef\u4ee5\u5904\u7406\u6389\u95ee\u9898\u800c\u4e0d\u7528\u6253\u65ad\u5176\u5b83\u5de5\u4f5c\u6216\u662f\u7b49\u5f85\u4e0b\u4e00\u4e2a\u53d1\u5e03\u5faa\u73af\u3002 \u4f60\u53ef\u4ee5\u628a\u7ef4\u62a4\u5206\u652f\u60f3\u6210\u662f\u4e00\u4e2a\u76f4\u63a5\u5728 master \u5206\u652f\u4e0a\u5904\u7406\u7684\u4e34\u65f6\u53d1\u5e03\u3002","title":"2.4 \u7ef4\u62a4\u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#3-gitflow-\u7684\u5b9e\u73b0","text":"","title":"3 GItFlow \u7684\u5b9e\u73b0"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#31-\u4f7f\u7528\u547d\u4ee4\u6765\u5b9e\u73b0","text":"\u521b\u5efa\u4e00\u4e2a\u4ed3\u5e93 \u7136\u540e clone \u9879\u76ee \u4e3a master \u5206\u652f\u914d\u5957\u4e00\u4e2a develop \u5206\u652f\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u53ef\u4ee5\u5728\u672c\u5730\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 develop \u5206\u652f\uff0cpush \u5230\u670d\u52a1\u5668\u4e0a Text Only 1 git checkout -b develop #\u57fa\u4e8e\u5f53\u524d\u5206\u652f \u521d\u59cb\u5316\u9879\u76ee\u5de5\u7a0b\uff0c\u521b\u5efa springBoot \u9879\u76ee \u63d0\u4ea4\u5206\u652f\u5230\u670d\u52a1\u5668\u4e0a Text Only 1 git push --set-upstream origin develop \u521d\u59cb\u5316\u6846\u67b6\uff0c\u52a0\u4e0a springBoot \u6846\u67b6\u53ca\u6837\u4f8b \u4ee5\u540e\u8fd9\u4e2a\u5206\u652f\u5c06\u4f1a\u5305\u542b\u4e86\u9879\u76ee\u7684\u5168\u90e8\u5386\u53f2\uff0c\u800c master \u5206\u652f\u5c06\u5305\u542b\u4e86\u90e8\u5206\u5386\u53f2\u3002\u5176\u4ed6\u5f00\u53d1\u8005\u8fd9\u65f6\u5e94\u8be5\u514b\u9686\u4e2d\u592e\u4ed3\u5e93\uff0c\u5efa\u597d develop \u5206\u652f\u7684\u8ddf\u8e2a\u5206\u652f: \u521b\u5efa\u529f\u80fd\u5206\u652f \u7a0b\u5e8f\u5458 A Text Only 1 2 3 4 git clone http://192.168.53.197:3000/root/gitflow.git git checkout develop # \u5207\u6362\u5230develop\u5206\u652f git checkout -b feature/FEATURE-01 # \u57fa\u4e8edevelop \u5206\u652f\u521b\u5efa\u529f\u80fd\u5206\u652f git push -u origin feature/FEATURE-01 - \u505a\u529f\u80fd\u4fee\u6539\uff0c\u6dfb\u52a0\u529f\u80fd - \u63d0\u4ea4 - \u7a0b\u5e8f\u5458 A \u5b8c\u6210\u4e86\u5f00\u53d1\u7684\u529f\u80fd\u3002\u5982\u679c\u56e2\u961f \u4f7f\u7528 Pull requests ,\u8fd9\u65f6\u5019\u53d1\u8d77\u4e00\u4e2a\u7528\u4e8e\u5408\u5e76\u5230 develop \u5206\u652f\u3002 \u5426\u5219\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u5230\u4ed6\u672c\u5730\u7684 develop \u5206\u652f\u540e push \u5230\u4e2d\u592e\u4ed3\u5e93 Text Only 1 2 3 4 5 6 7 8 9 10 # \u62c9\u53d6\u8fdc\u7a0b\u7684develop\u5206\u652f\uff0c\u5e76\u4e14\u5f53\u524d\u5206\u652f\uff08\u672c\u5730\u5206\u652fsome-feature\uff09\u5408\u5e76\u4e0a\u8fdc\u7a0b\u5206\u652fdevelop #\u7b2c\u4e00\u6761\u547d\u4ee4\u5728\u5408\u5e76\u529f\u80fd\u524d\u786e\u4fdddevelop\u5206\u652f\u662f\u6700\u65b0\u7684\u3002\u6ce8\u610f\uff0c\u529f\u80fd\u51b3\u4e0d\u5e94\u8be5\u76f4\u63a5\u5408\u5e76\u5230master\u5206\u652f\u3002 \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u548c\u96c6\u4e2d\u5f0f\u5de5\u4f5c\u6d41\u4e00\u6837\u3002 git pull origin develop git checkout develop git merge --no-ff feature/FEATURE-01 #\u5408\u5e76\u5206\u652f\u5230develop\u5206\u652f\u4e0a git push # \u5220\u9664\u672c\u5730\u5206\u652f git branch -d feature/FEATURE-01 # \u5982\u679c\u5728\u670d\u52a1\u5668\u4e0a\u6709\u8fd9\u4e2a\u5206\u652f\uff0c\u5219\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4 git push origin --delete feature/FEATURE-01 \u521b\u5efa\u529f\u80fd\u5206\u652f\u7a0b\u5e8f\u5458 B : Text Only 1 2 3 git clone http://192.168.50.197:3000/root/gitflow.git git checkout develop # \u5207\u6362\u5230develop\u5206\u652f git checkout -b feature/FEATURE-02 # \u529f\u80fd\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5408\u5e76\u5206\u652f Text Only 1 2 3 4 5 6 7 8 # \u62c9\u53d6\u8fdc\u7a0b\u7684develop\u5206\u652f\uff0c\u5e76\u4e14\u5f53\u524d\u5206\u652f\uff08\u672c\u5730\u5206\u652fsome-feature\uff09\u5408\u5e76\u4e0a\u8fdc\u7a0b\u5206\u652fdevelop #\u7b2c\u4e00\u6761\u547d\u4ee4\u5728\u5408\u5e76\u529f\u80fd\u524d\u786e\u4fdddevelop\u5206\u652f\u662f\u6700\u65b0\u7684\u3002\u6ce8\u610f\uff0c\u529f\u80fd\u51b3\u4e0d\u5e94\u8be5\u76f4\u63a5\u5408\u5e76\u5230master\u5206\u652f\u3002 \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\u548c\u96c6\u4e2d\u5f0f\u5de5\u4f5c\u6d41\u4e00\u6837\u3002 git pull origin develop git checkout develop git merge --no-ff feature/FEATURE-01 #\u5408\u5e76\u5206\u652f\u5230develop\u5206\u652f\u4e0a git push # \u5220\u9664\u672c\u5730\u5206\u652f git branch -d feature/FEATURE-02 6.\u5728 develop \u5206\u652f\u4e0a\u521b\u5efa release \u5206\u652f \u8fd9\u65f6\u5019\u5f00\u59cb\u7b2c\u4e00\u4e2a\u9879\u76ee\u7684\u6b63\u5f0f\u53d1\u5e03\u3002\u50cf\u529f\u80fd\u5f00\u53d1\uff0c\u7528\u4e00\u4e2a\u5206\u652f\u6765\u505a\u53d1\u5e03\u51c6\u5907\u3002 Text Only 1 2 git checkout develop git checkout -b release/v0.9.0 \u8fd9\u4e2a\u5206\u652f\u662f\u6e05\u7406\u53d1\u5e03\u3001\u6267\u884c\u6240\u6709\u6d4b\u8bd5\u3001\u66f4\u65b0\u6587\u6863\u548c\u5176\u5b83\u4e3a\u4e0b\u4e2a\u53d1\u5e03\u505a\u51c6\u5907\u64cd\u4f5c\u7684\u5e95\u4ed3 \u6d4b\u8bd5\u4eba\u5458\u8fdb\u884c\u6d4b\u8bd5 \u5f00\u53d1\u4eba\u5458\u8fdb\u884c\u4fee\u590d\u6d4b\u8bd5\u95ee\u9898 Text Only 1 2 git add . git commit -m \"fix:fix some ... \" \u5982\u679c\u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\uff0c\u5219\u5408\u5e76\u5230 master \u5206\u652f\u4e0a \u4e00\u65e6\u51c6\u5907\u597d\u4e86\u5bf9\u5916\u53d1\u5e03\uff0c\u5c31\u9700\u8981\u5408\u5e76\u4fee\u6539\u5230 master \u5206\u652f\u4e0a\u548c develop \u5206\u652f\u4e0a\u3002\u5220\u9664\u53d1\u5e03\u5206\u652f\u3002 \u5408\u5e76\u56de develop \u5206\u652f\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5728\u53d1\u5e03\u5206\u652f\u4e2d\u5df2\u7ecf\u63d0\u4ea4\u7684\u66f4\u65b0\u9700\u8981\u5728\u540e\u9762\u7684\u65b0\u529f\u80fd\u4e2d\u4e5f\u8981\u662f\u53ef \u7528\u7684\u3002\u53e6\u5916\uff0c\u5982\u679c\u56e2\u961f\u8981\u6c42 Code Review \uff0c\u8fd9\u65f6\u4e00\u4e2a\u53d1\u8d77 Pull Request \u7684\u674e\u60f3\u65f6\u673a\u3002 Text Only 1 2 3 4 5 6 7 8 9 10 11 12 git checkout master git merge --no-ff release/v0.9.0 git push # \u628arelease \u7248\u672c\u4e5f\u5408\u5e76\u5230develop\u5206\u652f\u4e0a git checkout develop git merge --no-ff release/v0.9.0 git push git branch -d release-0.1.0 # If you pushed branch to origin: git push origin --delete release-0.1.0 \u53d1\u5e03\u5206\u652f\u662f\u4f5c\u4e3a\u529f\u80fd\u5f00\u53d1\uff08develop \u5206\u652f\uff09\u548c\u5bf9\u5916\u53d1\u5e03\uff08master \u5206\u652f\uff09\u95f4\u7684\u7f13\u51b2\u3002\u53ea\u8981\u6709\u5408\u5e76\u5230 master \u5206\u652f\uff0c\u5c31\u5e94\u8be5\u6253\u597d Tag \u4ee5\u65b9\u4fbf\u8ddf\u8e2a\u3002 Text Only 1 2 git tag -a v0.9.0 -m \"Initial public release\" master git push --tags Git \u6709\u63d0\u4f9b\u5404\u79cd\u94a9\u5b50(hook) , \u5373\u4ed3\u5e93\u6709\u4e8b\u4ef6\u53d1\u751f\u65f6\u89e6\u53d1\u6267\u884c\u7684\u811a\u672c\u3002\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u94a9\u5b50\uff0c\u5728\u4f60 push \u4e2d\u592e\u4ed3\u5e93\u7684 master \u5206\u652f\u4e0a\u65f6\uff0c\u81ea\u52a8\u6784\u5efa\u597d\u5bf9\u5916\u53d1\u5e03\u3002 \u5982\u679c master \u5728\u751f\u4ea7\u73af\u5883\u4e0a\u51fa\u73b0 bug Text Only 1 2 git checkout master git checkout -b hotfix/v0.9.0 \u8fdb\u884c\u4fee\u590d bug \u628a\u4fee\u590d\u7684\u7248\u672c\u5408\u5e76\u5230 master \u5206\u652f\u4e0a Text Only 1 2 3 4 5 6 7 8 9 10 11 git checkout master git merge --no-ff hotfix/v0.9.0 git tag v0.9.1 git push git push origin v0.9.1 # \u628a\u8865\u4e01\u5206\u652f \u5408\u5e76\u5230develop \u5206\u652f\u4e0a git checkout develop git merge --no-ff hotfix/v0.9.0 git push git branch -d hotfix/v0.9.0","title":"3.1 \u4f7f\u7528\u547d\u4ee4\u6765\u5b9e\u73b0"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#32-\u4f7f\u7528-source-tree-\u6765\u5b9e\u73b0","text":"1.\u9996\u5148\u5728 gitlab \u4e0a\u521b\u5efa\u4e00\u4e2a\u9879\u76ee 2.\u5728 source tree \u521b\u5efa\u5206\u652f \u5728\u672c\u5730\u628a\u670d\u52a1\u5668\u4e0a\u7684\u9879\u76ee\u62c9\u4e0b\u6765 Text Only 1 2 3 # \u7528\u547d\u4ee4\u884c\u521b\u5efadevelop\u5206\u652f git checkout -n develop git push --set-upstream origin develop \u7136\u540e\u7528 source tree \u6253\u5f00 \u521b\u5efa feature-01 \u5206\u652f \u5bf9 feature-01 \u5206\u652f \u8fdb\u884c \u4fee\u6539\u4e0a\u4f20 \u53ef\u4ee5\u5728\u6b64\u9875\u9762\u8fdb\u884c\u63d0\u4ea4\uff0c\u70b9\u51fb + \u53f7 \u529f\u80fd\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f \u518d\u6b21\u70b9\u51fb git \u5de5\u4f5c\u6d41\uff1a \u70b9\u51fb\u5b8c\u6210\u529f\u80fd \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u4f1a\u9009\u62e9\u5728\u5f00\u53d1\u5206\u652f\u4e0a\u8fdb\u884c\u53d8\u57fa \u70b9\u51fb\u786e\u5b9a \u518d\u6b21\u70b9\u51fb GIt \u5de5\u4f5c\u6d41\uff0c\u521b\u5efa\u9884\u53d1\u5e03\u7248\u672c\uff0c\u4e00\u822c\u5728 develop \u5206\u652f\u4e0a\u3002 \u70b9\u51fb\u786e\u5b9a \u5982\u679c\u9884\u53d1\u5e03\u7248\u672c\u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\uff0c\u5219\u518d\u6b21\u70b9\u51fb Git \u5de5\u4f5c\u6d41\uff0c\u5b8c\u6210\u53d1\u5e03\u7248\u672c \u70b9\u51fb\u786e\u5b9a\uff1a \u52a0\u5165\u6211\u4eec\u5728\u751f\u4ea7\u73af\u5883\u4e0a\u51fa\u73b0 bug,\u8865\u4e01\u5206\u652f\u662f\u57fa\u4e8e master \u7684 \u4fee\u590d\u5b8c\u6210\u540e\uff0c\u518d\u6b21\u70b9\u51fb GIt \u5de5\u4f5c\u6d41","title":"3.2 \u4f7f\u7528 source tree \u6765\u5b9e\u73b0"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/Gitflow%20%E5%88%86%E6%94%AF%E8%AF%A6%E8%A7%A3/#33-\u4f7f\u7528-gitlab-\u5b9e\u73b0-git-flow","text":"\u53ef\u4ee5\u5b89\u88c5 git flow \u63d2\u4ef6 \u9996\u5148\u5728 gitlab \u4e0a\u521b\u5efa\u4ed3\u5e93 \u628a\u4ed3\u5e93\u4ee3\u7801\u62c9\u5230\u672c\u5730 \u521b\u5efa develop \u5206\u652f Text Only 1 2 3 4 5 6 7 8 # clone \u9879\u76ee git clone http://192.168.50.197:82/rorm_group/recas.git # \u521b\u5efadevelop \u5206\u652f \u5e76\u5207\u6362\u5206\u652f git checkout -b develop # \u6dfb\u52a0\u548c\u4fee\u6539\u6587\u4ef6 # \u628adevelop \u5206\u652f\u63d0\u4ea4\u5230\u670d\u52a1\u5668 git push --set-upstream origin develop \u8bbe\u7f6e master \u548c develop \u4e3a\u4fdd\u62a4\u5206\u652f\uff0c\u4e14\u53ea\u6709 master \u89d2\u8272\u624d\u80fd merge \u548c push 2.\u6210\u5458\u8fdb\u884c clone git clone \u6dfb\u52a0\u6210\u5458 3.\u9879\u76ee\u7ec4\u957f\u5206\u914d\u91cc\u7a0b\u7891\u4e0e\u8bae\u9898 \u521b\u5efa\u5b8c\u6210\u5982\u4e0b: \u4e0b\u9762\u662f\u521b\u5efa issue \u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u91cc\u7a0b\u7891\u4e2d\u770b\u5230\u6dfb\u52a0\u7684\u95ee\u9898 \u53ef\u4ee5\u6307\u6d3e\u4eba\u89e3\u51b3 4.\u9879\u76ee\u6210\u5458\u6839\u636e\u81ea\u5df1\u88ab\u5206\u914d\u7684\u4efb\u52a1\u5efa\u7acb\u5bf9\u5e94\u7684\u5206\u652f \u5148\u5728\u9879\u76ee\u4e2d\u5efa\u7acb\u5206\u652f\uff0c\u518d\u62c9\u53d6\u5f00\u53d1 \u5148\u5728\u672c\u5730\u5efa\u7acb\u5206\u652f\uff0c\u518d\u63d0\u4ea4 Text Only 1 2 3 4 5 6 7 8 9 # \u62c9\u53d6\u4ee3\u7801 # clone \u9879\u76ee git clone http://192.168.53.197:82/rorm_group/xx.git # \u521b\u5efadevelop \u5206\u652f \u5e76\u5207\u6362\u5206\u652f git checkout -b question01 # \u6dfb\u52a0\u548c\u4fee\u6539\u6587\u4ef6 # \u628adevelop \u5206\u652f\u63d0\u4ea4\u5230\u670d\u52a1\u5668 git push --set-upstream origin question1 \u7136\u540e\u7f16\u8f91\u6587\u4ef6 Text Only 1 2 3 git add . git commit -m \"ddd\" git push origin feature/question01 \u5f00\u53d1\u4eba\u5458\u5b8c\u6210\u5f00\u53d1\u540e\uff0c\u5728 gitlab \u4e0a \u521b\u5efa MergeRequest fixes #xxx fixed #xxx \uff1a \u5173\u95ed\u67d0\u4e00 issue fix #xxx closes #xxx close #xxx closed #xxx \uff1a \u5173\u95ed\u67d0\u4e00 issue \u70b9\u51fb \u4fee\u6539\u5206\u652f \u70b9\u51fb\u63d0\u4ea4\u5408\u5e76\u8bf7\u6c42\u3002 \u7528\u7ba1\u7406\u5458\u7528\u6237\u767b\u5f55\uff0c\u53f3\u4e0a\u89d2\u6709\u5408\u5e76\u8bf7\u6c42 \u70b9\u51fb\u8fdb\u53bb","title":"3.3 \u4f7f\u7528 gitlab \u5b9e\u73b0 git flow"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/GIT%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"GIT \u5e38\u7528\u547d\u4ee4 \u00b6 start a working area (see also: git help tutorial) \u00b6 \u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u533a clone Clone a repository into a new directory, \u5c06\u5b58\u50a8\u5e93\u514b\u9686\u5230\u65b0\u76ee\u5f55 init Create an empty Git repository or reinitialize an existing one, \u521b\u5efa\u7a7a Git \u5b58\u50a8\u5e93\u6216\u91cd\u65b0\u521d\u59cb\u5316\u73b0\u6709\u5b58\u50a8\u5e93 work on the current change (see also: git help everyday \u00b6 \u5904\u7406\u5f53\u524d\u66f4\u6539 add Add file contents to the index, \u5c06\u6587\u4ef6\u5185\u5bb9\u6dfb\u52a0\u5230 index mv Move or rename a file, a directory, or a symlink, \u79fb\u52a8\u6216\u91cd\u547d\u540d\u6587\u4ef6\u3001\u76ee\u5f55\u6216\u7b26\u53f7\u94fe\u63a5 restore Restore working tree files, \u8fd8\u539f\u5de5\u4f5c\u6811\u6587\u4ef6 rm Remove files from the working tree and from the index, \u4ece\u5de5\u4f5c\u6811\u548c index \u4e2d\u5220\u9664\u6587\u4ef6 examine the history and state (see also: git help revisions) \u00b6 \u68c0\u67e5\u5386\u53f2\u548c\u72b6\u6001 bisect Use binary search to find the commit that introduced a bug, \u4f7f\u7528 binary search \u67e5\u627e\u5f15\u8d77 bug \u7684\u63d0\u4ea4 diff Show changes between commits, commit and working tree, etc grep Print lines matching a pattern log Show commit logs show Show various types of objects status Show the working tree status grow, mark and tweak your common history \u00b6 \u53d1\u5c55\u3001\u6807\u8bb0\u548c\u8c03\u6574\u4f60\u7684\u5171\u540c\u5386\u53f2 branch List, create, or delete branches commit Record changes to the repository merge Join two or more development histories together rebase Reapply commits on top of another base tip reset Reset current HEAD to the specified state switch Switch branches tag Create, list, delete or verify a tag object signed with GPG collaborate (see also: git help workflows) \u00b6 fetch Download objects and refs from another repository, \u4ece\u5176\u4ed6\u5b58\u50a8\u5e93\u4e0b\u8f7d\u5bf9\u8c61\u548c\u5f15\u7528 pull Fetch from and integrate with another repository or a local branch, \u4ece\u53e6\u4e00\u4e2a\u5b58\u50a8\u5e93\u6216\u672c\u5730\u5206\u652f\u83b7\u53d6**\u5e76\u4e0e\u4e4b\u96c6\u6210** push Update remote refs along with associated objects","title":"GIT \u5e38\u7528\u547d\u4ee4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/GIT%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#git-\u5e38\u7528\u547d\u4ee4","text":"","title":"GIT \u5e38\u7528\u547d\u4ee4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/GIT%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#start-a-working-area-see-also-git-help-tutorial","text":"\u5f00\u59cb\u4e00\u4e2a\u5de5\u4f5c\u533a clone Clone a repository into a new directory, \u5c06\u5b58\u50a8\u5e93\u514b\u9686\u5230\u65b0\u76ee\u5f55 init Create an empty Git repository or reinitialize an existing one, \u521b\u5efa\u7a7a Git \u5b58\u50a8\u5e93\u6216\u91cd\u65b0\u521d\u59cb\u5316\u73b0\u6709\u5b58\u50a8\u5e93","title":"start a working area (see also: git help tutorial)"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/GIT%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#work-on-the-current-change-see-also-git-help-everyday","text":"\u5904\u7406\u5f53\u524d\u66f4\u6539 add Add file contents to the index, \u5c06\u6587\u4ef6\u5185\u5bb9\u6dfb\u52a0\u5230 index mv Move or rename a file, a directory, or a symlink, \u79fb\u52a8\u6216\u91cd\u547d\u540d\u6587\u4ef6\u3001\u76ee\u5f55\u6216\u7b26\u53f7\u94fe\u63a5 restore Restore working tree files, \u8fd8\u539f\u5de5\u4f5c\u6811\u6587\u4ef6 rm Remove files from the working tree and from the index, \u4ece\u5de5\u4f5c\u6811\u548c index \u4e2d\u5220\u9664\u6587\u4ef6","title":"work on the current change (see also: git help everyday"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/GIT%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#examine-the-history-and-state-see-also-git-help-revisions","text":"\u68c0\u67e5\u5386\u53f2\u548c\u72b6\u6001 bisect Use binary search to find the commit that introduced a bug, \u4f7f\u7528 binary search \u67e5\u627e\u5f15\u8d77 bug \u7684\u63d0\u4ea4 diff Show changes between commits, commit and working tree, etc grep Print lines matching a pattern log Show commit logs show Show various types of objects status Show the working tree status","title":"examine the history and state (see also: git help revisions)"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/GIT%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#grow-mark-and-tweak-your-common-history","text":"\u53d1\u5c55\u3001\u6807\u8bb0\u548c\u8c03\u6574\u4f60\u7684\u5171\u540c\u5386\u53f2 branch List, create, or delete branches commit Record changes to the repository merge Join two or more development histories together rebase Reapply commits on top of another base tip reset Reset current HEAD to the specified state switch Switch branches tag Create, list, delete or verify a tag object signed with GPG","title":"grow, mark and tweak your common history"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/GIT%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#collaborate-see-also-git-help-workflows","text":"fetch Download objects and refs from another repository, \u4ece\u5176\u4ed6\u5b58\u50a8\u5e93\u4e0b\u8f7d\u5bf9\u8c61\u548c\u5f15\u7528 pull Fetch from and integrate with another repository or a local branch, \u4ece\u53e6\u4e00\u4e2a\u5b58\u50a8\u5e93\u6216\u672c\u5730\u5206\u652f\u83b7\u53d6**\u5e76\u4e0e\u4e4b\u96c6\u6210** push Update remote refs along with associated objects","title":"collaborate (see also: git help workflows)"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/Git%20branch%20%26%26%20Git%20checkout/","text":"created: 2022-10-06 09:09 tags: [Git branch && Git checkout \u5e38\u89c1\u7528\u6cd5] source: \u539f\u6587\u5730\u5740 author: Git branch && Git checkout \u5e38\u89c1\u7528\u6cd5_sizewkk \u7684\u535a\u5ba2-CSDN \u535a\u5ba2 \u00b6 git branch \u548c git checkout \u7ecf\u5e38\u5728\u4e00\u8d77\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u6b64\u5c06\u5b83\u4eec\u5408\u5728\u4e00\u8d77 1. Git branch \u00b6 \u4e00\u822c\u7528\u4e8e\u5206\u652f\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa\u5206\u652f\uff0c\u67e5\u770b\u5206\u652f\u7b49\u7b49\u3002 1.1 git branch \u4e0d\u5e26\u53c2\u6570\uff1a\u5217\u51fa\u672c\u5730\u5df2\u7ecf\u5b58\u5728\u7684\u5206\u652f\uff0c\u5e76\u4e14\u5728\u5f53\u524d\u5206\u652f\u7684\u524d\u9762\u7528\"*\"\u6807\u8bb0 1.2 git branch -r \u67e5\u770b\u8fdc\u7a0b\u7248\u672c\u5e93\u5206\u652f\u5217\u8868 1.3 git branch -a \u67e5\u770b\u6240\u6709\u5206\u652f\u5217\u8868\uff0c\u5305\u62ec\u672c\u5730\u548c\u8fdc\u7a0b 1.4 git branch dev \u521b\u5efa\u540d\u4e3a dev \u7684\u5206\u652f, \u521b\u5efa\u5206\u652f\u65f6\u9700\u8981\u662f\u6700\u65b0\u7684\u73af\u5883, \u521b\u5efa\u5206\u652f\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f 1.5 git branch -d dev \u5220\u9664 dev \u5206\u652f\uff0c\u5982\u679c\u5728\u5206\u652f\u4e2d\u6709\u4e00\u4e9b\u672a merge \u7684\u63d0\u4ea4\uff0c \u90a3\u4e48\u4f1a\u5220\u9664\u5206\u652f\u5931\u8d25\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528 git branch -D dev: \u5f3a\u5236\u5220\u9664 dev \u5206\u652f 1.6 git branch -vv \u53ef\u4ee5\u67e5\u770b\u672c\u5730\u5206\u652f\u5bf9\u5e94\u7684\u8fdc\u7a0b\u5206\u652f 1.7 git branch -m oldName newName \u7ed9\u5206\u652f\u91cd\u547d\u540d 2. Git checkout \u00b6 \u64cd\u4f5c\u6587\u4ef6 \u64cd\u4f5c\u5206\u652f 2.1 \u64cd\u4f5c\u6587\u4ef6 \u00b6 2.1.1 git checkout filename \u653e\u5f03\u5355\u4e2a\u6587\u4ef6\u7684\u4fee\u6539 2.1.2 git checkout . \u653e\u5f03\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u4fee\u6539 2.2 \u64cd\u4f5c\u5206\u652f \u00b6 2.2.1 git checkout master \u5c06\u5206\u652f\u5207\u6362\u5230master 2.2.2 git checkout -b master \u5982\u679c\u5206\u652f\u5b58\u5728\u5219\u53ea\u5207\u6362\u5206\u652f\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u5e76\u5207\u6362\u5230master\u5206\u652f repo start\u662f\u5bf9 git checkout -b \u8fd9\u4e2a\u547d\u4ee4\u7684\u5c01\u88c5\uff0c\u5c06\u6240\u6709\u4ed3\u5e93\u7684\u5206\u652f\u90fd\u5207\u6362\u5230master\uff0c master\u662f\u5206\u652f\u540d 2.3 \u67e5\u770b\u5e2e\u52a9 \u00b6 git checkout --help \u5f53\u7136 git checkout \u8fd8\u6709\u8bb8\u591a\u547d\u4ee4, \u4f46\u8fd9\u4e9b\u5df2\u7ecf\u80fd\u6ee1\u8db3\u6211\u4eec\u65e5\u5e38\u5f00\u53d1\u6240\u9700\u4e86\u3002","title":"Git branch && Git checkout"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/Git%20branch%20%26%26%20Git%20checkout/#git-branch--git-checkout-\u5e38\u89c1\u7528\u6cd5_sizewkk-\u7684\u535a\u5ba2-csdn-\u535a\u5ba2","text":"git branch \u548c git checkout \u7ecf\u5e38\u5728\u4e00\u8d77\u4f7f\u7528\uff0c\u6240\u4ee5\u5728\u6b64\u5c06\u5b83\u4eec\u5408\u5728\u4e00\u8d77","title":"Git branch &amp;&amp; Git checkout \u5e38\u89c1\u7528\u6cd5_sizewkk \u7684\u535a\u5ba2-CSDN \u535a\u5ba2"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/Git%20branch%20%26%26%20Git%20checkout/#1-git-branch","text":"\u4e00\u822c\u7528\u4e8e\u5206\u652f\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u521b\u5efa\u5206\u652f\uff0c\u67e5\u770b\u5206\u652f\u7b49\u7b49\u3002 1.1 git branch \u4e0d\u5e26\u53c2\u6570\uff1a\u5217\u51fa\u672c\u5730\u5df2\u7ecf\u5b58\u5728\u7684\u5206\u652f\uff0c\u5e76\u4e14\u5728\u5f53\u524d\u5206\u652f\u7684\u524d\u9762\u7528\"*\"\u6807\u8bb0 1.2 git branch -r \u67e5\u770b\u8fdc\u7a0b\u7248\u672c\u5e93\u5206\u652f\u5217\u8868 1.3 git branch -a \u67e5\u770b\u6240\u6709\u5206\u652f\u5217\u8868\uff0c\u5305\u62ec\u672c\u5730\u548c\u8fdc\u7a0b 1.4 git branch dev \u521b\u5efa\u540d\u4e3a dev \u7684\u5206\u652f, \u521b\u5efa\u5206\u652f\u65f6\u9700\u8981\u662f\u6700\u65b0\u7684\u73af\u5883, \u521b\u5efa\u5206\u652f\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f 1.5 git branch -d dev \u5220\u9664 dev \u5206\u652f\uff0c\u5982\u679c\u5728\u5206\u652f\u4e2d\u6709\u4e00\u4e9b\u672a merge \u7684\u63d0\u4ea4\uff0c \u90a3\u4e48\u4f1a\u5220\u9664\u5206\u652f\u5931\u8d25\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528 git branch -D dev: \u5f3a\u5236\u5220\u9664 dev \u5206\u652f 1.6 git branch -vv \u53ef\u4ee5\u67e5\u770b\u672c\u5730\u5206\u652f\u5bf9\u5e94\u7684\u8fdc\u7a0b\u5206\u652f 1.7 git branch -m oldName newName \u7ed9\u5206\u652f\u91cd\u547d\u540d","title":"1. Git branch"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/Git%20branch%20%26%26%20Git%20checkout/#2-git-checkout","text":"\u64cd\u4f5c\u6587\u4ef6 \u64cd\u4f5c\u5206\u652f","title":"2. Git checkout"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/Git%20branch%20%26%26%20Git%20checkout/#21-\u64cd\u4f5c\u6587\u4ef6","text":"2.1.1 git checkout filename \u653e\u5f03\u5355\u4e2a\u6587\u4ef6\u7684\u4fee\u6539 2.1.2 git checkout . \u653e\u5f03\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u4fee\u6539","title":"2.1 \u64cd\u4f5c\u6587\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/Git%20branch%20%26%26%20Git%20checkout/#22-\u64cd\u4f5c\u5206\u652f","text":"2.2.1 git checkout master \u5c06\u5206\u652f\u5207\u6362\u5230master 2.2.2 git checkout -b master \u5982\u679c\u5206\u652f\u5b58\u5728\u5219\u53ea\u5207\u6362\u5206\u652f\uff0c\u82e5\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u5e76\u5207\u6362\u5230master\u5206\u652f repo start\u662f\u5bf9 git checkout -b \u8fd9\u4e2a\u547d\u4ee4\u7684\u5c01\u88c5\uff0c\u5c06\u6240\u6709\u4ed3\u5e93\u7684\u5206\u652f\u90fd\u5207\u6362\u5230master\uff0c master\u662f\u5206\u652f\u540d","title":"2.2 \u64cd\u4f5c\u5206\u652f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/GIT/GIT%20%E5%91%BD%E4%BB%A4/Git%20branch%20%26%26%20Git%20checkout/#23-\u67e5\u770b\u5e2e\u52a9","text":"git checkout --help \u5f53\u7136 git checkout \u8fd8\u6709\u8bb8\u591a\u547d\u4ee4, \u4f46\u8fd9\u4e9b\u5df2\u7ecf\u80fd\u6ee1\u8db3\u6211\u4eec\u65e5\u5e38\u5f00\u53d1\u6240\u9700\u4e86\u3002","title":"2.3 \u67e5\u770b\u5e2e\u52a9"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/","text":"I. K8S \u6982\u89c8 \u00b6 K8S \u7684\u67b6\u6784\u3001\u4f5c\u7528\u548c\u76ee\u7684\u3002\u9700\u8981\u9996\u5148\u5bf9 K8S \u6574\u4f53\u6709\u6240\u4e86\u89e3\u3002 1.1 K8S \u662f\u4ec0\u4e48\uff1f \u00b6 Kubernetes is an open source system for managing containerized applications across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications. \u7528\u4e8e\u81ea\u52a8\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u201c\u5bb9\u5668\u5316\uff08containerized\uff09\u5e94\u7528\u7a0b\u5e8f\u201d\u7684\u5f00\u6e90\u7cfb\u7edf\u3002 \u63d2\u4e00\u53e5\u9898\u5916\u8bdd\uff1a \u4e3a\u4ec0\u4e48 Kubernetes \u8981\u53eb Kubernetes \u5462\uff1f\u7ef4\u57fa\u767e\u79d1\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff08\u8001\u7f8e\u5bf9\u661f\u9645\u662f\u771f\u7684\u75f4\u8ff7\uff09\uff1a Kubernetes\uff08\u5728\u5e0c\u814a\u8bed\u610f\u4e3a\u201c\u8235\u624b\u201d\u6216\u201c\u9a7e\u9a76\u5458\u201d\uff09\u7531 Joe Beda\u3001Brendan Burns \u548c Craig McLuckie \u521b\u7acb\uff0c\u5e76\u7531\u5176\u4ed6\u8c37\u6b4c\u5de5\u7a0b\u5e08\uff0c\u5305\u62ec Brian Grant \u548c Tim Hockin \u7b49\u8fdb\u884c\u52a0\u76df\u521b\u4f5c\uff0c\u5e76\u7531\u8c37\u6b4c\u5728 2014 \u5e74\u9996\u6b21\u5bf9\u5916\u5ba3\u5e03 \u3002\u8be5\u7cfb\u7edf\u7684\u5f00\u53d1\u548c\u8bbe\u8ba1\u90fd\u6df1\u53d7\u8c37\u6b4c\u7684 Borg \u7cfb\u7edf\u7684\u5f71\u54cd\uff0c\u5176\u8bb8\u591a\u9876\u7ea7\u8d21\u732e\u8005\u4e4b\u524d\u4e5f\u662f Borg \u7cfb\u7edf\u7684\u5f00\u53d1\u8005\u3002\u5728\u8c37\u6b4c\u5185\u90e8\uff0cKubernetes \u7684\u539f\u59cb\u4ee3\u53f7\u66fe\u7ecf\u662f Seven\uff0c\u5373\u661f\u9645\u8ff7\u822a\u4e2d\u7684 Borg\uff08\u535a\u683c\u4eba\uff09\u3002Kubernetes \u6807\u8bc6\u4e2d\u8235\u8f6e\u6709\u4e03\u4e2a\u8f6e\u8f90\u5c31\u662f\u5bf9\u8be5\u9879\u76ee\u4ee3\u53f7\u7684\u81f4\u610f\u3002 \u4e3a\u4ec0\u4e48 Kubernetes \u7684\u7f29\u5199\u662f K8S \u5462\uff1f\u6211\u4e2a\u4eba\u8d5e\u540c Why Kubernetes is Abbreviated k8s \u4e2d\u8bf4\u7684\u89c2\u70b9\u201c\u561b\uff0c\u5199\u5168\u79f0\u4e5f\u592a\u7d2f\u4e86\u5427\uff0c\u4e0d\u5982\u6574\u4e2a\u7f29\u5199\u201d\u3002\u5176\u5b9e\u53ea\u4fdd\u7559\u9996\u4f4d\u5b57\u7b26\uff0c\u7528\u5177\u4f53\u6570\u5b57\u6765\u66ff\u4ee3\u7701\u7565\u7684\u5b57\u7b26\u4e2a\u6570\u7684\u505a\u6cd5\uff0c\u8fd8\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u3002 1.2 \u4e3a\u4ec0\u4e48\u662f K8S\uff1f \u00b6 \u4f20\u7edf\u540e\u7aef\u90e8\u7f72\u65b9\u6cd5\u7684\u4e0d\u8db3 \u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002 \u8bd5\u60f3\u4e0b\u4f20\u7edf\u7684\u540e\u7aef\u90e8\u7f72\u529e\u6cd5 \uff1a\u628a\u7a0b\u5e8f\u5305\uff08\u5305\u62ec\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\uff09\u653e\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u63a5\u7740\u8fd0\u884c\u542f\u52a8\u811a\u672c\u628a\u7a0b\u5e8f\u8dd1\u8d77\u6765\uff0c\u540c\u65f6\u542f\u52a8\u5b88\u62a4\u811a\u672c\u5b9a\u671f\u68c0\u67e5\u7a0b\u5e8f\u8fd0\u884c\u72b6\u6001\u3001\u5fc5\u8981\u7684\u8bdd\u91cd\u65b0\u62c9\u8d77\u7a0b\u5e8f\u3002 \u6709\u95ee\u9898\u5417\uff1f\u663e\u7136\u6709\uff01\u6700\u5927\u7684\u4e00\u4e2a\u95ee\u9898\u5728\u4e8e\uff1a\u5982\u679c\u670d\u52a1\u7684\u8bf7\u6c42\u91cf\u4e0a\u6765\uff0c\u5df2\u90e8\u7f72\u7684\u670d\u52a1\u54cd\u5e94\u4e0d\u8fc7\u6765\u600e\u4e48\u529e\uff1f\u4f20\u7edf\u7684\u505a\u6cd5\u5f80\u5f80\u662f\uff0c\u5982\u679c\u8bf7\u6c42\u91cf\u3001\u5185\u5b58\u3001CPU \u8d85\u8fc7\u9608\u503c\u505a\u4e86\u544a\u8b66\uff0c\u8fd0\u7ef4\u9a6c\u4e0a\u518d\u52a0\u51e0\u53f0\u670d\u52a1\u5668\uff0c\u90e8\u7f72\u597d\u670d\u52a1\u4e4b\u540e\uff0c\u63a5\u5165\u8d1f\u8f7d\u5747\u8861\u6765\u5206\u62c5\u5df2\u6709\u670d\u52a1\u7684\u538b\u529b\u3002 \u95ee\u9898\u51fa\u73b0\u4e86\uff1a\u4ece\u76d1\u63a7\u544a\u8b66\u5230\u90e8\u7f72\u670d\u52a1\uff0c\u4e2d\u95f4\u9700\u8981\u4eba\u529b\u4ecb\u5165\uff01\u90a3\u4e48\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u81ea\u52a8\u5b8c\u6210\u670d\u52a1\u7684\u90e8\u7f72\u3001\u66f4\u65b0\u3001\u5378\u8f7d\u548c\u6269\u5bb9\u3001\u7f29\u5bb9\u5462\uff1f \u8fd9\uff0c\u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002 1.3 K8S \u600e\u4e48\u505a\uff1f \u00b6 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 K8S \u7684\u6838\u5fc3\u529f\u80fd\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668\u5316\u7a0b\u5e8f\u3002 \u90a3\u4e48 K8S \u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u8fd9\u91cc\uff0c\u6211\u4eec\u4ece\u5b8f\u89c2\u67b6\u6784\u4e0a\u6765\u5b66\u4e60 K8S \u7684\u8bbe\u8ba1\u601d\u60f3\u3002\u9996\u5148\u770b\u4e0b\u56fe\uff0c\u56fe\u7247\u6765\u81ea\u6587\u7ae0 Components of Kubernetes Architecture\uff1a 1.3.1 Overview \u00b6 K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09 Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09\uff0c\u5373\u6709 Master \u8282\u70b9\u8d1f\u8d23\u6838\u5fc3\u7684\u8c03\u5ea6\u3001\u7ba1\u7406\u548c\u8fd0\u7ef4\uff0cSlave \u8282\u70b9\u5219\u5728\u6267\u884c\u7528\u6237\u7684\u7a0b\u5e8f\u3002\u4f46\u662f\u5728 K8S \u4e2d\uff0c\u4e3b\u8282\u70b9\u4e00\u822c\u88ab\u79f0\u4e3a Master Node \u6216\u8005 Head Node\uff08\u672c\u6587\u91c7\u7528 Master Node \u79f0\u547c\u65b9\u5f0f\uff09\uff0c\u800c\u4ece\u8282\u70b9\u5219\u88ab\u79f0\u4e3a Worker Node \u6216\u8005 Node\uff08\u672c\u6587\u91c7\u7528 Worker Node \u79f0\u547c\u65b9\u5f0f\uff09\u3002 \u8981\u6ce8\u610f\u4e00\u70b9\uff1a Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 \uff0c \u6bcf\u4e2a Node \u90fd\u5bf9\u5e94\u4e86\u4e00\u53f0\u5b9e\u4f53\u670d\u52a1\u5668\uff08\u867d\u7136 Master Node \u53ef\u4ee5\u548c\u5176\u4e2d\u4e00\u4e2a Worker Node \u5b89\u88c5\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u4f46\u662f\u5efa\u8bae Master Node \u5355\u72ec\u90e8\u7f72\uff09\uff0c \u6240\u6709 Master Node \u548c Worker Node \u7ec4\u6210\u4e86 K8S \u96c6\u7fa4\uff0c\u540c\u4e00\u4e2a\u96c6\u7fa4\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Master Node \u548c Worker Node\u3002 1.3.2 Master Node \u7ec4\u4ef6 \u00b6 API Server\uff1a K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1 Scheduler\uff1a K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668 Controller Manager\uff1a K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668 etcd\uff1a K8S \u7684\u5b58\u50a8\u670d\u52a1 \u9996\u5148\u6765\u770b Master Node \u90fd\u6709\u54ea\u4e9b\u7ec4\u4ef6\uff1a API Server\u3002 K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1\u3002 API Server \u8d1f\u8d23\u63a5\u6536 K8S \u6240\u6709\u8bf7\u6c42\uff08\u6765\u81ea UI \u754c\u9762\u6216\u8005 CLI \u547d\u4ee4\u884c\u5de5\u5177\uff09\uff0c\u7136\u540e\uff0cAPI Server \u6839\u636e\u7528\u6237\u7684\u5177\u4f53\u8bf7\u6c42\uff0c\u53bb\u901a\u77e5\u5176\u4ed6\u7ec4\u4ef6\u5e72\u6d3b\u3002 Scheduler\u3002 K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668\u3002 \u5f53\u7528\u6237\u8981\u90e8\u7f72\u670d\u52a1\u65f6\uff0cScheduler \u4f1a\u9009\u62e9\u6700\u5408\u9002\u7684 Worker Node\uff08\u670d\u52a1\u5668\uff09\u6765\u90e8\u7f72\u3002 Controller Manager\u3002 K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668\u3002Controller Manager \u6709\u5f88\u591a\u5177\u4f53\u7684 Controller\uff0c\u5728\u6587\u7ae0 Components of Kubernetes Architecture \u4e2d\u63d0\u5230\u7684\u6709 Node Controller \u3001 Service Controller \u3001 Volume Controller \u7b49\u3002Controller \u8d1f\u8d23\u76d1\u63a7\u548c\u8c03\u6574\u5728 Worker Node \u4e0a\u90e8\u7f72\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u7528\u6237\u8981\u6c42 A \u670d\u52a1\u90e8\u7f72 2 \u4e2a\u526f\u672c\uff0c\u90a3\u4e48\u5f53\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u6302\u4e86\u7684\u65f6\u5019\uff0cController \u4f1a\u9a6c\u4e0a\u8c03\u6574\uff0c\u8ba9 Scheduler \u518d\u9009\u62e9\u4e00\u4e2a Worker Node \u91cd\u65b0\u90e8\u7f72\u670d\u52a1\u3002 etcd\u3002 K8S \u7684\u5b58\u50a8\u670d\u52a1\u3002etcd \u5b58\u50a8\u4e86 K8S \u7684\u5173\u952e\u914d\u7f6e\u548c\u7528\u6237\u914d\u7f6e\uff0c K8S \u4e2d\u4ec5 API Server \u624d\u5177\u5907\u8bfb\u5199\u6743\u9650\uff0c\u5176\u4ed6\u7ec4\u4ef6\u5fc5\u987b\u901a\u8fc7 API Server \u7684\u63a5\u53e3\u624d\u80fd\u8bfb\u5199\u6570\u636e\uff08\u89c1 Kubernetes Works Like an Operating System\uff09\u3002 1.3.3 Worker Node \u7ec4\u4ef6 \u00b6 Kublet : Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668 Kube-Proxy: K8S \u7684\u7f51\u7edc\u4ee3\u7406 Container Runtime: Worker Node \u7684\u8fd0\u884c\u73af\u5883 Logging Layer: K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668 Add-Ones: K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6 \u63a5\u7740\u6765\u770b**Worker Node **\u7684\u7ec4\u4ef6\uff0c\u7b14\u8005\u66f4\u8d5e\u540c HOW DO APPLICATIONS RUN ON KUBERNETES \u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u7ec4\u4ef6\u4ecb\u7ecd\uff1a Kubelet \u3002Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668\u3002Kubelet \u662f Master Node \u5b89\u63d2\u5728 Worker Node \u4e0a\u7684\u201c\u773c\u7ebf\u201d\uff0c\u5b83\u4f1a\u5b9a\u671f\u5411 Worker Node \u6c47\u62a5\u81ea\u5df1 Node \u4e0a\u8fd0\u884c\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u5e76\u63a5\u53d7\u6765\u81ea Master Node \u7684\u6307\u793a\u91c7\u53d6\u8c03\u6574\u63aa\u65bd\u3002 Kube-Proxy \u3002K8S \u7684\u7f51\u7edc\u4ee3\u7406\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Network-Proxy \u53ef\u80fd\u66f4\u9002\u5408\uff1fKube-Proxy \u8d1f\u8d23 Node \u5728 K8S \u7684\u7f51\u7edc\u901a\u8baf\u3001\u4ee5\u53ca\u5bf9\u5916\u90e8\u7f51\u7edc\u6d41\u91cf\u7684\u8d1f\u8f7d\u5747\u8861\u3002 Container Runtime \u3002Worker Node \u7684\u8fd0\u884c\u73af\u5883\u3002\u5373\u5b89\u88c5\u4e86\u5bb9\u5668\u5316\u6240\u9700\u7684\u8f6f\u4ef6\u73af\u5883\u786e\u4fdd\u5bb9\u5668\u5316\u7a0b\u5e8f\u80fd\u591f\u8dd1\u8d77\u6765\uff0c\u6bd4\u5982 Docker Engine\u3002\u5927\u767d\u8bdd\u5c31\u662f\u5e2e\u5fd9\u88c5\u597d\u4e86 Docker \u8fd0\u884c\u73af\u5883\u3002 Logging Layer \u3002K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Monitor \u53ef\u80fd\u66f4\u5408\u9002\uff1fLogging Layer \u8d1f\u8d23\u91c7\u96c6 Node \u4e0a\u6240\u6709\u670d\u52a1\u7684 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u76d1\u63a7\u9879\u4fe1\u606f\u3002 Add-Ons \u3002K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6\u3002\u6709\u4e9b\u6587\u7ae0\u8ba4\u4e3a Worker Node \u53ea\u6709\u4e09\u5927\u7ec4\u4ef6\uff0c\u4e0d\u5305\u542b Add-On\uff0c\u4f46\u7b14\u8005\u8ba4\u4e3a K8S \u7cfb\u7edf\u63d0\u4f9b\u4e86 Add-On \u673a\u5236\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u6269\u5c55\u66f4\u591a\u5b9a\u5236\u5316\u529f\u80fd\uff0c\u662f\u5f88\u4e0d\u9519\u7684\u4eae\u70b9\u3002 1.3.4 \u603b\u7ed3 \u00b6 \u603b\u7ed3\u6765\u770b\uff0c K8S \u7684 Master Node \u5177\u5907\uff1a \u8bf7\u6c42\u5165\u53e3\u7ba1\u7406\uff08API Server\uff09 Worker Node \u8c03\u5ea6\uff08Scheduler\uff09 \u76d1\u63a7\u548c\u81ea\u52a8\u8c03\u8282\uff08Controller Manager\uff09 \u4ee5\u53ca\u5b58\u50a8\u529f\u80fd\uff08etcd\uff09 \u800c K8S \u7684 Worker Node \u5177\u5907\uff1a \u72b6\u6001\u548c\u76d1\u63a7\u6536\u96c6\uff08Kubelet\uff09 \u7f51\u7edc\u548c\u8d1f\u8f7d\u5747\u8861\uff08Kube-Proxy\uff09 \u4fdd\u969c\u5bb9\u5668\u5316\u8fd0\u884c\u73af\u5883\uff08Container Runtime\uff09 \u4ee5\u53ca\u5b9a\u5236\u5316\u529f\u80fd\uff08Add-Ons\uff09 \u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5bf9 K8S \u7a76\u7adf\u662f\u505a\u4ec0\u4e48\u7684\uff0c\u6709\u4e86\u5927\u6982\u8ba4\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u518d\u6765\u8ba4\u8bc6\u4e0b**K8S \u7684 Deployment\u3001Pod\u3001Replica Set\u3001Service **\u7b49\uff0c\u4f46\u51e1\u8c08\u5230 K8S\uff0c\u5c31\u7ed5\u4e0d\u5f00\u8fd9\u4e9b\u540d\u8bcd\uff0c\u800c\u8fd9\u4e9b\u540d\u8bcd\u4e5f\u662f\u6700\u8ba9 K8S \u65b0\u624b\u4eec\u611f\u5230\u5934\u75bc\u3001\u56f0\u60d1\u7684\u3002 II. K8S \u91cd\u8981\u6982\u5ff5 \u00b6 2.1 Pod \u5b9e\u4f8b \u00b6 \u5b98\u65b9\u5bf9\u4e8e Pod \u7684\u89e3\u91ca\u662f\uff1a Pod \u662f\u53ef\u4ee5\u5728 Kubernetes \u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u3001\u6700\u5c0f\u7684\u53ef\u90e8\u7f72\u7684\u8ba1\u7b97\u5355\u5143 \u8fd9\u6837\u7684\u89e3\u91ca\u8fd8\u662f\u5f88\u96be\u8ba9\u4eba\u660e\u767d\u7a76\u7adf Pod \u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u5bf9\u4e8e K8S \u800c\u8a00\uff0cPod \u53ef\u4ee5\u8bf4\u662f\u6240\u6709\u5bf9\u8c61\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u4e86\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u6e05\u695a\u5730\u77e5\u9053\u201cPod \u662f\u4ec0\u4e48\u201d\uff0c\u518d\u53bb\u4e86\u89e3\u5176\u4ed6\u7684\u5bf9\u8c61\u3002 \u4ece\u5b98\u65b9\u7ed9\u51fa\u7684\u5b9a\u4e49\uff0c\u8054\u60f3\u4e0b\u201c\u6700\u5c0f\u7684 xxx \u5355\u5143\u201d\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u60f3\u5230\u672c\u79d1\u5728\u5b66\u6821\u91cc\u5b66\u4e60\u201c\u8fdb\u7a0b\u201d\u7684\u65f6\u5019\uff0c\u6559\u79d1\u4e66\u4e0a\u6709\u4e00\u6bb5\u7c7b\u4f3c\u7684\u63cf\u8ff0\uff1a\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff1b\u8fd8\u6709\u201d\u7ebf\u7a0b\u201c\u7684\u63cf\u8ff0\u662f\uff1aCPU \u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f \u201d\u6700\u5c0f xx \u5355\u4f4d\u201c\u8981\u4e48\u5c31\u662f\u4e8b\u7269\u7684\u8861\u91cf\u6807\u51c6\u5355\u4f4d\uff0c\u8981\u4e48\u5c31\u662f\u8d44\u6e90\u7684\u95ed\u5305\u3001\u96c6\u5408\u3002 \u524d\u8005\u6bd4\u5982\u957f\u5ea6\u7c73\u3001\u65f6\u95f4\u79d2\uff1b\u540e\u8005\u6bd4\u5982\u4e00\u4e2a\u201d\u8fdb\u7a0b\u201c\u662f\u5b58\u50a8\u548c\u8ba1\u7b97\u7684\u95ed\u5305\uff0c\u4e00\u4e2a\u201d\u7ebf\u7a0b\u201c\u662f CPU \u8d44\u6e90\uff08\u5305\u62ec\u5bc4\u5b58\u5668\u3001ALU \u7b49\uff09\u7684\u95ed\u5305\u3002 \u540c\u6837\u7684\uff0cPod \u5c31\u662f K8S \u4e2d\u4e00\u4e2a\u670d\u52a1\u7684\u95ed\u5305\u3002 \u8fd9\u4e48\u8bf4\u7684\u597d\u50cf\u8fd8\u662f\u6709\u70b9\u7384\u4e4e\uff0c\u66f4\u52a0\u4e91\u91cc\u96fe\u91cc\u4e86\u3002 \u7b80\u5355\u6765\u8bf4\uff0cPod \u53ef\u4ee5\u88ab\u7406\u89e3\u6210\u4e00\u7fa4\u53ef\u4ee5\u5171\u4eab\u7f51\u7edc\u3001\u5b58\u50a8\u548c\u8ba1\u7b97\u8d44\u6e90\u7684\u5bb9\u5668\u5316\u670d\u52a1\u7684\u96c6\u5408\u3002 \u518d\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0c\u5728\u540c\u4e00\u4e2a Pod \u91cc\u7684\u51e0\u4e2a Docker \u670d\u52a1/\u7a0b\u5e8f\uff0c\u597d\u50cf\u88ab\u90e8\u7f72\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u5171\u7528 Pod \u91cc\u7684\u5b58\u50a8\u8d44\u6e90\uff08\u8fd9\u91cc\u662f\u6307 Docker \u53ef\u4ee5\u6302\u8f7d Pod \u5185\u7684\u6570\u636e\u5377\uff0c\u6570\u636e\u5377\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff09\u3002 \u7b14\u8005\u603b\u7ed3 Pod \u5982\u4e0b\u56fe\uff0c\u53ef\u4ee5\u770b\u5230\uff1a \u540c\u4e00\u4e2a Pod \u4e4b\u95f4\u7684 Container \u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u6302\u8f7d Pod \u5185\u6240\u6709\u7684\u6570\u636e\u5377\uff1b\u4f46\u662f\u4e0d\u540c\u7684 Pod \u4e4b\u95f4\u7684 Container \u4e0d\u80fd\u7528 localhost \u8bbf\u95ee\uff0c\u4e5f\u4e0d\u80fd\u6302\u8f7d\u5176\u4ed6 Pod \u7684\u6570\u636e\u5377\u3002 \u5bf9 Pod \u6709\u76f4\u89c2\u7684\u8ba4\u8bc6\u4e4b\u540e\uff0c\u63a5\u7740\u6765\u770b K8S \u4e2d Pod \u7a76\u7adf\u957f\u4ec0\u4e48\u6837\u5b50\uff0c\u5177\u4f53\u5305\u62ec\u54ea\u4e9b\u8d44\u6e90\uff1f K8S \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u901a\u8fc7 yaml \u6765\u8868\u793a\uff0c\u7b14\u8005\u4ece\u5b98\u65b9\u7f51\u7ad9\u6458\u5f55\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Pod \u7684 yaml\uff1a \u770b\u4e0d\u61c2\u4e0d\u5fc5\u614c\u5f20\uff0c\u4e14\u8010\u5fc3\u542c\u4e0b\u9762\u7684\u89e3\u91ca\uff1a apiVersion : \u8bb0\u5f55 K8S \u7684 API Server \u7248\u672c\uff0c\u73b0\u5728\u770b\u5230\u7684\u90fd\u662f v1\uff0c\u7528\u6237\u4e0d\u7528\u7ba1\u3002 kind : \u8bb0\u5f55\u8be5 yaml \u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u8fd9\u662f\u4e00\u4efd Pod \u7684 yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48\u503c\u5185\u5bb9\u5c31\u662f Pod\u3002 metadata :\u8bb0\u5f55\u4e86 Pod \u81ea\u8eab\u7684\u5143\u6570\u636e\uff0c\u6bd4\u5982\u8fd9\u4e2a Pod \u7684\u540d\u5b57\u3001\u8fd9\u4e2a Pod \u5c5e\u4e8e\u54ea\u4e2a namespace\uff08\u547d\u540d\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c \u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u5185\u7684\u5bf9\u8c61\u4e92\u76f8\u53ef\u89c1 \u201d\uff09\u3002 spec \u8bb0\u5f55\u4e86 Pod \u5185\u90e8\u6240\u6709\u7684\u8d44\u6e90\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u770b\u61c2\u8fd9\u4e2a\u5f88\u91cd\u8981\uff1a containers \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u5bb9\u5668\u4fe1\u606f\uff0ccontainers \u5305\u62ec\u4e86\uff1a name : \u5bb9\u5668\u540d image :\u5bb9\u5668\u7684\u955c\u50cf\u5730\u5740 resources : \u5bb9\u5668\u9700\u8981\u7684 CPU\u3001\u5185\u5b58\u3001GPU \u7b49\u8d44\u6e90 command : \u5bb9\u5668\u7684\u5165\u53e3\u547d\u4ee4 args : \u5bb9\u5668\u7684\u5165\u53e3\u53c2\u6570 volumeMounts \u5bb9\u5668\u8981\u6302\u8f7d\u7684 Pod \u6570\u636e\u5377\u7b49\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u8ff0\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662f\u542f\u52a8\u5bb9\u5668\u7684\u5fc5\u8981\u548c\u5fc5\u9700\u7684\u4fe1\u606f\u3002 volumes \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u6570\u636e\u5377\u4fe1\u606f\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u4ecb\u7ecd Pod \u7684\u6570\u636e\u5377\u3002 2.2 Volume \u6570\u636e\u5377 \u00b6 \u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377 volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c \u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 volumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002 K8S \u652f\u6301\u5f88\u591a\u7c7b\u578b\u7684 volume \u6570\u636e\u5377\u6302\u8f7d\uff0c\u5177\u4f53\u8bf7\u53c2\u89c1 K8S \u5377\u3002 \u524d\u6587\u5c31\u201c\u5982\u4f55\u7406\u89e3 volume\u201d\u63d0\u5230\uff1a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff0c\u6b64\u5916\uff0c\u6709\u4e00\u70b9\u53ef\u4ee5\u5e2e\u52a9\u7406\u89e3\uff1a \u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u5176\u5b9e\uff0c\u5355\u5355\u5c31 Volume \u6765\u8bf4\uff0c\u4e0d\u96be\u7406\u89e3\u3002\u4f46\u662f\u4e0a\u9762\u8fd8\u770b\u5230\u4e86 volumeMounts\uff0c\u8fd9\u4fe9\u662f\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f volume \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377\uff1b\u800c volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c\u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 \u4f46\u662f\uff0cvolumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002 2.3 Container \u5bb9\u5668 \u00b6 \u672c\u6587\u4e2d\u63d0\u5230\u7684\u955c\u50cf Image\u3001\u5bb9\u5668 Container\uff0c\u90fd\u6307\u4ee3\u4e86 Pod \u4e0b\u7684\u4e00\u4e2a container\u3002\u5173\u4e8e K8S \u4e2d\u7684\u5bb9\u5668\uff0c\u5728 2.1Pod \u7ae0\u8282\u90fd\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff0c\u8fd9\u91cc\u65e0\u975e\u518d\u5570\u55e6\u4e00\u53e5\uff1a\u4e00\u4e2a Pod \u5185\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5668 container\u3002 \u5728 Pod \u4e2d\uff0c\u5bb9\u5668\u4e5f\u6709\u5206\u7c7b\uff0c\u5bf9\u8fd9\u4e2a\u611f\u5174\u8da3\u7684\u540c\u5b66\u6b22\u8fce\u81ea\u884c\u9605\u8bfb\u66f4\u591a\u8d44\u6599\uff1a \u6807\u51c6\u5bb9\u5668 Application Container\u3002 \u521d\u59cb\u5316\u5bb9\u5668 Init Container\u3002 \u8fb9\u8f66\u5bb9\u5668 Sidecar Container\u3002 \u4e34\u65f6\u5bb9\u5668 Ephemeral Container\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u90e8\u7f72\u7684\u5927\u591a\u662f\u6807\u51c6\u5bb9\u5668\uff08 Application Container\uff09\u3002 2.4 Deployment \u548c ReplicaSet\uff08\u7b80\u79f0 RS\uff09 \u00b6 Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1 Deployment \uff1aDeployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 ReplicaSets\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u9664\u4e86 Pod \u4e4b\u5916\uff0cK8S \u4e2d\u6700\u5e38\u542c\u5230\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5c31\u662f Deployment \u4e86\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f Deployment \u5462\uff1f\u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8981\u547d\u7684\u89e3\u91ca\uff1a \u4e00\u4e2a Deployment \u63a7\u5236\u5668\u4e3a Pods \u548c ReplicaSets \u63d0\u4f9b\u58f0\u660e\u5f0f\u7684\u66f4\u65b0\u80fd\u529b\u3002 \u4f60\u8d1f\u8d23\u63cf\u8ff0 Deployment \u4e2d\u7684 \u76ee\u6807\u72b6\u6001\uff0c\u800c Deployment \u63a7\u5236\u5668\u4ee5\u53d7\u63a7\u901f\u7387\u66f4\u6539\u5b9e\u9645\u72b6\u6001\uff0c \u4f7f\u5176\u53d8\u4e3a\u671f\u671b\u72b6\u6001\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49 Deployment \u4ee5\u521b\u5efa\u65b0\u7684 ReplicaSet\uff0c\u6216\u5220\u9664\u73b0\u6709 Deployment\uff0c\u5e76\u901a\u8fc7\u65b0\u7684 Deployment \u6536\u517b\u5176\u8d44\u6e90\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a Deployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 \u54ce\uff0c\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0cDeployment \u5c31\u662f\u5305\u5de5\u5934\uff0c\u4e3b\u8981\u8d1f\u8d23\u76d1\u7763\u5e95\u4e0b\u7684\u5de5\u4eba Pod \u5e72\u6d3b\uff0c\u786e\u4fdd\u6bcf\u65f6\u6bcf\u523b\u6709\u7528\u6237\u8981\u6c42\u6570\u91cf\u7684 Pod \u5728\u5de5\u4f5c\u3002\u5982\u679c\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u5de5\u4eba Pod \u4e0d\u884c\u4e86\uff0c\u5c31\u8d76\u7d27\u65b0\u62c9\u4e00\u4e2a Pod \u8fc7\u6765\u66ff\u6362\u5b83\u3002 \u65b0\u7684\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u90a3\u4ec0\u4e48\u662f ReplicaSets \u5462\uff1f ReplicaSet \u7684\u76ee\u7684\u662f\u7ef4\u62a4\u4e00\u7ec4\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684 Pod \u526f\u672c\u7684\u7a33\u5b9a\u96c6\u5408\u3002 \u56e0\u6b64\uff0c\u5b83\u901a\u5e38\u7528\u6765\u4fdd\u8bc1\u7ed9\u5b9a\u6570\u91cf\u7684\u3001\u5b8c\u5168\u76f8\u540c\u7684 Pod \u7684\u53ef\u7528\u6027\u3002 \u518d\u6765\u7ffb\u8bd1\u4e0b\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u4f46\u662f\uff0cReplicaSet \u53d7\u63a7\u4e8e Deployment\u3002\u5f62\u8c61\u6765\u8bf4\uff0cReplicaSet \u5c31\u662f\u603b\u5305\u5de5\u5934\u624b\u4e0b\u7684\u5c0f\u5305\u5de5\u5934\u3002 \u4f46\u662f\uff0c\u4ece K8S \u4f7f\u7528\u8005\u89d2\u5ea6\u6765\u770b\uff0c\u7528\u6237\u4f1a\u76f4\u63a5\u64cd\u4f5c Deployment \u90e8\u7f72\u670d\u52a1\uff0c\u800c\u5f53 Deployment \u88ab\u90e8\u7f72\u7684\u65f6\u5019\uff0cK8S \u4f1a\u81ea\u52a8\u751f\u6210\u8981\u6c42\u7684 ReplicaSet \u548c Pod\u3002 \u5728 K8S \u5b98\u65b9\u6587\u6863\u4e2d\u4e5f\u6307\u51fa\u7528\u6237\u53ea\u9700\u8981\u5173\u5fc3 Deployment \u800c\u4e0d\u64cd\u5fc3 ReplicaSet\uff1a This actually means that you may never need to manipulate ReplicaSet objects: use a Deployment instead, and define your application in the spec section.\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u60a8\u53ef\u80fd\u6c38\u8fdc\u4e0d\u9700\u8981\u64cd\u4f5c ReplicaSet \u5bf9\u8c61\uff1a\u76f4\u63a5\u4f7f\u7528 Deployments \u5e76\u5728\u89c4\u8303\u90e8\u5206\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u3002 \u8865\u5145\u8bf4\u660e\uff1a\u5728 K8S \u4e2d\u8fd8\u6709\u4e00\u4e2a\u5bf9\u8c61 --- ReplicationController\uff08\u7b80\u79f0 RC\uff09\uff0c\u5b98\u65b9\u6587\u6863\u5bf9\u5b83\u7684\u5b9a\u4e49\u662f\uff1a ReplicationController \u786e\u4fdd\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u6709\u7279\u5b9a\u6570\u91cf\u7684 Pod \u526f\u672c\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cReplicationController \u786e\u4fdd\u4e00\u4e2a Pod \u6216\u4e00\u7ec4\u540c\u7c7b\u7684 Pod \u603b\u662f\u53ef\u7528\u7684\u3002 \u600e\u4e48\u6837\uff0c\u548c ReplicaSet \u662f\u4e0d\u662f\u5f88\u76f8\u8fd1\uff1f\u5728 Deployments, ReplicaSets, and pods \u6559\u7a0b\u4e2d\u8bf4\u201cReplicationController \u662f ReplicaSet \u7684\u524d\u8eab\u201d\uff0c\u5b98\u65b9\u4e5f\u63a8\u8350\u7528 Deployment \u53d6\u4ee3 ReplicationController \u6765\u90e8\u7f72\u670d\u52a1\u3002 2.5 Service \u548c Ingress \u00b6 \u5410\u69fd\u4e0b K8S \u7684\u6982\u5ff5/\u5bf9\u8c61/\u8d44\u6e90\u662f\u771f\u7684\u591a\u554a\uff01\u524d\u6587\u4ecb\u7ecd\u7684 Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1\uff1b \u90a3\u4e48\uff0c Service \u548c Ingress \u5219\u8d1f\u8d23\u7ba1\u63a7 Pod \u7f51\u7edc\u670d\u52a1\u3002 K8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c \u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u5b98\u65b9\u6587\u6863\u4e2d Service \u7684\u5b9a\u4e49\uff1a \u5c06\u8fd0\u884c\u5728\u4e00\u7ec4 Pods \u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u4e3a\u7f51\u7edc\u670d\u52a1\u7684\u62bd\u8c61\u65b9\u6cd5\u3002 \u4f7f\u7528 Kubernetes\uff0c\u60a8\u65e0\u9700\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\u4f7f\u7528\u4e0d\u719f\u6089\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002 Kubernetes \u4e3a Pods \u63d0\u4f9b\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u5e76\u4e3a\u4e00\u7ec4 Pod \u63d0\u4f9b\u76f8\u540c\u7684 DNS \u540d\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u3002 \u7ffb\u8bd1\u4e0b\uff1aK8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c\u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002 \u4e3a\u4ec0\u4e48\u8981 Service \u5462\uff1f \u00b6 \u79c1\u4ee5\u4e3a\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b98\u65b9\u6587\u6863\u8bb2\u89e3\u5730\u975e\u5e38\u6e05\u695a\uff1a Kubernetes Pod \u662f\u6709\u751f\u547d\u5468\u671f\u7684\u3002 \u5b83\u4eec\u53ef\u4ee5\u88ab\u521b\u5efa\uff0c\u800c\u4e14\u9500\u6bc1\u4e4b\u540e\u4e0d\u4f1a\u518d\u542f\u52a8\u3002 \u5982\u679c\u60a8\u4f7f\u7528 Deployment \u6765\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u5b83\u53ef\u4ee5\u52a8\u6001\u521b\u5efa\u548c\u9500\u6bc1 Pod\u3002 \u6bcf\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u4f46\u662f\u5728 Deployment \u4e2d\uff0c\u5728\u540c\u4e00\u65f6\u523b\u8fd0\u884c\u7684 Pod \u96c6\u5408\u53ef\u80fd\u4e0e\u7a0d\u540e\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684 Pod \u96c6\u5408\u4e0d\u540c\u3002 \u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u4e00\u7ec4 Pod\uff08\u79f0\u4e3a\u201c\u540e\u7aef\u201d\uff09\u4e3a\u7fa4\u96c6\u5185\u7684\u5176\u4ed6 Pod\uff08\u79f0\u4e3a\u201c\u524d\u7aef\u201d\uff09\u63d0\u4f9b\u529f\u80fd\uff0c \u90a3\u4e48\u524d\u7aef\u5982\u4f55\u627e\u51fa\u5e76\u8ddf\u8e2a\u8981\u8fde\u63a5\u7684 IP \u5730\u5740\uff0c\u4ee5\u4fbf\u524d\u7aef\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u91cf\u7684\u540e\u7aef\u90e8\u5206\uff1f \u8865\u5145\u8bf4\u660e\uff1aK8S \u96c6\u7fa4\u7684\u7f51\u7edc\u7ba1\u7406\u548c\u62d3\u6251\u4e5f\u6709\u7279\u522b\u7684\u8bbe\u8ba1\uff0c\u4ee5\u540e\u4f1a\u4e13\u95e8\u51fa\u4e00\u7ae0\u8282\u6765\u8be6\u7ec6\u4ecb\u7ecd K8S \u4e2d\u7684\u7f51\u7edc\u3002\u8fd9\u91cc\u9700\u8981\u6e05\u695a\u4e00\u70b9\uff1aK8S \u96c6\u7fa4\u5185\u7684\u6bcf\u4e00\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP\uff08\u662f\u4e0d\u662f\u5f88\u7c7b\u4f3c\u4e00\u4e2a Pod \u5c31\u662f\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u662f\u591a\u4e2a Pod \u5b58\u5728\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u53ea\u4e0d\u8fc7\u662f K8S \u505a\u4e86\u7f51\u7edc\u9694\u79bb\uff09\uff0c\u5728 K8S \u96c6\u7fa4\u5185\u90e8\u8fd8\u6709 DNS \u7b49\u7f51\u7edc\u670d\u52a1\uff08\u4e00\u4e2a K8S \u96c6\u7fa4\u5c31\u5982\u540c\u7ba1\u7406\u4e86\u591a\u533a\u57df\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u505a\u590d\u6742\u7684\u7f51\u7edc\u62d3\u6251\uff09\u3002 \u6b64\u5916\uff0c\u7b14\u8005\u63a8\u8350 k8s \u5916\u7f51\u5982\u4f55\u8bbf\u95ee\u4e1a\u52a1\u5e94\u7528 \u5bf9\u4e8eService\u7684\u4ecb\u7ecd\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u65b0\u624b\u800c\u8a00\uff0c\u63a8\u8350\u9605\u8bfb\u524d\u534a\u90e8\u5206\u5bf9\u4e8eservice\u7684\u4ecb\u7ecd\u5373\u53ef\uff0c\u540e\u534a\u90e8\u5206\u5c31\u592a\u590d\u6742\u4e86\u3002\u6211\u8fd9\u91cc\u505a\u4e86\u7b80\u5355\u7684\u603b\u7ed3\uff1a Service\u662fK8S\u670d\u52a1\u7684\u6838\u5fc3\uff0c\u5c4f\u853d\u4e86\u670d\u52a1\u7ec6\u8282\uff0c\u7edf\u4e00\u5bf9\u5916\u66b4\u9732\u670d\u52a1\u63a5\u53e3\uff0c\u771f\u6b63\u505a\u5230\u4e86\u201c\u5fae\u670d\u52a1\u201d\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u7684\u4e00\u4e2a\u670d\u52a1A\uff0c\u90e8\u7f72\u4e863\u4e2a\u5907\u4efd\uff0c\u4e5f\u5c31\u662f3\u4e2aPod\uff1b\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u4e00\u4e2aService\u7684\u5165\u53e3\u5c31\u53ef\u4ee5\uff0c\u800c\u4e0d\u9700\u8981\u64cd\u5fc3\u7a76\u7adf\u5e94\u8be5\u8bf7\u6c42\u54ea\u4e00\u4e2aPod\u3002\u4f18\u52bf\u975e\u5e38\u660e\u663e\uff1a\u4e00\u65b9\u9762 \u5916\u90e8\u7528\u6237\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u4e3aPod\u4e0a\u670d\u52a1\u7684\u610f\u5916\u5d29\u6e83\u3001K8S\u91cd\u65b0\u62c9\u8d77Pod\u800c\u9020\u6210\u7684IP\u53d8\u66f4\uff0c\u5916\u90e8\u7528\u6237\u4e5f\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u5347\u7ea7\u3001\u53d8\u66f4\u670d\u52a1\u5e26\u6765\u7684Pod\u66ff\u6362\u800c\u9020\u6210\u7684IP\u53d8\u5316 \uff0c\u53e6\u4e00\u65b9\u9762\uff0cService\u8fd8\u53ef\u4ee5\u505a \u6d41\u91cf\u8d1f\u8f7d\u5747\u8861 \u3002 \u4f46\u662f\uff0cService \u4e3b\u8981\u8d1f\u8d23 K8S \u96c6\u7fa4\u5185\u90e8\u7684\u7f51\u7edc\u62d3\u6251\u3002\u90a3\u4e48\u96c6\u7fa4\u5916\u90e8\u600e\u4e48\u8bbf\u95ee\u96c6\u7fa4\u5185\u90e8\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981 Ingress \u4e86\uff0c\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u89e3\u91ca\u662f\uff1a Ingress \u662f\u5bf9\u96c6\u7fa4\u4e2d\u670d\u52a1\u7684\u5916\u90e8\u8bbf\u95ee\u8fdb\u884c\u7ba1\u7406\u7684 API \u5bf9\u8c61\uff0c\u5178\u578b\u7684\u8bbf\u95ee\u65b9\u5f0f\u662f HTTP\u3002 Ingress \u53ef\u4ee5\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001SSL \u7ec8\u7ed3\u548c\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u6258\u7ba1\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1aIngress \u662f\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u63a5\u5165\u5c42\uff0c\u590d\u6742\u96c6\u7fa4\u5185\u5916\u901a\u8baf\u3002 2.6 namespace \u547d\u540d\u7a7a\u95f4 \u00b6 namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u548c\u524d\u6587\u4ecb\u7ecd\u7684\u6240\u6709\u7684\u6982\u5ff5\u90fd\u4e0d\u4e00\u6837\uff0cnamespace \u8ddf Pod \u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u800c\u662f K8S \u53e6\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5bf9\u8c61\u3002\u6216\u8005\u8bf4\uff0c\u524d\u6587\u63d0\u5230\u7684\u6982\u5ff5\u90fd\u662f\u4e3a\u4e86\u670d\u52a1 Pod \u7684\uff0c\u800c namespace \u5219\u662f\u4e3a\u4e86\u670d\u52a1\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u3002 \u90a3\u4e48\uff0cnamespace \u662f\u4ec0\u4e48\u5462\uff1f \u4e0a\u5b98\u65b9\u6587\u6863\u5b9a\u4e49\uff1a Kubernetes \u652f\u6301\u591a\u4e2a\u865a\u62df\u96c6\u7fa4\uff0c\u5b83\u4eec\u5e95\u5c42\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u96c6\u7fa4\u3002 \u8fd9\u4e9b\u865a\u62df\u96c6\u7fa4\u88ab\u79f0\u4e3a\u540d\u5b57\u7a7a\u95f4\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u6bd4\u5982\u6211\u6709 2 \u4e2a\u4e1a\u52a1 A \u548c B\uff0c\u90a3\u4e48\u6211\u53ef\u4ee5\u521b\u5efa ns-a \u548c ns-b \u5206\u522b\u90e8\u7f72\u4e1a\u52a1 A \u548c B \u7684\u670d\u52a1\uff0c\u5982\u5728 ns-a \u4e2d\u90e8\u7f72\u4e86\u4e00\u4e2a deployment \uff0c\u540d\u5b57\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello a\u201d\uff1b\u5728 ns-b \u4e2d\u4e5f\u90e8\u7f72\u4e86\u4e00\u4e2a deployment\uff0c\u540d\u5b57\u6070\u5de7\u4e5f\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello b\u201d \uff08\u8981\u77e5\u9053\uff0c\u5728\u540c\u4e00\u4e2a namespace \u4e0b deployment \u4e0d\u80fd\u540c\u540d\uff1b\u4f46\u662f\u4e0d\u540c namespace \u4e4b\u95f4\u6ca1\u6709\u5f71\u54cd\uff09 \u3002\u524d\u6587\u63d0\u5230\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u90fd\u662f\u5728 namespace \u4e0b\u7684\uff1b\u5f53\u7136\uff0c\u4e5f\u6709\u4e00\u4e9b\u5bf9\u8c61\u662f\u4e0d\u96b6\u5c5e\u4e8e namespace \u7684\uff0c\u800c\u662f\u5728 K8S \u96c6\u7fa4\u5185\u5168\u5c40\u53ef\u89c1\u7684\uff0c\u5b98\u65b9\u6587\u6863\u63d0\u5230\u7684\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u6765\u67e5\u770b\uff0c\u5177\u4f53\u547d\u4ee4\u7684\u4f7f\u7528\u529e\u6cd5\uff0c\u7b14\u8005\u4f1a\u51fa\u540e\u7eed\u7684\u5b9e\u6218\u6587\u7ae0\u6765\u4ecb\u7ecd\uff0c\u5148\u8d34\u4e0b\u547d\u4ee4\uff1a Bash 1 2 3 4 5 # \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = true # \u4e0d\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = false \u5728 namespace \u4e0b\u7684\u5bf9\u8c61\u6709\uff08\u90e8\u5206\uff09\uff1a 2.7 \u5176\u4ed6 \u00b6 K8S \u7684\u5bf9\u8c61\u5b9e\u5728\u592a\u591a\u4e86\uff0c2.1-2.6 \u4ecb\u7ecd\u7684\u662f\u5728\u5b9e\u9645\u4f7f\u7528 K8S \u90e8\u7f72\u670d\u52a1\u6700\u5e38\u89c1\u7684\u3002\u5176\u4ed6\u7684\u8fd8\u6709 Job\u3001CronJob \u7b49\u7b49\uff0c\u5728\u5bf9 K8S \u6709\u4e86\u6bd4\u8f83\u6e05\u695a\u7684\u8ba4\u77e5\u4e4b\u540e\uff0c\u518d\u53bb\u5b66\u4e60\u66f4\u591a\u7684 K8S \u5bf9\u8c61\uff0c\u4e0d\u662f\u96be\u4e8b\u3002 \u5199\u5728\u540e\u9762 \u00b6 \u672c\u6587\u662f K8S \u7cfb\u5217\u6587\u7ae0\u7b2c\u4e00\u7bc7\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5bf9 K8S \u4e0d\u4e86\u89e3\u7684\u65b0\u624b\u5feb\u901f\u4e86\u89e3 K8S\u3002\u5982\u679c\u6587\u7ae0\u4e2d\u6709\u7eb0\u6f0f\uff0c\u975e\u5e38\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u6307\u51fa\uff1b\u6709\u7406\u89e3\u9519\u8bef\u7684\u5730\u65b9\uff0c\u66f4\u662f\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u544a\u77e5\u3002 \u7b14\u8005\u4e00\u8fb9\u5199\u6587\u7ae0\uff0c\u4e00\u8fb9\u67e5\u9605\u548c\u6574\u7406 K8S \u8d44\u6599\uff0c\u8fc7\u7a0b\u4e2d\u8d8a\u53d1\u611f\u89c9 K8S \u67b6\u6784\u7684\u5b8c\u5907\u3001\u8bbe\u8ba1\u7684\u7cbe\u5999\uff0c\u662f\u503c\u5f97\u6df1\u5165\u7814\u7a76\u7684\uff0cK8S \u5927\u53d7\u6b22\u8fce\u662f\u6709\u9053\u7406\u7684\uff01\u518d\u6b21\u611f\u53f9\u4e0b\u3002","title":"I. K8S \u6982\u89c8"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#i-k8s-\u6982\u89c8","text":"K8S \u7684\u67b6\u6784\u3001\u4f5c\u7528\u548c\u76ee\u7684\u3002\u9700\u8981\u9996\u5148\u5bf9 K8S \u6574\u4f53\u6709\u6240\u4e86\u89e3\u3002","title":"I. K8S \u6982\u89c8"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#11-k8s-\u662f\u4ec0\u4e48","text":"Kubernetes is an open source system for managing containerized applications across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications. \u7528\u4e8e\u81ea\u52a8\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u201c\u5bb9\u5668\u5316\uff08containerized\uff09\u5e94\u7528\u7a0b\u5e8f\u201d\u7684\u5f00\u6e90\u7cfb\u7edf\u3002 \u63d2\u4e00\u53e5\u9898\u5916\u8bdd\uff1a \u4e3a\u4ec0\u4e48 Kubernetes \u8981\u53eb Kubernetes \u5462\uff1f\u7ef4\u57fa\u767e\u79d1\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff08\u8001\u7f8e\u5bf9\u661f\u9645\u662f\u771f\u7684\u75f4\u8ff7\uff09\uff1a Kubernetes\uff08\u5728\u5e0c\u814a\u8bed\u610f\u4e3a\u201c\u8235\u624b\u201d\u6216\u201c\u9a7e\u9a76\u5458\u201d\uff09\u7531 Joe Beda\u3001Brendan Burns \u548c Craig McLuckie \u521b\u7acb\uff0c\u5e76\u7531\u5176\u4ed6\u8c37\u6b4c\u5de5\u7a0b\u5e08\uff0c\u5305\u62ec Brian Grant \u548c Tim Hockin \u7b49\u8fdb\u884c\u52a0\u76df\u521b\u4f5c\uff0c\u5e76\u7531\u8c37\u6b4c\u5728 2014 \u5e74\u9996\u6b21\u5bf9\u5916\u5ba3\u5e03 \u3002\u8be5\u7cfb\u7edf\u7684\u5f00\u53d1\u548c\u8bbe\u8ba1\u90fd\u6df1\u53d7\u8c37\u6b4c\u7684 Borg \u7cfb\u7edf\u7684\u5f71\u54cd\uff0c\u5176\u8bb8\u591a\u9876\u7ea7\u8d21\u732e\u8005\u4e4b\u524d\u4e5f\u662f Borg \u7cfb\u7edf\u7684\u5f00\u53d1\u8005\u3002\u5728\u8c37\u6b4c\u5185\u90e8\uff0cKubernetes \u7684\u539f\u59cb\u4ee3\u53f7\u66fe\u7ecf\u662f Seven\uff0c\u5373\u661f\u9645\u8ff7\u822a\u4e2d\u7684 Borg\uff08\u535a\u683c\u4eba\uff09\u3002Kubernetes \u6807\u8bc6\u4e2d\u8235\u8f6e\u6709\u4e03\u4e2a\u8f6e\u8f90\u5c31\u662f\u5bf9\u8be5\u9879\u76ee\u4ee3\u53f7\u7684\u81f4\u610f\u3002 \u4e3a\u4ec0\u4e48 Kubernetes \u7684\u7f29\u5199\u662f K8S \u5462\uff1f\u6211\u4e2a\u4eba\u8d5e\u540c Why Kubernetes is Abbreviated k8s \u4e2d\u8bf4\u7684\u89c2\u70b9\u201c\u561b\uff0c\u5199\u5168\u79f0\u4e5f\u592a\u7d2f\u4e86\u5427\uff0c\u4e0d\u5982\u6574\u4e2a\u7f29\u5199\u201d\u3002\u5176\u5b9e\u53ea\u4fdd\u7559\u9996\u4f4d\u5b57\u7b26\uff0c\u7528\u5177\u4f53\u6570\u5b57\u6765\u66ff\u4ee3\u7701\u7565\u7684\u5b57\u7b26\u4e2a\u6570\u7684\u505a\u6cd5\uff0c\u8fd8\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u3002","title":"1.1 K8S \u662f\u4ec0\u4e48\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#12-\u4e3a\u4ec0\u4e48\u662f-k8s","text":"\u4f20\u7edf\u540e\u7aef\u90e8\u7f72\u65b9\u6cd5\u7684\u4e0d\u8db3 \u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002 \u8bd5\u60f3\u4e0b\u4f20\u7edf\u7684\u540e\u7aef\u90e8\u7f72\u529e\u6cd5 \uff1a\u628a\u7a0b\u5e8f\u5305\uff08\u5305\u62ec\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\uff09\u653e\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u63a5\u7740\u8fd0\u884c\u542f\u52a8\u811a\u672c\u628a\u7a0b\u5e8f\u8dd1\u8d77\u6765\uff0c\u540c\u65f6\u542f\u52a8\u5b88\u62a4\u811a\u672c\u5b9a\u671f\u68c0\u67e5\u7a0b\u5e8f\u8fd0\u884c\u72b6\u6001\u3001\u5fc5\u8981\u7684\u8bdd\u91cd\u65b0\u62c9\u8d77\u7a0b\u5e8f\u3002 \u6709\u95ee\u9898\u5417\uff1f\u663e\u7136\u6709\uff01\u6700\u5927\u7684\u4e00\u4e2a\u95ee\u9898\u5728\u4e8e\uff1a\u5982\u679c\u670d\u52a1\u7684\u8bf7\u6c42\u91cf\u4e0a\u6765\uff0c\u5df2\u90e8\u7f72\u7684\u670d\u52a1\u54cd\u5e94\u4e0d\u8fc7\u6765\u600e\u4e48\u529e\uff1f\u4f20\u7edf\u7684\u505a\u6cd5\u5f80\u5f80\u662f\uff0c\u5982\u679c\u8bf7\u6c42\u91cf\u3001\u5185\u5b58\u3001CPU \u8d85\u8fc7\u9608\u503c\u505a\u4e86\u544a\u8b66\uff0c\u8fd0\u7ef4\u9a6c\u4e0a\u518d\u52a0\u51e0\u53f0\u670d\u52a1\u5668\uff0c\u90e8\u7f72\u597d\u670d\u52a1\u4e4b\u540e\uff0c\u63a5\u5165\u8d1f\u8f7d\u5747\u8861\u6765\u5206\u62c5\u5df2\u6709\u670d\u52a1\u7684\u538b\u529b\u3002 \u95ee\u9898\u51fa\u73b0\u4e86\uff1a\u4ece\u76d1\u63a7\u544a\u8b66\u5230\u90e8\u7f72\u670d\u52a1\uff0c\u4e2d\u95f4\u9700\u8981\u4eba\u529b\u4ecb\u5165\uff01\u90a3\u4e48\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u81ea\u52a8\u5b8c\u6210\u670d\u52a1\u7684\u90e8\u7f72\u3001\u66f4\u65b0\u3001\u5378\u8f7d\u548c\u6269\u5bb9\u3001\u7f29\u5bb9\u5462\uff1f \u8fd9\uff0c\u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002","title":"1.2 \u4e3a\u4ec0\u4e48\u662f K8S\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#13-k8s-\u600e\u4e48\u505a","text":"\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 K8S \u7684\u6838\u5fc3\u529f\u80fd\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668\u5316\u7a0b\u5e8f\u3002 \u90a3\u4e48 K8S \u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u8fd9\u91cc\uff0c\u6211\u4eec\u4ece\u5b8f\u89c2\u67b6\u6784\u4e0a\u6765\u5b66\u4e60 K8S \u7684\u8bbe\u8ba1\u601d\u60f3\u3002\u9996\u5148\u770b\u4e0b\u56fe\uff0c\u56fe\u7247\u6765\u81ea\u6587\u7ae0 Components of Kubernetes Architecture\uff1a","title":"1.3 K8S \u600e\u4e48\u505a\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#131-overview","text":"K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09 Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09\uff0c\u5373\u6709 Master \u8282\u70b9\u8d1f\u8d23\u6838\u5fc3\u7684\u8c03\u5ea6\u3001\u7ba1\u7406\u548c\u8fd0\u7ef4\uff0cSlave \u8282\u70b9\u5219\u5728\u6267\u884c\u7528\u6237\u7684\u7a0b\u5e8f\u3002\u4f46\u662f\u5728 K8S \u4e2d\uff0c\u4e3b\u8282\u70b9\u4e00\u822c\u88ab\u79f0\u4e3a Master Node \u6216\u8005 Head Node\uff08\u672c\u6587\u91c7\u7528 Master Node \u79f0\u547c\u65b9\u5f0f\uff09\uff0c\u800c\u4ece\u8282\u70b9\u5219\u88ab\u79f0\u4e3a Worker Node \u6216\u8005 Node\uff08\u672c\u6587\u91c7\u7528 Worker Node \u79f0\u547c\u65b9\u5f0f\uff09\u3002 \u8981\u6ce8\u610f\u4e00\u70b9\uff1a Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 \uff0c \u6bcf\u4e2a Node \u90fd\u5bf9\u5e94\u4e86\u4e00\u53f0\u5b9e\u4f53\u670d\u52a1\u5668\uff08\u867d\u7136 Master Node \u53ef\u4ee5\u548c\u5176\u4e2d\u4e00\u4e2a Worker Node \u5b89\u88c5\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u4f46\u662f\u5efa\u8bae Master Node \u5355\u72ec\u90e8\u7f72\uff09\uff0c \u6240\u6709 Master Node \u548c Worker Node \u7ec4\u6210\u4e86 K8S \u96c6\u7fa4\uff0c\u540c\u4e00\u4e2a\u96c6\u7fa4\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Master Node \u548c Worker Node\u3002","title":"1.3.1 Overview"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#132-master-node-\u7ec4\u4ef6","text":"API Server\uff1a K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1 Scheduler\uff1a K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668 Controller Manager\uff1a K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668 etcd\uff1a K8S \u7684\u5b58\u50a8\u670d\u52a1 \u9996\u5148\u6765\u770b Master Node \u90fd\u6709\u54ea\u4e9b\u7ec4\u4ef6\uff1a API Server\u3002 K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1\u3002 API Server \u8d1f\u8d23\u63a5\u6536 K8S \u6240\u6709\u8bf7\u6c42\uff08\u6765\u81ea UI \u754c\u9762\u6216\u8005 CLI \u547d\u4ee4\u884c\u5de5\u5177\uff09\uff0c\u7136\u540e\uff0cAPI Server \u6839\u636e\u7528\u6237\u7684\u5177\u4f53\u8bf7\u6c42\uff0c\u53bb\u901a\u77e5\u5176\u4ed6\u7ec4\u4ef6\u5e72\u6d3b\u3002 Scheduler\u3002 K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668\u3002 \u5f53\u7528\u6237\u8981\u90e8\u7f72\u670d\u52a1\u65f6\uff0cScheduler \u4f1a\u9009\u62e9\u6700\u5408\u9002\u7684 Worker Node\uff08\u670d\u52a1\u5668\uff09\u6765\u90e8\u7f72\u3002 Controller Manager\u3002 K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668\u3002Controller Manager \u6709\u5f88\u591a\u5177\u4f53\u7684 Controller\uff0c\u5728\u6587\u7ae0 Components of Kubernetes Architecture \u4e2d\u63d0\u5230\u7684\u6709 Node Controller \u3001 Service Controller \u3001 Volume Controller \u7b49\u3002Controller \u8d1f\u8d23\u76d1\u63a7\u548c\u8c03\u6574\u5728 Worker Node \u4e0a\u90e8\u7f72\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u7528\u6237\u8981\u6c42 A \u670d\u52a1\u90e8\u7f72 2 \u4e2a\u526f\u672c\uff0c\u90a3\u4e48\u5f53\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u6302\u4e86\u7684\u65f6\u5019\uff0cController \u4f1a\u9a6c\u4e0a\u8c03\u6574\uff0c\u8ba9 Scheduler \u518d\u9009\u62e9\u4e00\u4e2a Worker Node \u91cd\u65b0\u90e8\u7f72\u670d\u52a1\u3002 etcd\u3002 K8S \u7684\u5b58\u50a8\u670d\u52a1\u3002etcd \u5b58\u50a8\u4e86 K8S \u7684\u5173\u952e\u914d\u7f6e\u548c\u7528\u6237\u914d\u7f6e\uff0c K8S \u4e2d\u4ec5 API Server \u624d\u5177\u5907\u8bfb\u5199\u6743\u9650\uff0c\u5176\u4ed6\u7ec4\u4ef6\u5fc5\u987b\u901a\u8fc7 API Server \u7684\u63a5\u53e3\u624d\u80fd\u8bfb\u5199\u6570\u636e\uff08\u89c1 Kubernetes Works Like an Operating System\uff09\u3002","title":"1.3.2 Master Node \u7ec4\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#133-worker-node-\u7ec4\u4ef6","text":"Kublet : Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668 Kube-Proxy: K8S \u7684\u7f51\u7edc\u4ee3\u7406 Container Runtime: Worker Node \u7684\u8fd0\u884c\u73af\u5883 Logging Layer: K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668 Add-Ones: K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6 \u63a5\u7740\u6765\u770b**Worker Node **\u7684\u7ec4\u4ef6\uff0c\u7b14\u8005\u66f4\u8d5e\u540c HOW DO APPLICATIONS RUN ON KUBERNETES \u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u7ec4\u4ef6\u4ecb\u7ecd\uff1a Kubelet \u3002Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668\u3002Kubelet \u662f Master Node \u5b89\u63d2\u5728 Worker Node \u4e0a\u7684\u201c\u773c\u7ebf\u201d\uff0c\u5b83\u4f1a\u5b9a\u671f\u5411 Worker Node \u6c47\u62a5\u81ea\u5df1 Node \u4e0a\u8fd0\u884c\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u5e76\u63a5\u53d7\u6765\u81ea Master Node \u7684\u6307\u793a\u91c7\u53d6\u8c03\u6574\u63aa\u65bd\u3002 Kube-Proxy \u3002K8S \u7684\u7f51\u7edc\u4ee3\u7406\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Network-Proxy \u53ef\u80fd\u66f4\u9002\u5408\uff1fKube-Proxy \u8d1f\u8d23 Node \u5728 K8S \u7684\u7f51\u7edc\u901a\u8baf\u3001\u4ee5\u53ca\u5bf9\u5916\u90e8\u7f51\u7edc\u6d41\u91cf\u7684\u8d1f\u8f7d\u5747\u8861\u3002 Container Runtime \u3002Worker Node \u7684\u8fd0\u884c\u73af\u5883\u3002\u5373\u5b89\u88c5\u4e86\u5bb9\u5668\u5316\u6240\u9700\u7684\u8f6f\u4ef6\u73af\u5883\u786e\u4fdd\u5bb9\u5668\u5316\u7a0b\u5e8f\u80fd\u591f\u8dd1\u8d77\u6765\uff0c\u6bd4\u5982 Docker Engine\u3002\u5927\u767d\u8bdd\u5c31\u662f\u5e2e\u5fd9\u88c5\u597d\u4e86 Docker \u8fd0\u884c\u73af\u5883\u3002 Logging Layer \u3002K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Monitor \u53ef\u80fd\u66f4\u5408\u9002\uff1fLogging Layer \u8d1f\u8d23\u91c7\u96c6 Node \u4e0a\u6240\u6709\u670d\u52a1\u7684 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u76d1\u63a7\u9879\u4fe1\u606f\u3002 Add-Ons \u3002K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6\u3002\u6709\u4e9b\u6587\u7ae0\u8ba4\u4e3a Worker Node \u53ea\u6709\u4e09\u5927\u7ec4\u4ef6\uff0c\u4e0d\u5305\u542b Add-On\uff0c\u4f46\u7b14\u8005\u8ba4\u4e3a K8S \u7cfb\u7edf\u63d0\u4f9b\u4e86 Add-On \u673a\u5236\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u6269\u5c55\u66f4\u591a\u5b9a\u5236\u5316\u529f\u80fd\uff0c\u662f\u5f88\u4e0d\u9519\u7684\u4eae\u70b9\u3002","title":"1.3.3 Worker Node \u7ec4\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#134-\u603b\u7ed3","text":"\u603b\u7ed3\u6765\u770b\uff0c K8S \u7684 Master Node \u5177\u5907\uff1a \u8bf7\u6c42\u5165\u53e3\u7ba1\u7406\uff08API Server\uff09 Worker Node \u8c03\u5ea6\uff08Scheduler\uff09 \u76d1\u63a7\u548c\u81ea\u52a8\u8c03\u8282\uff08Controller Manager\uff09 \u4ee5\u53ca\u5b58\u50a8\u529f\u80fd\uff08etcd\uff09 \u800c K8S \u7684 Worker Node \u5177\u5907\uff1a \u72b6\u6001\u548c\u76d1\u63a7\u6536\u96c6\uff08Kubelet\uff09 \u7f51\u7edc\u548c\u8d1f\u8f7d\u5747\u8861\uff08Kube-Proxy\uff09 \u4fdd\u969c\u5bb9\u5668\u5316\u8fd0\u884c\u73af\u5883\uff08Container Runtime\uff09 \u4ee5\u53ca\u5b9a\u5236\u5316\u529f\u80fd\uff08Add-Ons\uff09 \u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5bf9 K8S \u7a76\u7adf\u662f\u505a\u4ec0\u4e48\u7684\uff0c\u6709\u4e86\u5927\u6982\u8ba4\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u518d\u6765\u8ba4\u8bc6\u4e0b**K8S \u7684 Deployment\u3001Pod\u3001Replica Set\u3001Service **\u7b49\uff0c\u4f46\u51e1\u8c08\u5230 K8S\uff0c\u5c31\u7ed5\u4e0d\u5f00\u8fd9\u4e9b\u540d\u8bcd\uff0c\u800c\u8fd9\u4e9b\u540d\u8bcd\u4e5f\u662f\u6700\u8ba9 K8S \u65b0\u624b\u4eec\u611f\u5230\u5934\u75bc\u3001\u56f0\u60d1\u7684\u3002","title":"1.3.4 \u603b\u7ed3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#ii-k8s-\u91cd\u8981\u6982\u5ff5","text":"","title":"II. K8S \u91cd\u8981\u6982\u5ff5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#21-pod-\u5b9e\u4f8b","text":"\u5b98\u65b9\u5bf9\u4e8e Pod \u7684\u89e3\u91ca\u662f\uff1a Pod \u662f\u53ef\u4ee5\u5728 Kubernetes \u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u3001\u6700\u5c0f\u7684\u53ef\u90e8\u7f72\u7684\u8ba1\u7b97\u5355\u5143 \u8fd9\u6837\u7684\u89e3\u91ca\u8fd8\u662f\u5f88\u96be\u8ba9\u4eba\u660e\u767d\u7a76\u7adf Pod \u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u5bf9\u4e8e K8S \u800c\u8a00\uff0cPod \u53ef\u4ee5\u8bf4\u662f\u6240\u6709\u5bf9\u8c61\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u4e86\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u6e05\u695a\u5730\u77e5\u9053\u201cPod \u662f\u4ec0\u4e48\u201d\uff0c\u518d\u53bb\u4e86\u89e3\u5176\u4ed6\u7684\u5bf9\u8c61\u3002 \u4ece\u5b98\u65b9\u7ed9\u51fa\u7684\u5b9a\u4e49\uff0c\u8054\u60f3\u4e0b\u201c\u6700\u5c0f\u7684 xxx \u5355\u5143\u201d\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u60f3\u5230\u672c\u79d1\u5728\u5b66\u6821\u91cc\u5b66\u4e60\u201c\u8fdb\u7a0b\u201d\u7684\u65f6\u5019\uff0c\u6559\u79d1\u4e66\u4e0a\u6709\u4e00\u6bb5\u7c7b\u4f3c\u7684\u63cf\u8ff0\uff1a\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff1b\u8fd8\u6709\u201d\u7ebf\u7a0b\u201c\u7684\u63cf\u8ff0\u662f\uff1aCPU \u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f \u201d\u6700\u5c0f xx \u5355\u4f4d\u201c\u8981\u4e48\u5c31\u662f\u4e8b\u7269\u7684\u8861\u91cf\u6807\u51c6\u5355\u4f4d\uff0c\u8981\u4e48\u5c31\u662f\u8d44\u6e90\u7684\u95ed\u5305\u3001\u96c6\u5408\u3002 \u524d\u8005\u6bd4\u5982\u957f\u5ea6\u7c73\u3001\u65f6\u95f4\u79d2\uff1b\u540e\u8005\u6bd4\u5982\u4e00\u4e2a\u201d\u8fdb\u7a0b\u201c\u662f\u5b58\u50a8\u548c\u8ba1\u7b97\u7684\u95ed\u5305\uff0c\u4e00\u4e2a\u201d\u7ebf\u7a0b\u201c\u662f CPU \u8d44\u6e90\uff08\u5305\u62ec\u5bc4\u5b58\u5668\u3001ALU \u7b49\uff09\u7684\u95ed\u5305\u3002 \u540c\u6837\u7684\uff0cPod \u5c31\u662f K8S \u4e2d\u4e00\u4e2a\u670d\u52a1\u7684\u95ed\u5305\u3002 \u8fd9\u4e48\u8bf4\u7684\u597d\u50cf\u8fd8\u662f\u6709\u70b9\u7384\u4e4e\uff0c\u66f4\u52a0\u4e91\u91cc\u96fe\u91cc\u4e86\u3002 \u7b80\u5355\u6765\u8bf4\uff0cPod \u53ef\u4ee5\u88ab\u7406\u89e3\u6210\u4e00\u7fa4\u53ef\u4ee5\u5171\u4eab\u7f51\u7edc\u3001\u5b58\u50a8\u548c\u8ba1\u7b97\u8d44\u6e90\u7684\u5bb9\u5668\u5316\u670d\u52a1\u7684\u96c6\u5408\u3002 \u518d\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0c\u5728\u540c\u4e00\u4e2a Pod \u91cc\u7684\u51e0\u4e2a Docker \u670d\u52a1/\u7a0b\u5e8f\uff0c\u597d\u50cf\u88ab\u90e8\u7f72\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u5171\u7528 Pod \u91cc\u7684\u5b58\u50a8\u8d44\u6e90\uff08\u8fd9\u91cc\u662f\u6307 Docker \u53ef\u4ee5\u6302\u8f7d Pod \u5185\u7684\u6570\u636e\u5377\uff0c\u6570\u636e\u5377\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff09\u3002 \u7b14\u8005\u603b\u7ed3 Pod \u5982\u4e0b\u56fe\uff0c\u53ef\u4ee5\u770b\u5230\uff1a \u540c\u4e00\u4e2a Pod \u4e4b\u95f4\u7684 Container \u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u6302\u8f7d Pod \u5185\u6240\u6709\u7684\u6570\u636e\u5377\uff1b\u4f46\u662f\u4e0d\u540c\u7684 Pod \u4e4b\u95f4\u7684 Container \u4e0d\u80fd\u7528 localhost \u8bbf\u95ee\uff0c\u4e5f\u4e0d\u80fd\u6302\u8f7d\u5176\u4ed6 Pod \u7684\u6570\u636e\u5377\u3002 \u5bf9 Pod \u6709\u76f4\u89c2\u7684\u8ba4\u8bc6\u4e4b\u540e\uff0c\u63a5\u7740\u6765\u770b K8S \u4e2d Pod \u7a76\u7adf\u957f\u4ec0\u4e48\u6837\u5b50\uff0c\u5177\u4f53\u5305\u62ec\u54ea\u4e9b\u8d44\u6e90\uff1f K8S \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u901a\u8fc7 yaml \u6765\u8868\u793a\uff0c\u7b14\u8005\u4ece\u5b98\u65b9\u7f51\u7ad9\u6458\u5f55\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Pod \u7684 yaml\uff1a \u770b\u4e0d\u61c2\u4e0d\u5fc5\u614c\u5f20\uff0c\u4e14\u8010\u5fc3\u542c\u4e0b\u9762\u7684\u89e3\u91ca\uff1a apiVersion : \u8bb0\u5f55 K8S \u7684 API Server \u7248\u672c\uff0c\u73b0\u5728\u770b\u5230\u7684\u90fd\u662f v1\uff0c\u7528\u6237\u4e0d\u7528\u7ba1\u3002 kind : \u8bb0\u5f55\u8be5 yaml \u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u8fd9\u662f\u4e00\u4efd Pod \u7684 yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48\u503c\u5185\u5bb9\u5c31\u662f Pod\u3002 metadata :\u8bb0\u5f55\u4e86 Pod \u81ea\u8eab\u7684\u5143\u6570\u636e\uff0c\u6bd4\u5982\u8fd9\u4e2a Pod \u7684\u540d\u5b57\u3001\u8fd9\u4e2a Pod \u5c5e\u4e8e\u54ea\u4e2a namespace\uff08\u547d\u540d\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c \u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u5185\u7684\u5bf9\u8c61\u4e92\u76f8\u53ef\u89c1 \u201d\uff09\u3002 spec \u8bb0\u5f55\u4e86 Pod \u5185\u90e8\u6240\u6709\u7684\u8d44\u6e90\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u770b\u61c2\u8fd9\u4e2a\u5f88\u91cd\u8981\uff1a containers \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u5bb9\u5668\u4fe1\u606f\uff0ccontainers \u5305\u62ec\u4e86\uff1a name : \u5bb9\u5668\u540d image :\u5bb9\u5668\u7684\u955c\u50cf\u5730\u5740 resources : \u5bb9\u5668\u9700\u8981\u7684 CPU\u3001\u5185\u5b58\u3001GPU \u7b49\u8d44\u6e90 command : \u5bb9\u5668\u7684\u5165\u53e3\u547d\u4ee4 args : \u5bb9\u5668\u7684\u5165\u53e3\u53c2\u6570 volumeMounts \u5bb9\u5668\u8981\u6302\u8f7d\u7684 Pod \u6570\u636e\u5377\u7b49\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u8ff0\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662f\u542f\u52a8\u5bb9\u5668\u7684\u5fc5\u8981\u548c\u5fc5\u9700\u7684\u4fe1\u606f\u3002 volumes \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u6570\u636e\u5377\u4fe1\u606f\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u4ecb\u7ecd Pod \u7684\u6570\u636e\u5377\u3002","title":"2.1 Pod \u5b9e\u4f8b"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#22-volume-\u6570\u636e\u5377","text":"\u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377 volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c \u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 volumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002 K8S \u652f\u6301\u5f88\u591a\u7c7b\u578b\u7684 volume \u6570\u636e\u5377\u6302\u8f7d\uff0c\u5177\u4f53\u8bf7\u53c2\u89c1 K8S \u5377\u3002 \u524d\u6587\u5c31\u201c\u5982\u4f55\u7406\u89e3 volume\u201d\u63d0\u5230\uff1a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff0c\u6b64\u5916\uff0c\u6709\u4e00\u70b9\u53ef\u4ee5\u5e2e\u52a9\u7406\u89e3\uff1a \u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u5176\u5b9e\uff0c\u5355\u5355\u5c31 Volume \u6765\u8bf4\uff0c\u4e0d\u96be\u7406\u89e3\u3002\u4f46\u662f\u4e0a\u9762\u8fd8\u770b\u5230\u4e86 volumeMounts\uff0c\u8fd9\u4fe9\u662f\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f volume \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377\uff1b\u800c volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c\u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 \u4f46\u662f\uff0cvolumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002","title":"2.2 Volume \u6570\u636e\u5377"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#23-container-\u5bb9\u5668","text":"\u672c\u6587\u4e2d\u63d0\u5230\u7684\u955c\u50cf Image\u3001\u5bb9\u5668 Container\uff0c\u90fd\u6307\u4ee3\u4e86 Pod \u4e0b\u7684\u4e00\u4e2a container\u3002\u5173\u4e8e K8S \u4e2d\u7684\u5bb9\u5668\uff0c\u5728 2.1Pod \u7ae0\u8282\u90fd\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff0c\u8fd9\u91cc\u65e0\u975e\u518d\u5570\u55e6\u4e00\u53e5\uff1a\u4e00\u4e2a Pod \u5185\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5668 container\u3002 \u5728 Pod \u4e2d\uff0c\u5bb9\u5668\u4e5f\u6709\u5206\u7c7b\uff0c\u5bf9\u8fd9\u4e2a\u611f\u5174\u8da3\u7684\u540c\u5b66\u6b22\u8fce\u81ea\u884c\u9605\u8bfb\u66f4\u591a\u8d44\u6599\uff1a \u6807\u51c6\u5bb9\u5668 Application Container\u3002 \u521d\u59cb\u5316\u5bb9\u5668 Init Container\u3002 \u8fb9\u8f66\u5bb9\u5668 Sidecar Container\u3002 \u4e34\u65f6\u5bb9\u5668 Ephemeral Container\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u90e8\u7f72\u7684\u5927\u591a\u662f\u6807\u51c6\u5bb9\u5668\uff08 Application Container\uff09\u3002","title":"2.3 Container \u5bb9\u5668"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#24-deployment-\u548c-replicaset\u7b80\u79f0-rs","text":"Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1 Deployment \uff1aDeployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 ReplicaSets\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u9664\u4e86 Pod \u4e4b\u5916\uff0cK8S \u4e2d\u6700\u5e38\u542c\u5230\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5c31\u662f Deployment \u4e86\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f Deployment \u5462\uff1f\u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8981\u547d\u7684\u89e3\u91ca\uff1a \u4e00\u4e2a Deployment \u63a7\u5236\u5668\u4e3a Pods \u548c ReplicaSets \u63d0\u4f9b\u58f0\u660e\u5f0f\u7684\u66f4\u65b0\u80fd\u529b\u3002 \u4f60\u8d1f\u8d23\u63cf\u8ff0 Deployment \u4e2d\u7684 \u76ee\u6807\u72b6\u6001\uff0c\u800c Deployment \u63a7\u5236\u5668\u4ee5\u53d7\u63a7\u901f\u7387\u66f4\u6539\u5b9e\u9645\u72b6\u6001\uff0c \u4f7f\u5176\u53d8\u4e3a\u671f\u671b\u72b6\u6001\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49 Deployment \u4ee5\u521b\u5efa\u65b0\u7684 ReplicaSet\uff0c\u6216\u5220\u9664\u73b0\u6709 Deployment\uff0c\u5e76\u901a\u8fc7\u65b0\u7684 Deployment \u6536\u517b\u5176\u8d44\u6e90\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a Deployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 \u54ce\uff0c\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0cDeployment \u5c31\u662f\u5305\u5de5\u5934\uff0c\u4e3b\u8981\u8d1f\u8d23\u76d1\u7763\u5e95\u4e0b\u7684\u5de5\u4eba Pod \u5e72\u6d3b\uff0c\u786e\u4fdd\u6bcf\u65f6\u6bcf\u523b\u6709\u7528\u6237\u8981\u6c42\u6570\u91cf\u7684 Pod \u5728\u5de5\u4f5c\u3002\u5982\u679c\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u5de5\u4eba Pod \u4e0d\u884c\u4e86\uff0c\u5c31\u8d76\u7d27\u65b0\u62c9\u4e00\u4e2a Pod \u8fc7\u6765\u66ff\u6362\u5b83\u3002 \u65b0\u7684\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u90a3\u4ec0\u4e48\u662f ReplicaSets \u5462\uff1f ReplicaSet \u7684\u76ee\u7684\u662f\u7ef4\u62a4\u4e00\u7ec4\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684 Pod \u526f\u672c\u7684\u7a33\u5b9a\u96c6\u5408\u3002 \u56e0\u6b64\uff0c\u5b83\u901a\u5e38\u7528\u6765\u4fdd\u8bc1\u7ed9\u5b9a\u6570\u91cf\u7684\u3001\u5b8c\u5168\u76f8\u540c\u7684 Pod \u7684\u53ef\u7528\u6027\u3002 \u518d\u6765\u7ffb\u8bd1\u4e0b\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u4f46\u662f\uff0cReplicaSet \u53d7\u63a7\u4e8e Deployment\u3002\u5f62\u8c61\u6765\u8bf4\uff0cReplicaSet \u5c31\u662f\u603b\u5305\u5de5\u5934\u624b\u4e0b\u7684\u5c0f\u5305\u5de5\u5934\u3002 \u4f46\u662f\uff0c\u4ece K8S \u4f7f\u7528\u8005\u89d2\u5ea6\u6765\u770b\uff0c\u7528\u6237\u4f1a\u76f4\u63a5\u64cd\u4f5c Deployment \u90e8\u7f72\u670d\u52a1\uff0c\u800c\u5f53 Deployment \u88ab\u90e8\u7f72\u7684\u65f6\u5019\uff0cK8S \u4f1a\u81ea\u52a8\u751f\u6210\u8981\u6c42\u7684 ReplicaSet \u548c Pod\u3002 \u5728 K8S \u5b98\u65b9\u6587\u6863\u4e2d\u4e5f\u6307\u51fa\u7528\u6237\u53ea\u9700\u8981\u5173\u5fc3 Deployment \u800c\u4e0d\u64cd\u5fc3 ReplicaSet\uff1a This actually means that you may never need to manipulate ReplicaSet objects: use a Deployment instead, and define your application in the spec section.\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u60a8\u53ef\u80fd\u6c38\u8fdc\u4e0d\u9700\u8981\u64cd\u4f5c ReplicaSet \u5bf9\u8c61\uff1a\u76f4\u63a5\u4f7f\u7528 Deployments \u5e76\u5728\u89c4\u8303\u90e8\u5206\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u3002 \u8865\u5145\u8bf4\u660e\uff1a\u5728 K8S \u4e2d\u8fd8\u6709\u4e00\u4e2a\u5bf9\u8c61 --- ReplicationController\uff08\u7b80\u79f0 RC\uff09\uff0c\u5b98\u65b9\u6587\u6863\u5bf9\u5b83\u7684\u5b9a\u4e49\u662f\uff1a ReplicationController \u786e\u4fdd\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u6709\u7279\u5b9a\u6570\u91cf\u7684 Pod \u526f\u672c\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cReplicationController \u786e\u4fdd\u4e00\u4e2a Pod \u6216\u4e00\u7ec4\u540c\u7c7b\u7684 Pod \u603b\u662f\u53ef\u7528\u7684\u3002 \u600e\u4e48\u6837\uff0c\u548c ReplicaSet \u662f\u4e0d\u662f\u5f88\u76f8\u8fd1\uff1f\u5728 Deployments, ReplicaSets, and pods \u6559\u7a0b\u4e2d\u8bf4\u201cReplicationController \u662f ReplicaSet \u7684\u524d\u8eab\u201d\uff0c\u5b98\u65b9\u4e5f\u63a8\u8350\u7528 Deployment \u53d6\u4ee3 ReplicationController \u6765\u90e8\u7f72\u670d\u52a1\u3002","title":"2.4 Deployment \u548c ReplicaSet\uff08\u7b80\u79f0 RS\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#25-service-\u548c-ingress","text":"\u5410\u69fd\u4e0b K8S \u7684\u6982\u5ff5/\u5bf9\u8c61/\u8d44\u6e90\u662f\u771f\u7684\u591a\u554a\uff01\u524d\u6587\u4ecb\u7ecd\u7684 Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1\uff1b \u90a3\u4e48\uff0c Service \u548c Ingress \u5219\u8d1f\u8d23\u7ba1\u63a7 Pod \u7f51\u7edc\u670d\u52a1\u3002 K8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c \u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u5b98\u65b9\u6587\u6863\u4e2d Service \u7684\u5b9a\u4e49\uff1a \u5c06\u8fd0\u884c\u5728\u4e00\u7ec4 Pods \u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u4e3a\u7f51\u7edc\u670d\u52a1\u7684\u62bd\u8c61\u65b9\u6cd5\u3002 \u4f7f\u7528 Kubernetes\uff0c\u60a8\u65e0\u9700\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\u4f7f\u7528\u4e0d\u719f\u6089\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002 Kubernetes \u4e3a Pods \u63d0\u4f9b\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u5e76\u4e3a\u4e00\u7ec4 Pod \u63d0\u4f9b\u76f8\u540c\u7684 DNS \u540d\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u3002 \u7ffb\u8bd1\u4e0b\uff1aK8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c\u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002","title":"2.5 Service \u548c Ingress"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#\u4e3a\u4ec0\u4e48\u8981-service-\u5462","text":"\u79c1\u4ee5\u4e3a\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b98\u65b9\u6587\u6863\u8bb2\u89e3\u5730\u975e\u5e38\u6e05\u695a\uff1a Kubernetes Pod \u662f\u6709\u751f\u547d\u5468\u671f\u7684\u3002 \u5b83\u4eec\u53ef\u4ee5\u88ab\u521b\u5efa\uff0c\u800c\u4e14\u9500\u6bc1\u4e4b\u540e\u4e0d\u4f1a\u518d\u542f\u52a8\u3002 \u5982\u679c\u60a8\u4f7f\u7528 Deployment \u6765\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u5b83\u53ef\u4ee5\u52a8\u6001\u521b\u5efa\u548c\u9500\u6bc1 Pod\u3002 \u6bcf\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u4f46\u662f\u5728 Deployment \u4e2d\uff0c\u5728\u540c\u4e00\u65f6\u523b\u8fd0\u884c\u7684 Pod \u96c6\u5408\u53ef\u80fd\u4e0e\u7a0d\u540e\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684 Pod \u96c6\u5408\u4e0d\u540c\u3002 \u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u4e00\u7ec4 Pod\uff08\u79f0\u4e3a\u201c\u540e\u7aef\u201d\uff09\u4e3a\u7fa4\u96c6\u5185\u7684\u5176\u4ed6 Pod\uff08\u79f0\u4e3a\u201c\u524d\u7aef\u201d\uff09\u63d0\u4f9b\u529f\u80fd\uff0c \u90a3\u4e48\u524d\u7aef\u5982\u4f55\u627e\u51fa\u5e76\u8ddf\u8e2a\u8981\u8fde\u63a5\u7684 IP \u5730\u5740\uff0c\u4ee5\u4fbf\u524d\u7aef\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u91cf\u7684\u540e\u7aef\u90e8\u5206\uff1f \u8865\u5145\u8bf4\u660e\uff1aK8S \u96c6\u7fa4\u7684\u7f51\u7edc\u7ba1\u7406\u548c\u62d3\u6251\u4e5f\u6709\u7279\u522b\u7684\u8bbe\u8ba1\uff0c\u4ee5\u540e\u4f1a\u4e13\u95e8\u51fa\u4e00\u7ae0\u8282\u6765\u8be6\u7ec6\u4ecb\u7ecd K8S \u4e2d\u7684\u7f51\u7edc\u3002\u8fd9\u91cc\u9700\u8981\u6e05\u695a\u4e00\u70b9\uff1aK8S \u96c6\u7fa4\u5185\u7684\u6bcf\u4e00\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP\uff08\u662f\u4e0d\u662f\u5f88\u7c7b\u4f3c\u4e00\u4e2a Pod \u5c31\u662f\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u662f\u591a\u4e2a Pod \u5b58\u5728\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u53ea\u4e0d\u8fc7\u662f K8S \u505a\u4e86\u7f51\u7edc\u9694\u79bb\uff09\uff0c\u5728 K8S \u96c6\u7fa4\u5185\u90e8\u8fd8\u6709 DNS \u7b49\u7f51\u7edc\u670d\u52a1\uff08\u4e00\u4e2a K8S \u96c6\u7fa4\u5c31\u5982\u540c\u7ba1\u7406\u4e86\u591a\u533a\u57df\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u505a\u590d\u6742\u7684\u7f51\u7edc\u62d3\u6251\uff09\u3002 \u6b64\u5916\uff0c\u7b14\u8005\u63a8\u8350 k8s \u5916\u7f51\u5982\u4f55\u8bbf\u95ee\u4e1a\u52a1\u5e94\u7528 \u5bf9\u4e8eService\u7684\u4ecb\u7ecd\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u65b0\u624b\u800c\u8a00\uff0c\u63a8\u8350\u9605\u8bfb\u524d\u534a\u90e8\u5206\u5bf9\u4e8eservice\u7684\u4ecb\u7ecd\u5373\u53ef\uff0c\u540e\u534a\u90e8\u5206\u5c31\u592a\u590d\u6742\u4e86\u3002\u6211\u8fd9\u91cc\u505a\u4e86\u7b80\u5355\u7684\u603b\u7ed3\uff1a Service\u662fK8S\u670d\u52a1\u7684\u6838\u5fc3\uff0c\u5c4f\u853d\u4e86\u670d\u52a1\u7ec6\u8282\uff0c\u7edf\u4e00\u5bf9\u5916\u66b4\u9732\u670d\u52a1\u63a5\u53e3\uff0c\u771f\u6b63\u505a\u5230\u4e86\u201c\u5fae\u670d\u52a1\u201d\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u7684\u4e00\u4e2a\u670d\u52a1A\uff0c\u90e8\u7f72\u4e863\u4e2a\u5907\u4efd\uff0c\u4e5f\u5c31\u662f3\u4e2aPod\uff1b\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u4e00\u4e2aService\u7684\u5165\u53e3\u5c31\u53ef\u4ee5\uff0c\u800c\u4e0d\u9700\u8981\u64cd\u5fc3\u7a76\u7adf\u5e94\u8be5\u8bf7\u6c42\u54ea\u4e00\u4e2aPod\u3002\u4f18\u52bf\u975e\u5e38\u660e\u663e\uff1a\u4e00\u65b9\u9762 \u5916\u90e8\u7528\u6237\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u4e3aPod\u4e0a\u670d\u52a1\u7684\u610f\u5916\u5d29\u6e83\u3001K8S\u91cd\u65b0\u62c9\u8d77Pod\u800c\u9020\u6210\u7684IP\u53d8\u66f4\uff0c\u5916\u90e8\u7528\u6237\u4e5f\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u5347\u7ea7\u3001\u53d8\u66f4\u670d\u52a1\u5e26\u6765\u7684Pod\u66ff\u6362\u800c\u9020\u6210\u7684IP\u53d8\u5316 \uff0c\u53e6\u4e00\u65b9\u9762\uff0cService\u8fd8\u53ef\u4ee5\u505a \u6d41\u91cf\u8d1f\u8f7d\u5747\u8861 \u3002 \u4f46\u662f\uff0cService \u4e3b\u8981\u8d1f\u8d23 K8S \u96c6\u7fa4\u5185\u90e8\u7684\u7f51\u7edc\u62d3\u6251\u3002\u90a3\u4e48\u96c6\u7fa4\u5916\u90e8\u600e\u4e48\u8bbf\u95ee\u96c6\u7fa4\u5185\u90e8\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981 Ingress \u4e86\uff0c\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u89e3\u91ca\u662f\uff1a Ingress \u662f\u5bf9\u96c6\u7fa4\u4e2d\u670d\u52a1\u7684\u5916\u90e8\u8bbf\u95ee\u8fdb\u884c\u7ba1\u7406\u7684 API \u5bf9\u8c61\uff0c\u5178\u578b\u7684\u8bbf\u95ee\u65b9\u5f0f\u662f HTTP\u3002 Ingress \u53ef\u4ee5\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001SSL \u7ec8\u7ed3\u548c\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u6258\u7ba1\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1aIngress \u662f\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u63a5\u5165\u5c42\uff0c\u590d\u6742\u96c6\u7fa4\u5185\u5916\u901a\u8baf\u3002","title":"\u4e3a\u4ec0\u4e48\u8981 Service \u5462\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#26-namespace-\u547d\u540d\u7a7a\u95f4","text":"namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u548c\u524d\u6587\u4ecb\u7ecd\u7684\u6240\u6709\u7684\u6982\u5ff5\u90fd\u4e0d\u4e00\u6837\uff0cnamespace \u8ddf Pod \u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u800c\u662f K8S \u53e6\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5bf9\u8c61\u3002\u6216\u8005\u8bf4\uff0c\u524d\u6587\u63d0\u5230\u7684\u6982\u5ff5\u90fd\u662f\u4e3a\u4e86\u670d\u52a1 Pod \u7684\uff0c\u800c namespace \u5219\u662f\u4e3a\u4e86\u670d\u52a1\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u3002 \u90a3\u4e48\uff0cnamespace \u662f\u4ec0\u4e48\u5462\uff1f \u4e0a\u5b98\u65b9\u6587\u6863\u5b9a\u4e49\uff1a Kubernetes \u652f\u6301\u591a\u4e2a\u865a\u62df\u96c6\u7fa4\uff0c\u5b83\u4eec\u5e95\u5c42\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u96c6\u7fa4\u3002 \u8fd9\u4e9b\u865a\u62df\u96c6\u7fa4\u88ab\u79f0\u4e3a\u540d\u5b57\u7a7a\u95f4\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u6bd4\u5982\u6211\u6709 2 \u4e2a\u4e1a\u52a1 A \u548c B\uff0c\u90a3\u4e48\u6211\u53ef\u4ee5\u521b\u5efa ns-a \u548c ns-b \u5206\u522b\u90e8\u7f72\u4e1a\u52a1 A \u548c B \u7684\u670d\u52a1\uff0c\u5982\u5728 ns-a \u4e2d\u90e8\u7f72\u4e86\u4e00\u4e2a deployment \uff0c\u540d\u5b57\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello a\u201d\uff1b\u5728 ns-b \u4e2d\u4e5f\u90e8\u7f72\u4e86\u4e00\u4e2a deployment\uff0c\u540d\u5b57\u6070\u5de7\u4e5f\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello b\u201d \uff08\u8981\u77e5\u9053\uff0c\u5728\u540c\u4e00\u4e2a namespace \u4e0b deployment \u4e0d\u80fd\u540c\u540d\uff1b\u4f46\u662f\u4e0d\u540c namespace \u4e4b\u95f4\u6ca1\u6709\u5f71\u54cd\uff09 \u3002\u524d\u6587\u63d0\u5230\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u90fd\u662f\u5728 namespace \u4e0b\u7684\uff1b\u5f53\u7136\uff0c\u4e5f\u6709\u4e00\u4e9b\u5bf9\u8c61\u662f\u4e0d\u96b6\u5c5e\u4e8e namespace \u7684\uff0c\u800c\u662f\u5728 K8S \u96c6\u7fa4\u5185\u5168\u5c40\u53ef\u89c1\u7684\uff0c\u5b98\u65b9\u6587\u6863\u63d0\u5230\u7684\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u6765\u67e5\u770b\uff0c\u5177\u4f53\u547d\u4ee4\u7684\u4f7f\u7528\u529e\u6cd5\uff0c\u7b14\u8005\u4f1a\u51fa\u540e\u7eed\u7684\u5b9e\u6218\u6587\u7ae0\u6765\u4ecb\u7ecd\uff0c\u5148\u8d34\u4e0b\u547d\u4ee4\uff1a Bash 1 2 3 4 5 # \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = true # \u4e0d\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = false \u5728 namespace \u4e0b\u7684\u5bf9\u8c61\u6709\uff08\u90e8\u5206\uff09\uff1a","title":"2.6 namespace \u547d\u540d\u7a7a\u95f4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#27-\u5176\u4ed6","text":"K8S \u7684\u5bf9\u8c61\u5b9e\u5728\u592a\u591a\u4e86\uff0c2.1-2.6 \u4ecb\u7ecd\u7684\u662f\u5728\u5b9e\u9645\u4f7f\u7528 K8S \u90e8\u7f72\u670d\u52a1\u6700\u5e38\u89c1\u7684\u3002\u5176\u4ed6\u7684\u8fd8\u6709 Job\u3001CronJob \u7b49\u7b49\uff0c\u5728\u5bf9 K8S \u6709\u4e86\u6bd4\u8f83\u6e05\u695a\u7684\u8ba4\u77e5\u4e4b\u540e\uff0c\u518d\u53bb\u5b66\u4e60\u66f4\u591a\u7684 K8S \u5bf9\u8c61\uff0c\u4e0d\u662f\u96be\u4e8b\u3002","title":"2.7 \u5176\u4ed6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%20%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#\u5199\u5728\u540e\u9762","text":"\u672c\u6587\u662f K8S \u7cfb\u5217\u6587\u7ae0\u7b2c\u4e00\u7bc7\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5bf9 K8S \u4e0d\u4e86\u89e3\u7684\u65b0\u624b\u5feb\u901f\u4e86\u89e3 K8S\u3002\u5982\u679c\u6587\u7ae0\u4e2d\u6709\u7eb0\u6f0f\uff0c\u975e\u5e38\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u6307\u51fa\uff1b\u6709\u7406\u89e3\u9519\u8bef\u7684\u5730\u65b9\uff0c\u66f4\u662f\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u544a\u77e5\u3002 \u7b14\u8005\u4e00\u8fb9\u5199\u6587\u7ae0\uff0c\u4e00\u8fb9\u67e5\u9605\u548c\u6574\u7406 K8S \u8d44\u6599\uff0c\u8fc7\u7a0b\u4e2d\u8d8a\u53d1\u611f\u89c9 K8S \u67b6\u6784\u7684\u5b8c\u5907\u3001\u8bbe\u8ba1\u7684\u7cbe\u5999\uff0c\u662f\u503c\u5f97\u6df1\u5165\u7814\u7a76\u7684\uff0cK8S \u5927\u53d7\u6b22\u8fce\u662f\u6709\u9053\u7406\u7684\uff01\u518d\u6b21\u611f\u53f9\u4e0b\u3002","title":"\u5199\u5728\u540e\u9762"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/1.%20Hello%20World%EF%BC%81/","text":"1. Hello World\uff01 \u00b6 Go 1 package main","title":"1. Hello World\uff01"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/1.%20Hello%20World%EF%BC%81/#1-hello-world","text":"Go 1 package main","title":"1. Hello World\uff01"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/10.%20GO%20%E6%8E%A5%E5%8F%A3/","text":"10. GO \u63a5\u53e3 \u00b6 Go \u8bed\u8a00\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd \u6570\u636e\u7c7b\u578b \u5373 \u63a5\u53e3 \uff0c \u5b83\u628a \u6240\u6709\u7684\u5177\u6709\u5171\u6027\u7684\u65b9\u6cd5 \u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u53ea\u8981\u5b9e\u73b0\u4e86\u8fd9\u4e9b \u65b9\u6cd5 \u5c31\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e2a \u63a5\u53e3 \u3002 \u8bed\u6cd5 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /* \u63a5\u53e3 */ type interface_name interface { method_name1 [ return type ] method_name2 [ return type ] ... method_namen [ return type ] } /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */ type struct_name struct { /* code */ } /* \u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5 */ func ( struct_name_varible struct_name ) method_name1 () [ return type ]{ /* code */ } func ( struct_name_varible struct_name ) method_name2 () [ return type ]{ /* code */ } \u5b9e\u4f8b ```go package main import (\"fmt\") /* \u5b9a\u4e49\u63a5\u53e3\u96c6\u5408 */ type Phone interface { call() }","title":"10. GO \u63a5\u53e3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/10.%20GO%20%E6%8E%A5%E5%8F%A3/#10-go-\u63a5\u53e3","text":"Go \u8bed\u8a00\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd \u6570\u636e\u7c7b\u578b \u5373 \u63a5\u53e3 \uff0c \u5b83\u628a \u6240\u6709\u7684\u5177\u6709\u5171\u6027\u7684\u65b9\u6cd5 \u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u53ea\u8981\u5b9e\u73b0\u4e86\u8fd9\u4e9b \u65b9\u6cd5 \u5c31\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e2a \u63a5\u53e3 \u3002 \u8bed\u6cd5 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /* \u63a5\u53e3 */ type interface_name interface { method_name1 [ return type ] method_name2 [ return type ] ... method_namen [ return type ] } /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */ type struct_name struct { /* code */ } /* \u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5 */ func ( struct_name_varible struct_name ) method_name1 () [ return type ]{ /* code */ } func ( struct_name_varible struct_name ) method_name2 () [ return type ]{ /* code */ } \u5b9e\u4f8b ```go package main import (\"fmt\") /* \u5b9a\u4e49\u63a5\u53e3\u96c6\u5408 */ type Phone interface { call() }","title":"10. GO \u63a5\u53e3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/11.%20GO%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/","text":"11. GO \u9519\u8bef\u5904\u7406 \u00b6 Go \u8bed\u8a00\u901a\u8fc7\u5185\u7f6e\u7684 \u9519\u8bef\u63a5\u53e3 \u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684 \u9519\u8bef\u5904\u7406\u673a\u5236 \u3002 error\u7c7b\u578b \u662f\u4e00\u4e2a \u63a5\u53e3\u7c7b\u578b \uff0c\u8fd9\u662f\u5b83\u7684\u5b9a\u4e49\uff1a Go 1 2 3 type error interface { Error () string } \u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u7801\u4e2d\u901a\u8fc7\u5b9e\u73b0 error \u63a5\u53e3\u7c7b\u578b\u6765\u751f\u6210\u9519\u8bef\u4fe1\u606f\u3002 \u51fd\u6570\u901a\u5e38\u5728\u6700\u540e\u7684\u8fd4\u56de\u503c\u4e2d\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002\u4f7f\u7528 errors.New \u53ef\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u4fe1\u606f\uff1a ```go func Sqrt(f float64) (float64, error) {","title":"11. GO \u9519\u8bef\u5904\u7406"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/11.%20GO%20%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/#11-go-\u9519\u8bef\u5904\u7406","text":"Go \u8bed\u8a00\u901a\u8fc7\u5185\u7f6e\u7684 \u9519\u8bef\u63a5\u53e3 \u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684 \u9519\u8bef\u5904\u7406\u673a\u5236 \u3002 error\u7c7b\u578b \u662f\u4e00\u4e2a \u63a5\u53e3\u7c7b\u578b \uff0c\u8fd9\u662f\u5b83\u7684\u5b9a\u4e49\uff1a Go 1 2 3 type error interface { Error () string } \u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u7801\u4e2d\u901a\u8fc7\u5b9e\u73b0 error \u63a5\u53e3\u7c7b\u578b\u6765\u751f\u6210\u9519\u8bef\u4fe1\u606f\u3002 \u51fd\u6570\u901a\u5e38\u5728\u6700\u540e\u7684\u8fd4\u56de\u503c\u4e2d\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002\u4f7f\u7528 errors.New \u53ef\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u4fe1\u606f\uff1a ```go func Sqrt(f float64) (float64, error) {","title":"11. GO \u9519\u8bef\u5904\u7406"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/12.%20GO%20%E5%B9%B6%E5%8F%91/","text":"12. GO \u5e76\u53d1 \u00b6 Go \u8bed\u8a00\u652f\u6301\u5e76\u53d1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 go \u5173\u952e\u5b57\u6765\u5f00\u542f goroutine \u5373\u53ef\u3002 goroutine \u662f \u8f7b\u91cf\u7ea7\u7ebf\u7a0b \uff0c goroutine \u7684\u8c03\u5ea6\u662f\u7531 Golang \u8fd0\u884c\u65f6\u8fdb\u884c\u7ba1\u7406\u7684\u3002 goroutine \u8bed\u6cd5\u683c\u5f0f\uff1a Go 1 go \u51fd\u6570\u540d \uff08 \u53c2\u6570\u5217\u8868 \uff09 Go \u5141\u8bb8\u4f7f\u7528 go \u8bed\u53e5\u5f00\u542f\u4e00\u4e2a\u65b0\u7684 \u8fd0\u884c\u671f\u7ebf\u7a0b \uff0c \u5373 goroutine \uff0c\u4ee5\u4e00\u4e2a\u4e0d\u540c\u7684\u3001\u65b0\u521b\u5efa\u7684 goroutine \u6765\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u3002 \u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709 goroutine \u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u3002 ```go package main","title":"12. GO \u5e76\u53d1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/12.%20GO%20%E5%B9%B6%E5%8F%91/#12-go-\u5e76\u53d1","text":"Go \u8bed\u8a00\u652f\u6301\u5e76\u53d1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 go \u5173\u952e\u5b57\u6765\u5f00\u542f goroutine \u5373\u53ef\u3002 goroutine \u662f \u8f7b\u91cf\u7ea7\u7ebf\u7a0b \uff0c goroutine \u7684\u8c03\u5ea6\u662f\u7531 Golang \u8fd0\u884c\u65f6\u8fdb\u884c\u7ba1\u7406\u7684\u3002 goroutine \u8bed\u6cd5\u683c\u5f0f\uff1a Go 1 go \u51fd\u6570\u540d \uff08 \u53c2\u6570\u5217\u8868 \uff09 Go \u5141\u8bb8\u4f7f\u7528 go \u8bed\u53e5\u5f00\u542f\u4e00\u4e2a\u65b0\u7684 \u8fd0\u884c\u671f\u7ebf\u7a0b \uff0c \u5373 goroutine \uff0c\u4ee5\u4e00\u4e2a\u4e0d\u540c\u7684\u3001\u65b0\u521b\u5efa\u7684 goroutine \u6765\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u3002 \u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709 goroutine \u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u3002 ```go package main","title":"12. GO \u5e76\u53d1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/13.%20GO%20channel%20%E9%80%9A%E9%81%93/","text":"13. GO channel \u901a\u9053 \u00b6 \u901a\u9053\uff08channel \u662f\u7528\u6765\u4f20\u9012\u6570\u636e\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u3002 \u901a\u9053\u53ef\u7528\u4e8e\u4e24\u4e2a goroutine \u4e4b\u95f4\u901a\u8fc7\u4f20\u9012\u4e00\u4e2a \u6307\u5b9a\u7c7b\u578b\u7684\u503c \u6765\u540c\u6b65 \u8fd0\u884c \u548c \u901a\u8baf \u3002 \u64cd\u4f5c\u7b26 <- \u7528\u4e8e\u6307\u5b9a\u901a\u9053\u7684 \u65b9\u5411 \uff0c \u53d1\u9001 \u6216 \u63a5\u6536 \u3002\u5982\u679c\u672a\u6307\u5b9a\u65b9\u5411\uff0c\u5219\u4e3a \u53cc\u5411\u901a\u9053 \u3002 ```go package main","title":"13. GO channel \u901a\u9053"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/13.%20GO%20channel%20%E9%80%9A%E9%81%93/#13-go-channel-\u901a\u9053","text":"\u901a\u9053\uff08channel \u662f\u7528\u6765\u4f20\u9012\u6570\u636e\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u3002 \u901a\u9053\u53ef\u7528\u4e8e\u4e24\u4e2a goroutine \u4e4b\u95f4\u901a\u8fc7\u4f20\u9012\u4e00\u4e2a \u6307\u5b9a\u7c7b\u578b\u7684\u503c \u6765\u540c\u6b65 \u8fd0\u884c \u548c \u901a\u8baf \u3002 \u64cd\u4f5c\u7b26 <- \u7528\u4e8e\u6307\u5b9a\u901a\u9053\u7684 \u65b9\u5411 \uff0c \u53d1\u9001 \u6216 \u63a5\u6536 \u3002\u5982\u679c\u672a\u6307\u5b9a\u65b9\u5411\uff0c\u5219\u4e3a \u53cc\u5411\u901a\u9053 \u3002 ```go package main","title":"13. GO channel \u901a\u9053"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/2.%20%E5%8F%98%E9%87%8F%E7%9A%84%203%20%E7%A7%8D%E6%96%B9%E5%BC%8F/","text":"2. \u53d8\u91cf\u7684 3 \u79cd\u65b9\u5f0f \u00b6 2.1 \u7b2c\u4e00\u79cd\uff0c\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u96f6\u503c \u00b6 ```go package main import \"fmt\" func main() {","title":"2. \u53d8\u91cf\u7684 3 \u79cd\u65b9\u5f0f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/2.%20%E5%8F%98%E9%87%8F%E7%9A%84%203%20%E7%A7%8D%E6%96%B9%E5%BC%8F/#2-\u53d8\u91cf\u7684-3-\u79cd\u65b9\u5f0f","text":"","title":"2. \u53d8\u91cf\u7684 3 \u79cd\u65b9\u5f0f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/2.%20%E5%8F%98%E9%87%8F%E7%9A%84%203%20%E7%A7%8D%E6%96%B9%E5%BC%8F/#21--\u7b2c\u4e00\u79cd\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\u5219\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u96f6\u503c","text":"```go package main import \"fmt\" func main() {","title":"2.1  \u7b2c\u4e00\u79cd\uff0c\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u96f6\u503c"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/3.%20GO%20%E5%B8%B8%E9%87%8F/","text":"3. GO \u5e38\u91cf \u00b6 Go 1 const identifier [ type ] = value 3.1 \u7b80\u5355\u5e94\u7528 \u00b6 ```go package main","title":"3. GO \u5e38\u91cf"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/3.%20GO%20%E5%B8%B8%E9%87%8F/#3-go-\u5e38\u91cf","text":"Go 1 const identifier [ type ] = value","title":"3. GO \u5e38\u91cf"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/3.%20GO%20%E5%B8%B8%E9%87%8F/#31-\u7b80\u5355\u5e94\u7528","text":"```go package main","title":"3.1 \u7b80\u5355\u5e94\u7528"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/4.%20GO%20%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6/","text":"4. GO \u8bed\u8a00\u8fd0\u7b97\u7b26 \u00b6 \u4e3e\u4f8b \uff1a \u4e0b\u8868\u5217\u51fa\u4e86\u6240\u6709Go\u8bed\u8a00\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u3002\u5047\u5b9a A \u503c\u4e3a 10 \uff0c B \u503c\u4e3a 20 \u3002 4.1 \u7b97\u672f\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u76f8\u52a0 A + B \u8f93\u51fa\u7ed3\u679c 30 - \u76f8\u51cf A - B \u8f93\u51fa\u7ed3\u679c -10 * \u76f8\u4e58 A * B \u8f93\u51fa\u7ed3\u679c 200 / \u76f8\u9664 B / A \u8f93\u51fa\u7ed3\u679c 2 % \u6c42\u4f59 B % A \u8f93\u51fa\u7ed3\u679c 0 ++ \u81ea\u589e A++ \u8f93\u51fa\u7ed3\u679c 11 -- \u81ea\u51cf A-- \u8f93\u51fa\u7ed3\u679c 9 4.2 \u5173\u7cfb\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A == B) \u4e3a False != \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u4e0d\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A != B) \u4e3a True > \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A > B) \u4e3a False < \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A < B) \u4e3a True >= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A >= B) \u4e3a False <= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A <= B) \u4e3a True Go 1 2 3 4 5 6 7 8 9 10 if ( a == b ) { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u7b49\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u4e0d\u7b49\u4e8e b\\n\" ) } if ( a < b ) { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u5c0f\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u4e0d\u5c0f\u4e8e b\\n\" ) } 4.3 \u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b && \u903b\u8f91 AND \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u90fd\u662f True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A && B) \u4e3a False || \u903b\u8f91 OR \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u6709\u4e00\u4e2a True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A || B) \u4e3a True ! \u903b\u8f91 NOT \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u6761\u4ef6\u4e3a True\uff0c\u5219\u903b\u8f91 NOT \u6761\u4ef6 False\uff0c\u5426\u5219\u4e3a True\u3002 !(A && B) \u4e3a True ```go package main","title":"4. GO \u8bed\u8a00\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/4.%20GO%20%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6/#4-go-\u8bed\u8a00\u8fd0\u7b97\u7b26","text":"\u4e3e\u4f8b \uff1a \u4e0b\u8868\u5217\u51fa\u4e86\u6240\u6709Go\u8bed\u8a00\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u3002\u5047\u5b9a A \u503c\u4e3a 10 \uff0c B \u503c\u4e3a 20 \u3002","title":"4. GO \u8bed\u8a00\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/4.%20GO%20%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6/#41-\u7b97\u672f\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u76f8\u52a0 A + B \u8f93\u51fa\u7ed3\u679c 30 - \u76f8\u51cf A - B \u8f93\u51fa\u7ed3\u679c -10 * \u76f8\u4e58 A * B \u8f93\u51fa\u7ed3\u679c 200 / \u76f8\u9664 B / A \u8f93\u51fa\u7ed3\u679c 2 % \u6c42\u4f59 B % A \u8f93\u51fa\u7ed3\u679c 0 ++ \u81ea\u589e A++ \u8f93\u51fa\u7ed3\u679c 11 -- \u81ea\u51cf A-- \u8f93\u51fa\u7ed3\u679c 9","title":"4.1 \u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/4.%20GO%20%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6/#42-\u5173\u7cfb\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A == B) \u4e3a False != \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u4e0d\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A != B) \u4e3a True > \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A > B) \u4e3a False < \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A < B) \u4e3a True >= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A >= B) \u4e3a False <= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A <= B) \u4e3a True Go 1 2 3 4 5 6 7 8 9 10 if ( a == b ) { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u7b49\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u4e0d\u7b49\u4e8e b\\n\" ) } if ( a < b ) { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u5c0f\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u4e0d\u5c0f\u4e8e b\\n\" ) }","title":"4.2 \u5173\u7cfb\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/4.%20GO%20%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6/#43-\u903b\u8f91\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b && \u903b\u8f91 AND \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u90fd\u662f True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A && B) \u4e3a False || \u903b\u8f91 OR \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u6709\u4e00\u4e2a True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A || B) \u4e3a True ! \u903b\u8f91 NOT \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u6761\u4ef6\u4e3a True\uff0c\u5219\u903b\u8f91 NOT \u6761\u4ef6 False\uff0c\u5426\u5219\u4e3a True\u3002 !(A && B) \u4e3a True ```go package main","title":"4.3 \u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/","text":"1. Hello World\uff01 \u00b6 Go 1 2 3 4 5 6 7 8 package main import \"fmt\" func main () { /* \u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f */ fmt . Println ( \"Hello, World!\" ) } 1.1 GO\u8bed\u8a00\u7ec4\u6210\u90e8\u5206 \u00b6 \u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u4ee5\u4e0a\u7a0b\u5e8f\u7684\u5404\u4e2a\u90e8\u5206\uff1a \u7b2c\u4e00\u884c\u4ee3\u7801 package main \u5b9a\u4e49\u4e86\u5305\u540d\u3002\u4f60\u5fc5\u987b\u5728\u6e90\u6587\u4ef6\u4e2d\u975e\u6ce8\u91ca\u7684\u7b2c\u4e00\u884c\u6307\u660e\u8fd9\u4e2a\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u5305\uff0c\u5982\uff1apackage main\u3002package main\u8868\u793a\u4e00\u4e2a\u53ef\u72ec\u7acb\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u6bcf\u4e2a Go \u5e94\u7528\u7a0b\u5e8f\u90fd\u5305\u542b\u4e00\u4e2a\u540d\u4e3a main \u7684\u5305\u3002 \u4e0b\u4e00\u884c import \"fmt\" \u544a\u8bc9 Go \u7f16\u8bd1\u5668\u8fd9\u4e2a\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528 fmt \u5305\uff08\u7684\u51fd\u6570\uff0c\u6216\u5176\u4ed6\u5143\u7d20\uff09\uff0cfmt \u5305\u5b9e\u73b0\u4e86\u683c\u5f0f\u5316 IO\uff08\u8f93\u5165/\u8f93\u51fa\uff09\u7684\u51fd\u6570\u3002 \u4e0b\u4e00\u884c func main() \u662f\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u7684\u51fd\u6570\u3002main \u51fd\u6570\u662f\u6bcf\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\u6240\u5fc5\u987b\u5305\u542b\u7684\uff0c\u4e00\u822c\u6765\u8bf4\u90fd\u662f\u5728\u542f\u52a8\u540e\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u51fd\u6570\uff08\u5982\u679c\u6709 init() \u51fd\u6570\u5219\u4f1a\u5148\u6267\u884c\u8be5\u51fd\u6570\uff09\u3002 \u4e0b\u4e00\u884c /*...*/ \u662f\u6ce8\u91ca\uff0c\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\u5c06\u88ab\u5ffd\u7565\u3002\u5355\u884c\u6ce8\u91ca\u662f\u6700\u5e38\u89c1\u7684\u6ce8\u91ca\u5f62\u5f0f\uff0c\u4f60\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u4ee5 // \u5f00\u5934\u7684\u5355\u884c\u6ce8\u91ca\u3002\u591a\u884c\u6ce8\u91ca\u4e5f\u53eb\u5757\u6ce8\u91ca\uff0c\u5747\u5df2\u4ee5 /* \u5f00\u5934\uff0c\u5e76\u4ee5 */ \u7ed3\u5c3e\uff0c\u4e14\u4e0d\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\uff0c\u591a\u884c\u6ce8\u91ca\u4e00\u822c\u7528\u4e8e\u5305\u7684\u6587\u6863\u63cf\u8ff0\u6216\u6ce8\u91ca\u6210\u5757\u7684\u4ee3\u7801\u7247\u6bb5\u3002 \u4e0b\u4e00\u884c fmt.Println(...) \u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u5e76\u5728\u6700\u540e\u81ea\u52a8\u589e\u52a0\u6362\u884c\u5b57\u7b26 \\n \u3002 \u4f7f\u7528 fmt.Print(\"hello, world\\n\") \u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002 Print \u548c Println \u8fd9\u4e24\u4e2a\u51fd\u6570\u4e5f\u652f\u6301\u4f7f\u7528\u53d8\u91cf\uff0c\u5982\uff1afmt.Println(arr)\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u6307\u5b9a\uff0c\u5b83\u4eec\u4f1a\u4ee5\u9ed8\u8ba4\u7684\u6253\u5370\u683c\u5f0f\u5c06\u53d8\u91cf arr \u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 \u5f53\u6807\u8bc6\u7b26\uff08\u5305\u62ec\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u7c7b\u578b\u3001\u51fd\u6570\u540d\u3001\u7ed3\u6784\u5b57\u6bb5\u7b49\u7b49\uff09\u4ee5\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5982\uff1aGroup1\uff0c\u90a3\u4e48\u4f7f\u7528\u8fd9\u79cd\u5f62\u5f0f\u7684\u6807\u8bc6\u7b26\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u88ab\u5916\u90e8\u5305\u7684\u4ee3\u7801\u6240\u4f7f\u7528\uff08\u5ba2\u6237\u7aef\u7a0b\u5e8f\u9700\u8981\u5148\u5bfc\u5165\u8fd9\u4e2a\u5305\uff09\uff0c\u8fd9\u88ab\u79f0\u4e3a\u5bfc\u51fa\uff08\u50cf\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u7684 public\uff09\uff1b\u6807\u8bc6\u7b26\u5982\u679c\u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5219\u5bf9\u5305\u5916\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u4f46\u662f\u4ed6\u4eec\u5728\u6574\u4e2a\u5305\u7684\u5185\u90e8\u662f\u53ef\u89c1\u5e76\u4e14\u53ef\u7528\u7684\uff08\u50cf\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u7684 protected \uff09\u3002 1.2 \u8fd0\u884c & \u7f16\u8bd1 \u00b6 \u8fd0\u884c Go 1 2 $ go run hello . go Hello , World ! \u7f16\u8bd1 & \u8fd0\u884c Go 1 2 3 4 5 $ go build hello . go $ ls hello hello . go $ . / hello Hello , World ! 1.3 \u6ce8\u610f \u00b6 \u9700\u8981\u6ce8\u610f\u7684\u662f { \u4e0d\u80fd\u5355\u72ec\u653e\u5728\u4e00\u884c\uff0c\u6240\u4ee5\u4ee5\u4e0b\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u4f1a\u4ea7\u751f\u9519\u8bef\uff1a Go 1 2 3 4 5 6 7 8 package main import \"fmt\" func main () { // \u9519\u8bef\uff0c{ \u4e0d\u80fd\u5728\u5355\u72ec\u7684\u884c\u4e0a fmt . Println ( \"Hello, World!\" ) } 2. \u53d8\u91cf\u7684 3 \u79cd\u65b9\u5f0f \u00b6 2.1 \u7b2c\u4e00\u79cd\uff0c\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u96f6\u503c \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import \"fmt\" func main () { // \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u5e76\u521d\u59cb\u5316 var a = \"RUNOOB\" fmt . Println ( a ) // RUNOOB // \u6ca1\u6709\u521d\u59cb\u5316\u5c31\u4e3a\u96f6\u503c var b int fmt . Println ( b ) // 0 // bool \u96f6\u503c\u4e3a false var c bool fmt . Println ( c ) // false } - \u6570\u503c\u7c7b\u578b\uff08\u5305\u62eccomplex64/128\uff09\u4e3a 0 - \u5e03\u5c14\u7c7b\u578b\u4e3a false - \u5b57\u7b26\u4e32\u4e3a \"\" \uff08\u7a7a\u5b57\u7b26\u4e32\uff09 - \u4ee5\u4e0b\u51e0\u79cd\u7c7b\u578b\u4e3a nil \uff1a Go 1 2 3 4 5 6 var a * int var a [] int var a map [ string ] int var a chan int var a func ( string ) int var a error // error \u662f\u63a5\u53e3 2.2 \u7b2c\u4e8c\u79cd\uff0c\u6839\u636e\u503c\u81ea\u884c\u5224\u5b9a\u53d8\u91cf\u7c7b\u578b \u00b6 Go 1 2 3 4 5 6 package main import \"fmt\" func main () { var d = true fmt . Println ( d ) } 2.3 \u4f7f\u7528 := \u5feb\u901f\u58f0\u540d \u00b6 intVal := 1 \u76f8\u7b49\u4e8e\uff1a Go 1 2 var intVal int intVal = 1 \u53ef\u4ee5\u5c06 var f string = \"Runoob\" \u7b80\u5199\u4e3a f := \"Runoob\" Go 1 2 3 4 5 6 7 package main import \"fmt\" func main () { f := \"Runoob\" // var f string = \"Runoob\" fmt . Println ( f ) } 2.4 \u591a\u53d8\u91cf\u58f0\u660e \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main var x , y int var ( // \u8fd9\u79cd\u56e0\u5f0f\u5206\u89e3\u5173\u952e\u5b57\u7684\u5199\u6cd5\u4e00\u822c\u7528\u4e8e\u58f0\u660e\u5168\u5c40\u53d8\u91cf a int b bool ) var c , d int = 1 , 2 var e , f = 123 , \"hello\" //\u8fd9\u79cd\u4e0d\u5e26\u58f0\u660e\u683c\u5f0f\u7684\u53ea\u80fd\u5728\u51fd\u6570\u4f53\u4e2d\u51fa\u73b0 //g, h := 123, \"hello\" func main (){ g , h := 123 , \"hello\" println ( x , y , a , b , c , d , e , f , g , h ) } \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\u4e3a\uff1a 0 0 0 false 1 2 123 hello 123 hello 2.5 \u6ce8\u610f\u4e8b\u9879 \u00b6 a := 50 \u6216 b := false \u3002 a \u548c b \u7684\u7c7b\u578b\uff08 int \u548c bool \uff09\u5c06\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u65ad\u3002\u8fd9\u662f\u4f7f\u7528\u53d8\u91cf\u7684\u9996\u9009\u5f62\u5f0f\uff0c \u4f46\u662f\u5b83\u53ea\u80fd\u88ab\u7528\u5728\u51fd\u6570\u4f53\u5185\uff0c\u800c\u4e0d\u53ef\u4ee5\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\u7684\u58f0\u660e\u4e0e\u8d4b\u503c \u3002 \u5982\u679c\u4f60\u60f3\u8981\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u5219\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 a, b = b, a \uff0c \u4e24\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u76f8\u540c \u3002 \u7a7a\u767d\u6807\u8bc6\u7b26 _ \u4e5f\u88ab\u7528\u4e8e\u629b\u5f03\u503c\uff0c\u5982\u503c 5 \u5728 _, b = 5, 7 \u4e2d\u88ab\u629b\u5f03\u3002 3. GO \u5e38\u91cf \u00b6 Go 1 const identifier [ type ] = value 3.1 \u7b80\u5355\u5e94\u7528 \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import \"fmt\" func main () { const LENGTH int = 10 const WIDTH int = 5 var area int const a , b , c = 1 , false , \"str\" //\u591a\u91cd\u8d4b\u503c area = LENGTH * WIDTH fmt . Printf ( \"\u9762\u79ef\u4e3a : %d\" , area ) println () println ( a , b , c ) } Go 1 2 \u9762\u79ef\u4e3a : 50 1 false str 3.2 \u679a\u4e3e\u7684\u5b9a\u4e49\u65b9\u5f0f \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 package main import \"unsafe\" const ( a = \"abc\" b = len ( a ) c = unsafe . Sizeof ( a ) ) func main (){ println ( a , b , c ) } 4. GO \u8bed\u8a00\u8fd0\u7b97\u7b26 \u00b6 \u4e3e\u4f8b \uff1a \u4e0b\u8868\u5217\u51fa\u4e86\u6240\u6709Go\u8bed\u8a00\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u3002\u5047\u5b9a A \u503c\u4e3a 10 \uff0c B \u503c\u4e3a 20 \u3002 4.1 \u7b97\u672f\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u76f8\u52a0 A + B \u8f93\u51fa\u7ed3\u679c 30 - \u76f8\u51cf A - B \u8f93\u51fa\u7ed3\u679c -10 * \u76f8\u4e58 A * B \u8f93\u51fa\u7ed3\u679c 200 / \u76f8\u9664 B / A \u8f93\u51fa\u7ed3\u679c 2 % \u6c42\u4f59 B % A \u8f93\u51fa\u7ed3\u679c 0 ++ \u81ea\u589e A++ \u8f93\u51fa\u7ed3\u679c 11 -- \u81ea\u51cf A-- \u8f93\u51fa\u7ed3\u679c 9 4.2 \u5173\u7cfb\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A == B) \u4e3a False != \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u4e0d\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A != B) \u4e3a True > \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A > B) \u4e3a False < \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A < B) \u4e3a True >= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A >= B) \u4e3a False <= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A <= B) \u4e3a True Go 1 2 3 4 5 6 7 8 9 10 if ( a == b ) { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u7b49\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u4e0d\u7b49\u4e8e b\\n\" ) } if ( a < b ) { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u5c0f\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u4e0d\u5c0f\u4e8e b\\n\" ) } 4.3 \u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b && \u903b\u8f91 AND \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u90fd\u662f True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A && B) \u4e3a False || \u903b\u8f91 OR \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u6709\u4e00\u4e2a True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A || B) \u4e3a True ! \u903b\u8f91 NOT \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u6761\u4ef6\u4e3a True\uff0c\u5219\u903b\u8f91 NOT \u6761\u4ef6 False\uff0c\u5426\u5219\u4e3a True\u3002 !(A && B) \u4e3a True Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import \"fmt\" func main () { var a bool = true var b bool = false if ( a && b ) { fmt . Printf ( \"\u7b2c\u4e00\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } if ( a || b ) { fmt . Printf ( \"\u7b2c\u4e8c\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } /* \u4fee\u6539 a \u548c b \u7684\u503c */ a = false b = true if ( a && b ) { fmt . Printf ( \"\u7b2c\u4e09\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e09\u884c - \u6761\u4ef6\u4e3a false\\n\" ) } if ( !( a && b ) ) { fmt . Printf ( \"\u7b2c\u56db\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } } 5. GO \u6761\u4ef6\u8bed\u53e5 \u00b6 5.1 if \u00b6 Go 1 2 3 if \u5e03\u5c14\u8868\u8fbe\u5f0f { /* \u5728\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a true \u65f6\u6267\u884c */ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 10 /* \u4f7f\u7528 if \u8bed\u53e5\u5224\u65ad\u5e03\u5c14\u8868\u8fbe\u5f0f */ if a < 20 { /* \u5982\u679c\u6761\u4ef6\u4e3a true \u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5 */ fmt . Printf ( \"a \u5c0f\u4e8e 20\\n\" ) } fmt . Printf ( \"a \u7684\u503c\u4e3a : %d\\n\" , a ) } 5.2 if..else \u00b6 Go 1 2 3 4 5 if \u5e03\u5c14\u8868\u8fbe\u5f0f { /* \u5728\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a true \u65f6\u6267\u884c */ } else { /* \u5728\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a false \u65f6\u6267\u884c */ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \"fmt\" func main () { /* \u5c40\u90e8\u53d8\u91cf\u5b9a\u4e49 */ var a int = 100 ; /* \u5224\u65ad\u5e03\u5c14\u8868\u8fbe\u5f0f */ if a < 20 { /* \u5982\u679c\u6761\u4ef6\u4e3a true \u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5 */ fmt . Printf ( \"a \u5c0f\u4e8e 20\\n\" ); } else { /* \u5982\u679c\u6761\u4ef6\u4e3a false \u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5 */ fmt . Printf ( \"a \u4e0d\u5c0f\u4e8e 20\\n\" ); } fmt . Printf ( \"a \u7684\u503c\u4e3a : %d\\n\" , a ); } 5.3 switch \u00b6 Go 1 2 3 4 5 6 7 8 switch var1 { case val1 : ... case val2 : ... default : ... } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var grade string = \"B\" var marks int = 90 switch marks { case 90 : grade = \"A\" case 80 : grade = \"B\" case 50 , 60 , 70 : grade = \"C\" default : grade = \"D\" } switch { case grade == \"A\" : fmt . Printf ( \"\u4f18\u79c0!\\n\" ) case grade == \"B\" , grade == \"C\" : fmt . Printf ( \"\u826f\u597d\\n\" ) case grade == \"D\" : fmt . Printf ( \"\u53ca\u683c\\n\" ) case grade == \"F\" : fmt . Printf ( \"\u4e0d\u53ca\u683c\\n\" ) default : fmt . Printf ( \"\u5dee\\n\" ); } fmt . Printf ( \"\u4f60\u7684\u7b49\u7ea7\u662f %s\\n\" , grade ); } 5.3.1 Notice \u00b6 \u4e0e C++ \u6bd4\u8f83\uff0c\u6ca1\u6709\u4f7f\u7528 break \u5173\u952e\u5b57 5.3.2 fallthrough \u00b6 \u4f7f\u7528 fallthrough \u4f1a\u5f3a\u5236\u6267\u884c\u540e\u9762\u7684 case \u8bed\u53e5\uff0c fallthrough \u4e0d\u4f1a\u5224\u65ad\u4e0b\u4e00\u6761 case \u7684\u8868\u8fbe\u5f0f\u7ed3\u679c\u662f\u5426\u4e3a true \u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import \"fmt\" func main () { switch { case false : fmt . Println ( \"1\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a false\" ) fallthrough case true : fmt . Println ( \"2\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a true\" ) // \u6267\u884c fallthrough case false : fmt . Println ( \"3\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a false\" ) // \u6267\u884c fallthrough case true : fmt . Println ( \"4\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a true\" ) // \u6267\u884c case false : fmt . Println ( \"5\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a false\" ) fallthrough default : fmt . Println ( \"6\u3001\u9ed8\u8ba4 case\" ) } } \u4ece\u4ee5\u4e0a\u4ee3\u7801\u8f93\u51fa\u7684\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff1a switch \u4ece \u7b2c\u4e00\u4e2a\u5224\u65ad\u8868\u8fbe\u5f0f\u4e3a true \u7684 case \u5f00\u59cb\u6267\u884c\uff0c\u5982\u679c case \u5e26\u6709 fallthrough \uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c \u4e0b\u4e00\u6761 case \uff0c\u4e14\u5b83\u4e0d\u4f1a\u53bb\u5224\u65ad\u4e0b\u4e00\u4e2a case \u7684\u8868\u8fbe\u5f0f\u662f\u5426\u4e3a true \u3002 5.4 select \u00b6 select \u662f Go \u4e2d\u7684\u4e00\u4e2a\u63a7\u5236\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e\u7528\u4e8e**\u901a\u4fe1\u7684** switch \u8bed\u53e5\u3002 \u6bcf\u4e2a case \u5fc5\u987b\u662f\u4e00\u4e2a**\u901a\u4fe1**\u64cd\u4f5c\uff0c\u8981\u4e48\u662f\u53d1\u9001\u8981\u4e48\u662f\u63a5\u6536\u3002 select **\u968f\u673a**\u6267\u884c\u4e00\u4e2a**\u53ef\u8fd0\u884c**\u7684 case \u3002 \u5982\u679c\u6ca1\u6709 case \u53ef\u8fd0\u884c\uff0c\u5b83\u5c06**\u963b\u585e**\uff0c\u76f4\u5230\u6709 case \u53ef\u8fd0\u884c\u3002 \u4e00\u4e2a\u9ed8\u8ba4\u7684\u5b50\u53e5\u5e94\u8be5\u603b\u662f\u53ef\u8fd0\u884c\u7684 \u8bed\u6cd5 Go 1 2 3 4 5 6 7 8 9 select { case communication clause : statement ( s ); case communication clause : statement ( s ); /* \u4f60\u53ef\u4ee5\u5b9a\u4e49\u4efb\u610f\u6570\u91cf\u7684 case */ default : /* \u53ef\u9009 */ statement ( s ); } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 package main import \"fmt\" func main () { var c1 , c2 , c3 chan int var i1 , i2 int select { case i1 = <- c1 : fmt . Printf ( \"received \" , i1 , \" from c1\\n\" ) case c2 <- i2 : fmt . Printf ( \"sent \" , i2 , \" to c2\\n\" ) case i3 , ok := ( <- c3 ): // same as: i3, ok := <-c3 if ok { fmt . Printf ( \"received \" , i3 , \" from c3\\n\" ) } else { fmt . Printf ( \"c3 is closed\\n\" ) } default : fmt . Printf ( \"no communication\\n\" ) } } 5.4.1 go chan \u7c7b\u578b\u8865\u5145 \u00b6 \u5f15\u7528\u7c7b\u578b \u96f6\u503c nil <\u53d1\u9001/\u5199>\u578b chan<- <\u63a5\u6536/\u8bfb>\u578b <-chan \u53cc\u5411\u578b chan \u6784\u9020/\u521d\u59cb\u5316 make() \u5173\u95ed close() \u5224\u7b49 == <\u53d1\u9001/\u5199>\u6570\u636e chan <- send_date <\u63a5\u6536/\u8bfb>\u6570\u636e recv_data := <- chan chan \u5173\u95ed\u6216\u6709\u6570\u636e,\u8bfb\u64cd\u4f5c\u4e0d\u963b\u585e chan \u672a\u5173\u95ed\u4e14\u65e0\u6570\u636e,\u8bfb\u64cd\u4f5c\u963b\u585e Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 package main import \"fmt\" func main () { //\u53cc\u5411\u578b chan, \u96f6\u503c nil var ch chan int //\u8f93\u5165\u578b chan-> var ci chan <- int //\u8f93\u51fa\u578b <-chan var co <- chan int //make() cc := make ( chan int , 10 ) ch = cc //\u53cc\u5411\u578b\u8d4b\u503c\u7ed9\u5355\u5411\u578b\u6b63\u786e ci = ch co = ch //\u5355\u5411\u578b\u8d4b\u503c\u7ed9\u53cc\u5411\u578b\u9519\u8bef //ch = ci //\u274c //ch = co //\u274c fmt . Println ( ci , co , ch ) //0xc00008c000 0xc00008c000 0xc00008c000 //\u53ef\u4ee5\u8d4b\u503c -> \u7c7b\u578b\u517c\u5bb9 -> \u53ef\u4ee5\u5224\u7b49 b1 := ch == cc b2 := ci == nil b3 := ch == ci b4 := ch == co //\u4e0d\u53ef\u4ee5\u8d4b\u503c -> \u7c7b\u578b\u4e0d\u517c\u5bb9 -> \u4e0d\u53ef\u4ee5\u5224\u7b49 // b5 := ci == co //\u274c fmt . Println ( ci , co , cc , ch ) //0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c00 fmt . Println ( b1 , b2 , b3 , b4 ) //true false true true //chan \u53d1\u9001/\u5199 ch <- 1 //chan \u63a5\u6536/\u8bfb out := <- ch fmt . Println ( out ) // 1 ch <- 1 //close(), chan \u5173\u95ed close ( ch ) //\u5173\u95ed\u540e\u8bfb\u64cd\u4f5c\u4e0d\u963b\u585e //chan \u5173\u95ed\u540e,\u8fd8\u6709\u6570\u636e.\u8bfb\u64cd\u4f5c,\u8fd4\u56de \u6570\u636e \u548c true out1 , ok1 := <- ch //chan \u5173\u95ed\u540e,\u6ca1\u6709\u6570\u636e.\u8bfb\u64cd\u4f5c,\u8fd4\u56de \u96f6\u503c \u548c false out2 , ok2 := <- ch fmt . Println ( out1 , ok1 , out2 , ok2 ) // 1 true 0 fals ch = make ( chan int , 0 ) //chan \u6ca1\u5173\u95ed,\u65e0\u6570\u636e,\u8bfb\u64cd\u4f5c\u963b\u585e out = <- ch fmt . Println ( \"\u4e0a\u4e00\u53e5\u963b\u585e\u4e86!!!\u6253\u5370\u4e0d\u51fa\u8fd9\u884c\u4e86?!!!\" ) } Go 1 2 3 4 5 6 7 8 9 10 11 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 true false true true 1 1 true 0 false fatal error : all goroutines are asleep - deadlock ! goroutine 1 [ chan receive ]: main . main () i : / github . com / gkt_cc_go / src / example / chan / chan . go : 68 + 0x508 exit status 2 6. GO \u5faa\u73af\u8bed\u53e5 \u00b6 5.1 for \u5faa\u73af \u00b6 5.1.1 init; condition; post \u00b6 Go 1 for init ; condition ; post { } \u8ba1\u7b97 1 \u5230 10 \u7684\u6570\u5b57\u4e4b\u548c\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 package main import \"fmt\" func main () { sum := 0 for i := 0 ; i <= 10 ; i ++ { // for init; condition; post sum += i } fmt . Println ( sum ) } 5.1.2 conditon \u00b6 init \u548c post \u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7701\u7565\u5b83\uff0c\u7c7b\u4f3c While \u8bed\u53e5\u3002 Go 1 for condition { } \u4ee5\u4e0b\u5b9e\u4f8b\u5728 sum \u5c0f\u4e8e 10 \u7684\u65f6\u5019\u8ba1\u7b97 sum \u81ea\u76f8\u52a0\u540e\u7684\u503c\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import \"fmt\" func main () { sum := 1 for ; sum <= 10 ; { sum += sum } fmt . Println ( sum ) // \u8fd9\u6837\u5199\u4e5f\u53ef\u4ee5\uff0c\u66f4\u50cf While \u8bed\u53e5\u5f62\u5f0f for sum <= 10 { sum += sum } fmt . Println ( sum ) } 5.1.3 For-each range \u5faa\u73af \u00b6 \u8fd9\u79cd\u683c\u5f0f\u7684\u5faa\u73af\u53ef\u4ee5\u5bf9 \u5b57\u7b26\u4e32 \u3001 \u6570\u7ec4 \u3001 \u5207\u7247 \u7b49\u8fdb\u884c \u8fed\u4ee3 \u8f93\u51fa\u5143\u7d20\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import \"fmt\" func main () { strings := [] string { \"google\" , \"runoob\" } for i , s := range strings { fmt . Println ( i , s ) } numbers := [ 6 ] int { 1 , 2 , 3 , 5 } for i , x := range numbers { fmt . Printf ( \"\u7b2c %d \u4f4d x \u7684\u503c = %d\\n\" , i , x ) } } Go 1 2 3 4 5 6 7 8 0 google 1 runoob \u7b2c 0 \u4f4d x \u7684\u503c = 1 \u7b2c 1 \u4f4d x \u7684\u503c = 2 \u7b2c 2 \u4f4d x \u7684\u503c = 3 \u7b2c 3 \u4f4d x \u7684\u503c = 5 \u7b2c 4 \u4f4d x \u7684\u503c = 0 \u7b2c 5 \u4f4d x \u7684\u503c = 0 5.2 GO \u5faa\u73af\u5173\u952e\u5b57 \u00b6 5.2.1 break \u00b6 case 1: \u7528\u4e8e\u5faa\u73af\u8bed\u53e5\u4e2d\u8df3\u51fa\u5faa\u73af\uff0c\u5e76\u5f00\u59cb\u6267\u884c\u5faa\u73af\u4e4b\u540e\u7684\u8bed\u53e5\u3002 case 2: break \u5728 switch \uff08\u5f00\u5173\u8bed\u53e5\uff09\u4e2d\u5728\u6267\u884c\u4e00\u6761 case \u540e\u8df3\u51fa\u8bed\u53e5\u7684\u4f5c\u7528\u3002 case 3 : \u5728\u591a\u91cd\u5faa\u73af\u4e2d\uff0c\u53ef\u4ee5\u7528\u6807\u53f7 label \u6807\u51fa\u60f3 break \u7684\u5faa\u73af\u3002 case 1 \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var i , j int for i = 2 ; i < 10 ; i ++ { for j = 2 ; j <= ( i / j ); j ++ { if ( i % j == 0 ) { break ; // \u5982\u679c\u53d1\u73b0\u56e0\u5b50\uff0c\u5219\u4e0d\u662f\u7d20\u6570 } } if ( j > ( i / j )) { fmt . Printf ( \"%d \u662f\u7d20\u6570\\n\" , i ); } } } Go 1 2 3 4 2 \u662f\u7d20\u6570 3 \u662f\u7d20\u6570 5 \u662f\u7d20\u6570 7 \u662f\u7d20\u6570 case 3 \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import \"fmt\" func main () { // \u4e0d\u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- break ----\" ) for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) break } } // \u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- break label ----\" ) re : for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) break re } } } Go 1 2 3 4 5 6 7 8 9 10 ---- break ---- i : 1 i2 : 11 i : 2 i2 : 11 i : 3 i2 : 11 ---- break label ---- i : 1 i2 : 11 5.2.2 continue \u00b6 Go \u8bed\u8a00\u7684 continue \u8bed\u53e5 \u6709\u70b9\u50cf break \u8bed\u53e5\u3002\u4f46\u662f continue \u4e0d\u662f\u8df3\u51fa\u5faa\u73af\uff0c\u800c\u662f\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\u8bed\u53e5\u3002 for \u5faa\u73af\u4e2d\uff0c\u6267\u884c continue \u8bed\u53e5\u4f1a\u89e6\u53d1 for \u589e\u91cf\u8bed\u53e5\u7684\u6267\u884c\u3002 \u5728\u591a\u91cd\u5faa\u73af\u4e2d\uff0c\u53ef\u4ee5\u7528\u6807\u53f7 label \u6807\u51fa\u60f3 continue \u7684\u5faa\u73af\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import \"fmt\" func main () { // \u4e0d\u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- continue ---- \" ) for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) continue } } // \u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- continue label ----\" ) re : for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) continue re } } } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ---- continue ---- i : 1 i2 : 11 i2 : 12 i2 : 13 i : 2 i2 : 11 i2 : 12 i2 : 13 i : 3 i2 : 11 i2 : 12 i2 : 13 ---- continue label ---- i : 1 i2 : 11 i : 2 i2 : 11 i : 3 i2 : 11 5.2.3 goto \u00b6 Go \u8bed\u8a00\u7684 goto \u8bed\u53e5\u53ef\u4ee5\u65e0\u6761\u4ef6\u5730\u8f6c\u79fb\u5230\u8fc7\u7a0b\u4e2d\u6307\u5b9a\u7684\u884c\u3002 goto \u8bed\u53e5\u901a\u5e38\u4e0e\u6761\u4ef6\u8bed\u53e5\u914d\u5408\u4f7f\u7528\u3002\u53ef\u7528\u6765\u5b9e\u73b0\u6761\u4ef6\u8f6c\u79fb\uff0c \u6784\u6210\u5faa\u73af\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u7b49\u529f\u80fd\u3002 \u4f46\u662f\uff0c\u5728\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u822c\u4e0d\u4e3b\u5f20\u4f7f\u7528 goto \u8bed\u53e5\uff0c \u4ee5\u514d\u9020\u6210\u7a0b\u5e8f\u6d41\u7a0b\u7684\u6df7\u4e71\uff0c\u4f7f\u7406\u89e3\u548c\u8c03\u8bd5\u7a0b\u5e8f\u90fd\u4ea7\u751f\u56f0\u96be\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 10 /* \u5faa\u73af */ LOOP : for a < 20 { if a == 15 { /* \u8df3\u8fc7\u8fed\u4ee3 */ a = a + 1 goto LOOP } fmt . Printf ( \"a\u7684\u503c\u4e3a : %d\\n\" , a ) a ++ } } Go 1 2 3 4 5 6 7 8 9 a\u7684\u503c\u4e3a : 10 a\u7684\u503c\u4e3a : 11 a\u7684\u503c\u4e3a : 12 a\u7684\u503c\u4e3a : 13 a\u7684\u503c\u4e3a : 14 a\u7684\u503c\u4e3a : 16 a\u7684\u503c\u4e3a : 17 a\u7684\u503c\u4e3a : 18 a\u7684\u503c\u4e3a : 19 5. GO \u51fd\u6570 \u00b6 \u8bed\u6cd5 Go 1 2 3 func function_name ( [ parameter list ] ) [ return_types ] { \u51fd\u6570\u4f53 } func \uff1a\u51fd\u6570\u7531 func \u5f00\u59cb\u58f0\u660e function_name \uff1a\u51fd\u6570\u540d\u79f0\uff0c \u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u6784\u6210\u4e86\u51fd\u6570\u7b7e\u540d \u3002 parameter list \uff1a\u53c2\u6570\u5217\u8868\uff0c\u53c2\u6570\u5c31\u50cf\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u4f60\u53ef\u4ee5\u5c06\u503c\u4f20\u9012\u7ed9\u53c2\u6570\uff0c\u8fd9\u4e2a\u503c\u88ab\u79f0\u4e3a\u5b9e\u9645\u53c2\u6570\u3002\u53c2\u6570\u5217\u8868\u6307\u5b9a\u7684\u662f\u53c2\u6570\u7c7b\u578b\u3001\u987a\u5e8f\u3001\u53ca\u53c2\u6570\u4e2a\u6570\u3002\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u51fd\u6570\u4e5f\u53ef\u4ee5\u4e0d\u5305\u542b\u53c2\u6570\u3002 return_types \uff1a\u8fd4\u56de\u7c7b\u578b\uff0c\u51fd\u6570\u8fd4\u56de\u4e00\u5217\u503c\u3002 return_types \u662f\u8be5\u5217\u503c\u7684\u6570\u636e\u7c7b\u578b\u3002\u6709\u4e9b\u529f\u80fd\u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b return_types \u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u51fd\u6570\u4f53 \uff1a\u51fd\u6570\u5b9a\u4e49\u7684\u4ee3\u7801\u96c6\u5408\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 /* \u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u6570\u7684\u6700\u5927\u503c */ func max ( num1 , num2 int ) int { /* \u58f0\u660e\u5c40\u90e8\u53d8\u91cf */ var result int if ( num1 > num2 ) { result = num1 } else { result = num2 } return result } 5.1 GO \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u503c \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 package main import \"fmt\" func swap ( x , y string ) ( string , string ) { return y , x } func main () { a , b := swap ( \"Google\" , \"Runoob\" ) fmt . Println ( a , b ) } Go 1 Runoob Google 5.2 \u51fd\u6570\u53c2\u6570 \u00b6 5.2.1 \u503c\u4f20\u9012 \u00b6 \u503c\u4f20\u9012 \u662f\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570 \u590d\u5236 \u4e00\u4efd\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5728\u51fd\u6570\u4e2d\u5982\u679c\u5bf9\u53c2\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGo \u8bed\u8a00\u4f7f\u7528\u7684\u662f\u503c\u4f20\u9012\uff0c\u5373\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570 \u3002 Go 1 2 3 4 5 6 7 8 9 10 /* \u5b9a\u4e49\u76f8\u4e92\u4ea4\u6362\u503c\u7684\u51fd\u6570 */ func swap ( x , y int ) int { var temp int temp = x /* \u4fdd\u5b58 x \u7684\u503c */ x = y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y*/ return temp ; } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 100 var b int = 200 fmt . Printf ( \"\u4ea4\u6362\u524d a \u7684\u503c\u4e3a : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u524d b \u7684\u503c\u4e3a : %d\\n\" , b ) /* \u901a\u8fc7\u8c03\u7528\u51fd\u6570\u6765\u4ea4\u6362\u503c */ swap ( a , b ) fmt . Printf ( \"\u4ea4\u6362\u540e a \u7684\u503c : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u540e b \u7684\u503c : %d\\n\" , b ) } /* \u5b9a\u4e49\u76f8\u4e92\u4ea4\u6362\u503c\u7684\u51fd\u6570 */ func swap ( x , y int ) int { var temp int temp = x /* \u4fdd\u5b58 x \u7684\u503c */ x = y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y*/ return temp ; } Go 1 2 3 4 \u4ea4\u6362\u524d a \u7684\u503c\u4e3a : 100 \u4ea4\u6362\u524d b \u7684\u503c\u4e3a : 200 \u4ea4\u6362\u540e a \u7684\u503c : 100 \u4ea4\u6362\u540e b \u7684\u503c : 200 5.2.2 \u5f15\u7528\u4f20\u9012 \u00b6 \u5f15\u7528\u4f20\u9012 \u662f\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06 \u5b9e\u9645\u53c2\u6570\u7684\u5730\u5740 \u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u4e2d\u5bf9\u53c2\u6570\u6240\u8fdb\u884c\u7684\u4fee\u6539\uff0c\u5c06\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 \u5f15\u7528\u4f20\u9012\u6307\u9488\u53c2\u6570\u4f20\u9012\u5230\u51fd\u6570\u5185\uff0c\u4ee5\u4e0b\u662f\u4ea4\u6362\u51fd\u6570 swap() \u4f7f\u7528\u4e86\u5f15\u7528\u4f20\u9012\uff1a Go 1 2 3 4 5 6 7 /* \u5b9a\u4e49\u4ea4\u6362\u503c\u51fd\u6570*/ func swap ( x * int , y * int ) { var temp int temp = * x /* \u4fdd\u6301 x \u5730\u5740\u4e0a\u7684\u503c */ * x = * y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ * y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y */ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 100 var b int = 200 fmt . Printf ( \"\u4ea4\u6362\u524d\uff0ca \u7684\u503c : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u524d\uff0cb \u7684\u503c : %d\\n\" , b ) /* \u8c03\u7528 swap() \u51fd\u6570 * &a \u6307\u5411 a \u6307\u9488\uff0ca \u53d8\u91cf\u7684\u5730\u5740 * &b \u6307\u5411 b \u6307\u9488\uff0cb \u53d8\u91cf\u7684\u5730\u5740 */ swap ( & a , & b ) fmt . Printf ( \"\u4ea4\u6362\u540e\uff0ca \u7684\u503c : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u540e\uff0cb \u7684\u503c : %d\\n\" , b ) } func swap ( x * int , y * int ) { var temp int temp = * x /* \u4fdd\u5b58 x \u5730\u5740\u4e0a\u7684\u503c */ * x = * y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ * y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y */ } Go 1 2 3 4 \u4ea4\u6362\u524d \uff0c a \u7684\u503c : 100 \u4ea4\u6362\u524d \uff0c b \u7684\u503c : 200 \u4ea4\u6362\u540e \uff0c a \u7684\u503c : 200 \u4ea4\u6362\u540e \uff0c b \u7684\u503c : 100 5.3 \u51fd\u6570\u7684\u7528\u6cd5 \u00b6 5.3.1 \u51fd\u6570\u4f5c\u4e3a\u5b9e\u53c2 \u00b6 Go \u8bed\u8a00\u53ef\u4ee5\u5f88\u7075\u6d3b\u7684\u521b\u5efa \u51fd\u6570 \uff0c\u5e76\u4f5c\u4e3a \u53e6\u5916\u4e00\u4e2a\u51fd\u6570 \u7684 \u5b9e\u53c2 \u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import ( \"fmt\" \"math\" ) func main (){ /* \u58f0\u660e\u51fd\u6570\u53d8\u91cf */ getSquareRoot := func ( x float64 ) float64 { return math . Sqrt ( x ) } /* \u4f7f\u7528\u51fd\u6570 */ fmt . Println ( getSquareRoot ( 9 )) } Go 1 3 5.3.2 \u51fd\u6570\u95ed\u5305 \u00b6 Go \u8bed\u8a00\u652f\u6301 \u533f\u540d\u51fd\u6570 \uff0c\u53ef \u4f5c\u4e3a\u95ed\u5305 \u3002 \u533f\u540d\u51fd\u6570 \u662f\u4e00\u4e2a\"\u5185\u8054\"\u8bed\u53e5\u6216\u8868\u8fbe\u5f0f\u3002\u533f\u540d\u51fd\u6570\u7684\u4f18\u8d8a\u6027\u5728\u4e8e\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u5185\u7684\u53d8\u91cf\uff0c\u4e0d\u5fc5\u7533\u660e\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u51fd\u6570 getSequence() \uff0c\u8fd4\u56de\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u3002\u8be5\u51fd\u6570\u7684\u76ee\u7684\u662f\u5728 \u95ed\u5305\u4e2d\u9012\u589e i \u53d8\u91cf \uff0c\u4ee3\u7801\u5982\u4e0b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import \"fmt\" func getSequence () func () int { i := 0 return func () int { i += 1 return i } } func main (){ /* nextNumber \u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u51fd\u6570 i \u4e3a 0 */ nextNumber := getSequence () /* \u8c03\u7528 nextNumber \u51fd\u6570\uff0ci \u53d8\u91cf\u81ea\u589e 1 \u5e76\u8fd4\u56de */ fmt . Println ( nextNumber ()) fmt . Println ( nextNumber ()) fmt . Println ( nextNumber ()) /* \u521b\u5efa\u65b0\u7684\u51fd\u6570 nextNumber1\uff0c\u5e76\u67e5\u770b\u7ed3\u679c */ nextNumber1 := getSequence () fmt . Println ( nextNumber1 ()) fmt . Println ( nextNumber1 ()) } Go 1 2 3 4 5 1 2 3 1 2 5.3.3 \u65b9\u6cd5 \u00b6 Go \u8bed\u8a00\u4e2d\u540c\u65f6\u6709 \u51fd\u6570 \u548c \u65b9\u6cd5 \u3002 \u4e00\u4e2a \u65b9\u6cd5 \u5c31\u662f\u4e00\u4e2a\u5305\u542b\u4e86 \u63a5\u53d7\u8005 \u7684 \u51fd\u6570 \uff0c \u63a5\u53d7\u8005 \u53ef\u4ee5\u662f \u547d\u540d\u7c7b\u578b \u6216\u8005 \u7ed3\u6784\u4f53\u7c7b\u578b \u7684 \u4e00\u4e2a\u503c \u6216\u8005\u662f \u4e00\u4e2a\u6307\u9488 \u3002 \u6240\u6709\u7ed9\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5\u5c5e\u4e8e\u8be5\u7c7b\u578b\u7684 \u65b9\u6cd5\u96c6 \u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a Go 1 2 3 func ( variable_name variable_data_type ) function_name () [ return_type ]{ /* \u51fd\u6570\u4f53*/ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 package main import ( \"fmt\" ) /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */ type Circle struct { radius float64 } func main () { var c1 Circle c1 . radius = 10.00 fmt . Println ( \"\u5706\u7684\u9762\u79ef = \" , c1 . getArea ()) } //\u8be5 method \u5c5e\u4e8e Circle \u7c7b\u578b\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5 func ( c Circle ) getArea () float64 { //c.radius \u5373\u4e3a Circle \u7c7b\u578b\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 return 3.14 * c . radius * c . radius } Go 1 \u5706\u7684\u9762\u79ef = 314 Go \u6ca1\u6709\u9762\u5411\u5bf9\u8c61\uff0c\u800c\u6211\u4eec\u77e5\u9053\u5e38\u89c1\u7684 Java\u3002 C++ \u7b49\u8bed\u8a00\u4e2d\uff0c\u5b9e\u73b0\u7c7b\u7684\u65b9\u6cd5\u505a\u6cd5\u90fd\u662f\u7f16\u8bd1\u5668\u9690\u5f0f\u7684\u7ed9\u51fd\u6570\u52a0\u4e00\u4e2a this \u6307\u9488\uff0c\u800c\u5728 Go \u91cc\uff0c\u8fd9\u4e2a this \u6307\u9488\u9700\u8981\u660e\u786e\u7684\u7533\u660e\u51fa\u6765\uff0c\u5176\u5b9e\u548c\u5176\u5b83 OO \u8bed\u8a00\u5e76\u6ca1\u6709\u5f88\u5927\u7684\u533a\u522b\u3002 \u5728 C++ \u4e2d\u662f\u8fd9\u6837\u7684: C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 class Circle { public : float getArea () { return 3.14 * radius * radius ; } private : float radius ; } // \u5176\u4e2d getArea \u7ecf\u8fc7\u7f16\u8bd1\u5668\u5904\u7406\u5927\u81f4\u53d8\u4e3a float getArea ( Circle * const c ) { ... } \u5728 Go \u4e2d\u5219\u662f\u5982\u4e0b: Go 1 2 3 4 func ( c Circle ) getArea () float64 { //c.radius \u5373\u4e3a Circle \u7c7b\u578b\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 return 3.14 * c . radius * c . radius } 6. GO \u6570\u7ec4 \u00b6 \u8bed\u6cd5 Go 1 var variable_name [ SIZE ] variable_type Go 1 var balance [ 10 ] float32 6.1 \u521d\u59cb\u5316\u6570\u7ec4 \u00b6 Go 1 2 3 4 var balance = [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } // \u6216\u8005 balance := [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u5982\u679c\u6570\u7ec4\u957f\u5ea6\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u4f7f\u7528 ... \u4ee3\u66ff\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u5143\u7d20\u4e2a\u6570\u81ea\u884c\u63a8\u65ad\u6570\u7ec4\u7684\u957f\u5ea6\uff1a Go 1 2 3 var balance = [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u6216 balance := [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u591a\u7ef4\u6570\u7ec4 Go 1 var variable_name [ SIZE1 ][ SIZE2 ] ... [ SIZEN ] variable_type Text Only 1 var threedim [5][10][4] int 7. GO \u5207\u7247\uff08Slice\uff09 \u00b6 Go \u8bed\u8a00 \u5207\u7247 \u662f \u5bf9\u6570\u7ec4\u7684\u62bd\u8c61 \u3002 Go \u6570\u7ec4\u7684 \u957f\u5ea6\u4e0d\u53ef\u6539\u53d8 \uff0c\u5728\u7279\u5b9a\u573a\u666f\u4e2d\u8fd9\u6837\u7684\u96c6\u5408\u5c31\u4e0d\u592a\u9002\u7528\uff0c Go \u4e2d\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\uff0c\u529f\u80fd\u5f3a\u608d\u7684\u5185\u7f6e\u7c7b\u578b \u5207\u7247(\"\u52a8\u6001\u6570\u7ec4\") \uff0c\u4e0e \u6570\u7ec4 \u76f8\u6bd4 \u5207\u7247 \u7684 \u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684 \uff0c\u53ef\u4ee5\u8ffd\u52a0\u5143\u7d20\uff0c\u5728\u8ffd\u52a0\u65f6\u53ef\u80fd\u4f7f\u5207\u7247\u7684\u5bb9\u91cf\u589e\u5927\u3002 7.1 \u5b9a\u4e49\u5207\u7247 \u00b6 \u8bed\u6cd5 Go 1 var identifier [] type \u5207\u7247\u4e0d\u9700\u8981\u8bf4\u660e\u957f\u5ea6\u3002 \u6216\u4f7f\u7528 make() \u51fd\u6570\u6765\u521b\u5efa\u5207\u7247: Go 1 2 3 4 5 var slice1 [] type = make ([] type , len ) // \u4e5f\u53ef\u4ee5\u7b80\u5199 slice1 := make ([] type , len ) \u4e5f\u53ef\u4ee5\u6307\u5b9a\u5bb9\u91cf\uff0c\u5176\u4e2d capacity \u4e3a\u53ef\u9009\u53c2\u6570\u3002 Go 1 make ([] T , length , capacity ) \u8fd9\u91cc len \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u5e76\u4e14\u4e5f\u662f\u5207\u7247\u7684 \u521d\u59cb\u957f\u5ea6 \u3002 Go 1 s := [] int { 1 , 2 , 3 } // \u76f4\u63a5\u521d\u59cb\u5316\u5207\u7247\uff0c []\u662f\u5207\u7247\u7c7b\u578b Go 1 2 3 4 5 6 7 8 9 10 11 s := arr [:] // \u521d\u59cb\u5316\u5207\u7247 s\uff0c\u662f\u6570\u7ec4 arr \u7684\u5f15\u7528\u3002 s := arr [ startIndex : endIndex ] // \u5c06 arr \u4e2d\u4ece\u4e0b\u6807 startIndex \u5230 endIndex-1 \u4e0b\u7684\u5143\u7d20\u521b\u5efa\u4e3a\u4e00\u4e2a\u65b0\u7684\u5207\u7247\u3002 s := arr [ startIndex :] // \u9ed8\u8ba4 endIndex \u65f6\u5c06\u8868\u793a\u4e00\u76f4\u5230arr\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 s := arr [: endIndex ] // \u9ed8\u8ba4 startIndex \u65f6\u5c06\u8868\u793a\u4ece arr \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002 s1 := s [ startIndex : endIndex ] // \u901a\u8fc7\u5207\u7247 s \u521d\u59cb\u5316\u5207\u7247 s1\u3002 s := make ([] int , len , cap ) // \u901a\u8fc7\u5185\u7f6e\u51fd\u6570 make() \u521d\u59cb\u5316\u5207\u7247s\uff0c[]int \u6807\u8bc6\u4e3a\u5176\u5143\u7d20\u7c7b\u578b\u4e3a int \u7684\u5207\u7247\u3002 7.2 len() \u548c cap() \u51fd\u6570 \u00b6 \u5207\u7247 \u662f \u53ef\u7d22\u5f15 \u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u7531 len() \u65b9\u6cd5\u83b7\u53d6\u957f\u5ea6\u3002 \u5207\u7247\u63d0\u4f9b\u4e86\u8ba1\u7b97\u5bb9\u91cf\u7684\u65b9\u6cd5 cap() \u53ef\u4ee5\u6d4b\u91cf\u5207\u7247\u6700\u957f\u53ef\u4ee5\u8fbe\u5230\u591a\u5c11\u3002 \u4ee5\u4e0b\u4e3a\u5177\u4f53\u5b9e\u4f8b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import \"fmt\" func main (){ var numbers = make ([] int , 3 , 5 ) // make([]type, length, capcity) printSlice ( numbers ) } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } Go 1 len = 3 cap = 5 slice =[ 0 0 0 ] 7.3 \u7a7a\uff08nil\uff09\u5207\u7247 \u00b6 \u4e00\u4e2a\u5207\u7247\u5728\u672a\u521d\u59cb\u5316\u4e4b\u524d\u9ed8\u8ba4\u4e3a nil \uff0c\u957f\u5ea6\u4e3a 0 \uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import \"fmt\" func main () { var numbers [] int printSlice ( numbers ) if ( numbers == nil ){ fmt . Printf ( \"\u5207\u7247\u662f\u7a7a\u7684\" ) } } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } Go 1 2 len = 0 cap = 0 slice =[] \u5207\u7247\u662f\u7a7a\u7684 7.4 \u5207\u7247\u622a\u53d6 \u00b6 \u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e0b\u9650\u53ca\u4e0a\u9650\u6765\u8bbe\u7f6e\u622a\u53d6\u5207\u7247 [lower-bound:upper-bound] \uff0c\u5b9e\u4f8b\u5982\u4e0b Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 package main import \"fmt\" func main () { /* \u521b\u5efa\u5207\u7247 */ numbers := [] int { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } printSlice ( numbers ) /* \u6253\u5370\u539f\u59cb\u5207\u7247 */ fmt . Println ( \"numbers ==\" , numbers ) /* \u6253\u5370\u5b50\u5207\u7247\u4ece\u7d22\u5f151(\u5305\u542b) \u5230\u7d22\u5f154(\u4e0d\u5305\u542b)*/ fmt . Println ( \"numbers[1:4] ==\" , numbers [ 1 : 4 ]) /* \u9ed8\u8ba4\u4e0b\u9650\u4e3a 0*/ fmt . Println ( \"numbers[:3] ==\" , numbers [: 3 ]) /* \u9ed8\u8ba4\u4e0a\u9650\u4e3a len(s)*/ fmt . Println ( \"numbers[4:] ==\" , numbers [ 4 :]) numbers1 := make ([] int , 0 , 5 ) printSlice ( numbers1 ) /* \u6253\u5370\u5b50\u5207\u7247\u4ece\u7d22\u5f15 0(\u5305\u542b) \u5230\u7d22\u5f15 2(\u4e0d\u5305\u542b) */ number2 := numbers [: 2 ] printSlice ( number2 ) /* \u6253\u5370\u5b50\u5207\u7247\u4ece\u7d22\u5f15 2(\u5305\u542b) \u5230\u7d22\u5f15 5(\u4e0d\u5305\u542b) */ number3 := numbers [ 2 : 5 ] printSlice ( number3 ) } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } 7.5 append() \u548c copy() \u51fd\u6570 \u00b6 \u5982\u679c\u60f3\u589e\u52a0\u5207\u7247\u7684\u5bb9\u91cf\uff0c\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u66f4\u5927\u7684\u5207\u7247\u5e76\u628a\u539f\u5206\u7247\u7684\u5185\u5bb9\u90fd\u62f7\u8d1d\u8fc7\u6765 \u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u63cf\u8ff0\u4e86\u4ece\u62f7\u8d1d\u5207\u7247\u7684 copy \u65b9\u6cd5\u548c\u5411\u5207\u7247\u8ffd\u52a0\u65b0\u5143\u7d20\u7684 append \u65b9\u6cd5\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import \"fmt\" func main () { var numbers [] int printSlice ( numbers ) // len=0 cap=0 slice=[] /* 1. \u5141\u8bb8\u8ffd\u52a0\u7a7a\u5207\u7247 */ numbers = append ( numbers , 0 ) printSlice ( numbers ) // len=1 cap=1 slice=[0] /* \u5411\u5207\u7247\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 */ numbers = append ( numbers , 1 ) printSlice ( numbers ) // len=2 cap=2 slice=[0 1] /* \u540c\u65f6\u6dfb\u52a0\u591a\u4e2a\u5143\u7d20 */ numbers = append ( numbers , 2 , 3 , 4 ) printSlice ( numbers ) // len=5 cap=6 slice=[0 1 2 3 4] /* \u521b\u5efa\u5207\u7247 numbers1 \u662f\u4e4b\u524d\u5207\u7247\u7684\u4e24\u500d\u5bb9\u91cf*/ numbers1 := make ([] int , len ( numbers ), ( cap ( numbers )) * 2 ) /* \u62f7\u8d1d numbers \u7684\u5185\u5bb9\u5230 numbers1 */ copy ( numbers1 , numbers ) printSlice ( numbers1 ) // len=5 cap=12 slice=[0 1 2 3 4] } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } 8. GO Range \u8bed\u8a00\u8303\u56f4 \u00b6 Go \u8bed\u8a00\u4e2d range \u5173\u952e\u5b57\u7528\u4e8e for \u5faa\u73af\u4e2d\u8fed\u4ee3 \u6570\u7ec4(array) \u3001 \u5207\u7247(slice) \u3001 \u901a\u9053(channel) \u6216 \u96c6\u5408(map) \u7684\u5143\u7d20\u3002 \u5728\u6570\u7ec4\u548c\u5207\u7247\u4e2d\u5b83\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\u548c\u7d22\u5f15\u5bf9\u5e94\u7684\u503c\uff0c\u5728\u96c6\u5408\u4e2d\u8fd4\u56de key-value \u5bf9\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 package main import \"fmt\" func main () { //\u8fd9\u662f\u6211\u4eec\u4f7f\u7528range\u53bb\u6c42\u4e00\u4e2aslice\u7684\u548c\u3002\u4f7f\u7528\u6570\u7ec4\u8ddf\u8fd9\u4e2a\u5f88\u7c7b\u4f3c nums := [] int { 2 , 3 , 4 } sum := 0 for _ , num := range nums { sum += num } fmt . Println ( \"sum:\" , sum ) //\u5728\u6570\u7ec4\u4e0a\u4f7f\u7528range\u5c06\u4f20\u5165index\u548c\u503c\u4e24\u4e2a\u53d8\u91cf\u3002 //\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u8be5\u5143\u7d20\u7684\u5e8f\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7a7a\u767d\u7b26\"_\"\u7701\u7565\u4e86\u3002\u6709\u65f6\u4faf\u6211\u4eec\u786e\u5b9e\u9700\u8981\u77e5\u9053\u5b83\u7684\u7d22\u5f15\u3002 for i , num := range nums { if num == 3 { fmt . Println ( \"index:\" , i ) } } //range\u4e5f\u53ef\u4ee5\u7528\u5728map\u7684\u952e\u503c\u5bf9\u4e0a\u3002 kvs := map [ string ] string { \"a\" : \"apple\" , \"b\" : \"banana\" } for k , v := range kvs { fmt . Printf ( \"%s -> %s\\n\" , k , v ) } //range\u4e5f\u53ef\u4ee5\u7528\u6765\u679a\u4e3eUnicode\u5b57\u7b26\u4e32\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5b57\u7b26\uff08Unicode\u7684\u503c\uff09\u672c\u8eab\u3002 for i , c := range \"go\" { fmt . Println ( i , c ) } } Go 1 2 3 4 5 6 sum : 9 index : 1 a - > apple b - > banana 0 103 1 111 9. GO Map \u96c6\u5408 \u00b6 Map \u662f\u4e00\u79cd \u65e0\u5e8f \u7684 \u952e\u503c\u5bf9 \u7684 \u96c6\u5408 \u3002 Map \u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\u901a\u8fc7 key \u6765\u5feb\u901f\u68c0\u7d22\u6570\u636e\uff0c key \u7c7b\u4f3c\u4e8e\u7d22\u5f15\uff0c\u6307\u5411\u6570\u636e\u7684\u503c\u3002 Map \u662f\u4e00\u79cd\u96c6\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u50cf\u8fed\u4ee3\u6570\u7ec4\u548c\u5207\u7247\u90a3\u6837\u8fed\u4ee3\u5b83\u3002\u4e0d\u8fc7\uff0c Map \u662f\u65e0\u5e8f\u7684\uff0c\u6211\u4eec\u65e0\u6cd5\u51b3\u5b9a\u5b83\u7684\u8fd4\u56de\u987a\u5e8f\uff0c\u8fd9\u662f\u56e0\u4e3a Map \u662f\u4f7f\u7528 hash \u8868\u6765\u5b9e\u73b0\u7684\u3002 9.1 \u5b9a\u4e49 \u00b6 \u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u51fd\u6570 make \u4e5f\u53ef\u4ee5\u4f7f\u7528 map \u5173\u952e\u5b57\u6765\u5b9a\u4e49 Map : Go 1 2 3 4 5 6 /* 1. \u58f0\u660e\u53d8\u91cf\uff0c \u9ed8\u8ba4 map \u662f nil*/ var map_variable map [ key_data_type ] value_data_type /* 2. \u4f7f\u7528 make \u51fd\u6570*/ map_variable := make ( map [ key_data_type ] value_data_map ) \u5982\u679c\u4e0d\u521d\u59cb\u5316 map \uff0c\u90a3\u4e48\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a nil map \u3002 nil map \u4e0d\u80fd\u7528\u6765\u5b58\u653e\u952e\u503c\u5bf9 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import \"fmt\" func main () { var countryCapitalMap map [ string ] string /*\u521b\u5efa\u96c6\u5408 */ countryCapitalMap = make ( map [ string ] string ) /* map\u63d2\u5165key - value\u5bf9,\u5404\u4e2a\u56fd\u5bb6\u5bf9\u5e94\u7684\u9996\u90fd */ countryCapitalMap [ \"France\" ] = \"\u5df4\u9ece\" countryCapitalMap [ \"Italy\" ] = \"\u7f57\u9a6c\" countryCapitalMap [ \"Japan\" ] = \"\u4e1c\u4eac\" countryCapitalMap [ \"India \" ] = \"\u65b0\u5fb7\u91cc\" /*\u4f7f\u7528\u952e\u8f93\u51fa\u5730\u56fe\u503c */ for country := range countryCapitalMap { fmt . Println ( country , \"\u9996\u90fd\u662f\" , countryCapitalMap [ country ]) } /*\u67e5\u770b\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u662f\u5426\u5b58\u5728 */ capital , ok := countryCapitalMap [ \"American\" ] /*\u5982\u679c\u786e\u5b9a\u662f\u771f\u5b9e\u7684,\u5219\u5b58\u5728,\u5426\u5219\u4e0d\u5b58\u5728 */ /*fmt.Println(capital) */ /*fmt.Println(ok) */ if ( ok ) { fmt . Println ( \"American \u7684\u9996\u90fd\u662f\" , capital ) } else { fmt . Println ( \"American \u7684\u9996\u90fd\u4e0d\u5b58\u5728\" ) } } Go 1 2 3 4 5 France \u9996\u90fd\u662f \u5df4\u9ece Italy \u9996\u90fd\u662f \u7f57\u9a6c Japan \u9996\u90fd\u662f \u4e1c\u4eac India \u9996\u90fd\u662f \u65b0\u5fb7\u91cc American \u7684\u9996\u90fd\u4e0d\u5b58\u5728 9.2 delete() \u51fd\u6570 \u00b6 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import \"fmt\" func main () { /* \u521b\u5efamap */ countryCapitalMap := map [ string ] string { \"France\" : \"Paris\" , \"Italy\" : \"Rome\" , \"Japan\" : \"Tokyo\" , \"India\" : \"New delhi\" } fmt . Println ( \"\u539f\u59cb\u5730\u56fe\" ) /* \u6253\u5370\u5730\u56fe */ for country := range countryCapitalMap { fmt . Println ( country , \"\u9996\u90fd\u662f\" , countryCapitalMap [ country ]) } /*\u5220\u9664\u5143\u7d20*/ delete ( countryCapitalMap , \"France\" ) fmt . Println ( \"\u6cd5\u56fd\u6761\u76ee\u88ab\u5220\u9664\" ) fmt . Println ( \"\u5220\u9664\u5143\u7d20\u540e\u5730\u56fe\" ) /*\u6253\u5370\u5730\u56fe*/ for country := range countryCapitalMap { fmt . Println ( country , \"\u9996\u90fd\u662f\" , countryCapitalMap [ country ]) } } Go 1 2 3 4 5 6 7 8 9 10 \u539f\u59cb\u5730\u56fe India \u9996\u90fd\u662f New delhi France \u9996\u90fd\u662f Paris Italy \u9996\u90fd\u662f Rome Japan \u9996\u90fd\u662f Tokyo \u6cd5\u56fd\u6761\u76ee\u88ab\u5220\u9664 \u5220\u9664\u5143\u7d20\u540e\u5730\u56fe Italy \u9996\u90fd\u662f Rome Japan \u9996\u90fd\u662f Tokyo India \u9996\u90fd\u662f New delhi 10. GO \u63a5\u53e3 \u00b6 Go \u8bed\u8a00\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd \u6570\u636e\u7c7b\u578b \u5373 \u63a5\u53e3 \uff0c \u5b83\u628a \u6240\u6709\u7684\u5177\u6709\u5171\u6027\u7684\u65b9\u6cd5 \u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u53ea\u8981\u5b9e\u73b0\u4e86\u8fd9\u4e9b \u65b9\u6cd5 \u5c31\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e2a \u63a5\u53e3 \u3002 \u8bed\u6cd5 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /* \u63a5\u53e3 */ type interface_name interface { method_name1 [ return type ] method_name2 [ return type ] ... method_namen [ return type ] } /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */ type struct_name struct { /* code */ } /* \u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5 */ func ( struct_name_varible struct_name ) method_name1 () [ return type ]{ /* code */ } func ( struct_name_varible struct_name ) method_name2 () [ return type ]{ /* code */ } \u5b9e\u4f8b Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 package main import ( \"fmt\" ) /* \u5b9a\u4e49\u63a5\u53e3\u96c6\u5408 */ type Phone interface { call () } /* \u5b9a\u4e49 Nokia \u7c7b */ type NokiaPhone struct { } /* \u5b9e\u73b0 Nokia \u7684 call \u65b9\u6cd5 */ func ( nokiadphone NokiaPhone ) call () { fmt . Println ( \"I am Nokia, I can call you!\" ) } /* \u5b9a\u4e49 Iphone \u7c7b*/ type Iphone struct { } /* \u5b9e\u73b0 Iphone \u7684 call \u65b9\u6cd5 */ func ( iphone Iphone ) call () { fmt . Println ( \"I am iphone, I can call you!\" ) } func main () { var phone Phone phone = new ( NokiaPhone ) phone . call () // I am Nokia, I can call you! phone = new ( Iphone ) phone . call () // I am iPhone, I can call you! } 11. GO \u9519\u8bef\u5904\u7406 \u00b6 Go \u8bed\u8a00\u901a\u8fc7\u5185\u7f6e\u7684 \u9519\u8bef\u63a5\u53e3 \u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684 \u9519\u8bef\u5904\u7406\u673a\u5236 \u3002 error\u7c7b\u578b \u662f\u4e00\u4e2a \u63a5\u53e3\u7c7b\u578b \uff0c\u8fd9\u662f\u5b83\u7684\u5b9a\u4e49\uff1a Go 1 2 3 type error interface { Error () string } \u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u7801\u4e2d\u901a\u8fc7\u5b9e\u73b0 error \u63a5\u53e3\u7c7b\u578b\u6765\u751f\u6210\u9519\u8bef\u4fe1\u606f\u3002 \u51fd\u6570\u901a\u5e38\u5728\u6700\u540e\u7684\u8fd4\u56de\u503c\u4e2d\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002\u4f7f\u7528 errors.New \u53ef\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u4fe1\u606f\uff1a Go 1 2 3 4 5 6 func Sqrt ( f float64 ) ( float64 , error ) { if f < 0 { return 0 , errors . New ( \"math: square root of negative number\" ) } // \u5b9e\u73b0 } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 package main import ( \"fmt\" ) // \u5b9a\u4e49\u4e00\u4e2a DivideError \u7ed3\u6784 type DivideError struct { dividee int divider int } // \u5b9e\u73b0 `error` \u63a5\u53e3 func ( de * DivideError ) Error () string { strFormat := ` Cannot proceed, the divider is zero. dividee: %d divider: 0 ` return fmt . Sprintf ( strFormat , de . dividee ) } // \u5b9a\u4e49 `int` \u7c7b\u578b\u9664\u6cd5\u8fd0\u7b97\u7684\u51fd\u6570 func Divide ( varDividee int , varDivider int ) ( result int , errorMsg string ) { if varDivider == 0 { dData := DivideError { dividee : varDividee , divider : varDivider , } errorMsg = dData . Error () return } else { return varDividee / varDivider , \"\" } } func main () { // \u6b63\u5e38\u60c5\u51b5 if result , errorMsg := Divide ( 100 , 10 ); errorMsg == \"\" { fmt . Println ( \"100/10 = \" , result ) } // \u5f53\u9664\u6570\u4e3a\u96f6\u7684\u65f6\u5019\u4f1a\u8fd4\u56de\u9519\u8bef\u4fe1\u606f if _ , errorMsg := Divide ( 100 , 0 ); errorMsg != \"\" { fmt . Println ( \"errorMsg is: \" , errorMsg ) } } Go 1 2 3 4 5 100 / 10 = 10 errorMsg is : Cannot proceed , the divider is zero . dividee : 100 divider : 0 12. GO \u5e76\u53d1 \u00b6 Go \u8bed\u8a00\u652f\u6301\u5e76\u53d1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 go \u5173\u952e\u5b57\u6765\u5f00\u542f goroutine \u5373\u53ef\u3002 goroutine \u662f \u8f7b\u91cf\u7ea7\u7ebf\u7a0b \uff0c goroutine \u7684\u8c03\u5ea6\u662f\u7531 Golang \u8fd0\u884c\u65f6\u8fdb\u884c\u7ba1\u7406\u7684\u3002 goroutine \u8bed\u6cd5\u683c\u5f0f\uff1a Go 1 go \u51fd\u6570\u540d \uff08 \u53c2\u6570\u5217\u8868 \uff09 Go \u5141\u8bb8\u4f7f\u7528 go \u8bed\u53e5\u5f00\u542f\u4e00\u4e2a\u65b0\u7684 \u8fd0\u884c\u671f\u7ebf\u7a0b \uff0c \u5373 goroutine \uff0c\u4ee5\u4e00\u4e2a\u4e0d\u540c\u7684\u3001\u65b0\u521b\u5efa\u7684 goroutine \u6765\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u3002 \u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709 goroutine \u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main import ( \"fmt\" \"time\" ) func say ( s string ) { for i := 0 ; i < 5 ; i ++ { time . Sleep ( 100 * time . Millisecond ) fmt . Println ( s ) } } func main () { go say ( \"world\" ) say ( \"hello\" ) } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u4f60\u4f1a\u770b\u5230\u8f93\u51fa\u7684 hello \u548c world \u662f\u6ca1\u6709\u56fa\u5b9a\u5148\u540e\u987a\u5e8f\u3002\u56e0\u4e3a\u5b83\u4eec\u662f\u4e24\u4e2a goroutine \u5728\u6267\u884c\uff1a Go 1 2 3 4 5 6 7 8 9 10 world hello hello world world hello hello world world hello 13. GO channel \u901a\u9053 \u00b6 \u901a\u9053\uff08channel \u662f\u7528\u6765\u4f20\u9012\u6570\u636e\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u3002 \u901a\u9053\u53ef\u7528\u4e8e\u4e24\u4e2a goroutine \u4e4b\u95f4\u901a\u8fc7\u4f20\u9012\u4e00\u4e2a \u6307\u5b9a\u7c7b\u578b\u7684\u503c \u6765\u540c\u6b65 \u8fd0\u884c \u548c \u901a\u8baf \u3002 \u64cd\u4f5c\u7b26 <- \u7528\u4e8e\u6307\u5b9a\u901a\u9053\u7684 \u65b9\u5411 \uff0c \u53d1\u9001 \u6216 \u63a5\u6536 \u3002\u5982\u679c\u672a\u6307\u5b9a\u65b9\u5411\uff0c\u5219\u4e3a \u53cc\u5411\u901a\u9053 \u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package main import ( \"fmt\" ) func sum ( s [] int , c chan int ) { sum := 0 for _ , v := range s { sum += v } c <- sum // \u628a sum \u53d1\u9001\u5230\u901a\u9053 c } func main () { s := [] int { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } c := make ( chan int ) length := len ( s ) go sum ( s [: length / 2 ], c ) go sum ( s [ length / 2 :], c ) x , y := <- c , <- c // \u4ece\u901a\u9053 c \u4e2d\u63a5\u6536 fmt . Println ( x , y , x + y ) } 13.1 chan \u8bbe\u7f6e\u901a\u9053\u7f13\u51b2\u533a\u5927\u5c0f \u00b6 \u901a\u9053\u53ef\u4ee5\u8bbe\u7f6e\u7f13\u51b2\u533a\uff0c\u901a\u8fc7 make \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u7f13\u51b2\u533a\u5927\u5c0f\uff1a Text Only 1 ch := make(chan int, 100) \u5e26\u7f13\u51b2\u533a\u7684\u901a\u9053\u5141\u8bb8\u53d1\u9001\u7aef\u7684\u6570\u636e\u53d1\u9001\u548c\u63a5\u6536\u7aef\u7684\u6570\u636e\u83b7\u53d6\u5904\u4e8e\u5f02\u6b65\u72b6\u6001\uff0c \u5c31\u662f\u8bf4\u53d1\u9001\u7aef\u53d1\u9001\u7684\u6570\u636e\u53ef\u4ee5\u653e\u5728\u7f13\u51b2\u533a\u91cc\u9762\uff0c\u53ef\u4ee5\u7b49\u5f85\u63a5\u6536\u7aef\u53bb\u83b7\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u7acb\u523b\u9700\u8981\u63a5\u6536\u7aef\u53bb\u83b7\u53d6\u6570\u636e \u3002 \u4e0d\u8fc7\u7531\u4e8e\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u8fd8\u662f\u5fc5\u987b\u6709\u63a5\u6536\u7aef\u6765\u63a5\u6536\u6570\u636e\u7684\uff0c\u5426\u5219\u7f13\u51b2\u533a\u4e00\u6ee1\uff0c\u6570\u636e\u53d1\u9001\u7aef\u5c31\u65e0\u6cd5\u518d\u53d1\u9001\u6570\u636e\u4e86\u3002 \u6ce8\u610f \uff1a\u5982\u679c\u901a\u9053\u4e0d\u5e26\u7f13\u51b2\uff0c\u53d1\u9001\u65b9\u4f1a\u963b\u585e\u76f4\u5230\u63a5\u6536\u65b9\u4ece\u901a\u9053\u4e2d\u63a5\u6536\u4e86\u503c\u3002\u5982\u679c\u901a\u9053\u5e26\u7f13\u51b2\uff0c\u53d1\u9001\u65b9\u5219\u4f1a\u963b\u585e\u76f4\u5230\u53d1\u9001\u7684\u503c\u88ab\u62f7\u8d1d\u5230\u7f13\u51b2\u533a\u5185\uff1b\u5982\u679c\u7f13\u51b2\u533a\u5df2\u6ee1\uff0c\u5219\u610f\u5473\u7740\u9700\u8981\u7b49\u5f85\u76f4\u5230\u67d0\u4e2a\u63a5\u6536\u65b9\u83b7\u53d6\u5230\u4e00\u4e2a\u503c\u3002\u63a5\u6536\u65b9\u5728\u6709\u503c\u53ef\u4ee5\u63a5\u6536\u4e4b\u524d\u4f1a\u4e00\u76f4**\u963b\u585e**\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import ( \"fmt\" ) func fibonacci ( n int , c chan int ) { x , y := 0 , 1 for i := 0 ; i < n ; i ++ { c <- x x , y = y , x + y } close ( c ) } func main () { c := make ( chan int , 10 ) go fibonacci ( cap ( c ), c ) // range \u51fd\u6570\u904d\u5386\u6bcf\u4e2a\u4ece\u901a\u9053\u63a5\u6536\u5230\u7684\u6570\u636e\uff0c\u56e0\u4e3a c \u5728\u53d1\u9001\u5b8c 10 \u4e2a // \u6570\u636e\u4e4b\u540e\u5c31\u5173\u95ed\u4e86\u901a\u9053\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec range \u51fd\u6570\u5728\u63a5\u6536\u5230 10 \u4e2a\u6570\u636e // \u4e4b\u540e\u5c31\u7ed3\u675f\u4e86\u3002\u5982\u679c\u4e0a\u9762\u7684 c \u901a\u9053\u4e0d\u5173\u95ed\uff0c\u90a3\u4e48 range \u51fd\u6570\u5c31\u4e0d // \u4f1a\u7ed3\u675f\uff0c\u4ece\u800c\u5728\u63a5\u6536\u7b2c 11 \u4e2a\u6570\u636e\u7684\u65f6\u5019\u5c31\u963b\u585e\u4e86\u3002 for i := range c { fmt . Println ( i ) } }","title":"1. Hello World\uff01"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#1-hello-world","text":"Go 1 2 3 4 5 6 7 8 package main import \"fmt\" func main () { /* \u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f */ fmt . Println ( \"Hello, World!\" ) }","title":"1. Hello World\uff01"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#11-go\u8bed\u8a00\u7ec4\u6210\u90e8\u5206","text":"\u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u4ee5\u4e0a\u7a0b\u5e8f\u7684\u5404\u4e2a\u90e8\u5206\uff1a \u7b2c\u4e00\u884c\u4ee3\u7801 package main \u5b9a\u4e49\u4e86\u5305\u540d\u3002\u4f60\u5fc5\u987b\u5728\u6e90\u6587\u4ef6\u4e2d\u975e\u6ce8\u91ca\u7684\u7b2c\u4e00\u884c\u6307\u660e\u8fd9\u4e2a\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u5305\uff0c\u5982\uff1apackage main\u3002package main\u8868\u793a\u4e00\u4e2a\u53ef\u72ec\u7acb\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u6bcf\u4e2a Go \u5e94\u7528\u7a0b\u5e8f\u90fd\u5305\u542b\u4e00\u4e2a\u540d\u4e3a main \u7684\u5305\u3002 \u4e0b\u4e00\u884c import \"fmt\" \u544a\u8bc9 Go \u7f16\u8bd1\u5668\u8fd9\u4e2a\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528 fmt \u5305\uff08\u7684\u51fd\u6570\uff0c\u6216\u5176\u4ed6\u5143\u7d20\uff09\uff0cfmt \u5305\u5b9e\u73b0\u4e86\u683c\u5f0f\u5316 IO\uff08\u8f93\u5165/\u8f93\u51fa\uff09\u7684\u51fd\u6570\u3002 \u4e0b\u4e00\u884c func main() \u662f\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u7684\u51fd\u6570\u3002main \u51fd\u6570\u662f\u6bcf\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\u6240\u5fc5\u987b\u5305\u542b\u7684\uff0c\u4e00\u822c\u6765\u8bf4\u90fd\u662f\u5728\u542f\u52a8\u540e\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u51fd\u6570\uff08\u5982\u679c\u6709 init() \u51fd\u6570\u5219\u4f1a\u5148\u6267\u884c\u8be5\u51fd\u6570\uff09\u3002 \u4e0b\u4e00\u884c /*...*/ \u662f\u6ce8\u91ca\uff0c\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\u5c06\u88ab\u5ffd\u7565\u3002\u5355\u884c\u6ce8\u91ca\u662f\u6700\u5e38\u89c1\u7684\u6ce8\u91ca\u5f62\u5f0f\uff0c\u4f60\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u4ee5 // \u5f00\u5934\u7684\u5355\u884c\u6ce8\u91ca\u3002\u591a\u884c\u6ce8\u91ca\u4e5f\u53eb\u5757\u6ce8\u91ca\uff0c\u5747\u5df2\u4ee5 /* \u5f00\u5934\uff0c\u5e76\u4ee5 */ \u7ed3\u5c3e\uff0c\u4e14\u4e0d\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528\uff0c\u591a\u884c\u6ce8\u91ca\u4e00\u822c\u7528\u4e8e\u5305\u7684\u6587\u6863\u63cf\u8ff0\u6216\u6ce8\u91ca\u6210\u5757\u7684\u4ee3\u7801\u7247\u6bb5\u3002 \u4e0b\u4e00\u884c fmt.Println(...) \u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u5e76\u5728\u6700\u540e\u81ea\u52a8\u589e\u52a0\u6362\u884c\u5b57\u7b26 \\n \u3002 \u4f7f\u7528 fmt.Print(\"hello, world\\n\") \u53ef\u4ee5\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002 Print \u548c Println \u8fd9\u4e24\u4e2a\u51fd\u6570\u4e5f\u652f\u6301\u4f7f\u7528\u53d8\u91cf\uff0c\u5982\uff1afmt.Println(arr)\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u6307\u5b9a\uff0c\u5b83\u4eec\u4f1a\u4ee5\u9ed8\u8ba4\u7684\u6253\u5370\u683c\u5f0f\u5c06\u53d8\u91cf arr \u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 \u5f53\u6807\u8bc6\u7b26\uff08\u5305\u62ec\u5e38\u91cf\u3001\u53d8\u91cf\u3001\u7c7b\u578b\u3001\u51fd\u6570\u540d\u3001\u7ed3\u6784\u5b57\u6bb5\u7b49\u7b49\uff09\u4ee5\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5982\uff1aGroup1\uff0c\u90a3\u4e48\u4f7f\u7528\u8fd9\u79cd\u5f62\u5f0f\u7684\u6807\u8bc6\u7b26\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u88ab\u5916\u90e8\u5305\u7684\u4ee3\u7801\u6240\u4f7f\u7528\uff08\u5ba2\u6237\u7aef\u7a0b\u5e8f\u9700\u8981\u5148\u5bfc\u5165\u8fd9\u4e2a\u5305\uff09\uff0c\u8fd9\u88ab\u79f0\u4e3a\u5bfc\u51fa\uff08\u50cf\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u7684 public\uff09\uff1b\u6807\u8bc6\u7b26\u5982\u679c\u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5219\u5bf9\u5305\u5916\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u4f46\u662f\u4ed6\u4eec\u5728\u6574\u4e2a\u5305\u7684\u5185\u90e8\u662f\u53ef\u89c1\u5e76\u4e14\u53ef\u7528\u7684\uff08\u50cf\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u7684 protected \uff09\u3002","title":"1.1 GO\u8bed\u8a00\u7ec4\u6210\u90e8\u5206"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#12-\u8fd0\u884c--\u7f16\u8bd1","text":"\u8fd0\u884c Go 1 2 $ go run hello . go Hello , World ! \u7f16\u8bd1 & \u8fd0\u884c Go 1 2 3 4 5 $ go build hello . go $ ls hello hello . go $ . / hello Hello , World !","title":"1.2 \u8fd0\u884c &amp; \u7f16\u8bd1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#13-\u6ce8\u610f","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f { \u4e0d\u80fd\u5355\u72ec\u653e\u5728\u4e00\u884c\uff0c\u6240\u4ee5\u4ee5\u4e0b\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u4f1a\u4ea7\u751f\u9519\u8bef\uff1a Go 1 2 3 4 5 6 7 8 package main import \"fmt\" func main () { // \u9519\u8bef\uff0c{ \u4e0d\u80fd\u5728\u5355\u72ec\u7684\u884c\u4e0a fmt . Println ( \"Hello, World!\" ) }","title":"1.3 \u6ce8\u610f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#2-\u53d8\u91cf\u7684-3-\u79cd\u65b9\u5f0f","text":"","title":"2. \u53d8\u91cf\u7684 3 \u79cd\u65b9\u5f0f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#21--\u7b2c\u4e00\u79cd\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\u5219\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u96f6\u503c","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import \"fmt\" func main () { // \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u5e76\u521d\u59cb\u5316 var a = \"RUNOOB\" fmt . Println ( a ) // RUNOOB // \u6ca1\u6709\u521d\u59cb\u5316\u5c31\u4e3a\u96f6\u503c var b int fmt . Println ( b ) // 0 // bool \u96f6\u503c\u4e3a false var c bool fmt . Println ( c ) // false } - \u6570\u503c\u7c7b\u578b\uff08\u5305\u62eccomplex64/128\uff09\u4e3a 0 - \u5e03\u5c14\u7c7b\u578b\u4e3a false - \u5b57\u7b26\u4e32\u4e3a \"\" \uff08\u7a7a\u5b57\u7b26\u4e32\uff09 - \u4ee5\u4e0b\u51e0\u79cd\u7c7b\u578b\u4e3a nil \uff1a Go 1 2 3 4 5 6 var a * int var a [] int var a map [ string ] int var a chan int var a func ( string ) int var a error // error \u662f\u63a5\u53e3","title":"2.1  \u7b2c\u4e00\u79cd\uff0c\u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u96f6\u503c"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#22-\u7b2c\u4e8c\u79cd\u6839\u636e\u503c\u81ea\u884c\u5224\u5b9a\u53d8\u91cf\u7c7b\u578b","text":"Go 1 2 3 4 5 6 package main import \"fmt\" func main () { var d = true fmt . Println ( d ) }","title":"2.2 \u7b2c\u4e8c\u79cd\uff0c\u6839\u636e\u503c\u81ea\u884c\u5224\u5b9a\u53d8\u91cf\u7c7b\u578b"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#23-\u4f7f\u7528--\u5feb\u901f\u58f0\u540d","text":"intVal := 1 \u76f8\u7b49\u4e8e\uff1a Go 1 2 var intVal int intVal = 1 \u53ef\u4ee5\u5c06 var f string = \"Runoob\" \u7b80\u5199\u4e3a f := \"Runoob\" Go 1 2 3 4 5 6 7 package main import \"fmt\" func main () { f := \"Runoob\" // var f string = \"Runoob\" fmt . Println ( f ) }","title":"2.3 \u4f7f\u7528 := \u5feb\u901f\u58f0\u540d"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#24-\u591a\u53d8\u91cf\u58f0\u660e","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main var x , y int var ( // \u8fd9\u79cd\u56e0\u5f0f\u5206\u89e3\u5173\u952e\u5b57\u7684\u5199\u6cd5\u4e00\u822c\u7528\u4e8e\u58f0\u660e\u5168\u5c40\u53d8\u91cf a int b bool ) var c , d int = 1 , 2 var e , f = 123 , \"hello\" //\u8fd9\u79cd\u4e0d\u5e26\u58f0\u660e\u683c\u5f0f\u7684\u53ea\u80fd\u5728\u51fd\u6570\u4f53\u4e2d\u51fa\u73b0 //g, h := 123, \"hello\" func main (){ g , h := 123 , \"hello\" println ( x , y , a , b , c , d , e , f , g , h ) } \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\u4e3a\uff1a 0 0 0 false 1 2 123 hello 123 hello","title":"2.4 \u591a\u53d8\u91cf\u58f0\u660e"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#25-\u6ce8\u610f\u4e8b\u9879","text":"a := 50 \u6216 b := false \u3002 a \u548c b \u7684\u7c7b\u578b\uff08 int \u548c bool \uff09\u5c06\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u65ad\u3002\u8fd9\u662f\u4f7f\u7528\u53d8\u91cf\u7684\u9996\u9009\u5f62\u5f0f\uff0c \u4f46\u662f\u5b83\u53ea\u80fd\u88ab\u7528\u5728\u51fd\u6570\u4f53\u5185\uff0c\u800c\u4e0d\u53ef\u4ee5\u7528\u4e8e\u5168\u5c40\u53d8\u91cf\u7684\u58f0\u660e\u4e0e\u8d4b\u503c \u3002 \u5982\u679c\u4f60\u60f3\u8981\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u5219\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528 a, b = b, a \uff0c \u4e24\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u76f8\u540c \u3002 \u7a7a\u767d\u6807\u8bc6\u7b26 _ \u4e5f\u88ab\u7528\u4e8e\u629b\u5f03\u503c\uff0c\u5982\u503c 5 \u5728 _, b = 5, 7 \u4e2d\u88ab\u629b\u5f03\u3002","title":"2.5 \u6ce8\u610f\u4e8b\u9879"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#3-go-\u5e38\u91cf","text":"Go 1 const identifier [ type ] = value","title":"3. GO \u5e38\u91cf"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#31-\u7b80\u5355\u5e94\u7528","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import \"fmt\" func main () { const LENGTH int = 10 const WIDTH int = 5 var area int const a , b , c = 1 , false , \"str\" //\u591a\u91cd\u8d4b\u503c area = LENGTH * WIDTH fmt . Printf ( \"\u9762\u79ef\u4e3a : %d\" , area ) println () println ( a , b , c ) } Go 1 2 \u9762\u79ef\u4e3a : 50 1 false str","title":"3.1 \u7b80\u5355\u5e94\u7528"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#32-\u679a\u4e3e\u7684\u5b9a\u4e49\u65b9\u5f0f","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 package main import \"unsafe\" const ( a = \"abc\" b = len ( a ) c = unsafe . Sizeof ( a ) ) func main (){ println ( a , b , c ) }","title":"3.2 \u679a\u4e3e\u7684\u5b9a\u4e49\u65b9\u5f0f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#4-go-\u8bed\u8a00\u8fd0\u7b97\u7b26","text":"\u4e3e\u4f8b \uff1a \u4e0b\u8868\u5217\u51fa\u4e86\u6240\u6709Go\u8bed\u8a00\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u3002\u5047\u5b9a A \u503c\u4e3a 10 \uff0c B \u503c\u4e3a 20 \u3002","title":"4. GO \u8bed\u8a00\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#41-\u7b97\u672f\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u76f8\u52a0 A + B \u8f93\u51fa\u7ed3\u679c 30 - \u76f8\u51cf A - B \u8f93\u51fa\u7ed3\u679c -10 * \u76f8\u4e58 A * B \u8f93\u51fa\u7ed3\u679c 200 / \u76f8\u9664 B / A \u8f93\u51fa\u7ed3\u679c 2 % \u6c42\u4f59 B % A \u8f93\u51fa\u7ed3\u679c 0 ++ \u81ea\u589e A++ \u8f93\u51fa\u7ed3\u679c 11 -- \u81ea\u51cf A-- \u8f93\u51fa\u7ed3\u679c 9","title":"4.1 \u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#42-\u5173\u7cfb\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A == B) \u4e3a False != \u68c0\u67e5\u4e24\u4e2a\u503c\u662f\u5426\u4e0d\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A != B) \u4e3a True > \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A > B) \u4e3a False < \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A < B) \u4e3a True >= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A >= B) \u4e3a False <= \u68c0\u67e5\u5de6\u8fb9\u503c\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u8fb9\u503c\uff0c\u5982\u679c\u662f\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False\u3002 (A <= B) \u4e3a True Go 1 2 3 4 5 6 7 8 9 10 if ( a == b ) { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u7b49\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e00\u884c - a \u4e0d\u7b49\u4e8e b\\n\" ) } if ( a < b ) { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u5c0f\u4e8e b\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e8c\u884c - a \u4e0d\u5c0f\u4e8e b\\n\" ) }","title":"4.2 \u5173\u7cfb\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#43-\u903b\u8f91\u8fd0\u7b97\u7b26","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b && \u903b\u8f91 AND \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u90fd\u662f True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A && B) \u4e3a False || \u903b\u8f91 OR \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e24\u8fb9\u7684\u64cd\u4f5c\u6570\u6709\u4e00\u4e2a True\uff0c\u5219\u6761\u4ef6 True\uff0c\u5426\u5219\u4e3a False\u3002 (A || B) \u4e3a True ! \u903b\u8f91 NOT \u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u6761\u4ef6\u4e3a True\uff0c\u5219\u903b\u8f91 NOT \u6761\u4ef6 False\uff0c\u5426\u5219\u4e3a True\u3002 !(A && B) \u4e3a True Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import \"fmt\" func main () { var a bool = true var b bool = false if ( a && b ) { fmt . Printf ( \"\u7b2c\u4e00\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } if ( a || b ) { fmt . Printf ( \"\u7b2c\u4e8c\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } /* \u4fee\u6539 a \u548c b \u7684\u503c */ a = false b = true if ( a && b ) { fmt . Printf ( \"\u7b2c\u4e09\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } else { fmt . Printf ( \"\u7b2c\u4e09\u884c - \u6761\u4ef6\u4e3a false\\n\" ) } if ( !( a && b ) ) { fmt . Printf ( \"\u7b2c\u56db\u884c - \u6761\u4ef6\u4e3a true\\n\" ) } }","title":"4.3 \u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#5-go-\u6761\u4ef6\u8bed\u53e5","text":"","title":"5. GO \u6761\u4ef6\u8bed\u53e5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#51-if","text":"Go 1 2 3 if \u5e03\u5c14\u8868\u8fbe\u5f0f { /* \u5728\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a true \u65f6\u6267\u884c */ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 10 /* \u4f7f\u7528 if \u8bed\u53e5\u5224\u65ad\u5e03\u5c14\u8868\u8fbe\u5f0f */ if a < 20 { /* \u5982\u679c\u6761\u4ef6\u4e3a true \u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5 */ fmt . Printf ( \"a \u5c0f\u4e8e 20\\n\" ) } fmt . Printf ( \"a \u7684\u503c\u4e3a : %d\\n\" , a ) }","title":"5.1 if"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#52-ifelse","text":"Go 1 2 3 4 5 if \u5e03\u5c14\u8868\u8fbe\u5f0f { /* \u5728\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a true \u65f6\u6267\u884c */ } else { /* \u5728\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3a false \u65f6\u6267\u884c */ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \"fmt\" func main () { /* \u5c40\u90e8\u53d8\u91cf\u5b9a\u4e49 */ var a int = 100 ; /* \u5224\u65ad\u5e03\u5c14\u8868\u8fbe\u5f0f */ if a < 20 { /* \u5982\u679c\u6761\u4ef6\u4e3a true \u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5 */ fmt . Printf ( \"a \u5c0f\u4e8e 20\\n\" ); } else { /* \u5982\u679c\u6761\u4ef6\u4e3a false \u5219\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5 */ fmt . Printf ( \"a \u4e0d\u5c0f\u4e8e 20\\n\" ); } fmt . Printf ( \"a \u7684\u503c\u4e3a : %d\\n\" , a ); }","title":"5.2 if..else"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#53-switch","text":"Go 1 2 3 4 5 6 7 8 switch var1 { case val1 : ... case val2 : ... default : ... } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var grade string = \"B\" var marks int = 90 switch marks { case 90 : grade = \"A\" case 80 : grade = \"B\" case 50 , 60 , 70 : grade = \"C\" default : grade = \"D\" } switch { case grade == \"A\" : fmt . Printf ( \"\u4f18\u79c0!\\n\" ) case grade == \"B\" , grade == \"C\" : fmt . Printf ( \"\u826f\u597d\\n\" ) case grade == \"D\" : fmt . Printf ( \"\u53ca\u683c\\n\" ) case grade == \"F\" : fmt . Printf ( \"\u4e0d\u53ca\u683c\\n\" ) default : fmt . Printf ( \"\u5dee\\n\" ); } fmt . Printf ( \"\u4f60\u7684\u7b49\u7ea7\u662f %s\\n\" , grade ); }","title":"5.3 switch"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#531-notice","text":"\u4e0e C++ \u6bd4\u8f83\uff0c\u6ca1\u6709\u4f7f\u7528 break \u5173\u952e\u5b57","title":"5.3.1 Notice"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#532-fallthrough","text":"\u4f7f\u7528 fallthrough \u4f1a\u5f3a\u5236\u6267\u884c\u540e\u9762\u7684 case \u8bed\u53e5\uff0c fallthrough \u4e0d\u4f1a\u5224\u65ad\u4e0b\u4e00\u6761 case \u7684\u8868\u8fbe\u5f0f\u7ed3\u679c\u662f\u5426\u4e3a true \u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import \"fmt\" func main () { switch { case false : fmt . Println ( \"1\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a false\" ) fallthrough case true : fmt . Println ( \"2\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a true\" ) // \u6267\u884c fallthrough case false : fmt . Println ( \"3\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a false\" ) // \u6267\u884c fallthrough case true : fmt . Println ( \"4\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a true\" ) // \u6267\u884c case false : fmt . Println ( \"5\u3001case \u6761\u4ef6\u8bed\u53e5\u4e3a false\" ) fallthrough default : fmt . Println ( \"6\u3001\u9ed8\u8ba4 case\" ) } } \u4ece\u4ee5\u4e0a\u4ee3\u7801\u8f93\u51fa\u7684\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff1a switch \u4ece \u7b2c\u4e00\u4e2a\u5224\u65ad\u8868\u8fbe\u5f0f\u4e3a true \u7684 case \u5f00\u59cb\u6267\u884c\uff0c\u5982\u679c case \u5e26\u6709 fallthrough \uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c \u4e0b\u4e00\u6761 case \uff0c\u4e14\u5b83\u4e0d\u4f1a\u53bb\u5224\u65ad\u4e0b\u4e00\u4e2a case \u7684\u8868\u8fbe\u5f0f\u662f\u5426\u4e3a true \u3002","title":"5.3.2 fallthrough"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#54-select","text":"select \u662f Go \u4e2d\u7684\u4e00\u4e2a\u63a7\u5236\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e\u7528\u4e8e**\u901a\u4fe1\u7684** switch \u8bed\u53e5\u3002 \u6bcf\u4e2a case \u5fc5\u987b\u662f\u4e00\u4e2a**\u901a\u4fe1**\u64cd\u4f5c\uff0c\u8981\u4e48\u662f\u53d1\u9001\u8981\u4e48\u662f\u63a5\u6536\u3002 select **\u968f\u673a**\u6267\u884c\u4e00\u4e2a**\u53ef\u8fd0\u884c**\u7684 case \u3002 \u5982\u679c\u6ca1\u6709 case \u53ef\u8fd0\u884c\uff0c\u5b83\u5c06**\u963b\u585e**\uff0c\u76f4\u5230\u6709 case \u53ef\u8fd0\u884c\u3002 \u4e00\u4e2a\u9ed8\u8ba4\u7684\u5b50\u53e5\u5e94\u8be5\u603b\u662f\u53ef\u8fd0\u884c\u7684 \u8bed\u6cd5 Go 1 2 3 4 5 6 7 8 9 select { case communication clause : statement ( s ); case communication clause : statement ( s ); /* \u4f60\u53ef\u4ee5\u5b9a\u4e49\u4efb\u610f\u6570\u91cf\u7684 case */ default : /* \u53ef\u9009 */ statement ( s ); } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 package main import \"fmt\" func main () { var c1 , c2 , c3 chan int var i1 , i2 int select { case i1 = <- c1 : fmt . Printf ( \"received \" , i1 , \" from c1\\n\" ) case c2 <- i2 : fmt . Printf ( \"sent \" , i2 , \" to c2\\n\" ) case i3 , ok := ( <- c3 ): // same as: i3, ok := <-c3 if ok { fmt . Printf ( \"received \" , i3 , \" from c3\\n\" ) } else { fmt . Printf ( \"c3 is closed\\n\" ) } default : fmt . Printf ( \"no communication\\n\" ) } }","title":"5.4 select"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#541-go-chan-\u7c7b\u578b\u8865\u5145","text":"\u5f15\u7528\u7c7b\u578b \u96f6\u503c nil <\u53d1\u9001/\u5199>\u578b chan<- <\u63a5\u6536/\u8bfb>\u578b <-chan \u53cc\u5411\u578b chan \u6784\u9020/\u521d\u59cb\u5316 make() \u5173\u95ed close() \u5224\u7b49 == <\u53d1\u9001/\u5199>\u6570\u636e chan <- send_date <\u63a5\u6536/\u8bfb>\u6570\u636e recv_data := <- chan chan \u5173\u95ed\u6216\u6709\u6570\u636e,\u8bfb\u64cd\u4f5c\u4e0d\u963b\u585e chan \u672a\u5173\u95ed\u4e14\u65e0\u6570\u636e,\u8bfb\u64cd\u4f5c\u963b\u585e Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 package main import \"fmt\" func main () { //\u53cc\u5411\u578b chan, \u96f6\u503c nil var ch chan int //\u8f93\u5165\u578b chan-> var ci chan <- int //\u8f93\u51fa\u578b <-chan var co <- chan int //make() cc := make ( chan int , 10 ) ch = cc //\u53cc\u5411\u578b\u8d4b\u503c\u7ed9\u5355\u5411\u578b\u6b63\u786e ci = ch co = ch //\u5355\u5411\u578b\u8d4b\u503c\u7ed9\u53cc\u5411\u578b\u9519\u8bef //ch = ci //\u274c //ch = co //\u274c fmt . Println ( ci , co , ch ) //0xc00008c000 0xc00008c000 0xc00008c000 //\u53ef\u4ee5\u8d4b\u503c -> \u7c7b\u578b\u517c\u5bb9 -> \u53ef\u4ee5\u5224\u7b49 b1 := ch == cc b2 := ci == nil b3 := ch == ci b4 := ch == co //\u4e0d\u53ef\u4ee5\u8d4b\u503c -> \u7c7b\u578b\u4e0d\u517c\u5bb9 -> \u4e0d\u53ef\u4ee5\u5224\u7b49 // b5 := ci == co //\u274c fmt . Println ( ci , co , cc , ch ) //0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c00 fmt . Println ( b1 , b2 , b3 , b4 ) //true false true true //chan \u53d1\u9001/\u5199 ch <- 1 //chan \u63a5\u6536/\u8bfb out := <- ch fmt . Println ( out ) // 1 ch <- 1 //close(), chan \u5173\u95ed close ( ch ) //\u5173\u95ed\u540e\u8bfb\u64cd\u4f5c\u4e0d\u963b\u585e //chan \u5173\u95ed\u540e,\u8fd8\u6709\u6570\u636e.\u8bfb\u64cd\u4f5c,\u8fd4\u56de \u6570\u636e \u548c true out1 , ok1 := <- ch //chan \u5173\u95ed\u540e,\u6ca1\u6709\u6570\u636e.\u8bfb\u64cd\u4f5c,\u8fd4\u56de \u96f6\u503c \u548c false out2 , ok2 := <- ch fmt . Println ( out1 , ok1 , out2 , ok2 ) // 1 true 0 fals ch = make ( chan int , 0 ) //chan \u6ca1\u5173\u95ed,\u65e0\u6570\u636e,\u8bfb\u64cd\u4f5c\u963b\u585e out = <- ch fmt . Println ( \"\u4e0a\u4e00\u53e5\u963b\u585e\u4e86!!!\u6253\u5370\u4e0d\u51fa\u8fd9\u884c\u4e86?!!!\" ) } Go 1 2 3 4 5 6 7 8 9 10 11 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 0xc00008c000 true false true true 1 1 true 0 false fatal error : all goroutines are asleep - deadlock ! goroutine 1 [ chan receive ]: main . main () i : / github . com / gkt_cc_go / src / example / chan / chan . go : 68 + 0x508 exit status 2","title":"5.4.1 go chan \u7c7b\u578b\u8865\u5145"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#6-go-\u5faa\u73af\u8bed\u53e5","text":"","title":"6. GO \u5faa\u73af\u8bed\u53e5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#51-for-\u5faa\u73af","text":"","title":"5.1 for \u5faa\u73af"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#511-init-condition-post","text":"Go 1 for init ; condition ; post { } \u8ba1\u7b97 1 \u5230 10 \u7684\u6570\u5b57\u4e4b\u548c\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 package main import \"fmt\" func main () { sum := 0 for i := 0 ; i <= 10 ; i ++ { // for init; condition; post sum += i } fmt . Println ( sum ) }","title":"5.1.1 init; condition; post"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#512-conditon","text":"init \u548c post \u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7701\u7565\u5b83\uff0c\u7c7b\u4f3c While \u8bed\u53e5\u3002 Go 1 for condition { } \u4ee5\u4e0b\u5b9e\u4f8b\u5728 sum \u5c0f\u4e8e 10 \u7684\u65f6\u5019\u8ba1\u7b97 sum \u81ea\u76f8\u52a0\u540e\u7684\u503c\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import \"fmt\" func main () { sum := 1 for ; sum <= 10 ; { sum += sum } fmt . Println ( sum ) // \u8fd9\u6837\u5199\u4e5f\u53ef\u4ee5\uff0c\u66f4\u50cf While \u8bed\u53e5\u5f62\u5f0f for sum <= 10 { sum += sum } fmt . Println ( sum ) }","title":"5.1.2 conditon"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#513-for-each-range-\u5faa\u73af","text":"\u8fd9\u79cd\u683c\u5f0f\u7684\u5faa\u73af\u53ef\u4ee5\u5bf9 \u5b57\u7b26\u4e32 \u3001 \u6570\u7ec4 \u3001 \u5207\u7247 \u7b49\u8fdb\u884c \u8fed\u4ee3 \u8f93\u51fa\u5143\u7d20\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import \"fmt\" func main () { strings := [] string { \"google\" , \"runoob\" } for i , s := range strings { fmt . Println ( i , s ) } numbers := [ 6 ] int { 1 , 2 , 3 , 5 } for i , x := range numbers { fmt . Printf ( \"\u7b2c %d \u4f4d x \u7684\u503c = %d\\n\" , i , x ) } } Go 1 2 3 4 5 6 7 8 0 google 1 runoob \u7b2c 0 \u4f4d x \u7684\u503c = 1 \u7b2c 1 \u4f4d x \u7684\u503c = 2 \u7b2c 2 \u4f4d x \u7684\u503c = 3 \u7b2c 3 \u4f4d x \u7684\u503c = 5 \u7b2c 4 \u4f4d x \u7684\u503c = 0 \u7b2c 5 \u4f4d x \u7684\u503c = 0","title":"5.1.3 For-each range \u5faa\u73af"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#52-go-\u5faa\u73af\u5173\u952e\u5b57","text":"","title":"5.2 GO \u5faa\u73af\u5173\u952e\u5b57"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#521-break","text":"case 1: \u7528\u4e8e\u5faa\u73af\u8bed\u53e5\u4e2d\u8df3\u51fa\u5faa\u73af\uff0c\u5e76\u5f00\u59cb\u6267\u884c\u5faa\u73af\u4e4b\u540e\u7684\u8bed\u53e5\u3002 case 2: break \u5728 switch \uff08\u5f00\u5173\u8bed\u53e5\uff09\u4e2d\u5728\u6267\u884c\u4e00\u6761 case \u540e\u8df3\u51fa\u8bed\u53e5\u7684\u4f5c\u7528\u3002 case 3 : \u5728\u591a\u91cd\u5faa\u73af\u4e2d\uff0c\u53ef\u4ee5\u7528\u6807\u53f7 label \u6807\u51fa\u60f3 break \u7684\u5faa\u73af\u3002","title":"5.2.1 break"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#case-1","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var i , j int for i = 2 ; i < 10 ; i ++ { for j = 2 ; j <= ( i / j ); j ++ { if ( i % j == 0 ) { break ; // \u5982\u679c\u53d1\u73b0\u56e0\u5b50\uff0c\u5219\u4e0d\u662f\u7d20\u6570 } } if ( j > ( i / j )) { fmt . Printf ( \"%d \u662f\u7d20\u6570\\n\" , i ); } } } Go 1 2 3 4 2 \u662f\u7d20\u6570 3 \u662f\u7d20\u6570 5 \u662f\u7d20\u6570 7 \u662f\u7d20\u6570","title":"case 1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#case-3","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import \"fmt\" func main () { // \u4e0d\u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- break ----\" ) for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) break } } // \u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- break label ----\" ) re : for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) break re } } } Go 1 2 3 4 5 6 7 8 9 10 ---- break ---- i : 1 i2 : 11 i : 2 i2 : 11 i : 3 i2 : 11 ---- break label ---- i : 1 i2 : 11","title":"case 3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#522-continue","text":"Go \u8bed\u8a00\u7684 continue \u8bed\u53e5 \u6709\u70b9\u50cf break \u8bed\u53e5\u3002\u4f46\u662f continue \u4e0d\u662f\u8df3\u51fa\u5faa\u73af\uff0c\u800c\u662f\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u6267\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\u8bed\u53e5\u3002 for \u5faa\u73af\u4e2d\uff0c\u6267\u884c continue \u8bed\u53e5\u4f1a\u89e6\u53d1 for \u589e\u91cf\u8bed\u53e5\u7684\u6267\u884c\u3002 \u5728\u591a\u91cd\u5faa\u73af\u4e2d\uff0c\u53ef\u4ee5\u7528\u6807\u53f7 label \u6807\u51fa\u60f3 continue \u7684\u5faa\u73af\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import \"fmt\" func main () { // \u4e0d\u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- continue ---- \" ) for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) continue } } // \u4f7f\u7528\u6807\u8bb0 fmt . Println ( \"---- continue label ----\" ) re : for i := 1 ; i <= 3 ; i ++ { fmt . Printf ( \"i: %d\\n\" , i ) for i2 := 11 ; i2 <= 13 ; i2 ++ { fmt . Printf ( \"i2: %d\\n\" , i2 ) continue re } } } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ---- continue ---- i : 1 i2 : 11 i2 : 12 i2 : 13 i : 2 i2 : 11 i2 : 12 i2 : 13 i : 3 i2 : 11 i2 : 12 i2 : 13 ---- continue label ---- i : 1 i2 : 11 i : 2 i2 : 11 i : 3 i2 : 11","title":"5.2.2 continue"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#523-goto","text":"Go \u8bed\u8a00\u7684 goto \u8bed\u53e5\u53ef\u4ee5\u65e0\u6761\u4ef6\u5730\u8f6c\u79fb\u5230\u8fc7\u7a0b\u4e2d\u6307\u5b9a\u7684\u884c\u3002 goto \u8bed\u53e5\u901a\u5e38\u4e0e\u6761\u4ef6\u8bed\u53e5\u914d\u5408\u4f7f\u7528\u3002\u53ef\u7528\u6765\u5b9e\u73b0\u6761\u4ef6\u8f6c\u79fb\uff0c \u6784\u6210\u5faa\u73af\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u7b49\u529f\u80fd\u3002 \u4f46\u662f\uff0c\u5728\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u822c\u4e0d\u4e3b\u5f20\u4f7f\u7528 goto \u8bed\u53e5\uff0c \u4ee5\u514d\u9020\u6210\u7a0b\u5e8f\u6d41\u7a0b\u7684\u6df7\u4e71\uff0c\u4f7f\u7406\u89e3\u548c\u8c03\u8bd5\u7a0b\u5e8f\u90fd\u4ea7\u751f\u56f0\u96be\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 10 /* \u5faa\u73af */ LOOP : for a < 20 { if a == 15 { /* \u8df3\u8fc7\u8fed\u4ee3 */ a = a + 1 goto LOOP } fmt . Printf ( \"a\u7684\u503c\u4e3a : %d\\n\" , a ) a ++ } } Go 1 2 3 4 5 6 7 8 9 a\u7684\u503c\u4e3a : 10 a\u7684\u503c\u4e3a : 11 a\u7684\u503c\u4e3a : 12 a\u7684\u503c\u4e3a : 13 a\u7684\u503c\u4e3a : 14 a\u7684\u503c\u4e3a : 16 a\u7684\u503c\u4e3a : 17 a\u7684\u503c\u4e3a : 18 a\u7684\u503c\u4e3a : 19","title":"5.2.3 goto"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#5-go-\u51fd\u6570","text":"\u8bed\u6cd5 Go 1 2 3 func function_name ( [ parameter list ] ) [ return_types ] { \u51fd\u6570\u4f53 } func \uff1a\u51fd\u6570\u7531 func \u5f00\u59cb\u58f0\u660e function_name \uff1a\u51fd\u6570\u540d\u79f0\uff0c \u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u6784\u6210\u4e86\u51fd\u6570\u7b7e\u540d \u3002 parameter list \uff1a\u53c2\u6570\u5217\u8868\uff0c\u53c2\u6570\u5c31\u50cf\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u4f60\u53ef\u4ee5\u5c06\u503c\u4f20\u9012\u7ed9\u53c2\u6570\uff0c\u8fd9\u4e2a\u503c\u88ab\u79f0\u4e3a\u5b9e\u9645\u53c2\u6570\u3002\u53c2\u6570\u5217\u8868\u6307\u5b9a\u7684\u662f\u53c2\u6570\u7c7b\u578b\u3001\u987a\u5e8f\u3001\u53ca\u53c2\u6570\u4e2a\u6570\u3002\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u51fd\u6570\u4e5f\u53ef\u4ee5\u4e0d\u5305\u542b\u53c2\u6570\u3002 return_types \uff1a\u8fd4\u56de\u7c7b\u578b\uff0c\u51fd\u6570\u8fd4\u56de\u4e00\u5217\u503c\u3002 return_types \u662f\u8be5\u5217\u503c\u7684\u6570\u636e\u7c7b\u578b\u3002\u6709\u4e9b\u529f\u80fd\u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b return_types \u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u51fd\u6570\u4f53 \uff1a\u51fd\u6570\u5b9a\u4e49\u7684\u4ee3\u7801\u96c6\u5408\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 /* \u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u6570\u7684\u6700\u5927\u503c */ func max ( num1 , num2 int ) int { /* \u58f0\u660e\u5c40\u90e8\u53d8\u91cf */ var result int if ( num1 > num2 ) { result = num1 } else { result = num2 } return result }","title":"5. GO \u51fd\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#51-go-\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u503c","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 package main import \"fmt\" func swap ( x , y string ) ( string , string ) { return y , x } func main () { a , b := swap ( \"Google\" , \"Runoob\" ) fmt . Println ( a , b ) } Go 1 Runoob Google","title":"5.1 GO \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u53c2\u6570\u503c"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#52--\u51fd\u6570\u53c2\u6570","text":"","title":"5.2  \u51fd\u6570\u53c2\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#521-\u503c\u4f20\u9012","text":"\u503c\u4f20\u9012 \u662f\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570 \u590d\u5236 \u4e00\u4efd\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5728\u51fd\u6570\u4e2d\u5982\u679c\u5bf9\u53c2\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGo \u8bed\u8a00\u4f7f\u7528\u7684\u662f\u503c\u4f20\u9012\uff0c\u5373\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570 \u3002 Go 1 2 3 4 5 6 7 8 9 10 /* \u5b9a\u4e49\u76f8\u4e92\u4ea4\u6362\u503c\u7684\u51fd\u6570 */ func swap ( x , y int ) int { var temp int temp = x /* \u4fdd\u5b58 x \u7684\u503c */ x = y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y*/ return temp ; } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 100 var b int = 200 fmt . Printf ( \"\u4ea4\u6362\u524d a \u7684\u503c\u4e3a : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u524d b \u7684\u503c\u4e3a : %d\\n\" , b ) /* \u901a\u8fc7\u8c03\u7528\u51fd\u6570\u6765\u4ea4\u6362\u503c */ swap ( a , b ) fmt . Printf ( \"\u4ea4\u6362\u540e a \u7684\u503c : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u540e b \u7684\u503c : %d\\n\" , b ) } /* \u5b9a\u4e49\u76f8\u4e92\u4ea4\u6362\u503c\u7684\u51fd\u6570 */ func swap ( x , y int ) int { var temp int temp = x /* \u4fdd\u5b58 x \u7684\u503c */ x = y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y*/ return temp ; } Go 1 2 3 4 \u4ea4\u6362\u524d a \u7684\u503c\u4e3a : 100 \u4ea4\u6362\u524d b \u7684\u503c\u4e3a : 200 \u4ea4\u6362\u540e a \u7684\u503c : 100 \u4ea4\u6362\u540e b \u7684\u503c : 200","title":"5.2.1 \u503c\u4f20\u9012"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#522-\u5f15\u7528\u4f20\u9012","text":"\u5f15\u7528\u4f20\u9012 \u662f\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06 \u5b9e\u9645\u53c2\u6570\u7684\u5730\u5740 \u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u4e2d\u5bf9\u53c2\u6570\u6240\u8fdb\u884c\u7684\u4fee\u6539\uff0c\u5c06\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 \u5f15\u7528\u4f20\u9012\u6307\u9488\u53c2\u6570\u4f20\u9012\u5230\u51fd\u6570\u5185\uff0c\u4ee5\u4e0b\u662f\u4ea4\u6362\u51fd\u6570 swap() \u4f7f\u7528\u4e86\u5f15\u7528\u4f20\u9012\uff1a Go 1 2 3 4 5 6 7 /* \u5b9a\u4e49\u4ea4\u6362\u503c\u51fd\u6570*/ func swap ( x * int , y * int ) { var temp int temp = * x /* \u4fdd\u6301 x \u5730\u5740\u4e0a\u7684\u503c */ * x = * y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ * y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y */ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 package main import \"fmt\" func main () { /* \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf */ var a int = 100 var b int = 200 fmt . Printf ( \"\u4ea4\u6362\u524d\uff0ca \u7684\u503c : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u524d\uff0cb \u7684\u503c : %d\\n\" , b ) /* \u8c03\u7528 swap() \u51fd\u6570 * &a \u6307\u5411 a \u6307\u9488\uff0ca \u53d8\u91cf\u7684\u5730\u5740 * &b \u6307\u5411 b \u6307\u9488\uff0cb \u53d8\u91cf\u7684\u5730\u5740 */ swap ( & a , & b ) fmt . Printf ( \"\u4ea4\u6362\u540e\uff0ca \u7684\u503c : %d\\n\" , a ) fmt . Printf ( \"\u4ea4\u6362\u540e\uff0cb \u7684\u503c : %d\\n\" , b ) } func swap ( x * int , y * int ) { var temp int temp = * x /* \u4fdd\u5b58 x \u5730\u5740\u4e0a\u7684\u503c */ * x = * y /* \u5c06 y \u503c\u8d4b\u7ed9 x */ * y = temp /* \u5c06 temp \u503c\u8d4b\u7ed9 y */ } Go 1 2 3 4 \u4ea4\u6362\u524d \uff0c a \u7684\u503c : 100 \u4ea4\u6362\u524d \uff0c b \u7684\u503c : 200 \u4ea4\u6362\u540e \uff0c a \u7684\u503c : 200 \u4ea4\u6362\u540e \uff0c b \u7684\u503c : 100","title":"5.2.2 \u5f15\u7528\u4f20\u9012"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#53-\u51fd\u6570\u7684\u7528\u6cd5","text":"","title":"5.3 \u51fd\u6570\u7684\u7528\u6cd5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#531-\u51fd\u6570\u4f5c\u4e3a\u5b9e\u53c2","text":"Go \u8bed\u8a00\u53ef\u4ee5\u5f88\u7075\u6d3b\u7684\u521b\u5efa \u51fd\u6570 \uff0c\u5e76\u4f5c\u4e3a \u53e6\u5916\u4e00\u4e2a\u51fd\u6570 \u7684 \u5b9e\u53c2 \u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import ( \"fmt\" \"math\" ) func main (){ /* \u58f0\u660e\u51fd\u6570\u53d8\u91cf */ getSquareRoot := func ( x float64 ) float64 { return math . Sqrt ( x ) } /* \u4f7f\u7528\u51fd\u6570 */ fmt . Println ( getSquareRoot ( 9 )) } Go 1 3","title":"5.3.1 \u51fd\u6570\u4f5c\u4e3a\u5b9e\u53c2"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#532-\u51fd\u6570\u95ed\u5305","text":"Go \u8bed\u8a00\u652f\u6301 \u533f\u540d\u51fd\u6570 \uff0c\u53ef \u4f5c\u4e3a\u95ed\u5305 \u3002 \u533f\u540d\u51fd\u6570 \u662f\u4e00\u4e2a\"\u5185\u8054\"\u8bed\u53e5\u6216\u8868\u8fbe\u5f0f\u3002\u533f\u540d\u51fd\u6570\u7684\u4f18\u8d8a\u6027\u5728\u4e8e\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u5185\u7684\u53d8\u91cf\uff0c\u4e0d\u5fc5\u7533\u660e\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u51fd\u6570 getSequence() \uff0c\u8fd4\u56de\u53e6\u5916\u4e00\u4e2a\u51fd\u6570\u3002\u8be5\u51fd\u6570\u7684\u76ee\u7684\u662f\u5728 \u95ed\u5305\u4e2d\u9012\u589e i \u53d8\u91cf \uff0c\u4ee3\u7801\u5982\u4e0b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import \"fmt\" func getSequence () func () int { i := 0 return func () int { i += 1 return i } } func main (){ /* nextNumber \u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u51fd\u6570 i \u4e3a 0 */ nextNumber := getSequence () /* \u8c03\u7528 nextNumber \u51fd\u6570\uff0ci \u53d8\u91cf\u81ea\u589e 1 \u5e76\u8fd4\u56de */ fmt . Println ( nextNumber ()) fmt . Println ( nextNumber ()) fmt . Println ( nextNumber ()) /* \u521b\u5efa\u65b0\u7684\u51fd\u6570 nextNumber1\uff0c\u5e76\u67e5\u770b\u7ed3\u679c */ nextNumber1 := getSequence () fmt . Println ( nextNumber1 ()) fmt . Println ( nextNumber1 ()) } Go 1 2 3 4 5 1 2 3 1 2","title":"5.3.2 \u51fd\u6570\u95ed\u5305"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#533-\u65b9\u6cd5","text":"Go \u8bed\u8a00\u4e2d\u540c\u65f6\u6709 \u51fd\u6570 \u548c \u65b9\u6cd5 \u3002 \u4e00\u4e2a \u65b9\u6cd5 \u5c31\u662f\u4e00\u4e2a\u5305\u542b\u4e86 \u63a5\u53d7\u8005 \u7684 \u51fd\u6570 \uff0c \u63a5\u53d7\u8005 \u53ef\u4ee5\u662f \u547d\u540d\u7c7b\u578b \u6216\u8005 \u7ed3\u6784\u4f53\u7c7b\u578b \u7684 \u4e00\u4e2a\u503c \u6216\u8005\u662f \u4e00\u4e2a\u6307\u9488 \u3002 \u6240\u6709\u7ed9\u5b9a\u7c7b\u578b\u7684\u65b9\u6cd5\u5c5e\u4e8e\u8be5\u7c7b\u578b\u7684 \u65b9\u6cd5\u96c6 \u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a Go 1 2 3 func ( variable_name variable_data_type ) function_name () [ return_type ]{ /* \u51fd\u6570\u4f53*/ } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 package main import ( \"fmt\" ) /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */ type Circle struct { radius float64 } func main () { var c1 Circle c1 . radius = 10.00 fmt . Println ( \"\u5706\u7684\u9762\u79ef = \" , c1 . getArea ()) } //\u8be5 method \u5c5e\u4e8e Circle \u7c7b\u578b\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5 func ( c Circle ) getArea () float64 { //c.radius \u5373\u4e3a Circle \u7c7b\u578b\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 return 3.14 * c . radius * c . radius } Go 1 \u5706\u7684\u9762\u79ef = 314 Go \u6ca1\u6709\u9762\u5411\u5bf9\u8c61\uff0c\u800c\u6211\u4eec\u77e5\u9053\u5e38\u89c1\u7684 Java\u3002 C++ \u7b49\u8bed\u8a00\u4e2d\uff0c\u5b9e\u73b0\u7c7b\u7684\u65b9\u6cd5\u505a\u6cd5\u90fd\u662f\u7f16\u8bd1\u5668\u9690\u5f0f\u7684\u7ed9\u51fd\u6570\u52a0\u4e00\u4e2a this \u6307\u9488\uff0c\u800c\u5728 Go \u91cc\uff0c\u8fd9\u4e2a this \u6307\u9488\u9700\u8981\u660e\u786e\u7684\u7533\u660e\u51fa\u6765\uff0c\u5176\u5b9e\u548c\u5176\u5b83 OO \u8bed\u8a00\u5e76\u6ca1\u6709\u5f88\u5927\u7684\u533a\u522b\u3002 \u5728 C++ \u4e2d\u662f\u8fd9\u6837\u7684: C++ 1 2 3 4 5 6 7 8 9 10 11 12 13 class Circle { public : float getArea () { return 3.14 * radius * radius ; } private : float radius ; } // \u5176\u4e2d getArea \u7ecf\u8fc7\u7f16\u8bd1\u5668\u5904\u7406\u5927\u81f4\u53d8\u4e3a float getArea ( Circle * const c ) { ... } \u5728 Go \u4e2d\u5219\u662f\u5982\u4e0b: Go 1 2 3 4 func ( c Circle ) getArea () float64 { //c.radius \u5373\u4e3a Circle \u7c7b\u578b\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027 return 3.14 * c . radius * c . radius }","title":"5.3.3 \u65b9\u6cd5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#6-go-\u6570\u7ec4","text":"\u8bed\u6cd5 Go 1 var variable_name [ SIZE ] variable_type Go 1 var balance [ 10 ] float32","title":"6. GO \u6570\u7ec4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#61-\u521d\u59cb\u5316\u6570\u7ec4","text":"Go 1 2 3 4 var balance = [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } // \u6216\u8005 balance := [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u5982\u679c\u6570\u7ec4\u957f\u5ea6\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u4f7f\u7528 ... \u4ee3\u66ff\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u5143\u7d20\u4e2a\u6570\u81ea\u884c\u63a8\u65ad\u6570\u7ec4\u7684\u957f\u5ea6\uff1a Go 1 2 3 var balance = [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u6216 balance := [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u591a\u7ef4\u6570\u7ec4 Go 1 var variable_name [ SIZE1 ][ SIZE2 ] ... [ SIZEN ] variable_type Text Only 1 var threedim [5][10][4] int","title":"6.1 \u521d\u59cb\u5316\u6570\u7ec4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#7-go-\u5207\u7247slice","text":"Go \u8bed\u8a00 \u5207\u7247 \u662f \u5bf9\u6570\u7ec4\u7684\u62bd\u8c61 \u3002 Go \u6570\u7ec4\u7684 \u957f\u5ea6\u4e0d\u53ef\u6539\u53d8 \uff0c\u5728\u7279\u5b9a\u573a\u666f\u4e2d\u8fd9\u6837\u7684\u96c6\u5408\u5c31\u4e0d\u592a\u9002\u7528\uff0c Go \u4e2d\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\uff0c\u529f\u80fd\u5f3a\u608d\u7684\u5185\u7f6e\u7c7b\u578b \u5207\u7247(\"\u52a8\u6001\u6570\u7ec4\") \uff0c\u4e0e \u6570\u7ec4 \u76f8\u6bd4 \u5207\u7247 \u7684 \u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684 \uff0c\u53ef\u4ee5\u8ffd\u52a0\u5143\u7d20\uff0c\u5728\u8ffd\u52a0\u65f6\u53ef\u80fd\u4f7f\u5207\u7247\u7684\u5bb9\u91cf\u589e\u5927\u3002","title":"7. GO \u5207\u7247\uff08Slice\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#71-\u5b9a\u4e49\u5207\u7247","text":"\u8bed\u6cd5 Go 1 var identifier [] type \u5207\u7247\u4e0d\u9700\u8981\u8bf4\u660e\u957f\u5ea6\u3002 \u6216\u4f7f\u7528 make() \u51fd\u6570\u6765\u521b\u5efa\u5207\u7247: Go 1 2 3 4 5 var slice1 [] type = make ([] type , len ) // \u4e5f\u53ef\u4ee5\u7b80\u5199 slice1 := make ([] type , len ) \u4e5f\u53ef\u4ee5\u6307\u5b9a\u5bb9\u91cf\uff0c\u5176\u4e2d capacity \u4e3a\u53ef\u9009\u53c2\u6570\u3002 Go 1 make ([] T , length , capacity ) \u8fd9\u91cc len \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u5e76\u4e14\u4e5f\u662f\u5207\u7247\u7684 \u521d\u59cb\u957f\u5ea6 \u3002 Go 1 s := [] int { 1 , 2 , 3 } // \u76f4\u63a5\u521d\u59cb\u5316\u5207\u7247\uff0c []\u662f\u5207\u7247\u7c7b\u578b Go 1 2 3 4 5 6 7 8 9 10 11 s := arr [:] // \u521d\u59cb\u5316\u5207\u7247 s\uff0c\u662f\u6570\u7ec4 arr \u7684\u5f15\u7528\u3002 s := arr [ startIndex : endIndex ] // \u5c06 arr \u4e2d\u4ece\u4e0b\u6807 startIndex \u5230 endIndex-1 \u4e0b\u7684\u5143\u7d20\u521b\u5efa\u4e3a\u4e00\u4e2a\u65b0\u7684\u5207\u7247\u3002 s := arr [ startIndex :] // \u9ed8\u8ba4 endIndex \u65f6\u5c06\u8868\u793a\u4e00\u76f4\u5230arr\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 s := arr [: endIndex ] // \u9ed8\u8ba4 startIndex \u65f6\u5c06\u8868\u793a\u4ece arr \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002 s1 := s [ startIndex : endIndex ] // \u901a\u8fc7\u5207\u7247 s \u521d\u59cb\u5316\u5207\u7247 s1\u3002 s := make ([] int , len , cap ) // \u901a\u8fc7\u5185\u7f6e\u51fd\u6570 make() \u521d\u59cb\u5316\u5207\u7247s\uff0c[]int \u6807\u8bc6\u4e3a\u5176\u5143\u7d20\u7c7b\u578b\u4e3a int \u7684\u5207\u7247\u3002","title":"7.1 \u5b9a\u4e49\u5207\u7247"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#72-len-\u548c-cap-\u51fd\u6570","text":"\u5207\u7247 \u662f \u53ef\u7d22\u5f15 \u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u7531 len() \u65b9\u6cd5\u83b7\u53d6\u957f\u5ea6\u3002 \u5207\u7247\u63d0\u4f9b\u4e86\u8ba1\u7b97\u5bb9\u91cf\u7684\u65b9\u6cd5 cap() \u53ef\u4ee5\u6d4b\u91cf\u5207\u7247\u6700\u957f\u53ef\u4ee5\u8fbe\u5230\u591a\u5c11\u3002 \u4ee5\u4e0b\u4e3a\u5177\u4f53\u5b9e\u4f8b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import \"fmt\" func main (){ var numbers = make ([] int , 3 , 5 ) // make([]type, length, capcity) printSlice ( numbers ) } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } Go 1 len = 3 cap = 5 slice =[ 0 0 0 ]","title":"7.2 len() \u548c cap() \u51fd\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#73-\u7a7anil\u5207\u7247","text":"\u4e00\u4e2a\u5207\u7247\u5728\u672a\u521d\u59cb\u5316\u4e4b\u524d\u9ed8\u8ba4\u4e3a nil \uff0c\u957f\u5ea6\u4e3a 0 \uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import \"fmt\" func main () { var numbers [] int printSlice ( numbers ) if ( numbers == nil ){ fmt . Printf ( \"\u5207\u7247\u662f\u7a7a\u7684\" ) } } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } Go 1 2 len = 0 cap = 0 slice =[] \u5207\u7247\u662f\u7a7a\u7684","title":"7.3 \u7a7a\uff08nil\uff09\u5207\u7247"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#74-\u5207\u7247\u622a\u53d6","text":"\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e0b\u9650\u53ca\u4e0a\u9650\u6765\u8bbe\u7f6e\u622a\u53d6\u5207\u7247 [lower-bound:upper-bound] \uff0c\u5b9e\u4f8b\u5982\u4e0b Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 package main import \"fmt\" func main () { /* \u521b\u5efa\u5207\u7247 */ numbers := [] int { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } printSlice ( numbers ) /* \u6253\u5370\u539f\u59cb\u5207\u7247 */ fmt . Println ( \"numbers ==\" , numbers ) /* \u6253\u5370\u5b50\u5207\u7247\u4ece\u7d22\u5f151(\u5305\u542b) \u5230\u7d22\u5f154(\u4e0d\u5305\u542b)*/ fmt . Println ( \"numbers[1:4] ==\" , numbers [ 1 : 4 ]) /* \u9ed8\u8ba4\u4e0b\u9650\u4e3a 0*/ fmt . Println ( \"numbers[:3] ==\" , numbers [: 3 ]) /* \u9ed8\u8ba4\u4e0a\u9650\u4e3a len(s)*/ fmt . Println ( \"numbers[4:] ==\" , numbers [ 4 :]) numbers1 := make ([] int , 0 , 5 ) printSlice ( numbers1 ) /* \u6253\u5370\u5b50\u5207\u7247\u4ece\u7d22\u5f15 0(\u5305\u542b) \u5230\u7d22\u5f15 2(\u4e0d\u5305\u542b) */ number2 := numbers [: 2 ] printSlice ( number2 ) /* \u6253\u5370\u5b50\u5207\u7247\u4ece\u7d22\u5f15 2(\u5305\u542b) \u5230\u7d22\u5f15 5(\u4e0d\u5305\u542b) */ number3 := numbers [ 2 : 5 ] printSlice ( number3 ) } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) }","title":"7.4 \u5207\u7247\u622a\u53d6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#75-append-\u548c-copy-\u51fd\u6570","text":"\u5982\u679c\u60f3\u589e\u52a0\u5207\u7247\u7684\u5bb9\u91cf\uff0c\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u66f4\u5927\u7684\u5207\u7247\u5e76\u628a\u539f\u5206\u7247\u7684\u5185\u5bb9\u90fd\u62f7\u8d1d\u8fc7\u6765 \u3002 \u4e0b\u9762\u7684\u4ee3\u7801\u63cf\u8ff0\u4e86\u4ece\u62f7\u8d1d\u5207\u7247\u7684 copy \u65b9\u6cd5\u548c\u5411\u5207\u7247\u8ffd\u52a0\u65b0\u5143\u7d20\u7684 append \u65b9\u6cd5\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import \"fmt\" func main () { var numbers [] int printSlice ( numbers ) // len=0 cap=0 slice=[] /* 1. \u5141\u8bb8\u8ffd\u52a0\u7a7a\u5207\u7247 */ numbers = append ( numbers , 0 ) printSlice ( numbers ) // len=1 cap=1 slice=[0] /* \u5411\u5207\u7247\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 */ numbers = append ( numbers , 1 ) printSlice ( numbers ) // len=2 cap=2 slice=[0 1] /* \u540c\u65f6\u6dfb\u52a0\u591a\u4e2a\u5143\u7d20 */ numbers = append ( numbers , 2 , 3 , 4 ) printSlice ( numbers ) // len=5 cap=6 slice=[0 1 2 3 4] /* \u521b\u5efa\u5207\u7247 numbers1 \u662f\u4e4b\u524d\u5207\u7247\u7684\u4e24\u500d\u5bb9\u91cf*/ numbers1 := make ([] int , len ( numbers ), ( cap ( numbers )) * 2 ) /* \u62f7\u8d1d numbers \u7684\u5185\u5bb9\u5230 numbers1 */ copy ( numbers1 , numbers ) printSlice ( numbers1 ) // len=5 cap=12 slice=[0 1 2 3 4] } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) }","title":"7.5 append() \u548c copy() \u51fd\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#8-go-range-\u8bed\u8a00\u8303\u56f4","text":"Go \u8bed\u8a00\u4e2d range \u5173\u952e\u5b57\u7528\u4e8e for \u5faa\u73af\u4e2d\u8fed\u4ee3 \u6570\u7ec4(array) \u3001 \u5207\u7247(slice) \u3001 \u901a\u9053(channel) \u6216 \u96c6\u5408(map) \u7684\u5143\u7d20\u3002 \u5728\u6570\u7ec4\u548c\u5207\u7247\u4e2d\u5b83\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\u548c\u7d22\u5f15\u5bf9\u5e94\u7684\u503c\uff0c\u5728\u96c6\u5408\u4e2d\u8fd4\u56de key-value \u5bf9\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 package main import \"fmt\" func main () { //\u8fd9\u662f\u6211\u4eec\u4f7f\u7528range\u53bb\u6c42\u4e00\u4e2aslice\u7684\u548c\u3002\u4f7f\u7528\u6570\u7ec4\u8ddf\u8fd9\u4e2a\u5f88\u7c7b\u4f3c nums := [] int { 2 , 3 , 4 } sum := 0 for _ , num := range nums { sum += num } fmt . Println ( \"sum:\" , sum ) //\u5728\u6570\u7ec4\u4e0a\u4f7f\u7528range\u5c06\u4f20\u5165index\u548c\u503c\u4e24\u4e2a\u53d8\u91cf\u3002 //\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u8be5\u5143\u7d20\u7684\u5e8f\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7a7a\u767d\u7b26\"_\"\u7701\u7565\u4e86\u3002\u6709\u65f6\u4faf\u6211\u4eec\u786e\u5b9e\u9700\u8981\u77e5\u9053\u5b83\u7684\u7d22\u5f15\u3002 for i , num := range nums { if num == 3 { fmt . Println ( \"index:\" , i ) } } //range\u4e5f\u53ef\u4ee5\u7528\u5728map\u7684\u952e\u503c\u5bf9\u4e0a\u3002 kvs := map [ string ] string { \"a\" : \"apple\" , \"b\" : \"banana\" } for k , v := range kvs { fmt . Printf ( \"%s -> %s\\n\" , k , v ) } //range\u4e5f\u53ef\u4ee5\u7528\u6765\u679a\u4e3eUnicode\u5b57\u7b26\u4e32\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5b57\u7b26\uff08Unicode\u7684\u503c\uff09\u672c\u8eab\u3002 for i , c := range \"go\" { fmt . Println ( i , c ) } } Go 1 2 3 4 5 6 sum : 9 index : 1 a - > apple b - > banana 0 103 1 111","title":"8. GO Range \u8bed\u8a00\u8303\u56f4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#9-go-map-\u96c6\u5408","text":"Map \u662f\u4e00\u79cd \u65e0\u5e8f \u7684 \u952e\u503c\u5bf9 \u7684 \u96c6\u5408 \u3002 Map \u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\u901a\u8fc7 key \u6765\u5feb\u901f\u68c0\u7d22\u6570\u636e\uff0c key \u7c7b\u4f3c\u4e8e\u7d22\u5f15\uff0c\u6307\u5411\u6570\u636e\u7684\u503c\u3002 Map \u662f\u4e00\u79cd\u96c6\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u50cf\u8fed\u4ee3\u6570\u7ec4\u548c\u5207\u7247\u90a3\u6837\u8fed\u4ee3\u5b83\u3002\u4e0d\u8fc7\uff0c Map \u662f\u65e0\u5e8f\u7684\uff0c\u6211\u4eec\u65e0\u6cd5\u51b3\u5b9a\u5b83\u7684\u8fd4\u56de\u987a\u5e8f\uff0c\u8fd9\u662f\u56e0\u4e3a Map \u662f\u4f7f\u7528 hash \u8868\u6765\u5b9e\u73b0\u7684\u3002","title":"9. GO Map \u96c6\u5408"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#91-\u5b9a\u4e49","text":"\u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u51fd\u6570 make \u4e5f\u53ef\u4ee5\u4f7f\u7528 map \u5173\u952e\u5b57\u6765\u5b9a\u4e49 Map : Go 1 2 3 4 5 6 /* 1. \u58f0\u660e\u53d8\u91cf\uff0c \u9ed8\u8ba4 map \u662f nil*/ var map_variable map [ key_data_type ] value_data_type /* 2. \u4f7f\u7528 make \u51fd\u6570*/ map_variable := make ( map [ key_data_type ] value_data_map ) \u5982\u679c\u4e0d\u521d\u59cb\u5316 map \uff0c\u90a3\u4e48\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a nil map \u3002 nil map \u4e0d\u80fd\u7528\u6765\u5b58\u653e\u952e\u503c\u5bf9 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 package main import \"fmt\" func main () { var countryCapitalMap map [ string ] string /*\u521b\u5efa\u96c6\u5408 */ countryCapitalMap = make ( map [ string ] string ) /* map\u63d2\u5165key - value\u5bf9,\u5404\u4e2a\u56fd\u5bb6\u5bf9\u5e94\u7684\u9996\u90fd */ countryCapitalMap [ \"France\" ] = \"\u5df4\u9ece\" countryCapitalMap [ \"Italy\" ] = \"\u7f57\u9a6c\" countryCapitalMap [ \"Japan\" ] = \"\u4e1c\u4eac\" countryCapitalMap [ \"India \" ] = \"\u65b0\u5fb7\u91cc\" /*\u4f7f\u7528\u952e\u8f93\u51fa\u5730\u56fe\u503c */ for country := range countryCapitalMap { fmt . Println ( country , \"\u9996\u90fd\u662f\" , countryCapitalMap [ country ]) } /*\u67e5\u770b\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u662f\u5426\u5b58\u5728 */ capital , ok := countryCapitalMap [ \"American\" ] /*\u5982\u679c\u786e\u5b9a\u662f\u771f\u5b9e\u7684,\u5219\u5b58\u5728,\u5426\u5219\u4e0d\u5b58\u5728 */ /*fmt.Println(capital) */ /*fmt.Println(ok) */ if ( ok ) { fmt . Println ( \"American \u7684\u9996\u90fd\u662f\" , capital ) } else { fmt . Println ( \"American \u7684\u9996\u90fd\u4e0d\u5b58\u5728\" ) } } Go 1 2 3 4 5 France \u9996\u90fd\u662f \u5df4\u9ece Italy \u9996\u90fd\u662f \u7f57\u9a6c Japan \u9996\u90fd\u662f \u4e1c\u4eac India \u9996\u90fd\u662f \u65b0\u5fb7\u91cc American \u7684\u9996\u90fd\u4e0d\u5b58\u5728","title":"9.1 \u5b9a\u4e49"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#92-delete-\u51fd\u6570","text":"Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import \"fmt\" func main () { /* \u521b\u5efamap */ countryCapitalMap := map [ string ] string { \"France\" : \"Paris\" , \"Italy\" : \"Rome\" , \"Japan\" : \"Tokyo\" , \"India\" : \"New delhi\" } fmt . Println ( \"\u539f\u59cb\u5730\u56fe\" ) /* \u6253\u5370\u5730\u56fe */ for country := range countryCapitalMap { fmt . Println ( country , \"\u9996\u90fd\u662f\" , countryCapitalMap [ country ]) } /*\u5220\u9664\u5143\u7d20*/ delete ( countryCapitalMap , \"France\" ) fmt . Println ( \"\u6cd5\u56fd\u6761\u76ee\u88ab\u5220\u9664\" ) fmt . Println ( \"\u5220\u9664\u5143\u7d20\u540e\u5730\u56fe\" ) /*\u6253\u5370\u5730\u56fe*/ for country := range countryCapitalMap { fmt . Println ( country , \"\u9996\u90fd\u662f\" , countryCapitalMap [ country ]) } } Go 1 2 3 4 5 6 7 8 9 10 \u539f\u59cb\u5730\u56fe India \u9996\u90fd\u662f New delhi France \u9996\u90fd\u662f Paris Italy \u9996\u90fd\u662f Rome Japan \u9996\u90fd\u662f Tokyo \u6cd5\u56fd\u6761\u76ee\u88ab\u5220\u9664 \u5220\u9664\u5143\u7d20\u540e\u5730\u56fe Italy \u9996\u90fd\u662f Rome Japan \u9996\u90fd\u662f Tokyo India \u9996\u90fd\u662f New delhi","title":"9.2 delete() \u51fd\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#10-go-\u63a5\u53e3","text":"Go \u8bed\u8a00\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u79cd \u6570\u636e\u7c7b\u578b \u5373 \u63a5\u53e3 \uff0c \u5b83\u628a \u6240\u6709\u7684\u5177\u6709\u5171\u6027\u7684\u65b9\u6cd5 \u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u53ea\u8981\u5b9e\u73b0\u4e86\u8fd9\u4e9b \u65b9\u6cd5 \u5c31\u662f\u5b9e\u73b0\u4e86\u8fd9\u4e2a \u63a5\u53e3 \u3002 \u8bed\u6cd5 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /* \u63a5\u53e3 */ type interface_name interface { method_name1 [ return type ] method_name2 [ return type ] ... method_namen [ return type ] } /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */ type struct_name struct { /* code */ } /* \u5b9e\u73b0\u63a5\u53e3\u65b9\u6cd5 */ func ( struct_name_varible struct_name ) method_name1 () [ return type ]{ /* code */ } func ( struct_name_varible struct_name ) method_name2 () [ return type ]{ /* code */ } \u5b9e\u4f8b Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 package main import ( \"fmt\" ) /* \u5b9a\u4e49\u63a5\u53e3\u96c6\u5408 */ type Phone interface { call () } /* \u5b9a\u4e49 Nokia \u7c7b */ type NokiaPhone struct { } /* \u5b9e\u73b0 Nokia \u7684 call \u65b9\u6cd5 */ func ( nokiadphone NokiaPhone ) call () { fmt . Println ( \"I am Nokia, I can call you!\" ) } /* \u5b9a\u4e49 Iphone \u7c7b*/ type Iphone struct { } /* \u5b9e\u73b0 Iphone \u7684 call \u65b9\u6cd5 */ func ( iphone Iphone ) call () { fmt . Println ( \"I am iphone, I can call you!\" ) } func main () { var phone Phone phone = new ( NokiaPhone ) phone . call () // I am Nokia, I can call you! phone = new ( Iphone ) phone . call () // I am iPhone, I can call you! }","title":"10. GO \u63a5\u53e3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#11-go-\u9519\u8bef\u5904\u7406","text":"Go \u8bed\u8a00\u901a\u8fc7\u5185\u7f6e\u7684 \u9519\u8bef\u63a5\u53e3 \u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684 \u9519\u8bef\u5904\u7406\u673a\u5236 \u3002 error\u7c7b\u578b \u662f\u4e00\u4e2a \u63a5\u53e3\u7c7b\u578b \uff0c\u8fd9\u662f\u5b83\u7684\u5b9a\u4e49\uff1a Go 1 2 3 type error interface { Error () string } \u6211\u4eec\u53ef\u4ee5\u5728\u7f16\u7801\u4e2d\u901a\u8fc7\u5b9e\u73b0 error \u63a5\u53e3\u7c7b\u578b\u6765\u751f\u6210\u9519\u8bef\u4fe1\u606f\u3002 \u51fd\u6570\u901a\u5e38\u5728\u6700\u540e\u7684\u8fd4\u56de\u503c\u4e2d\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002\u4f7f\u7528 errors.New \u53ef\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u4fe1\u606f\uff1a Go 1 2 3 4 5 6 func Sqrt ( f float64 ) ( float64 , error ) { if f < 0 { return 0 , errors . New ( \"math: square root of negative number\" ) } // \u5b9e\u73b0 } Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 package main import ( \"fmt\" ) // \u5b9a\u4e49\u4e00\u4e2a DivideError \u7ed3\u6784 type DivideError struct { dividee int divider int } // \u5b9e\u73b0 `error` \u63a5\u53e3 func ( de * DivideError ) Error () string { strFormat := ` Cannot proceed, the divider is zero. dividee: %d divider: 0 ` return fmt . Sprintf ( strFormat , de . dividee ) } // \u5b9a\u4e49 `int` \u7c7b\u578b\u9664\u6cd5\u8fd0\u7b97\u7684\u51fd\u6570 func Divide ( varDividee int , varDivider int ) ( result int , errorMsg string ) { if varDivider == 0 { dData := DivideError { dividee : varDividee , divider : varDivider , } errorMsg = dData . Error () return } else { return varDividee / varDivider , \"\" } } func main () { // \u6b63\u5e38\u60c5\u51b5 if result , errorMsg := Divide ( 100 , 10 ); errorMsg == \"\" { fmt . Println ( \"100/10 = \" , result ) } // \u5f53\u9664\u6570\u4e3a\u96f6\u7684\u65f6\u5019\u4f1a\u8fd4\u56de\u9519\u8bef\u4fe1\u606f if _ , errorMsg := Divide ( 100 , 0 ); errorMsg != \"\" { fmt . Println ( \"errorMsg is: \" , errorMsg ) } } Go 1 2 3 4 5 100 / 10 = 10 errorMsg is : Cannot proceed , the divider is zero . dividee : 100 divider : 0","title":"11. GO \u9519\u8bef\u5904\u7406"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#12-go-\u5e76\u53d1","text":"Go \u8bed\u8a00\u652f\u6301\u5e76\u53d1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7 go \u5173\u952e\u5b57\u6765\u5f00\u542f goroutine \u5373\u53ef\u3002 goroutine \u662f \u8f7b\u91cf\u7ea7\u7ebf\u7a0b \uff0c goroutine \u7684\u8c03\u5ea6\u662f\u7531 Golang \u8fd0\u884c\u65f6\u8fdb\u884c\u7ba1\u7406\u7684\u3002 goroutine \u8bed\u6cd5\u683c\u5f0f\uff1a Go 1 go \u51fd\u6570\u540d \uff08 \u53c2\u6570\u5217\u8868 \uff09 Go \u5141\u8bb8\u4f7f\u7528 go \u8bed\u53e5\u5f00\u542f\u4e00\u4e2a\u65b0\u7684 \u8fd0\u884c\u671f\u7ebf\u7a0b \uff0c \u5373 goroutine \uff0c\u4ee5\u4e00\u4e2a\u4e0d\u540c\u7684\u3001\u65b0\u521b\u5efa\u7684 goroutine \u6765\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u3002 \u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u6240\u6709 goroutine \u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main import ( \"fmt\" \"time\" ) func say ( s string ) { for i := 0 ; i < 5 ; i ++ { time . Sleep ( 100 * time . Millisecond ) fmt . Println ( s ) } } func main () { go say ( \"world\" ) say ( \"hello\" ) } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u4f60\u4f1a\u770b\u5230\u8f93\u51fa\u7684 hello \u548c world \u662f\u6ca1\u6709\u56fa\u5b9a\u5148\u540e\u987a\u5e8f\u3002\u56e0\u4e3a\u5b83\u4eec\u662f\u4e24\u4e2a goroutine \u5728\u6267\u884c\uff1a Go 1 2 3 4 5 6 7 8 9 10 world hello hello world world hello hello world world hello","title":"12. GO \u5e76\u53d1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#13-go-channel-\u901a\u9053","text":"\u901a\u9053\uff08channel \u662f\u7528\u6765\u4f20\u9012\u6570\u636e\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u3002 \u901a\u9053\u53ef\u7528\u4e8e\u4e24\u4e2a goroutine \u4e4b\u95f4\u901a\u8fc7\u4f20\u9012\u4e00\u4e2a \u6307\u5b9a\u7c7b\u578b\u7684\u503c \u6765\u540c\u6b65 \u8fd0\u884c \u548c \u901a\u8baf \u3002 \u64cd\u4f5c\u7b26 <- \u7528\u4e8e\u6307\u5b9a\u901a\u9053\u7684 \u65b9\u5411 \uff0c \u53d1\u9001 \u6216 \u63a5\u6536 \u3002\u5982\u679c\u672a\u6307\u5b9a\u65b9\u5411\uff0c\u5219\u4e3a \u53cc\u5411\u901a\u9053 \u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package main import ( \"fmt\" ) func sum ( s [] int , c chan int ) { sum := 0 for _ , v := range s { sum += v } c <- sum // \u628a sum \u53d1\u9001\u5230\u901a\u9053 c } func main () { s := [] int { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } c := make ( chan int ) length := len ( s ) go sum ( s [: length / 2 ], c ) go sum ( s [ length / 2 :], c ) x , y := <- c , <- c // \u4ece\u901a\u9053 c \u4e2d\u63a5\u6536 fmt . Println ( x , y , x + y ) }","title":"13. GO channel \u901a\u9053"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20GO%20%E8%AF%AD%E8%A8%80/#131-chan-\u8bbe\u7f6e\u901a\u9053\u7f13\u51b2\u533a\u5927\u5c0f","text":"\u901a\u9053\u53ef\u4ee5\u8bbe\u7f6e\u7f13\u51b2\u533a\uff0c\u901a\u8fc7 make \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u7f13\u51b2\u533a\u5927\u5c0f\uff1a Text Only 1 ch := make(chan int, 100) \u5e26\u7f13\u51b2\u533a\u7684\u901a\u9053\u5141\u8bb8\u53d1\u9001\u7aef\u7684\u6570\u636e\u53d1\u9001\u548c\u63a5\u6536\u7aef\u7684\u6570\u636e\u83b7\u53d6\u5904\u4e8e\u5f02\u6b65\u72b6\u6001\uff0c \u5c31\u662f\u8bf4\u53d1\u9001\u7aef\u53d1\u9001\u7684\u6570\u636e\u53ef\u4ee5\u653e\u5728\u7f13\u51b2\u533a\u91cc\u9762\uff0c\u53ef\u4ee5\u7b49\u5f85\u63a5\u6536\u7aef\u53bb\u83b7\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u7acb\u523b\u9700\u8981\u63a5\u6536\u7aef\u53bb\u83b7\u53d6\u6570\u636e \u3002 \u4e0d\u8fc7\u7531\u4e8e\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u8fd8\u662f\u5fc5\u987b\u6709\u63a5\u6536\u7aef\u6765\u63a5\u6536\u6570\u636e\u7684\uff0c\u5426\u5219\u7f13\u51b2\u533a\u4e00\u6ee1\uff0c\u6570\u636e\u53d1\u9001\u7aef\u5c31\u65e0\u6cd5\u518d\u53d1\u9001\u6570\u636e\u4e86\u3002 \u6ce8\u610f \uff1a\u5982\u679c\u901a\u9053\u4e0d\u5e26\u7f13\u51b2\uff0c\u53d1\u9001\u65b9\u4f1a\u963b\u585e\u76f4\u5230\u63a5\u6536\u65b9\u4ece\u901a\u9053\u4e2d\u63a5\u6536\u4e86\u503c\u3002\u5982\u679c\u901a\u9053\u5e26\u7f13\u51b2\uff0c\u53d1\u9001\u65b9\u5219\u4f1a\u963b\u585e\u76f4\u5230\u53d1\u9001\u7684\u503c\u88ab\u62f7\u8d1d\u5230\u7f13\u51b2\u533a\u5185\uff1b\u5982\u679c\u7f13\u51b2\u533a\u5df2\u6ee1\uff0c\u5219\u610f\u5473\u7740\u9700\u8981\u7b49\u5f85\u76f4\u5230\u67d0\u4e2a\u63a5\u6536\u65b9\u83b7\u53d6\u5230\u4e00\u4e2a\u503c\u3002\u63a5\u6536\u65b9\u5728\u6709\u503c\u53ef\u4ee5\u63a5\u6536\u4e4b\u524d\u4f1a\u4e00\u76f4**\u963b\u585e**\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import ( \"fmt\" ) func fibonacci ( n int , c chan int ) { x , y := 0 , 1 for i := 0 ; i < n ; i ++ { c <- x x , y = y , x + y } close ( c ) } func main () { c := make ( chan int , 10 ) go fibonacci ( cap ( c ), c ) // range \u51fd\u6570\u904d\u5386\u6bcf\u4e2a\u4ece\u901a\u9053\u63a5\u6536\u5230\u7684\u6570\u636e\uff0c\u56e0\u4e3a c \u5728\u53d1\u9001\u5b8c 10 \u4e2a // \u6570\u636e\u4e4b\u540e\u5c31\u5173\u95ed\u4e86\u901a\u9053\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec range \u51fd\u6570\u5728\u63a5\u6536\u5230 10 \u4e2a\u6570\u636e // \u4e4b\u540e\u5c31\u7ed3\u675f\u4e86\u3002\u5982\u679c\u4e0a\u9762\u7684 c \u901a\u9053\u4e0d\u5173\u95ed\uff0c\u90a3\u4e48 range \u51fd\u6570\u5c31\u4e0d // \u4f1a\u7ed3\u675f\uff0c\u4ece\u800c\u5728\u63a5\u6536\u7b2c 11 \u4e2a\u6570\u636e\u7684\u65f6\u5019\u5c31\u963b\u585e\u4e86\u3002 for i := range c { fmt . Println ( i ) } }","title":"13.1 chan \u8bbe\u7f6e\u901a\u9053\u7f13\u51b2\u533a\u5927\u5c0f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5.%20GO%20%E5%87%BD%E6%95%B0/","text":"5. GO \u51fd\u6570 \u00b6 \u8bed\u6cd5 ```go func function_name( [parameter list] ) [return_types] {","title":"5. GO \u51fd\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5.%20GO%20%E5%87%BD%E6%95%B0/#5-go-\u51fd\u6570","text":"\u8bed\u6cd5 ```go func function_name( [parameter list] ) [return_types] {","title":"5. GO \u51fd\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5.%20GO%20%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/","text":"5. GO \u6761\u4ef6\u8bed\u53e5 \u00b6 5.1 if \u00b6 ```go if \u5e03\u5c14\u8868\u8fbe\u5f0f {","title":"5. GO \u6761\u4ef6\u8bed\u53e5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5.%20GO%20%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/#5-go-\u6761\u4ef6\u8bed\u53e5","text":"","title":"5. GO \u6761\u4ef6\u8bed\u53e5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/5.%20GO%20%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/#51-if","text":"```go if \u5e03\u5c14\u8868\u8fbe\u5f0f {","title":"5.1 if"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/6.%20GO%20%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/","text":"6. GO \u5faa\u73af\u8bed\u53e5 \u00b6 5.1 for \u5faa\u73af \u00b6 5.1.1 init; condition; post \u00b6 Go 1 for init ; condition ; post { } \u8ba1\u7b97 1 \u5230 10 \u7684\u6570\u5b57\u4e4b\u548c\uff1a ```go package main","title":"6. GO \u5faa\u73af\u8bed\u53e5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/6.%20GO%20%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#6-go-\u5faa\u73af\u8bed\u53e5","text":"","title":"6. GO \u5faa\u73af\u8bed\u53e5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/6.%20GO%20%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#51-for-\u5faa\u73af","text":"","title":"5.1 for \u5faa\u73af"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/6.%20GO%20%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/#511-init-condition-post","text":"Go 1 for init ; condition ; post { } \u8ba1\u7b97 1 \u5230 10 \u7684\u6570\u5b57\u4e4b\u548c\uff1a ```go package main","title":"5.1.1 init; condition; post"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/6.%20GO%20%E6%95%B0%E7%BB%84/","text":"6. GO \u6570\u7ec4 \u00b6 \u8bed\u6cd5 Go 1 var variable_name [ SIZE ] variable_type Go 1 var balance [ 10 ] float32 6.1 \u521d\u59cb\u5316\u6570\u7ec4 \u00b6 Go 1 2 3 4 var balance = [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } // \u6216\u8005 balance := [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u5982\u679c\u6570\u7ec4\u957f\u5ea6\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u4f7f\u7528 ... \u4ee3\u66ff\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u5143\u7d20\u4e2a\u6570\u81ea\u884c\u63a8\u65ad\u6570\u7ec4\u7684\u957f\u5ea6\uff1a Go 1 2 3 var balance = [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u6216 balance := [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u591a\u7ef4\u6570\u7ec4 Go 1 var variable_name [ SIZE1 ][ SIZE2 ] ... [ SIZEN ] variable_type Text Only 1 var threedim [5][10][4] int","title":"6. GO \u6570\u7ec4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/6.%20GO%20%E6%95%B0%E7%BB%84/#6-go-\u6570\u7ec4","text":"\u8bed\u6cd5 Go 1 var variable_name [ SIZE ] variable_type Go 1 var balance [ 10 ] float32","title":"6. GO \u6570\u7ec4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/6.%20GO%20%E6%95%B0%E7%BB%84/#61-\u521d\u59cb\u5316\u6570\u7ec4","text":"Go 1 2 3 4 var balance = [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } // \u6216\u8005 balance := [ 5 ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u5982\u679c\u6570\u7ec4\u957f\u5ea6\u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u4f7f\u7528 ... \u4ee3\u66ff\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u7f16\u8bd1\u5668\u4f1a\u6839\u636e\u5143\u7d20\u4e2a\u6570\u81ea\u884c\u63a8\u65ad\u6570\u7ec4\u7684\u957f\u5ea6\uff1a Go 1 2 3 var balance = [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u6216 balance := [ ... ] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } \u591a\u7ef4\u6570\u7ec4 Go 1 var variable_name [ SIZE1 ][ SIZE2 ] ... [ SIZEN ] variable_type Text Only 1 var threedim [5][10][4] int","title":"6.1 \u521d\u59cb\u5316\u6570\u7ec4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/7.%20GO%20%E5%88%87%E7%89%87%EF%BC%88Slice%EF%BC%89/","text":"7. GO \u5207\u7247\uff08Slice\uff09 \u00b6 Go \u8bed\u8a00 \u5207\u7247 \u662f \u5bf9\u6570\u7ec4\u7684\u62bd\u8c61 \u3002 Go \u6570\u7ec4\u7684 \u957f\u5ea6\u4e0d\u53ef\u6539\u53d8 \uff0c\u5728\u7279\u5b9a\u573a\u666f\u4e2d\u8fd9\u6837\u7684\u96c6\u5408\u5c31\u4e0d\u592a\u9002\u7528\uff0c Go \u4e2d\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\uff0c\u529f\u80fd\u5f3a\u608d\u7684\u5185\u7f6e\u7c7b\u578b \u5207\u7247(\"\u52a8\u6001\u6570\u7ec4\") \uff0c\u4e0e \u6570\u7ec4 \u76f8\u6bd4 \u5207\u7247 \u7684 \u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684 \uff0c\u53ef\u4ee5\u8ffd\u52a0\u5143\u7d20\uff0c\u5728\u8ffd\u52a0\u65f6\u53ef\u80fd\u4f7f\u5207\u7247\u7684\u5bb9\u91cf\u589e\u5927\u3002 7.1 \u5b9a\u4e49\u5207\u7247 \u00b6 \u8bed\u6cd5 Go 1 var identifier [] type \u5207\u7247\u4e0d\u9700\u8981\u8bf4\u660e\u957f\u5ea6\u3002 \u6216\u4f7f\u7528 make() \u51fd\u6570\u6765\u521b\u5efa\u5207\u7247: Go 1 2 3 4 5 var slice1 [] type = make ([] type , len ) // \u4e5f\u53ef\u4ee5\u7b80\u5199 slice1 := make ([] type , len ) \u4e5f\u53ef\u4ee5\u6307\u5b9a\u5bb9\u91cf\uff0c\u5176\u4e2d capacity \u4e3a\u53ef\u9009\u53c2\u6570\u3002 Go 1 make ([] T , length , capacity ) \u8fd9\u91cc len \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u5e76\u4e14\u4e5f\u662f\u5207\u7247\u7684 \u521d\u59cb\u957f\u5ea6 \u3002 Go 1 s := [] int { 1 , 2 , 3 } // \u76f4\u63a5\u521d\u59cb\u5316\u5207\u7247\uff0c []\u662f\u5207\u7247\u7c7b\u578b Go 1 2 3 4 5 6 7 8 9 10 11 s := arr [:] // \u521d\u59cb\u5316\u5207\u7247 s\uff0c\u662f\u6570\u7ec4 arr \u7684\u5f15\u7528\u3002 s := arr [ startIndex : endIndex ] // \u5c06 arr \u4e2d\u4ece\u4e0b\u6807 startIndex \u5230 endIndex-1 \u4e0b\u7684\u5143\u7d20\u521b\u5efa\u4e3a\u4e00\u4e2a\u65b0\u7684\u5207\u7247\u3002 s := arr [ startIndex :] // \u9ed8\u8ba4 endIndex \u65f6\u5c06\u8868\u793a\u4e00\u76f4\u5230arr\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 s := arr [: endIndex ] // \u9ed8\u8ba4 startIndex \u65f6\u5c06\u8868\u793a\u4ece arr \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002 s1 := s [ startIndex : endIndex ] // \u901a\u8fc7\u5207\u7247 s \u521d\u59cb\u5316\u5207\u7247 s1\u3002 s := make ([] int , len , cap ) // \u901a\u8fc7\u5185\u7f6e\u51fd\u6570 make() \u521d\u59cb\u5316\u5207\u7247s\uff0c[]int \u6807\u8bc6\u4e3a\u5176\u5143\u7d20\u7c7b\u578b\u4e3a int \u7684\u5207\u7247\u3002 7.2 len() \u548c cap() \u51fd\u6570 \u00b6 \u5207\u7247 \u662f \u53ef\u7d22\u5f15 \u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u7531 len() \u65b9\u6cd5\u83b7\u53d6\u957f\u5ea6\u3002 \u5207\u7247\u63d0\u4f9b\u4e86\u8ba1\u7b97\u5bb9\u91cf\u7684\u65b9\u6cd5 cap() \u53ef\u4ee5\u6d4b\u91cf\u5207\u7247\u6700\u957f\u53ef\u4ee5\u8fbe\u5230\u591a\u5c11\u3002 \u4ee5\u4e0b\u4e3a\u5177\u4f53\u5b9e\u4f8b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import \"fmt\" func main (){ var numbers = make ([] int , 3 , 5 ) // make([]type, length, capcity) printSlice ( numbers ) } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } Go 1 len = 3 cap = 5 slice =[ 0 0 0 ] 7.3 \u7a7a\uff08nil\uff09\u5207\u7247 \u00b6 \u4e00\u4e2a\u5207\u7247\u5728\u672a\u521d\u59cb\u5316\u4e4b\u524d\u9ed8\u8ba4\u4e3a nil \uff0c\u957f\u5ea6\u4e3a 0 \uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a ```go package main","title":"7. GO \u5207\u7247\uff08Slice\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/7.%20GO%20%E5%88%87%E7%89%87%EF%BC%88Slice%EF%BC%89/#7-go-\u5207\u7247slice","text":"Go \u8bed\u8a00 \u5207\u7247 \u662f \u5bf9\u6570\u7ec4\u7684\u62bd\u8c61 \u3002 Go \u6570\u7ec4\u7684 \u957f\u5ea6\u4e0d\u53ef\u6539\u53d8 \uff0c\u5728\u7279\u5b9a\u573a\u666f\u4e2d\u8fd9\u6837\u7684\u96c6\u5408\u5c31\u4e0d\u592a\u9002\u7528\uff0c Go \u4e2d\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\uff0c\u529f\u80fd\u5f3a\u608d\u7684\u5185\u7f6e\u7c7b\u578b \u5207\u7247(\"\u52a8\u6001\u6570\u7ec4\") \uff0c\u4e0e \u6570\u7ec4 \u76f8\u6bd4 \u5207\u7247 \u7684 \u957f\u5ea6\u662f\u4e0d\u56fa\u5b9a\u7684 \uff0c\u53ef\u4ee5\u8ffd\u52a0\u5143\u7d20\uff0c\u5728\u8ffd\u52a0\u65f6\u53ef\u80fd\u4f7f\u5207\u7247\u7684\u5bb9\u91cf\u589e\u5927\u3002","title":"7. GO \u5207\u7247\uff08Slice\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/7.%20GO%20%E5%88%87%E7%89%87%EF%BC%88Slice%EF%BC%89/#71-\u5b9a\u4e49\u5207\u7247","text":"\u8bed\u6cd5 Go 1 var identifier [] type \u5207\u7247\u4e0d\u9700\u8981\u8bf4\u660e\u957f\u5ea6\u3002 \u6216\u4f7f\u7528 make() \u51fd\u6570\u6765\u521b\u5efa\u5207\u7247: Go 1 2 3 4 5 var slice1 [] type = make ([] type , len ) // \u4e5f\u53ef\u4ee5\u7b80\u5199 slice1 := make ([] type , len ) \u4e5f\u53ef\u4ee5\u6307\u5b9a\u5bb9\u91cf\uff0c\u5176\u4e2d capacity \u4e3a\u53ef\u9009\u53c2\u6570\u3002 Go 1 make ([] T , length , capacity ) \u8fd9\u91cc len \u662f\u6570\u7ec4\u7684\u957f\u5ea6\u5e76\u4e14\u4e5f\u662f\u5207\u7247\u7684 \u521d\u59cb\u957f\u5ea6 \u3002 Go 1 s := [] int { 1 , 2 , 3 } // \u76f4\u63a5\u521d\u59cb\u5316\u5207\u7247\uff0c []\u662f\u5207\u7247\u7c7b\u578b Go 1 2 3 4 5 6 7 8 9 10 11 s := arr [:] // \u521d\u59cb\u5316\u5207\u7247 s\uff0c\u662f\u6570\u7ec4 arr \u7684\u5f15\u7528\u3002 s := arr [ startIndex : endIndex ] // \u5c06 arr \u4e2d\u4ece\u4e0b\u6807 startIndex \u5230 endIndex-1 \u4e0b\u7684\u5143\u7d20\u521b\u5efa\u4e3a\u4e00\u4e2a\u65b0\u7684\u5207\u7247\u3002 s := arr [ startIndex :] // \u9ed8\u8ba4 endIndex \u65f6\u5c06\u8868\u793a\u4e00\u76f4\u5230arr\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 s := arr [: endIndex ] // \u9ed8\u8ba4 startIndex \u65f6\u5c06\u8868\u793a\u4ece arr \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002 s1 := s [ startIndex : endIndex ] // \u901a\u8fc7\u5207\u7247 s \u521d\u59cb\u5316\u5207\u7247 s1\u3002 s := make ([] int , len , cap ) // \u901a\u8fc7\u5185\u7f6e\u51fd\u6570 make() \u521d\u59cb\u5316\u5207\u7247s\uff0c[]int \u6807\u8bc6\u4e3a\u5176\u5143\u7d20\u7c7b\u578b\u4e3a int \u7684\u5207\u7247\u3002","title":"7.1 \u5b9a\u4e49\u5207\u7247"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/7.%20GO%20%E5%88%87%E7%89%87%EF%BC%88Slice%EF%BC%89/#72-len-\u548c-cap-\u51fd\u6570","text":"\u5207\u7247 \u662f \u53ef\u7d22\u5f15 \u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u7531 len() \u65b9\u6cd5\u83b7\u53d6\u957f\u5ea6\u3002 \u5207\u7247\u63d0\u4f9b\u4e86\u8ba1\u7b97\u5bb9\u91cf\u7684\u65b9\u6cd5 cap() \u53ef\u4ee5\u6d4b\u91cf\u5207\u7247\u6700\u957f\u53ef\u4ee5\u8fbe\u5230\u591a\u5c11\u3002 \u4ee5\u4e0b\u4e3a\u5177\u4f53\u5b9e\u4f8b\uff1a Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 package main import \"fmt\" func main (){ var numbers = make ([] int , 3 , 5 ) // make([]type, length, capcity) printSlice ( numbers ) } func printSlice ( x [] int ){ fmt . Printf ( \"len=%d cap=%d slice=%v\\n\" , len ( x ), cap ( x ), x ) } Go 1 len = 3 cap = 5 slice =[ 0 0 0 ]","title":"7.2 len() \u548c cap() \u51fd\u6570"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/7.%20GO%20%E5%88%87%E7%89%87%EF%BC%88Slice%EF%BC%89/#73-\u7a7anil\u5207\u7247","text":"\u4e00\u4e2a\u5207\u7247\u5728\u672a\u521d\u59cb\u5316\u4e4b\u524d\u9ed8\u8ba4\u4e3a nil \uff0c\u957f\u5ea6\u4e3a 0 \uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a ```go package main","title":"7.3 \u7a7a\uff08nil\uff09\u5207\u7247"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/8.%20GO%20Range%20%E8%AF%AD%E8%A8%80%E8%8C%83%E5%9B%B4/","text":"8. GO Range \u8bed\u8a00\u8303\u56f4 \u00b6 Go \u8bed\u8a00\u4e2d range \u5173\u952e\u5b57\u7528\u4e8e for \u5faa\u73af\u4e2d\u8fed\u4ee3 \u6570\u7ec4(array) \u3001 \u5207\u7247(slice) \u3001 \u901a\u9053(channel) \u6216 \u96c6\u5408(map) \u7684\u5143\u7d20\u3002 \u5728\u6570\u7ec4\u548c\u5207\u7247\u4e2d\u5b83\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\u548c\u7d22\u5f15\u5bf9\u5e94\u7684\u503c\uff0c\u5728\u96c6\u5408\u4e2d\u8fd4\u56de key-value \u5bf9\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 package main import \"fmt\" func main () { //\u8fd9\u662f\u6211\u4eec\u4f7f\u7528range\u53bb\u6c42\u4e00\u4e2aslice\u7684\u548c\u3002\u4f7f\u7528\u6570\u7ec4\u8ddf\u8fd9\u4e2a\u5f88\u7c7b\u4f3c nums := [] int { 2 , 3 , 4 } sum := 0 for _ , num := range nums { sum += num } fmt . Println ( \"sum:\" , sum ) //\u5728\u6570\u7ec4\u4e0a\u4f7f\u7528range\u5c06\u4f20\u5165index\u548c\u503c\u4e24\u4e2a\u53d8\u91cf\u3002 //\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u8be5\u5143\u7d20\u7684\u5e8f\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7a7a\u767d\u7b26\"_\"\u7701\u7565\u4e86\u3002\u6709\u65f6\u4faf\u6211\u4eec\u786e\u5b9e\u9700\u8981\u77e5\u9053\u5b83\u7684\u7d22\u5f15\u3002 for i , num := range nums { if num == 3 { fmt . Println ( \"index:\" , i ) } } //range\u4e5f\u53ef\u4ee5\u7528\u5728map\u7684\u952e\u503c\u5bf9\u4e0a\u3002 kvs := map [ string ] string { \"a\" : \"apple\" , \"b\" : \"banana\" } for k , v := range kvs { fmt . Printf ( \"%s -> %s\\n\" , k , v ) } //range\u4e5f\u53ef\u4ee5\u7528\u6765\u679a\u4e3eUnicode\u5b57\u7b26\u4e32\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5b57\u7b26\uff08Unicode\u7684\u503c\uff09\u672c\u8eab\u3002 for i , c := range \"go\" { fmt . Println ( i , c ) } } Go 1 2 3 4 5 6 sum : 9 index : 1 a - > apple b - > banana 0 103 1 111","title":"8. GO Range \u8bed\u8a00\u8303\u56f4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/8.%20GO%20Range%20%E8%AF%AD%E8%A8%80%E8%8C%83%E5%9B%B4/#8-go-range-\u8bed\u8a00\u8303\u56f4","text":"Go \u8bed\u8a00\u4e2d range \u5173\u952e\u5b57\u7528\u4e8e for \u5faa\u73af\u4e2d\u8fed\u4ee3 \u6570\u7ec4(array) \u3001 \u5207\u7247(slice) \u3001 \u901a\u9053(channel) \u6216 \u96c6\u5408(map) \u7684\u5143\u7d20\u3002 \u5728\u6570\u7ec4\u548c\u5207\u7247\u4e2d\u5b83\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\u548c\u7d22\u5f15\u5bf9\u5e94\u7684\u503c\uff0c\u5728\u96c6\u5408\u4e2d\u8fd4\u56de key-value \u5bf9\u3002 Go 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 package main import \"fmt\" func main () { //\u8fd9\u662f\u6211\u4eec\u4f7f\u7528range\u53bb\u6c42\u4e00\u4e2aslice\u7684\u548c\u3002\u4f7f\u7528\u6570\u7ec4\u8ddf\u8fd9\u4e2a\u5f88\u7c7b\u4f3c nums := [] int { 2 , 3 , 4 } sum := 0 for _ , num := range nums { sum += num } fmt . Println ( \"sum:\" , sum ) //\u5728\u6570\u7ec4\u4e0a\u4f7f\u7528range\u5c06\u4f20\u5165index\u548c\u503c\u4e24\u4e2a\u53d8\u91cf\u3002 //\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\u6211\u4eec\u4e0d\u9700\u8981\u4f7f\u7528\u8be5\u5143\u7d20\u7684\u5e8f\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u7a7a\u767d\u7b26\"_\"\u7701\u7565\u4e86\u3002\u6709\u65f6\u4faf\u6211\u4eec\u786e\u5b9e\u9700\u8981\u77e5\u9053\u5b83\u7684\u7d22\u5f15\u3002 for i , num := range nums { if num == 3 { fmt . Println ( \"index:\" , i ) } } //range\u4e5f\u53ef\u4ee5\u7528\u5728map\u7684\u952e\u503c\u5bf9\u4e0a\u3002 kvs := map [ string ] string { \"a\" : \"apple\" , \"b\" : \"banana\" } for k , v := range kvs { fmt . Printf ( \"%s -> %s\\n\" , k , v ) } //range\u4e5f\u53ef\u4ee5\u7528\u6765\u679a\u4e3eUnicode\u5b57\u7b26\u4e32\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u7684\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5b57\u7b26\uff08Unicode\u7684\u503c\uff09\u672c\u8eab\u3002 for i , c := range \"go\" { fmt . Println ( i , c ) } } Go 1 2 3 4 5 6 sum : 9 index : 1 a - > apple b - > banana 0 103 1 111","title":"8. GO Range \u8bed\u8a00\u8303\u56f4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/9.%20GO%20Map%20%E9%9B%86%E5%90%88/","text":"9. GO Map \u96c6\u5408 \u00b6 Map \u662f\u4e00\u79cd \u65e0\u5e8f \u7684 \u952e\u503c\u5bf9 \u7684 \u96c6\u5408 \u3002 Map \u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\u901a\u8fc7 key \u6765\u5feb\u901f\u68c0\u7d22\u6570\u636e\uff0c key \u7c7b\u4f3c\u4e8e\u7d22\u5f15\uff0c\u6307\u5411\u6570\u636e\u7684\u503c\u3002 Map \u662f\u4e00\u79cd\u96c6\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u50cf\u8fed\u4ee3\u6570\u7ec4\u548c\u5207\u7247\u90a3\u6837\u8fed\u4ee3\u5b83\u3002\u4e0d\u8fc7\uff0c Map \u662f\u65e0\u5e8f\u7684\uff0c\u6211\u4eec\u65e0\u6cd5\u51b3\u5b9a\u5b83\u7684\u8fd4\u56de\u987a\u5e8f\uff0c\u8fd9\u662f\u56e0\u4e3a Map \u662f\u4f7f\u7528 hash \u8868\u6765\u5b9e\u73b0\u7684\u3002 9.1 \u5b9a\u4e49 \u00b6 \u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u51fd\u6570 make \u4e5f\u53ef\u4ee5\u4f7f\u7528 map \u5173\u952e\u5b57\u6765\u5b9a\u4e49 Map : Go 1 2 3 4 5 /* 1. \u58f0\u660e\u53d8\u91cf\uff0c \u9ed8\u8ba4 map \u662f nil*/ var map_variable map [ key_data_type ] value_data_type /* 2. \u4f7f\u7528 make \u51fd\u6570*/ map_variable := make ( map [ key_data_type ] value_data_map ) \u5982\u679c\u4e0d\u521d\u59cb\u5316 map \uff0c\u90a3\u4e48\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a nil map \u3002 nil map \u4e0d\u80fd\u7528\u6765\u5b58\u653e\u952e\u503c\u5bf9 ```go package main","title":"9. GO Map \u96c6\u5408"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/9.%20GO%20Map%20%E9%9B%86%E5%90%88/#9-go-map-\u96c6\u5408","text":"Map \u662f\u4e00\u79cd \u65e0\u5e8f \u7684 \u952e\u503c\u5bf9 \u7684 \u96c6\u5408 \u3002 Map \u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\u901a\u8fc7 key \u6765\u5feb\u901f\u68c0\u7d22\u6570\u636e\uff0c key \u7c7b\u4f3c\u4e8e\u7d22\u5f15\uff0c\u6307\u5411\u6570\u636e\u7684\u503c\u3002 Map \u662f\u4e00\u79cd\u96c6\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u50cf\u8fed\u4ee3\u6570\u7ec4\u548c\u5207\u7247\u90a3\u6837\u8fed\u4ee3\u5b83\u3002\u4e0d\u8fc7\uff0c Map \u662f\u65e0\u5e8f\u7684\uff0c\u6211\u4eec\u65e0\u6cd5\u51b3\u5b9a\u5b83\u7684\u8fd4\u56de\u987a\u5e8f\uff0c\u8fd9\u662f\u56e0\u4e3a Map \u662f\u4f7f\u7528 hash \u8868\u6765\u5b9e\u73b0\u7684\u3002","title":"9. GO Map \u96c6\u5408"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/01%20GO/9.%20GO%20Map%20%E9%9B%86%E5%90%88/#91-\u5b9a\u4e49","text":"\u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u51fd\u6570 make \u4e5f\u53ef\u4ee5\u4f7f\u7528 map \u5173\u952e\u5b57\u6765\u5b9a\u4e49 Map : Go 1 2 3 4 5 /* 1. \u58f0\u660e\u53d8\u91cf\uff0c \u9ed8\u8ba4 map \u662f nil*/ var map_variable map [ key_data_type ] value_data_type /* 2. \u4f7f\u7528 make \u51fd\u6570*/ map_variable := make ( map [ key_data_type ] value_data_map ) \u5982\u679c\u4e0d\u521d\u59cb\u5316 map \uff0c\u90a3\u4e48\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a nil map \u3002 nil map \u4e0d\u80fd\u7528\u6765\u5b58\u653e\u952e\u503c\u5bf9 ```go package main","title":"9.1 \u5b9a\u4e49"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/","text":"0. \u5176\u4ed6 \u00b6 kubernetes\u4e2d\u6587\u6587\u6863 0.1 \u8fdb\u5ea6 \u00b6 \u7b2c\u4e00\u5929\uff1a 5\u670820\u65e5 \u00b6 \u5b66\u4e60\u89c6\u9891 1 - (1, 2) \u524d\u4e16\u4eca\u751f 1 - (3,4) \u77e5\u8bc6\u56fe\u8c31 1 - (5, 6) \u7ec4\u4ef6\u8bf4\u660e 2- (1, 2 ) pod \u6982\u5ff5 2 - (3) \u7f51\u7edc\u901a\u8baf\u65b9\u5f0f \u9605\u8bfb\u6280\u672f\u6587\u6863 1. 5\u670820 Kubernetes \u7ec4\u4ef6 \uff08\u89c6\u98911-6\uff09 \u00b6 Master \u7ec4\u4ef6 \u00b6 apiserver \uff1a \u6240\u6709\u670d\u52a1\u8bbf\u95ee\u7684\u7edf\u4e00\u5165\u53e3 controllerManager\uff1a \u7ef4\u6301\u526f\u672c\u671f\u671b\u6570\u76ee Scheduler\uff1a \u8d1f\u8d23\u63a5\u53d7\u4efb\u52a1\uff0c\u9009\u62e9\u5408\u9002\u7684\u8282\u70b9\u8fdb\u884c\u5206\u914d\u4efb\u52a1 etcd: \u952e\u503c\u5bf9\uff0c \u5b58\u50a8K8S\u96c6\u7fa4\u6240\u6709\u91cd\u8981\u4fe1\u606f\uff08\u6301\u4e45\u5316\uff1a \u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u4f1a\u5199\u5230etcd\u4e2d\uff09 \u63d2\u4ef6 \u00b6 coreDNS\uff1a \u53ef\u4ee5\u4e3a\u96c6\u7fa4\u4e2d\u7684SVC\u521b\u5efa\u4e00\u4e2a\u57df\u540dIP\u7684\u5bf9\u5e94\u5173\u7cfb\u89e3\u6790 DASHBOARD\uff1a \u7ed9K8S\u63d0\u4f9b\u4e00\u4e2a B/S\u7ed3\u6784\u7684\u8bbf\u95ee\u4f53\u7cfb Node\u7ec4\u4ef6 \u00b6 Kubelet\uff1a\u76f4\u63a5\u8ddf\u5bb9\u5668\u5f15\u64ce\u4ea4\u4e92\uff0c\u5b9e\u73b0\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406 kubeproxy\uff1a \u8d1f\u8d23\u5199\u5165\u89c4\u5219\u81f3IPTABLES\uff0c IPVS \u5b9e\u73b0\u670d\u52a1\u8bbf\u95ee\u6620\u5c04 2 POD \u6982\u5ff5 \u00b6","title":"0. \u5176\u4ed6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#0-\u5176\u4ed6","text":"kubernetes\u4e2d\u6587\u6587\u6863","title":"0. \u5176\u4ed6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#01-\u8fdb\u5ea6","text":"","title":"0.1 \u8fdb\u5ea6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#\u7b2c\u4e00\u5929--5\u670820\u65e5","text":"\u5b66\u4e60\u89c6\u9891 1 - (1, 2) \u524d\u4e16\u4eca\u751f 1 - (3,4) \u77e5\u8bc6\u56fe\u8c31 1 - (5, 6) \u7ec4\u4ef6\u8bf4\u660e 2- (1, 2 ) pod \u6982\u5ff5 2 - (3) \u7f51\u7edc\u901a\u8baf\u65b9\u5f0f \u9605\u8bfb\u6280\u672f\u6587\u6863","title":"\u7b2c\u4e00\u5929\uff1a  5\u670820\u65e5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#1-5\u670820-kubernetes-\u7ec4\u4ef6-\u89c6\u98911-6","text":"","title":"1. 5\u670820 Kubernetes \u7ec4\u4ef6 \uff08\u89c6\u98911-6\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#master-\u7ec4\u4ef6","text":"apiserver \uff1a \u6240\u6709\u670d\u52a1\u8bbf\u95ee\u7684\u7edf\u4e00\u5165\u53e3 controllerManager\uff1a \u7ef4\u6301\u526f\u672c\u671f\u671b\u6570\u76ee Scheduler\uff1a \u8d1f\u8d23\u63a5\u53d7\u4efb\u52a1\uff0c\u9009\u62e9\u5408\u9002\u7684\u8282\u70b9\u8fdb\u884c\u5206\u914d\u4efb\u52a1 etcd: \u952e\u503c\u5bf9\uff0c \u5b58\u50a8K8S\u96c6\u7fa4\u6240\u6709\u91cd\u8981\u4fe1\u606f\uff08\u6301\u4e45\u5316\uff1a \u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\u4f1a\u5199\u5230etcd\u4e2d\uff09","title":"Master \u7ec4\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#\u63d2\u4ef6","text":"coreDNS\uff1a \u53ef\u4ee5\u4e3a\u96c6\u7fa4\u4e2d\u7684SVC\u521b\u5efa\u4e00\u4e2a\u57df\u540dIP\u7684\u5bf9\u5e94\u5173\u7cfb\u89e3\u6790 DASHBOARD\uff1a \u7ed9K8S\u63d0\u4f9b\u4e00\u4e2a B/S\u7ed3\u6784\u7684\u8bbf\u95ee\u4f53\u7cfb","title":"\u63d2\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#node\u7ec4\u4ef6","text":"Kubelet\uff1a\u76f4\u63a5\u8ddf\u5bb9\u5668\u5f15\u64ce\u4ea4\u4e92\uff0c\u5b9e\u73b0\u5bb9\u5668\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406 kubeproxy\uff1a \u8d1f\u8d23\u5199\u5165\u89c4\u5219\u81f3IPTABLES\uff0c IPVS \u5b9e\u73b0\u670d\u52a1\u8bbf\u95ee\u6620\u5c04","title":"Node\u7ec4\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/1-1%20%E5%88%86%E9%92%9F%E9%80%9F%E9%80%9A%20Kubernets/#2-pod-\u6982\u5ff5","text":"","title":"2 POD \u6982\u5ff5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/2-3%20%E7%BD%91%E7%BB%9C%E9%80%9A%E8%AE%AF%E6%96%B9%E5%BC%8F/","text":"iptables \u8001\u4e86\uff0c\u6539\u6210lvs \u53ea\u6709\u8282\u70b9\u7f51\u7edc\u662f\u771f\u5b9e\u7684\u7269\u7406\u7f51\u7edc pod Service \u90fd\u662f\u865a\u62df\u7f51\u7edc","title":"2 3 \u7f51\u7edc\u901a\u8baf\u65b9\u5f0f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/6%20Service/","text":"","title":"6 Service"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/","text":"I. K8S \u6982\u89c8 \u00b6 K8S \u7684\u67b6\u6784\u3001\u4f5c\u7528\u548c\u76ee\u7684\u3002\u9700\u8981\u9996\u5148\u5bf9 K8S \u6574\u4f53\u6709\u6240\u4e86\u89e3\u3002 1.1 K8S \u662f\u4ec0\u4e48\uff1f \u00b6 Kubernetes is an open source system for managing containerized applications across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications. \u7528\u4e8e\u81ea\u52a8\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u201c\u5bb9\u5668\u5316\uff08containerized\uff09\u5e94\u7528\u7a0b\u5e8f\u201d\u7684\u5f00\u6e90\u7cfb\u7edf\u3002 \u63d2\u4e00\u53e5\u9898\u5916\u8bdd\uff1a \u4e3a\u4ec0\u4e48 Kubernetes \u8981\u53eb Kubernetes \u5462\uff1f\u7ef4\u57fa\u767e\u79d1\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff08\u8001\u7f8e\u5bf9\u661f\u9645\u662f\u771f\u7684\u75f4\u8ff7\uff09\uff1a Kubernetes\uff08\u5728\u5e0c\u814a\u8bed\u610f\u4e3a\u201c\u8235\u624b\u201d\u6216\u201c\u9a7e\u9a76\u5458\u201d\uff09\u7531 Joe Beda\u3001Brendan Burns \u548c Craig McLuckie \u521b\u7acb\uff0c\u5e76\u7531\u5176\u4ed6\u8c37\u6b4c\u5de5\u7a0b\u5e08\uff0c\u5305\u62ec Brian Grant \u548c Tim Hockin \u7b49\u8fdb\u884c\u52a0\u76df\u521b\u4f5c\uff0c\u5e76\u7531\u8c37\u6b4c\u5728 2014 \u5e74\u9996\u6b21\u5bf9\u5916\u5ba3\u5e03 \u3002\u8be5\u7cfb\u7edf\u7684\u5f00\u53d1\u548c\u8bbe\u8ba1\u90fd\u6df1\u53d7\u8c37\u6b4c\u7684 Borg \u7cfb\u7edf\u7684\u5f71\u54cd\uff0c\u5176\u8bb8\u591a\u9876\u7ea7\u8d21\u732e\u8005\u4e4b\u524d\u4e5f\u662f Borg \u7cfb\u7edf\u7684\u5f00\u53d1\u8005\u3002\u5728\u8c37\u6b4c\u5185\u90e8\uff0cKubernetes \u7684\u539f\u59cb\u4ee3\u53f7\u66fe\u7ecf\u662f Seven\uff0c\u5373\u661f\u9645\u8ff7\u822a\u4e2d\u7684 Borg\uff08\u535a\u683c\u4eba\uff09\u3002Kubernetes \u6807\u8bc6\u4e2d\u8235\u8f6e\u6709\u4e03\u4e2a\u8f6e\u8f90\u5c31\u662f\u5bf9\u8be5\u9879\u76ee\u4ee3\u53f7\u7684\u81f4\u610f\u3002 \u4e3a\u4ec0\u4e48 Kubernetes \u7684\u7f29\u5199\u662f K8S \u5462\uff1f\u6211\u4e2a\u4eba\u8d5e\u540c Why Kubernetes is Abbreviated k8s \u4e2d\u8bf4\u7684\u89c2\u70b9\u201c\u561b\uff0c\u5199\u5168\u79f0\u4e5f\u592a\u7d2f\u4e86\u5427\uff0c\u4e0d\u5982\u6574\u4e2a\u7f29\u5199\u201d\u3002\u5176\u5b9e\u53ea\u4fdd\u7559\u9996\u4f4d\u5b57\u7b26\uff0c\u7528\u5177\u4f53\u6570\u5b57\u6765\u66ff\u4ee3\u7701\u7565\u7684\u5b57\u7b26\u4e2a\u6570\u7684\u505a\u6cd5\uff0c\u8fd8\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u3002 1.2 \u4e3a\u4ec0\u4e48\u662f K8S\uff1f \u00b6 \u4f20\u7edf\u540e\u7aef\u90e8\u7f72\u65b9\u6cd5\u7684\u4e0d\u8db3 \u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002 \u8bd5\u60f3\u4e0b\u4f20\u7edf\u7684\u540e\u7aef\u90e8\u7f72\u529e\u6cd5 \uff1a\u628a\u7a0b\u5e8f\u5305\uff08\u5305\u62ec\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\uff09\u653e\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u63a5\u7740\u8fd0\u884c\u542f\u52a8\u811a\u672c\u628a\u7a0b\u5e8f\u8dd1\u8d77\u6765\uff0c\u540c\u65f6\u542f\u52a8\u5b88\u62a4\u811a\u672c\u5b9a\u671f\u68c0\u67e5\u7a0b\u5e8f\u8fd0\u884c\u72b6\u6001\u3001\u5fc5\u8981\u7684\u8bdd\u91cd\u65b0\u62c9\u8d77\u7a0b\u5e8f\u3002 \u6709\u95ee\u9898\u5417\uff1f\u663e\u7136\u6709\uff01\u6700\u5927\u7684\u4e00\u4e2a\u95ee\u9898\u5728\u4e8e\uff1a\u5982\u679c\u670d\u52a1\u7684\u8bf7\u6c42\u91cf\u4e0a\u6765\uff0c\u5df2\u90e8\u7f72\u7684\u670d\u52a1\u54cd\u5e94\u4e0d\u8fc7\u6765\u600e\u4e48\u529e\uff1f\u4f20\u7edf\u7684\u505a\u6cd5\u5f80\u5f80\u662f\uff0c\u5982\u679c\u8bf7\u6c42\u91cf\u3001\u5185\u5b58\u3001CPU \u8d85\u8fc7\u9608\u503c\u505a\u4e86\u544a\u8b66\uff0c\u8fd0\u7ef4\u9a6c\u4e0a\u518d\u52a0\u51e0\u53f0\u670d\u52a1\u5668\uff0c\u90e8\u7f72\u597d\u670d\u52a1\u4e4b\u540e\uff0c\u63a5\u5165\u8d1f\u8f7d\u5747\u8861\u6765\u5206\u62c5\u5df2\u6709\u670d\u52a1\u7684\u538b\u529b\u3002 \u95ee\u9898\u51fa\u73b0\u4e86\uff1a\u4ece\u76d1\u63a7\u544a\u8b66\u5230\u90e8\u7f72\u670d\u52a1\uff0c\u4e2d\u95f4\u9700\u8981\u4eba\u529b\u4ecb\u5165\uff01\u90a3\u4e48\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u81ea\u52a8\u5b8c\u6210\u670d\u52a1\u7684\u90e8\u7f72\u3001\u66f4\u65b0\u3001\u5378\u8f7d\u548c\u6269\u5bb9\u3001\u7f29\u5bb9\u5462\uff1f \u8fd9\uff0c\u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002 1.3 K8S \u600e\u4e48\u505a\uff1f \u00b6 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 K8S \u7684\u6838\u5fc3\u529f\u80fd\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668\u5316\u7a0b\u5e8f\u3002 \u90a3\u4e48 K8S \u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u8fd9\u91cc\uff0c\u6211\u4eec\u4ece\u5b8f\u89c2\u67b6\u6784\u4e0a\u6765\u5b66\u4e60 K8S \u7684\u8bbe\u8ba1\u601d\u60f3\u3002\u9996\u5148\u770b\u4e0b\u56fe\uff0c\u56fe\u7247\u6765\u81ea\u6587\u7ae0 Components of Kubernetes Architecture\uff1a 1.3.1 Overview \u00b6 K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09 Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09\uff0c\u5373\u6709 Master \u8282\u70b9\u8d1f\u8d23\u6838\u5fc3\u7684\u8c03\u5ea6\u3001\u7ba1\u7406\u548c\u8fd0\u7ef4\uff0cSlave \u8282\u70b9\u5219\u5728\u6267\u884c\u7528\u6237\u7684\u7a0b\u5e8f\u3002\u4f46\u662f\u5728 K8S \u4e2d\uff0c\u4e3b\u8282\u70b9\u4e00\u822c\u88ab\u79f0\u4e3a Master Node \u6216\u8005 Head Node\uff08\u672c\u6587\u91c7\u7528 Master Node \u79f0\u547c\u65b9\u5f0f\uff09\uff0c\u800c\u4ece\u8282\u70b9\u5219\u88ab\u79f0\u4e3a Worker Node \u6216\u8005 Node\uff08\u672c\u6587\u91c7\u7528 Worker Node \u79f0\u547c\u65b9\u5f0f\uff09\u3002 \u8981\u6ce8\u610f\u4e00\u70b9\uff1a Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 \uff0c \u6bcf\u4e2a Node \u90fd\u5bf9\u5e94\u4e86\u4e00\u53f0\u5b9e\u4f53\u670d\u52a1\u5668\uff08\u867d\u7136 Master Node \u53ef\u4ee5\u548c\u5176\u4e2d\u4e00\u4e2a Worker Node \u5b89\u88c5\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u4f46\u662f\u5efa\u8bae Master Node \u5355\u72ec\u90e8\u7f72\uff09\uff0c \u6240\u6709 Master Node \u548c Worker Node \u7ec4\u6210\u4e86 K8S \u96c6\u7fa4\uff0c\u540c\u4e00\u4e2a\u96c6\u7fa4\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Master Node \u548c Worker Node\u3002 1.3.2 Master Node \u7ec4\u4ef6 \u00b6 API Server\uff1a K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1 Scheduler\uff1a K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668 Controller Manager\uff1a K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668 etcd\uff1a K8S \u7684\u5b58\u50a8\u670d\u52a1 \u9996\u5148\u6765\u770b**Master Node **\u90fd\u6709\u54ea\u4e9b\u7ec4\u4ef6\uff1a API Server\u3002 K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1\u3002 API Server \u8d1f\u8d23\u63a5\u6536 K8S \u6240\u6709\u8bf7\u6c42\uff08\u6765\u81ea UI \u754c\u9762\u6216\u8005 CLI \u547d\u4ee4\u884c\u5de5\u5177\uff09\uff0c\u7136\u540e\uff0cAPI Server \u6839\u636e\u7528\u6237\u7684\u5177\u4f53\u8bf7\u6c42\uff0c\u53bb\u901a\u77e5\u5176\u4ed6\u7ec4\u4ef6\u5e72\u6d3b\u3002 Scheduler\u3002 K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668\u3002 \u5f53\u7528\u6237\u8981\u90e8\u7f72\u670d\u52a1\u65f6\uff0cScheduler \u4f1a\u9009\u62e9\u6700\u5408\u9002\u7684 Worker Node\uff08\u670d\u52a1\u5668\uff09\u6765\u90e8\u7f72\u3002 Controller Manager\u3002 K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668\u3002Controller Manager \u6709\u5f88\u591a\u5177\u4f53\u7684 Controller\uff0c\u5728\u6587\u7ae0 Components of Kubernetes Architecture \u4e2d\u63d0\u5230\u7684\u6709 Node Controller \u3001 Service Controller \u3001 Volume Controller \u7b49\u3002Controller \u8d1f\u8d23\u76d1\u63a7\u548c\u8c03\u6574\u5728 Worker Node \u4e0a\u90e8\u7f72\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u7528\u6237\u8981\u6c42 A \u670d\u52a1\u90e8\u7f72 2 \u4e2a\u526f\u672c\uff0c\u90a3\u4e48\u5f53\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u6302\u4e86\u7684\u65f6\u5019\uff0cController \u4f1a\u9a6c\u4e0a\u8c03\u6574\uff0c\u8ba9 Scheduler \u518d\u9009\u62e9\u4e00\u4e2a Worker Node \u91cd\u65b0\u90e8\u7f72\u670d\u52a1\u3002 etcd\u3002 K8S \u7684\u5b58\u50a8\u670d\u52a1\u3002etcd \u5b58\u50a8\u4e86 K8S \u7684\u5173\u952e\u914d\u7f6e\u548c\u7528\u6237\u914d\u7f6e\uff0c K8S \u4e2d\u4ec5 API Server \u624d\u5177\u5907\u8bfb\u5199\u6743\u9650\uff0c\u5176\u4ed6\u7ec4\u4ef6\u5fc5\u987b\u901a\u8fc7 API Server \u7684\u63a5\u53e3\u624d\u80fd\u8bfb\u5199\u6570\u636e\uff08\u89c1 Kubernetes Works Like an Operating System\uff09\u3002 1.3.3 Worker Node \u7ec4\u4ef6 \u00b6 Kublet : Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668 Kube-Proxy: K8S \u7684\u7f51\u7edc\u4ee3\u7406 Container Runtime: Worker Node \u7684\u8fd0\u884c\u73af\u5883 Logging Layer: K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668 Add-Ones: K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6 \u63a5\u7740\u6765\u770b**Worker Node **\u7684\u7ec4\u4ef6\uff0c\u7b14\u8005\u66f4\u8d5e\u540c HOW DO APPLICATIONS RUN ON KUBERNETES \u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u7ec4\u4ef6\u4ecb\u7ecd\uff1a Kubelet \u3002Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668\u3002Kubelet \u662f Master Node \u5b89\u63d2\u5728 Worker Node \u4e0a\u7684\u201c\u773c\u7ebf\u201d\uff0c\u5b83\u4f1a\u5b9a\u671f\u5411 Worker Node \u6c47\u62a5\u81ea\u5df1 Node \u4e0a\u8fd0\u884c\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u5e76\u63a5\u53d7\u6765\u81ea Master Node \u7684\u6307\u793a\u91c7\u53d6\u8c03\u6574\u63aa\u65bd\u3002 Kube-Proxy \u3002K8S \u7684\u7f51\u7edc\u4ee3\u7406\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Network-Proxy \u53ef\u80fd\u66f4\u9002\u5408\uff1fKube-Proxy \u8d1f\u8d23 Node \u5728 K8S \u7684\u7f51\u7edc\u901a\u8baf\u3001\u4ee5\u53ca\u5bf9\u5916\u90e8\u7f51\u7edc\u6d41\u91cf\u7684\u8d1f\u8f7d\u5747\u8861\u3002 Container Runtime \u3002Worker Node \u7684\u8fd0\u884c\u73af\u5883\u3002\u5373\u5b89\u88c5\u4e86\u5bb9\u5668\u5316\u6240\u9700\u7684\u8f6f\u4ef6\u73af\u5883\u786e\u4fdd\u5bb9\u5668\u5316\u7a0b\u5e8f\u80fd\u591f\u8dd1\u8d77\u6765\uff0c\u6bd4\u5982 Docker Engine\u3002\u5927\u767d\u8bdd\u5c31\u662f\u5e2e\u5fd9\u88c5\u597d\u4e86 Docker \u8fd0\u884c\u73af\u5883\u3002 Logging Layer \u3002K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Monitor \u53ef\u80fd\u66f4\u5408\u9002\uff1fLogging Layer \u8d1f\u8d23\u91c7\u96c6 Node \u4e0a\u6240\u6709\u670d\u52a1\u7684 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u76d1\u63a7\u9879\u4fe1\u606f\u3002 Add-Ons \u3002K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6\u3002\u6709\u4e9b\u6587\u7ae0\u8ba4\u4e3a Worker Node \u53ea\u6709\u4e09\u5927\u7ec4\u4ef6\uff0c\u4e0d\u5305\u542b Add-On\uff0c\u4f46\u7b14\u8005\u8ba4\u4e3a K8S \u7cfb\u7edf\u63d0\u4f9b\u4e86 Add-On \u673a\u5236\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u6269\u5c55\u66f4\u591a\u5b9a\u5236\u5316\u529f\u80fd\uff0c\u662f\u5f88\u4e0d\u9519\u7684\u4eae\u70b9\u3002 1.3.4 \u603b\u7ed3 \u00b6 \u603b\u7ed3\u6765\u770b\uff0c K8S \u7684 Master Node \u5177\u5907\uff1a \u8bf7\u6c42\u5165\u53e3\u7ba1\u7406\uff08API Server\uff09 Worker Node \u8c03\u5ea6\uff08Scheduler\uff09 \u76d1\u63a7\u548c\u81ea\u52a8\u8c03\u8282\uff08Controller Manager\uff09 \u4ee5\u53ca\u5b58\u50a8\u529f\u80fd\uff08etcd\uff09 \u800c K8S \u7684 Worker Node \u5177\u5907\uff1a \u72b6\u6001\u548c\u76d1\u63a7\u6536\u96c6\uff08Kubelet\uff09 \u7f51\u7edc\u548c\u8d1f\u8f7d\u5747\u8861\uff08Kube-Proxy\uff09 \u4fdd\u969c\u5bb9\u5668\u5316\u8fd0\u884c\u73af\u5883\uff08Container Runtime\uff09 \u4ee5\u53ca\u5b9a\u5236\u5316\u529f\u80fd\uff08Add-Ons\uff09 \u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5bf9 K8S \u7a76\u7adf\u662f\u505a\u4ec0\u4e48\u7684\uff0c\u6709\u4e86\u5927\u6982\u8ba4\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u518d\u6765\u8ba4\u8bc6\u4e0b**K8S \u7684 Deployment\u3001Pod\u3001Replica Set\u3001Service **\u7b49\uff0c\u4f46\u51e1\u8c08\u5230 K8S\uff0c\u5c31\u7ed5\u4e0d\u5f00\u8fd9\u4e9b\u540d\u8bcd\uff0c\u800c\u8fd9\u4e9b\u540d\u8bcd\u4e5f\u662f\u6700\u8ba9 K8S \u65b0\u624b\u4eec\u611f\u5230\u5934\u75bc\u3001\u56f0\u60d1\u7684\u3002 II. K8S \u91cd\u8981\u6982\u5ff5 \u00b6 2.1 Pod \u5b9e\u4f8b \u00b6 \u5b98\u65b9\u5bf9\u4e8e Pod \u7684\u89e3\u91ca\u662f\uff1a Pod \u662f\u53ef\u4ee5\u5728 Kubernetes \u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u3001\u6700\u5c0f\u7684\u53ef\u90e8\u7f72\u7684\u8ba1\u7b97\u5355\u5143 \u8fd9\u6837\u7684\u89e3\u91ca\u8fd8\u662f\u5f88\u96be\u8ba9\u4eba\u660e\u767d\u7a76\u7adf Pod \u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u5bf9\u4e8e K8S \u800c\u8a00\uff0cPod \u53ef\u4ee5\u8bf4\u662f\u6240\u6709\u5bf9\u8c61\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u4e86\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u6e05\u695a\u5730\u77e5\u9053\u201cPod \u662f\u4ec0\u4e48\u201d\uff0c\u518d\u53bb\u4e86\u89e3\u5176\u4ed6\u7684\u5bf9\u8c61\u3002 \u4ece\u5b98\u65b9\u7ed9\u51fa\u7684\u5b9a\u4e49\uff0c\u8054\u60f3\u4e0b\u201c\u6700\u5c0f\u7684 xxx \u5355\u5143\u201d\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u60f3\u5230\u672c\u79d1\u5728\u5b66\u6821\u91cc\u5b66\u4e60\u201c\u8fdb\u7a0b\u201d\u7684\u65f6\u5019\uff0c\u6559\u79d1\u4e66\u4e0a\u6709\u4e00\u6bb5\u7c7b\u4f3c\u7684\u63cf\u8ff0\uff1a\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff1b\u8fd8\u6709\u201d\u7ebf\u7a0b\u201c\u7684\u63cf\u8ff0\u662f\uff1aCPU \u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f \u201d\u6700\u5c0f xx \u5355\u4f4d\u201c\u8981\u4e48\u5c31\u662f\u4e8b\u7269\u7684\u8861\u91cf\u6807\u51c6\u5355\u4f4d\uff0c\u8981\u4e48\u5c31\u662f\u8d44\u6e90\u7684\u95ed\u5305\u3001\u96c6\u5408\u3002 \u524d\u8005\u6bd4\u5982\u957f\u5ea6\u7c73\u3001\u65f6\u95f4\u79d2\uff1b\u540e\u8005\u6bd4\u5982\u4e00\u4e2a\u201d\u8fdb\u7a0b\u201c\u662f\u5b58\u50a8\u548c\u8ba1\u7b97\u7684\u95ed\u5305\uff0c\u4e00\u4e2a\u201d\u7ebf\u7a0b\u201c\u662f CPU \u8d44\u6e90\uff08\u5305\u62ec\u5bc4\u5b58\u5668\u3001ALU \u7b49\uff09\u7684\u95ed\u5305\u3002 \u540c\u6837\u7684\uff0cPod \u5c31\u662f K8S \u4e2d\u4e00\u4e2a\u670d\u52a1\u7684\u95ed\u5305\u3002 \u8fd9\u4e48\u8bf4\u7684\u597d\u50cf\u8fd8\u662f\u6709\u70b9\u7384\u4e4e\uff0c\u66f4\u52a0\u4e91\u91cc\u96fe\u91cc\u4e86\u3002 \u7b80\u5355\u6765\u8bf4\uff0cPod \u53ef\u4ee5\u88ab\u7406\u89e3\u6210\u4e00\u7fa4\u53ef\u4ee5\u5171\u4eab\u7f51\u7edc\u3001\u5b58\u50a8\u548c\u8ba1\u7b97\u8d44\u6e90\u7684\u5bb9\u5668\u5316\u670d\u52a1\u7684\u96c6\u5408\u3002 \u518d\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0c\u5728\u540c\u4e00\u4e2a Pod \u91cc\u7684\u51e0\u4e2a Docker \u670d\u52a1/\u7a0b\u5e8f\uff0c\u597d\u50cf\u88ab\u90e8\u7f72\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u5171\u7528 Pod \u91cc\u7684\u5b58\u50a8\u8d44\u6e90\uff08\u8fd9\u91cc\u662f\u6307 Docker \u53ef\u4ee5\u6302\u8f7d Pod \u5185\u7684\u6570\u636e\u5377\uff0c\u6570\u636e\u5377\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff09\u3002 \u7b14\u8005\u603b\u7ed3 Pod \u5982\u4e0b\u56fe\uff0c\u53ef\u4ee5\u770b\u5230\uff1a \u540c\u4e00\u4e2a Pod \u4e4b\u95f4\u7684 Container \u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u6302\u8f7d Pod \u5185\u6240\u6709\u7684\u6570\u636e\u5377\uff1b\u4f46\u662f\u4e0d\u540c\u7684 Pod \u4e4b\u95f4\u7684 Container \u4e0d\u80fd\u7528 localhost \u8bbf\u95ee\uff0c\u4e5f\u4e0d\u80fd\u6302\u8f7d\u5176\u4ed6 Pod \u7684\u6570\u636e\u5377\u3002 \u5bf9 Pod \u6709\u76f4\u89c2\u7684\u8ba4\u8bc6\u4e4b\u540e\uff0c\u63a5\u7740\u6765\u770b K8S \u4e2d Pod \u7a76\u7adf\u957f\u4ec0\u4e48\u6837\u5b50\uff0c\u5177\u4f53\u5305\u62ec\u54ea\u4e9b\u8d44\u6e90\uff1f K8S \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u901a\u8fc7 yaml \u6765\u8868\u793a\uff0c\u7b14\u8005\u4ece\u5b98\u65b9\u7f51\u7ad9\u6458\u5f55\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Pod \u7684 yaml\uff1a \u770b\u4e0d\u61c2\u4e0d\u5fc5\u614c\u5f20\uff0c\u4e14\u8010\u5fc3\u542c\u4e0b\u9762\u7684\u89e3\u91ca\uff1a apiVersion : \u8bb0\u5f55 K8S \u7684 API Server \u7248\u672c\uff0c\u73b0\u5728\u770b\u5230\u7684\u90fd\u662f v1\uff0c\u7528\u6237\u4e0d\u7528\u7ba1\u3002 kind : \u8bb0\u5f55\u8be5 yaml \u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u8fd9\u662f\u4e00\u4efd Pod \u7684 yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48\u503c\u5185\u5bb9\u5c31\u662f Pod\u3002 metadata :\u8bb0\u5f55\u4e86 Pod \u81ea\u8eab\u7684\u5143\u6570\u636e\uff0c\u6bd4\u5982\u8fd9\u4e2a Pod \u7684\u540d\u5b57\u3001\u8fd9\u4e2a Pod \u5c5e\u4e8e\u54ea\u4e2a namespace\uff08\u547d\u540d\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c \u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u5185\u7684\u5bf9\u8c61\u4e92\u76f8\u53ef\u89c1 \u201d\uff09\u3002 spec \u8bb0\u5f55\u4e86 Pod \u5185\u90e8\u6240\u6709\u7684\u8d44\u6e90\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u770b\u61c2\u8fd9\u4e2a\u5f88\u91cd\u8981\uff1a containers \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u5bb9\u5668\u4fe1\u606f\uff0ccontainers \u5305\u62ec\u4e86\uff1a name : \u5bb9\u5668\u540d image :\u5bb9\u5668\u7684\u955c\u50cf\u5730\u5740 resources : \u5bb9\u5668\u9700\u8981\u7684 CPU\u3001\u5185\u5b58\u3001GPU \u7b49\u8d44\u6e90 command : \u5bb9\u5668\u7684\u5165\u53e3\u547d\u4ee4 args : \u5bb9\u5668\u7684\u5165\u53e3\u53c2\u6570 volumeMounts \u5bb9\u5668\u8981\u6302\u8f7d\u7684 Pod \u6570\u636e\u5377\u7b49\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u8ff0\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662f\u542f\u52a8\u5bb9\u5668\u7684\u5fc5\u8981\u548c\u5fc5\u9700\u7684\u4fe1\u606f\u3002 volumes \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u6570\u636e\u5377\u4fe1\u606f\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u4ecb\u7ecd Pod \u7684\u6570\u636e\u5377\u3002 2.2 Volume \u6570\u636e\u5377 \u00b6 \u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377 volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c \u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 volumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002 K8S \u652f\u6301\u5f88\u591a\u7c7b\u578b\u7684 volume \u6570\u636e\u5377\u6302\u8f7d\uff0c\u5177\u4f53\u8bf7\u53c2\u89c1 K8S \u5377\u3002 \u524d\u6587\u5c31\u201c\u5982\u4f55\u7406\u89e3 volume\u201d\u63d0\u5230\uff1a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff0c\u6b64\u5916\uff0c\u6709\u4e00\u70b9\u53ef\u4ee5\u5e2e\u52a9\u7406\u89e3\uff1a \u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u5176\u5b9e\uff0c\u5355\u5355\u5c31 Volume \u6765\u8bf4\uff0c\u4e0d\u96be\u7406\u89e3\u3002\u4f46\u662f\u4e0a\u9762\u8fd8\u770b\u5230\u4e86 volumeMounts\uff0c\u8fd9\u4fe9\u662f\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f volume \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377\uff1b\u800c volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c\u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 \u4f46\u662f\uff0cvolumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002 2.3 Container \u5bb9\u5668 \u00b6 \u672c\u6587\u4e2d\u63d0\u5230\u7684\u955c\u50cf Image\u3001\u5bb9\u5668 Container\uff0c\u90fd\u6307\u4ee3\u4e86 Pod \u4e0b\u7684\u4e00\u4e2a container\u3002\u5173\u4e8e K8S \u4e2d\u7684\u5bb9\u5668\uff0c\u5728 2.1Pod \u7ae0\u8282\u90fd\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff0c\u8fd9\u91cc\u65e0\u975e\u518d\u5570\u55e6\u4e00\u53e5\uff1a\u4e00\u4e2a Pod \u5185\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5668 container\u3002 \u5728 Pod \u4e2d\uff0c\u5bb9\u5668\u4e5f\u6709\u5206\u7c7b\uff0c\u5bf9\u8fd9\u4e2a\u611f\u5174\u8da3\u7684\u540c\u5b66\u6b22\u8fce\u81ea\u884c\u9605\u8bfb\u66f4\u591a\u8d44\u6599\uff1a \u6807\u51c6\u5bb9\u5668 Application Container\u3002 \u521d\u59cb\u5316\u5bb9\u5668 Init Container\u3002 \u8fb9\u8f66\u5bb9\u5668 Sidecar Container\u3002 \u4e34\u65f6\u5bb9\u5668 Ephemeral Container\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u90e8\u7f72\u7684\u5927\u591a\u662f\u6807\u51c6\u5bb9\u5668\uff08 Application Container\uff09\u3002 2.4 Deployment \u548c ReplicaSet\uff08\u7b80\u79f0 RS\uff09 \u00b6 Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1 Deployment \uff1aDeployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 ReplicaSets\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u9664\u4e86 Pod \u4e4b\u5916\uff0cK8S \u4e2d\u6700\u5e38\u542c\u5230\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5c31\u662f Deployment \u4e86\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f Deployment \u5462\uff1f\u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8981\u547d\u7684\u89e3\u91ca\uff1a \u4e00\u4e2a Deployment \u63a7\u5236\u5668\u4e3a Pods \u548c ReplicaSets \u63d0\u4f9b\u58f0\u660e\u5f0f\u7684\u66f4\u65b0\u80fd\u529b\u3002 \u4f60\u8d1f\u8d23\u63cf\u8ff0 Deployment \u4e2d\u7684 \u76ee\u6807\u72b6\u6001\uff0c\u800c Deployment \u63a7\u5236\u5668\u4ee5\u53d7\u63a7\u901f\u7387\u66f4\u6539\u5b9e\u9645\u72b6\u6001\uff0c \u4f7f\u5176\u53d8\u4e3a\u671f\u671b\u72b6\u6001\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49 Deployment \u4ee5\u521b\u5efa\u65b0\u7684 ReplicaSet\uff0c\u6216\u5220\u9664\u73b0\u6709 Deployment\uff0c\u5e76\u901a\u8fc7\u65b0\u7684 Deployment \u6536\u517b\u5176\u8d44\u6e90\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a Deployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 \u54ce\uff0c\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0cDeployment \u5c31\u662f\u5305\u5de5\u5934\uff0c\u4e3b\u8981\u8d1f\u8d23\u76d1\u7763\u5e95\u4e0b\u7684\u5de5\u4eba Pod \u5e72\u6d3b\uff0c\u786e\u4fdd\u6bcf\u65f6\u6bcf\u523b\u6709\u7528\u6237\u8981\u6c42\u6570\u91cf\u7684 Pod \u5728\u5de5\u4f5c\u3002\u5982\u679c\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u5de5\u4eba Pod \u4e0d\u884c\u4e86\uff0c\u5c31\u8d76\u7d27\u65b0\u62c9\u4e00\u4e2a Pod \u8fc7\u6765\u66ff\u6362\u5b83\u3002 \u65b0\u7684\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u90a3\u4ec0\u4e48\u662f ReplicaSets \u5462\uff1f ReplicaSet \u7684\u76ee\u7684\u662f\u7ef4\u62a4\u4e00\u7ec4\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684 Pod \u526f\u672c\u7684\u7a33\u5b9a\u96c6\u5408\u3002 \u56e0\u6b64\uff0c\u5b83\u901a\u5e38\u7528\u6765\u4fdd\u8bc1\u7ed9\u5b9a\u6570\u91cf\u7684\u3001\u5b8c\u5168\u76f8\u540c\u7684 Pod \u7684\u53ef\u7528\u6027\u3002 \u518d\u6765\u7ffb\u8bd1\u4e0b\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u4f46\u662f\uff0cReplicaSet \u53d7\u63a7\u4e8e Deployment\u3002\u5f62\u8c61\u6765\u8bf4\uff0cReplicaSet \u5c31\u662f\u603b\u5305\u5de5\u5934\u624b\u4e0b\u7684\u5c0f\u5305\u5de5\u5934\u3002 \u4f46\u662f\uff0c\u4ece K8S \u4f7f\u7528\u8005\u89d2\u5ea6\u6765\u770b\uff0c\u7528\u6237\u4f1a\u76f4\u63a5\u64cd\u4f5c Deployment \u90e8\u7f72\u670d\u52a1\uff0c\u800c\u5f53 Deployment \u88ab\u90e8\u7f72\u7684\u65f6\u5019\uff0cK8S \u4f1a\u81ea\u52a8\u751f\u6210\u8981\u6c42\u7684 ReplicaSet \u548c Pod\u3002 \u5728 K8S \u5b98\u65b9\u6587\u6863\u4e2d\u4e5f\u6307\u51fa\u7528\u6237\u53ea\u9700\u8981\u5173\u5fc3 Deployment \u800c\u4e0d\u64cd\u5fc3 ReplicaSet\uff1a This actually means that you may never need to manipulate ReplicaSet objects: use a Deployment instead, and define your application in the spec section.\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u60a8\u53ef\u80fd\u6c38\u8fdc\u4e0d\u9700\u8981\u64cd\u4f5c ReplicaSet \u5bf9\u8c61\uff1a\u76f4\u63a5\u4f7f\u7528 Deployments \u5e76\u5728\u89c4\u8303\u90e8\u5206\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u3002 \u8865\u5145\u8bf4\u660e\uff1a\u5728 K8S \u4e2d\u8fd8\u6709\u4e00\u4e2a\u5bf9\u8c61 --- ReplicationController\uff08\u7b80\u79f0 RC\uff09\uff0c\u5b98\u65b9\u6587\u6863\u5bf9\u5b83\u7684\u5b9a\u4e49\u662f\uff1a ReplicationController \u786e\u4fdd\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u6709\u7279\u5b9a\u6570\u91cf\u7684 Pod \u526f\u672c\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cReplicationController \u786e\u4fdd\u4e00\u4e2a Pod \u6216\u4e00\u7ec4\u540c\u7c7b\u7684 Pod \u603b\u662f\u53ef\u7528\u7684\u3002 \u600e\u4e48\u6837\uff0c\u548c ReplicaSet \u662f\u4e0d\u662f\u5f88\u76f8\u8fd1\uff1f\u5728 Deployments, ReplicaSets, and pods \u6559\u7a0b\u4e2d\u8bf4\u201cReplicationController \u662f ReplicaSet \u7684\u524d\u8eab\u201d\uff0c\u5b98\u65b9\u4e5f\u63a8\u8350\u7528 Deployment \u53d6\u4ee3 ReplicationController \u6765\u90e8\u7f72\u670d\u52a1\u3002 2.5 Service \u548c Ingress \u00b6 \u5410\u69fd\u4e0b K8S \u7684\u6982\u5ff5/\u5bf9\u8c61/\u8d44\u6e90\u662f\u771f\u7684\u591a\u554a\uff01\u524d\u6587\u4ecb\u7ecd\u7684 Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1\uff1b \u90a3\u4e48\uff0c Service \u548c Ingress \u5219\u8d1f\u8d23\u7ba1\u63a7 Pod \u7f51\u7edc\u670d\u52a1\u3002 K8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c \u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u5b98\u65b9\u6587\u6863\u4e2d Service \u7684\u5b9a\u4e49\uff1a \u5c06\u8fd0\u884c\u5728\u4e00\u7ec4 Pods \u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u4e3a\u7f51\u7edc\u670d\u52a1\u7684\u62bd\u8c61\u65b9\u6cd5\u3002 \u4f7f\u7528 Kubernetes\uff0c\u60a8\u65e0\u9700\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\u4f7f\u7528\u4e0d\u719f\u6089\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002 Kubernetes \u4e3a Pods \u63d0\u4f9b\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u5e76\u4e3a\u4e00\u7ec4 Pod \u63d0\u4f9b\u76f8\u540c\u7684 DNS \u540d\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u3002 \u7ffb\u8bd1\u4e0b\uff1aK8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c\u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002 \u4e3a\u4ec0\u4e48\u8981 Service \u5462\uff1f \u00b6 \u79c1\u4ee5\u4e3a\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b98\u65b9\u6587\u6863\u8bb2\u89e3\u5730\u975e\u5e38\u6e05\u695a\uff1a Kubernetes Pod \u662f\u6709\u751f\u547d\u5468\u671f\u7684\u3002 \u5b83\u4eec\u53ef\u4ee5\u88ab\u521b\u5efa\uff0c\u800c\u4e14\u9500\u6bc1\u4e4b\u540e\u4e0d\u4f1a\u518d\u542f\u52a8\u3002 \u5982\u679c\u60a8\u4f7f\u7528 Deployment \u6765\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u5b83\u53ef\u4ee5\u52a8\u6001\u521b\u5efa\u548c\u9500\u6bc1 Pod\u3002 \u6bcf\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u4f46\u662f\u5728 Deployment \u4e2d\uff0c\u5728\u540c\u4e00\u65f6\u523b\u8fd0\u884c\u7684 Pod \u96c6\u5408\u53ef\u80fd\u4e0e\u7a0d\u540e\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684 Pod \u96c6\u5408\u4e0d\u540c\u3002 \u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u4e00\u7ec4 Pod\uff08\u79f0\u4e3a\u201c\u540e\u7aef\u201d\uff09\u4e3a\u7fa4\u96c6\u5185\u7684\u5176\u4ed6 Pod\uff08\u79f0\u4e3a\u201c\u524d\u7aef\u201d\uff09\u63d0\u4f9b\u529f\u80fd\uff0c \u90a3\u4e48\u524d\u7aef\u5982\u4f55\u627e\u51fa\u5e76\u8ddf\u8e2a\u8981\u8fde\u63a5\u7684 IP \u5730\u5740\uff0c\u4ee5\u4fbf\u524d\u7aef\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u91cf\u7684\u540e\u7aef\u90e8\u5206\uff1f \u8865\u5145\u8bf4\u660e\uff1aK8S \u96c6\u7fa4\u7684\u7f51\u7edc\u7ba1\u7406\u548c\u62d3\u6251\u4e5f\u6709\u7279\u522b\u7684\u8bbe\u8ba1\uff0c\u4ee5\u540e\u4f1a\u4e13\u95e8\u51fa\u4e00\u7ae0\u8282\u6765\u8be6\u7ec6\u4ecb\u7ecd K8S \u4e2d\u7684\u7f51\u7edc\u3002\u8fd9\u91cc\u9700\u8981\u6e05\u695a\u4e00\u70b9\uff1aK8S \u96c6\u7fa4\u5185\u7684\u6bcf\u4e00\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP\uff08\u662f\u4e0d\u662f\u5f88\u7c7b\u4f3c\u4e00\u4e2a Pod \u5c31\u662f\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u662f\u591a\u4e2a Pod \u5b58\u5728\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u53ea\u4e0d\u8fc7\u662f K8S \u505a\u4e86\u7f51\u7edc\u9694\u79bb\uff09\uff0c\u5728 K8S \u96c6\u7fa4\u5185\u90e8\u8fd8\u6709 DNS \u7b49\u7f51\u7edc\u670d\u52a1\uff08\u4e00\u4e2a K8S \u96c6\u7fa4\u5c31\u5982\u540c\u7ba1\u7406\u4e86\u591a\u533a\u57df\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u505a\u590d\u6742\u7684\u7f51\u7edc\u62d3\u6251\uff09\u3002 \u6b64\u5916\uff0c\u7b14\u8005\u63a8\u8350 k8s \u5916\u7f51\u5982\u4f55\u8bbf\u95ee\u4e1a\u52a1\u5e94\u7528 \u5bf9\u4e8eService\u7684\u4ecb\u7ecd\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u65b0\u624b\u800c\u8a00\uff0c\u63a8\u8350\u9605\u8bfb\u524d\u534a\u90e8\u5206\u5bf9\u4e8eservice\u7684\u4ecb\u7ecd\u5373\u53ef\uff0c\u540e\u534a\u90e8\u5206\u5c31\u592a\u590d\u6742\u4e86\u3002\u6211\u8fd9\u91cc\u505a\u4e86\u7b80\u5355\u7684\u603b\u7ed3\uff1a Service\u662fK8S\u670d\u52a1\u7684\u6838\u5fc3\uff0c\u5c4f\u853d\u4e86\u670d\u52a1\u7ec6\u8282\uff0c\u7edf\u4e00\u5bf9\u5916\u66b4\u9732\u670d\u52a1\u63a5\u53e3\uff0c\u771f\u6b63\u505a\u5230\u4e86\u201c\u5fae\u670d\u52a1\u201d\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u7684\u4e00\u4e2a\u670d\u52a1A\uff0c\u90e8\u7f72\u4e863\u4e2a\u5907\u4efd\uff0c\u4e5f\u5c31\u662f3\u4e2aPod\uff1b\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u4e00\u4e2aService\u7684\u5165\u53e3\u5c31\u53ef\u4ee5\uff0c\u800c\u4e0d\u9700\u8981\u64cd\u5fc3\u7a76\u7adf\u5e94\u8be5\u8bf7\u6c42\u54ea\u4e00\u4e2aPod\u3002\u4f18\u52bf\u975e\u5e38\u660e\u663e\uff1a\u4e00\u65b9\u9762 \u5916\u90e8\u7528\u6237\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u4e3aPod\u4e0a\u670d\u52a1\u7684\u610f\u5916\u5d29\u6e83\u3001K8S\u91cd\u65b0\u62c9\u8d77Pod\u800c\u9020\u6210\u7684IP\u53d8\u66f4\uff0c\u5916\u90e8\u7528\u6237\u4e5f\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u5347\u7ea7\u3001\u53d8\u66f4\u670d\u52a1\u5e26\u6765\u7684Pod\u66ff\u6362\u800c\u9020\u6210\u7684IP\u53d8\u5316 \uff0c\u53e6\u4e00\u65b9\u9762\uff0cService\u8fd8\u53ef\u4ee5\u505a \u6d41\u91cf\u8d1f\u8f7d\u5747\u8861 \u3002 \u4f46\u662f\uff0cService \u4e3b\u8981\u8d1f\u8d23 K8S \u96c6\u7fa4\u5185\u90e8\u7684\u7f51\u7edc\u62d3\u6251\u3002\u90a3\u4e48\u96c6\u7fa4\u5916\u90e8\u600e\u4e48\u8bbf\u95ee\u96c6\u7fa4\u5185\u90e8\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981 Ingress \u4e86\uff0c\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u89e3\u91ca\u662f\uff1a Ingress \u662f\u5bf9\u96c6\u7fa4\u4e2d\u670d\u52a1\u7684\u5916\u90e8\u8bbf\u95ee\u8fdb\u884c\u7ba1\u7406\u7684 API \u5bf9\u8c61\uff0c\u5178\u578b\u7684\u8bbf\u95ee\u65b9\u5f0f\u662f HTTP\u3002 Ingress \u53ef\u4ee5\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001SSL \u7ec8\u7ed3\u548c\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u6258\u7ba1\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1aIngress \u662f\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u63a5\u5165\u5c42\uff0c\u590d\u6742\u96c6\u7fa4\u5185\u5916\u901a\u8baf\u3002 2.6 namespace \u547d\u540d\u7a7a\u95f4 \u00b6 namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u548c\u524d\u6587\u4ecb\u7ecd\u7684\u6240\u6709\u7684\u6982\u5ff5\u90fd\u4e0d\u4e00\u6837\uff0cnamespace \u8ddf Pod \u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u800c\u662f K8S \u53e6\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5bf9\u8c61\u3002\u6216\u8005\u8bf4\uff0c\u524d\u6587\u63d0\u5230\u7684\u6982\u5ff5\u90fd\u662f\u4e3a\u4e86\u670d\u52a1 Pod \u7684\uff0c\u800c namespace \u5219\u662f\u4e3a\u4e86\u670d\u52a1\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u3002 \u90a3\u4e48\uff0cnamespace \u662f\u4ec0\u4e48\u5462\uff1f \u4e0a\u5b98\u65b9\u6587\u6863\u5b9a\u4e49\uff1a Kubernetes \u652f\u6301\u591a\u4e2a\u865a\u62df\u96c6\u7fa4\uff0c\u5b83\u4eec\u5e95\u5c42\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u96c6\u7fa4\u3002 \u8fd9\u4e9b\u865a\u62df\u96c6\u7fa4\u88ab\u79f0\u4e3a\u540d\u5b57\u7a7a\u95f4\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u6bd4\u5982\u6211\u6709 2 \u4e2a\u4e1a\u52a1 A \u548c B\uff0c\u90a3\u4e48\u6211\u53ef\u4ee5\u521b\u5efa ns-a \u548c ns-b \u5206\u522b\u90e8\u7f72\u4e1a\u52a1 A \u548c B \u7684\u670d\u52a1\uff0c\u5982\u5728 ns-a \u4e2d\u90e8\u7f72\u4e86\u4e00\u4e2a deployment \uff0c\u540d\u5b57\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello a\u201d\uff1b\u5728 ns-b \u4e2d\u4e5f\u90e8\u7f72\u4e86\u4e00\u4e2a deployment\uff0c\u540d\u5b57\u6070\u5de7\u4e5f\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello b\u201d \uff08\u8981\u77e5\u9053\uff0c\u5728\u540c\u4e00\u4e2a namespace \u4e0b deployment \u4e0d\u80fd\u540c\u540d\uff1b\u4f46\u662f\u4e0d\u540c namespace \u4e4b\u95f4\u6ca1\u6709\u5f71\u54cd\uff09 \u3002\u524d\u6587\u63d0\u5230\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u90fd\u662f\u5728 namespace \u4e0b\u7684\uff1b\u5f53\u7136\uff0c\u4e5f\u6709\u4e00\u4e9b\u5bf9\u8c61\u662f\u4e0d\u96b6\u5c5e\u4e8e namespace \u7684\uff0c\u800c\u662f\u5728 K8S \u96c6\u7fa4\u5185\u5168\u5c40\u53ef\u89c1\u7684\uff0c\u5b98\u65b9\u6587\u6863\u63d0\u5230\u7684\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u6765\u67e5\u770b\uff0c\u5177\u4f53\u547d\u4ee4\u7684\u4f7f\u7528\u529e\u6cd5\uff0c\u7b14\u8005\u4f1a\u51fa\u540e\u7eed\u7684\u5b9e\u6218\u6587\u7ae0\u6765\u4ecb\u7ecd\uff0c\u5148\u8d34\u4e0b\u547d\u4ee4\uff1a Bash 1 2 3 4 5 # \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = true # \u4e0d\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = false \u5728 namespace \u4e0b\u7684\u5bf9\u8c61\u6709\uff08\u90e8\u5206\uff09\uff1a 2.7 \u5176\u4ed6 \u00b6 K8S \u7684\u5bf9\u8c61\u5b9e\u5728\u592a\u591a\u4e86\uff0c2.1-2.6 \u4ecb\u7ecd\u7684\u662f\u5728\u5b9e\u9645\u4f7f\u7528 K8S \u90e8\u7f72\u670d\u52a1\u6700\u5e38\u89c1\u7684\u3002\u5176\u4ed6\u7684\u8fd8\u6709 Job\u3001CronJob \u7b49\u7b49\uff0c\u5728\u5bf9 K8S \u6709\u4e86\u6bd4\u8f83\u6e05\u695a\u7684\u8ba4\u77e5\u4e4b\u540e\uff0c\u518d\u53bb\u5b66\u4e60\u66f4\u591a\u7684 K8S \u5bf9\u8c61\uff0c\u4e0d\u662f\u96be\u4e8b\u3002 \u5199\u5728\u540e\u9762 \u00b6 \u672c\u6587\u662f K8S \u7cfb\u5217\u6587\u7ae0\u7b2c\u4e00\u7bc7\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5bf9 K8S \u4e0d\u4e86\u89e3\u7684\u65b0\u624b\u5feb\u901f\u4e86\u89e3 K8S\u3002\u5982\u679c\u6587\u7ae0\u4e2d\u6709\u7eb0\u6f0f\uff0c\u975e\u5e38\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u6307\u51fa\uff1b\u6709\u7406\u89e3\u9519\u8bef\u7684\u5730\u65b9\uff0c\u66f4\u662f\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u544a\u77e5\u3002 \u7b14\u8005\u4e00\u8fb9\u5199\u6587\u7ae0\uff0c\u4e00\u8fb9\u67e5\u9605\u548c\u6574\u7406 K8S \u8d44\u6599\uff0c\u8fc7\u7a0b\u4e2d\u8d8a\u53d1\u611f\u89c9 K8S \u67b6\u6784\u7684\u5b8c\u5907\u3001\u8bbe\u8ba1\u7684\u7cbe\u5999\uff0c\u662f\u503c\u5f97\u6df1\u5165\u7814\u7a76\u7684\uff0cK8S \u5927\u53d7\u6b22\u8fce\u662f\u6709\u9053\u7406\u7684\uff01\u518d\u6b21\u611f\u53f9\u4e0b\u3002","title":"I. K8S \u6982\u89c8"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#i-k8s-\u6982\u89c8","text":"K8S \u7684\u67b6\u6784\u3001\u4f5c\u7528\u548c\u76ee\u7684\u3002\u9700\u8981\u9996\u5148\u5bf9 K8S \u6574\u4f53\u6709\u6240\u4e86\u89e3\u3002","title":"I. K8S \u6982\u89c8"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#11-k8s-\u662f\u4ec0\u4e48","text":"Kubernetes is an open source system for managing containerized applications across multiple hosts. It provides basic mechanisms for deployment, maintenance, and scaling of applications. \u7528\u4e8e\u81ea\u52a8\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u201c\u5bb9\u5668\u5316\uff08containerized\uff09\u5e94\u7528\u7a0b\u5e8f\u201d\u7684\u5f00\u6e90\u7cfb\u7edf\u3002 \u63d2\u4e00\u53e5\u9898\u5916\u8bdd\uff1a \u4e3a\u4ec0\u4e48 Kubernetes \u8981\u53eb Kubernetes \u5462\uff1f\u7ef4\u57fa\u767e\u79d1\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff08\u8001\u7f8e\u5bf9\u661f\u9645\u662f\u771f\u7684\u75f4\u8ff7\uff09\uff1a Kubernetes\uff08\u5728\u5e0c\u814a\u8bed\u610f\u4e3a\u201c\u8235\u624b\u201d\u6216\u201c\u9a7e\u9a76\u5458\u201d\uff09\u7531 Joe Beda\u3001Brendan Burns \u548c Craig McLuckie \u521b\u7acb\uff0c\u5e76\u7531\u5176\u4ed6\u8c37\u6b4c\u5de5\u7a0b\u5e08\uff0c\u5305\u62ec Brian Grant \u548c Tim Hockin \u7b49\u8fdb\u884c\u52a0\u76df\u521b\u4f5c\uff0c\u5e76\u7531\u8c37\u6b4c\u5728 2014 \u5e74\u9996\u6b21\u5bf9\u5916\u5ba3\u5e03 \u3002\u8be5\u7cfb\u7edf\u7684\u5f00\u53d1\u548c\u8bbe\u8ba1\u90fd\u6df1\u53d7\u8c37\u6b4c\u7684 Borg \u7cfb\u7edf\u7684\u5f71\u54cd\uff0c\u5176\u8bb8\u591a\u9876\u7ea7\u8d21\u732e\u8005\u4e4b\u524d\u4e5f\u662f Borg \u7cfb\u7edf\u7684\u5f00\u53d1\u8005\u3002\u5728\u8c37\u6b4c\u5185\u90e8\uff0cKubernetes \u7684\u539f\u59cb\u4ee3\u53f7\u66fe\u7ecf\u662f Seven\uff0c\u5373\u661f\u9645\u8ff7\u822a\u4e2d\u7684 Borg\uff08\u535a\u683c\u4eba\uff09\u3002Kubernetes \u6807\u8bc6\u4e2d\u8235\u8f6e\u6709\u4e03\u4e2a\u8f6e\u8f90\u5c31\u662f\u5bf9\u8be5\u9879\u76ee\u4ee3\u53f7\u7684\u81f4\u610f\u3002 \u4e3a\u4ec0\u4e48 Kubernetes \u7684\u7f29\u5199\u662f K8S \u5462\uff1f\u6211\u4e2a\u4eba\u8d5e\u540c Why Kubernetes is Abbreviated k8s \u4e2d\u8bf4\u7684\u89c2\u70b9\u201c\u561b\uff0c\u5199\u5168\u79f0\u4e5f\u592a\u7d2f\u4e86\u5427\uff0c\u4e0d\u5982\u6574\u4e2a\u7f29\u5199\u201d\u3002\u5176\u5b9e\u53ea\u4fdd\u7559\u9996\u4f4d\u5b57\u7b26\uff0c\u7528\u5177\u4f53\u6570\u5b57\u6765\u66ff\u4ee3\u7701\u7565\u7684\u5b57\u7b26\u4e2a\u6570\u7684\u505a\u6cd5\uff0c\u8fd8\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u3002","title":"1.1 K8S \u662f\u4ec0\u4e48\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#12-\u4e3a\u4ec0\u4e48\u662f-k8s","text":"\u4f20\u7edf\u540e\u7aef\u90e8\u7f72\u65b9\u6cd5\u7684\u4e0d\u8db3 \u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002 \u8bd5\u60f3\u4e0b\u4f20\u7edf\u7684\u540e\u7aef\u90e8\u7f72\u529e\u6cd5 \uff1a\u628a\u7a0b\u5e8f\u5305\uff08\u5305\u62ec\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\uff09\u653e\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u63a5\u7740\u8fd0\u884c\u542f\u52a8\u811a\u672c\u628a\u7a0b\u5e8f\u8dd1\u8d77\u6765\uff0c\u540c\u65f6\u542f\u52a8\u5b88\u62a4\u811a\u672c\u5b9a\u671f\u68c0\u67e5\u7a0b\u5e8f\u8fd0\u884c\u72b6\u6001\u3001\u5fc5\u8981\u7684\u8bdd\u91cd\u65b0\u62c9\u8d77\u7a0b\u5e8f\u3002 \u6709\u95ee\u9898\u5417\uff1f\u663e\u7136\u6709\uff01\u6700\u5927\u7684\u4e00\u4e2a\u95ee\u9898\u5728\u4e8e\uff1a\u5982\u679c\u670d\u52a1\u7684\u8bf7\u6c42\u91cf\u4e0a\u6765\uff0c\u5df2\u90e8\u7f72\u7684\u670d\u52a1\u54cd\u5e94\u4e0d\u8fc7\u6765\u600e\u4e48\u529e\uff1f\u4f20\u7edf\u7684\u505a\u6cd5\u5f80\u5f80\u662f\uff0c\u5982\u679c\u8bf7\u6c42\u91cf\u3001\u5185\u5b58\u3001CPU \u8d85\u8fc7\u9608\u503c\u505a\u4e86\u544a\u8b66\uff0c\u8fd0\u7ef4\u9a6c\u4e0a\u518d\u52a0\u51e0\u53f0\u670d\u52a1\u5668\uff0c\u90e8\u7f72\u597d\u670d\u52a1\u4e4b\u540e\uff0c\u63a5\u5165\u8d1f\u8f7d\u5747\u8861\u6765\u5206\u62c5\u5df2\u6709\u670d\u52a1\u7684\u538b\u529b\u3002 \u95ee\u9898\u51fa\u73b0\u4e86\uff1a\u4ece\u76d1\u63a7\u544a\u8b66\u5230\u90e8\u7f72\u670d\u52a1\uff0c\u4e2d\u95f4\u9700\u8981\u4eba\u529b\u4ecb\u5165\uff01\u90a3\u4e48\uff0c\u6709\u6ca1\u6709\u529e\u6cd5\u81ea\u52a8\u5b8c\u6210\u670d\u52a1\u7684\u90e8\u7f72\u3001\u66f4\u65b0\u3001\u5378\u8f7d\u548c\u6269\u5bb9\u3001\u7f29\u5bb9\u5462\uff1f \u8fd9\uff0c\u5c31\u662f K8S \u8981\u505a\u7684\u4e8b\u60c5\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406 Docker\uff08\u5bb9\u5668\u5316\uff09\u7a0b\u5e8f\u3002","title":"1.2 \u4e3a\u4ec0\u4e48\u662f K8S\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#13-k8s-\u600e\u4e48\u505a","text":"\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 K8S \u7684\u6838\u5fc3\u529f\u80fd\uff1a \u81ea\u52a8\u5316\u8fd0\u7ef4\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668\u5316\u7a0b\u5e8f\u3002 \u90a3\u4e48 K8S \u600e\u4e48\u505a\u5230\u7684\u5462\uff1f\u8fd9\u91cc\uff0c\u6211\u4eec\u4ece\u5b8f\u89c2\u67b6\u6784\u4e0a\u6765\u5b66\u4e60 K8S \u7684\u8bbe\u8ba1\u601d\u60f3\u3002\u9996\u5148\u770b\u4e0b\u56fe\uff0c\u56fe\u7247\u6765\u81ea\u6587\u7ae0 Components of Kubernetes Architecture\uff1a","title":"1.3 K8S \u600e\u4e48\u505a\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#131-overview","text":"K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09 Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 K8S \u662f\u5c5e\u4e8e\u4e3b\u4ece \u8bbe\u5907\u6a21\u578b\uff08Master-Slave \u67b6\u6784 \uff09\uff0c\u5373\u6709 Master \u8282\u70b9\u8d1f\u8d23\u6838\u5fc3\u7684\u8c03\u5ea6\u3001\u7ba1\u7406\u548c\u8fd0\u7ef4\uff0cSlave \u8282\u70b9\u5219\u5728\u6267\u884c\u7528\u6237\u7684\u7a0b\u5e8f\u3002\u4f46\u662f\u5728 K8S \u4e2d\uff0c\u4e3b\u8282\u70b9\u4e00\u822c\u88ab\u79f0\u4e3a Master Node \u6216\u8005 Head Node\uff08\u672c\u6587\u91c7\u7528 Master Node \u79f0\u547c\u65b9\u5f0f\uff09\uff0c\u800c\u4ece\u8282\u70b9\u5219\u88ab\u79f0\u4e3a Worker Node \u6216\u8005 Node\uff08\u672c\u6587\u91c7\u7528 Worker Node \u79f0\u547c\u65b9\u5f0f\uff09\u3002 \u8981\u6ce8\u610f\u4e00\u70b9\uff1a Master Node \u548c Worker Node \u662f\u5206\u522b\u5b89\u88c5\u4e86 K8S \u7684 Master \u548c Woker \u7ec4\u4ef6\u7684\u5b9e\u4f53\u670d\u52a1\u5668 \uff0c \u6bcf\u4e2a Node \u90fd\u5bf9\u5e94\u4e86\u4e00\u53f0\u5b9e\u4f53\u670d\u52a1\u5668\uff08\u867d\u7136 Master Node \u53ef\u4ee5\u548c\u5176\u4e2d\u4e00\u4e2a Worker Node \u5b89\u88c5\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u4f46\u662f\u5efa\u8bae Master Node \u5355\u72ec\u90e8\u7f72\uff09\uff0c \u6240\u6709 Master Node \u548c Worker Node \u7ec4\u6210\u4e86 K8S \u96c6\u7fa4\uff0c\u540c\u4e00\u4e2a\u96c6\u7fa4\u53ef\u80fd\u5b58\u5728\u591a\u4e2a Master Node \u548c Worker Node\u3002","title":"1.3.1 Overview"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#132-master-node-\u7ec4\u4ef6","text":"API Server\uff1a K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1 Scheduler\uff1a K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668 Controller Manager\uff1a K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668 etcd\uff1a K8S \u7684\u5b58\u50a8\u670d\u52a1 \u9996\u5148\u6765\u770b**Master Node **\u90fd\u6709\u54ea\u4e9b\u7ec4\u4ef6\uff1a API Server\u3002 K8S \u7684\u8bf7\u6c42\u5165\u53e3\u670d\u52a1\u3002 API Server \u8d1f\u8d23\u63a5\u6536 K8S \u6240\u6709\u8bf7\u6c42\uff08\u6765\u81ea UI \u754c\u9762\u6216\u8005 CLI \u547d\u4ee4\u884c\u5de5\u5177\uff09\uff0c\u7136\u540e\uff0cAPI Server \u6839\u636e\u7528\u6237\u7684\u5177\u4f53\u8bf7\u6c42\uff0c\u53bb\u901a\u77e5\u5176\u4ed6\u7ec4\u4ef6\u5e72\u6d3b\u3002 Scheduler\u3002 K8S \u6240\u6709 Worker Node \u7684\u8c03\u5ea6\u5668\u3002 \u5f53\u7528\u6237\u8981\u90e8\u7f72\u670d\u52a1\u65f6\uff0cScheduler \u4f1a\u9009\u62e9\u6700\u5408\u9002\u7684 Worker Node\uff08\u670d\u52a1\u5668\uff09\u6765\u90e8\u7f72\u3002 Controller Manager\u3002 K8S \u6240\u6709 Worker Node \u7684\u76d1\u63a7\u5668\u3002Controller Manager \u6709\u5f88\u591a\u5177\u4f53\u7684 Controller\uff0c\u5728\u6587\u7ae0 Components of Kubernetes Architecture \u4e2d\u63d0\u5230\u7684\u6709 Node Controller \u3001 Service Controller \u3001 Volume Controller \u7b49\u3002Controller \u8d1f\u8d23\u76d1\u63a7\u548c\u8c03\u6574\u5728 Worker Node \u4e0a\u90e8\u7f72\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u7528\u6237\u8981\u6c42 A \u670d\u52a1\u90e8\u7f72 2 \u4e2a\u526f\u672c\uff0c\u90a3\u4e48\u5f53\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u6302\u4e86\u7684\u65f6\u5019\uff0cController \u4f1a\u9a6c\u4e0a\u8c03\u6574\uff0c\u8ba9 Scheduler \u518d\u9009\u62e9\u4e00\u4e2a Worker Node \u91cd\u65b0\u90e8\u7f72\u670d\u52a1\u3002 etcd\u3002 K8S \u7684\u5b58\u50a8\u670d\u52a1\u3002etcd \u5b58\u50a8\u4e86 K8S \u7684\u5173\u952e\u914d\u7f6e\u548c\u7528\u6237\u914d\u7f6e\uff0c K8S \u4e2d\u4ec5 API Server \u624d\u5177\u5907\u8bfb\u5199\u6743\u9650\uff0c\u5176\u4ed6\u7ec4\u4ef6\u5fc5\u987b\u901a\u8fc7 API Server \u7684\u63a5\u53e3\u624d\u80fd\u8bfb\u5199\u6570\u636e\uff08\u89c1 Kubernetes Works Like an Operating System\uff09\u3002","title":"1.3.2 Master Node \u7ec4\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#133-worker-node-\u7ec4\u4ef6","text":"Kublet : Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668 Kube-Proxy: K8S \u7684\u7f51\u7edc\u4ee3\u7406 Container Runtime: Worker Node \u7684\u8fd0\u884c\u73af\u5883 Logging Layer: K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668 Add-Ones: K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6 \u63a5\u7740\u6765\u770b**Worker Node **\u7684\u7ec4\u4ef6\uff0c\u7b14\u8005\u66f4\u8d5e\u540c HOW DO APPLICATIONS RUN ON KUBERNETES \u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u7ec4\u4ef6\u4ecb\u7ecd\uff1a Kubelet \u3002Worker Node \u7684\u76d1\u89c6\u5668\uff0c\u4ee5\u53ca\u4e0e Master Node \u7684\u901a\u8baf\u5668\u3002Kubelet \u662f Master Node \u5b89\u63d2\u5728 Worker Node \u4e0a\u7684\u201c\u773c\u7ebf\u201d\uff0c\u5b83\u4f1a\u5b9a\u671f\u5411 Worker Node \u6c47\u62a5\u81ea\u5df1 Node \u4e0a\u8fd0\u884c\u7684\u670d\u52a1\u7684\u72b6\u6001\uff0c\u5e76\u63a5\u53d7\u6765\u81ea Master Node \u7684\u6307\u793a\u91c7\u53d6\u8c03\u6574\u63aa\u65bd\u3002 Kube-Proxy \u3002K8S \u7684\u7f51\u7edc\u4ee3\u7406\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Network-Proxy \u53ef\u80fd\u66f4\u9002\u5408\uff1fKube-Proxy \u8d1f\u8d23 Node \u5728 K8S \u7684\u7f51\u7edc\u901a\u8baf\u3001\u4ee5\u53ca\u5bf9\u5916\u90e8\u7f51\u7edc\u6d41\u91cf\u7684\u8d1f\u8f7d\u5747\u8861\u3002 Container Runtime \u3002Worker Node \u7684\u8fd0\u884c\u73af\u5883\u3002\u5373\u5b89\u88c5\u4e86\u5bb9\u5668\u5316\u6240\u9700\u7684\u8f6f\u4ef6\u73af\u5883\u786e\u4fdd\u5bb9\u5668\u5316\u7a0b\u5e8f\u80fd\u591f\u8dd1\u8d77\u6765\uff0c\u6bd4\u5982 Docker Engine\u3002\u5927\u767d\u8bdd\u5c31\u662f\u5e2e\u5fd9\u88c5\u597d\u4e86 Docker \u8fd0\u884c\u73af\u5883\u3002 Logging Layer \u3002K8S \u7684\u76d1\u63a7\u72b6\u6001\u6536\u96c6\u5668\u3002\u79c1\u4ee5\u4e3a\u79f0\u547c\u4e3a Monitor \u53ef\u80fd\u66f4\u5408\u9002\uff1fLogging Layer \u8d1f\u8d23\u91c7\u96c6 Node \u4e0a\u6240\u6709\u670d\u52a1\u7684 CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u7b49\u76d1\u63a7\u9879\u4fe1\u606f\u3002 Add-Ons \u3002K8S \u7ba1\u7406\u8fd0\u7ef4 Worker Node \u7684\u63d2\u4ef6\u7ec4\u4ef6\u3002\u6709\u4e9b\u6587\u7ae0\u8ba4\u4e3a Worker Node \u53ea\u6709\u4e09\u5927\u7ec4\u4ef6\uff0c\u4e0d\u5305\u542b Add-On\uff0c\u4f46\u7b14\u8005\u8ba4\u4e3a K8S \u7cfb\u7edf\u63d0\u4f9b\u4e86 Add-On \u673a\u5236\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u6269\u5c55\u66f4\u591a\u5b9a\u5236\u5316\u529f\u80fd\uff0c\u662f\u5f88\u4e0d\u9519\u7684\u4eae\u70b9\u3002","title":"1.3.3 Worker Node \u7ec4\u4ef6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#134-\u603b\u7ed3","text":"\u603b\u7ed3\u6765\u770b\uff0c K8S \u7684 Master Node \u5177\u5907\uff1a \u8bf7\u6c42\u5165\u53e3\u7ba1\u7406\uff08API Server\uff09 Worker Node \u8c03\u5ea6\uff08Scheduler\uff09 \u76d1\u63a7\u548c\u81ea\u52a8\u8c03\u8282\uff08Controller Manager\uff09 \u4ee5\u53ca\u5b58\u50a8\u529f\u80fd\uff08etcd\uff09 \u800c K8S \u7684 Worker Node \u5177\u5907\uff1a \u72b6\u6001\u548c\u76d1\u63a7\u6536\u96c6\uff08Kubelet\uff09 \u7f51\u7edc\u548c\u8d1f\u8f7d\u5747\u8861\uff08Kube-Proxy\uff09 \u4fdd\u969c\u5bb9\u5668\u5316\u8fd0\u884c\u73af\u5883\uff08Container Runtime\uff09 \u4ee5\u53ca\u5b9a\u5236\u5316\u529f\u80fd\uff08Add-Ons\uff09 \u5230\u8fd9\u91cc\uff0c\u76f8\u4fe1\u4f60\u5df2\u7ecf\u5bf9 K8S \u7a76\u7adf\u662f\u505a\u4ec0\u4e48\u7684\uff0c\u6709\u4e86\u5927\u6982\u8ba4\u8bc6\u3002\u63a5\u4e0b\u6765\uff0c\u518d\u6765\u8ba4\u8bc6\u4e0b**K8S \u7684 Deployment\u3001Pod\u3001Replica Set\u3001Service **\u7b49\uff0c\u4f46\u51e1\u8c08\u5230 K8S\uff0c\u5c31\u7ed5\u4e0d\u5f00\u8fd9\u4e9b\u540d\u8bcd\uff0c\u800c\u8fd9\u4e9b\u540d\u8bcd\u4e5f\u662f\u6700\u8ba9 K8S \u65b0\u624b\u4eec\u611f\u5230\u5934\u75bc\u3001\u56f0\u60d1\u7684\u3002","title":"1.3.4 \u603b\u7ed3"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#ii-k8s-\u91cd\u8981\u6982\u5ff5","text":"","title":"II. K8S \u91cd\u8981\u6982\u5ff5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#21-pod-\u5b9e\u4f8b","text":"\u5b98\u65b9\u5bf9\u4e8e Pod \u7684\u89e3\u91ca\u662f\uff1a Pod \u662f\u53ef\u4ee5\u5728 Kubernetes \u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u3001\u6700\u5c0f\u7684\u53ef\u90e8\u7f72\u7684\u8ba1\u7b97\u5355\u5143 \u8fd9\u6837\u7684\u89e3\u91ca\u8fd8\u662f\u5f88\u96be\u8ba9\u4eba\u660e\u767d\u7a76\u7adf Pod \u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u5bf9\u4e8e K8S \u800c\u8a00\uff0cPod \u53ef\u4ee5\u8bf4\u662f\u6240\u6709\u5bf9\u8c61\u4e2d\u6700\u91cd\u8981\u7684\u6982\u5ff5\u4e86\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u6e05\u695a\u5730\u77e5\u9053\u201cPod \u662f\u4ec0\u4e48\u201d\uff0c\u518d\u53bb\u4e86\u89e3\u5176\u4ed6\u7684\u5bf9\u8c61\u3002 \u4ece\u5b98\u65b9\u7ed9\u51fa\u7684\u5b9a\u4e49\uff0c\u8054\u60f3\u4e0b\u201c\u6700\u5c0f\u7684 xxx \u5355\u5143\u201d\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u60f3\u5230\u672c\u79d1\u5728\u5b66\u6821\u91cc\u5b66\u4e60\u201c\u8fdb\u7a0b\u201d\u7684\u65f6\u5019\uff0c\u6559\u79d1\u4e66\u4e0a\u6709\u4e00\u6bb5\u7c7b\u4f3c\u7684\u63cf\u8ff0\uff1a\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff1b\u8fd8\u6709\u201d\u7ebf\u7a0b\u201c\u7684\u63cf\u8ff0\u662f\uff1aCPU \u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u4ec0\u4e48\u610f\u601d\u5462\uff1f \u201d\u6700\u5c0f xx \u5355\u4f4d\u201c\u8981\u4e48\u5c31\u662f\u4e8b\u7269\u7684\u8861\u91cf\u6807\u51c6\u5355\u4f4d\uff0c\u8981\u4e48\u5c31\u662f\u8d44\u6e90\u7684\u95ed\u5305\u3001\u96c6\u5408\u3002 \u524d\u8005\u6bd4\u5982\u957f\u5ea6\u7c73\u3001\u65f6\u95f4\u79d2\uff1b\u540e\u8005\u6bd4\u5982\u4e00\u4e2a\u201d\u8fdb\u7a0b\u201c\u662f\u5b58\u50a8\u548c\u8ba1\u7b97\u7684\u95ed\u5305\uff0c\u4e00\u4e2a\u201d\u7ebf\u7a0b\u201c\u662f CPU \u8d44\u6e90\uff08\u5305\u62ec\u5bc4\u5b58\u5668\u3001ALU \u7b49\uff09\u7684\u95ed\u5305\u3002 \u540c\u6837\u7684\uff0cPod \u5c31\u662f K8S \u4e2d\u4e00\u4e2a\u670d\u52a1\u7684\u95ed\u5305\u3002 \u8fd9\u4e48\u8bf4\u7684\u597d\u50cf\u8fd8\u662f\u6709\u70b9\u7384\u4e4e\uff0c\u66f4\u52a0\u4e91\u91cc\u96fe\u91cc\u4e86\u3002 \u7b80\u5355\u6765\u8bf4\uff0cPod \u53ef\u4ee5\u88ab\u7406\u89e3\u6210\u4e00\u7fa4\u53ef\u4ee5\u5171\u4eab\u7f51\u7edc\u3001\u5b58\u50a8\u548c\u8ba1\u7b97\u8d44\u6e90\u7684\u5bb9\u5668\u5316\u670d\u52a1\u7684\u96c6\u5408\u3002 \u518d\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0c\u5728\u540c\u4e00\u4e2a Pod \u91cc\u7684\u51e0\u4e2a Docker \u670d\u52a1/\u7a0b\u5e8f\uff0c\u597d\u50cf\u88ab\u90e8\u7f72\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u5171\u7528 Pod \u91cc\u7684\u5b58\u50a8\u8d44\u6e90\uff08\u8fd9\u91cc\u662f\u6307 Docker \u53ef\u4ee5\u6302\u8f7d Pod \u5185\u7684\u6570\u636e\u5377\uff0c\u6570\u636e\u5377\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff09\u3002 \u7b14\u8005\u603b\u7ed3 Pod \u5982\u4e0b\u56fe\uff0c\u53ef\u4ee5\u770b\u5230\uff1a \u540c\u4e00\u4e2a Pod \u4e4b\u95f4\u7684 Container \u53ef\u4ee5\u901a\u8fc7 localhost \u4e92\u76f8\u8bbf\u95ee\uff0c\u5e76\u4e14\u53ef\u4ee5\u6302\u8f7d Pod \u5185\u6240\u6709\u7684\u6570\u636e\u5377\uff1b\u4f46\u662f\u4e0d\u540c\u7684 Pod \u4e4b\u95f4\u7684 Container \u4e0d\u80fd\u7528 localhost \u8bbf\u95ee\uff0c\u4e5f\u4e0d\u80fd\u6302\u8f7d\u5176\u4ed6 Pod \u7684\u6570\u636e\u5377\u3002 \u5bf9 Pod \u6709\u76f4\u89c2\u7684\u8ba4\u8bc6\u4e4b\u540e\uff0c\u63a5\u7740\u6765\u770b K8S \u4e2d Pod \u7a76\u7adf\u957f\u4ec0\u4e48\u6837\u5b50\uff0c\u5177\u4f53\u5305\u62ec\u54ea\u4e9b\u8d44\u6e90\uff1f K8S \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u90fd\u901a\u8fc7 yaml \u6765\u8868\u793a\uff0c\u7b14\u8005\u4ece\u5b98\u65b9\u7f51\u7ad9\u6458\u5f55\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 Pod \u7684 yaml\uff1a \u770b\u4e0d\u61c2\u4e0d\u5fc5\u614c\u5f20\uff0c\u4e14\u8010\u5fc3\u542c\u4e0b\u9762\u7684\u89e3\u91ca\uff1a apiVersion : \u8bb0\u5f55 K8S \u7684 API Server \u7248\u672c\uff0c\u73b0\u5728\u770b\u5230\u7684\u90fd\u662f v1\uff0c\u7528\u6237\u4e0d\u7528\u7ba1\u3002 kind : \u8bb0\u5f55\u8be5 yaml \u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u8fd9\u662f\u4e00\u4efd Pod \u7684 yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u90a3\u4e48\u503c\u5185\u5bb9\u5c31\u662f Pod\u3002 metadata :\u8bb0\u5f55\u4e86 Pod \u81ea\u8eab\u7684\u5143\u6570\u636e\uff0c\u6bd4\u5982\u8fd9\u4e2a Pod \u7684\u540d\u5b57\u3001\u8fd9\u4e2a Pod \u5c5e\u4e8e\u54ea\u4e2a namespace\uff08\u547d\u540d\u7a7a\u95f4\u7684\u6982\u5ff5\uff0c\u540e\u6587\u4f1a\u8be6\u8ff0\uff0c\u6682\u65f6\u7406\u89e3\u4e3a\u201c \u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u5185\u7684\u5bf9\u8c61\u4e92\u76f8\u53ef\u89c1 \u201d\uff09\u3002 spec \u8bb0\u5f55\u4e86 Pod \u5185\u90e8\u6240\u6709\u7684\u8d44\u6e90\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u770b\u61c2\u8fd9\u4e2a\u5f88\u91cd\u8981\uff1a containers \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u5bb9\u5668\u4fe1\u606f\uff0ccontainers \u5305\u62ec\u4e86\uff1a name : \u5bb9\u5668\u540d image :\u5bb9\u5668\u7684\u955c\u50cf\u5730\u5740 resources : \u5bb9\u5668\u9700\u8981\u7684 CPU\u3001\u5185\u5b58\u3001GPU \u7b49\u8d44\u6e90 command : \u5bb9\u5668\u7684\u5165\u53e3\u547d\u4ee4 args : \u5bb9\u5668\u7684\u5165\u53e3\u53c2\u6570 volumeMounts \u5bb9\u5668\u8981\u6302\u8f7d\u7684 Pod \u6570\u636e\u5377\u7b49\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u4e0a\u8ff0\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662f\u542f\u52a8\u5bb9\u5668\u7684\u5fc5\u8981\u548c\u5fc5\u9700\u7684\u4fe1\u606f\u3002 volumes \u8bb0\u5f55\u4e86 Pod \u5185\u7684\u6570\u636e\u5377\u4fe1\u606f\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u4ecb\u7ecd Pod \u7684\u6570\u636e\u5377\u3002","title":"2.1 Pod \u5b9e\u4f8b"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#22-volume-\u6570\u636e\u5377","text":"\u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377 volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c \u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 volumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002 K8S \u652f\u6301\u5f88\u591a\u7c7b\u578b\u7684 volume \u6570\u636e\u5377\u6302\u8f7d\uff0c\u5177\u4f53\u8bf7\u53c2\u89c1 K8S \u5377\u3002 \u524d\u6587\u5c31\u201c\u5982\u4f55\u7406\u89e3 volume\u201d\u63d0\u5230\uff1a\u201c\u9700\u8981\u624b\u52a8 mount \u7684\u78c1\u76d8\u201d\uff0c\u6b64\u5916\uff0c\u6709\u4e00\u70b9\u53ef\u4ee5\u5e2e\u52a9\u7406\u89e3\uff1a \u6570\u636e\u5377 volume \u662f Pod \u5185\u90e8\u7684\u78c1\u76d8\u8d44\u6e90\u3002 \u5176\u5b9e\uff0c\u5355\u5355\u5c31 Volume \u6765\u8bf4\uff0c\u4e0d\u96be\u7406\u89e3\u3002\u4f46\u662f\u4e0a\u9762\u8fd8\u770b\u5230\u4e86 volumeMounts\uff0c\u8fd9\u4fe9\u662f\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f volume \u662f K8S \u7684\u5bf9\u8c61\uff0c\u5bf9\u5e94\u4e00\u4e2a\u5b9e\u4f53\u7684\u6570\u636e\u5377\uff1b\u800c volumeMounts \u53ea\u662f container \u7684\u6302\u8f7d\u70b9\uff0c\u5bf9\u5e94 container \u7684\u5176\u4e2d\u4e00\u4e2a\u53c2\u6570\u3002 \u4f46\u662f\uff0cvolumeMounts \u4f9d\u8d56\u4e8e volume\uff0c\u53ea\u6709\u5f53 Pod \u5185\u6709 volume \u8d44\u6e90\u7684\u65f6\u5019\uff0c\u8be5 Pod \u5185\u90e8\u7684 container \u624d\u53ef\u80fd\u6709 volumeMounts\u3002","title":"2.2 Volume \u6570\u636e\u5377"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#23-container-\u5bb9\u5668","text":"\u672c\u6587\u4e2d\u63d0\u5230\u7684\u955c\u50cf Image\u3001\u5bb9\u5668 Container\uff0c\u90fd\u6307\u4ee3\u4e86 Pod \u4e0b\u7684\u4e00\u4e2a container\u3002\u5173\u4e8e K8S \u4e2d\u7684\u5bb9\u5668\uff0c\u5728 2.1Pod \u7ae0\u8282\u90fd\u5df2\u7ecf\u4ea4\u4ee3\u4e86\uff0c\u8fd9\u91cc\u65e0\u975e\u518d\u5570\u55e6\u4e00\u53e5\uff1a\u4e00\u4e2a Pod \u5185\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5668 container\u3002 \u5728 Pod \u4e2d\uff0c\u5bb9\u5668\u4e5f\u6709\u5206\u7c7b\uff0c\u5bf9\u8fd9\u4e2a\u611f\u5174\u8da3\u7684\u540c\u5b66\u6b22\u8fce\u81ea\u884c\u9605\u8bfb\u66f4\u591a\u8d44\u6599\uff1a \u6807\u51c6\u5bb9\u5668 Application Container\u3002 \u521d\u59cb\u5316\u5bb9\u5668 Init Container\u3002 \u8fb9\u8f66\u5bb9\u5668 Sidecar Container\u3002 \u4e34\u65f6\u5bb9\u5668 Ephemeral Container\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u90e8\u7f72\u7684\u5927\u591a\u662f\u6807\u51c6\u5bb9\u5668\uff08 Application Container\uff09\u3002","title":"2.3 Container \u5bb9\u5668"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#24-deployment-\u548c-replicaset\u7b80\u79f0-rs","text":"Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1 Deployment \uff1aDeployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 ReplicaSets\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u9664\u4e86 Pod \u4e4b\u5916\uff0cK8S \u4e2d\u6700\u5e38\u542c\u5230\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5c31\u662f Deployment \u4e86\u3002\u90a3\u4e48\uff0c\u4ec0\u4e48\u662f Deployment \u5462\uff1f\u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8981\u547d\u7684\u89e3\u91ca\uff1a \u4e00\u4e2a Deployment \u63a7\u5236\u5668\u4e3a Pods \u548c ReplicaSets \u63d0\u4f9b\u58f0\u660e\u5f0f\u7684\u66f4\u65b0\u80fd\u529b\u3002 \u4f60\u8d1f\u8d23\u63cf\u8ff0 Deployment \u4e2d\u7684 \u76ee\u6807\u72b6\u6001\uff0c\u800c Deployment \u63a7\u5236\u5668\u4ee5\u53d7\u63a7\u901f\u7387\u66f4\u6539\u5b9e\u9645\u72b6\u6001\uff0c \u4f7f\u5176\u53d8\u4e3a\u671f\u671b\u72b6\u6001\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49 Deployment \u4ee5\u521b\u5efa\u65b0\u7684 ReplicaSet\uff0c\u6216\u5220\u9664\u73b0\u6709 Deployment\uff0c\u5e76\u901a\u8fc7\u65b0\u7684 Deployment \u6536\u517b\u5176\u8d44\u6e90\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a Deployment \u7684\u4f5c\u7528\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod \u548c ReplicaSet\uff0c\u7ba1\u63a7\u5b83\u4eec\u8fd0\u884c\u5728\u7528\u6237\u671f\u671b\u7684\u72b6\u6001\u4e2d\u3002 \u54ce\uff0c\u6253\u4e2a\u5f62\u8c61\u7684\u6bd4\u55bb\uff0cDeployment \u5c31\u662f\u5305\u5de5\u5934\uff0c\u4e3b\u8981\u8d1f\u8d23\u76d1\u7763\u5e95\u4e0b\u7684\u5de5\u4eba Pod \u5e72\u6d3b\uff0c\u786e\u4fdd\u6bcf\u65f6\u6bcf\u523b\u6709\u7528\u6237\u8981\u6c42\u6570\u91cf\u7684 Pod \u5728\u5de5\u4f5c\u3002\u5982\u679c\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u5de5\u4eba Pod \u4e0d\u884c\u4e86\uff0c\u5c31\u8d76\u7d27\u65b0\u62c9\u4e00\u4e2a Pod \u8fc7\u6765\u66ff\u6362\u5b83\u3002 \u65b0\u7684\u95ee\u9898\u53c8\u6765\u4e86\uff1a\u90a3\u4ec0\u4e48\u662f ReplicaSets \u5462\uff1f ReplicaSet \u7684\u76ee\u7684\u662f\u7ef4\u62a4\u4e00\u7ec4\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684 Pod \u526f\u672c\u7684\u7a33\u5b9a\u96c6\u5408\u3002 \u56e0\u6b64\uff0c\u5b83\u901a\u5e38\u7528\u6765\u4fdd\u8bc1\u7ed9\u5b9a\u6570\u91cf\u7684\u3001\u5b8c\u5168\u76f8\u540c\u7684 Pod \u7684\u53ef\u7528\u6027\u3002 \u518d\u6765\u7ffb\u8bd1\u4e0b\uff1a ReplicaSet \u7684\u4f5c\u7528\u5c31\u662f\u7ba1\u7406\u548c\u63a7\u5236 Pod\uff0c\u7ba1\u63a7\u4ed6\u4eec\u597d\u597d\u5e72\u6d3b\u3002 \u4f46\u662f\uff0cReplicaSet \u53d7\u63a7\u4e8e Deployment\u3002\u5f62\u8c61\u6765\u8bf4\uff0cReplicaSet \u5c31\u662f\u603b\u5305\u5de5\u5934\u624b\u4e0b\u7684\u5c0f\u5305\u5de5\u5934\u3002 \u4f46\u662f\uff0c\u4ece K8S \u4f7f\u7528\u8005\u89d2\u5ea6\u6765\u770b\uff0c\u7528\u6237\u4f1a\u76f4\u63a5\u64cd\u4f5c Deployment \u90e8\u7f72\u670d\u52a1\uff0c\u800c\u5f53 Deployment \u88ab\u90e8\u7f72\u7684\u65f6\u5019\uff0cK8S \u4f1a\u81ea\u52a8\u751f\u6210\u8981\u6c42\u7684 ReplicaSet \u548c Pod\u3002 \u5728 K8S \u5b98\u65b9\u6587\u6863\u4e2d\u4e5f\u6307\u51fa\u7528\u6237\u53ea\u9700\u8981\u5173\u5fc3 Deployment \u800c\u4e0d\u64cd\u5fc3 ReplicaSet\uff1a This actually means that you may never need to manipulate ReplicaSet objects: use a Deployment instead, and define your application in the spec section.\u8fd9\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u60a8\u53ef\u80fd\u6c38\u8fdc\u4e0d\u9700\u8981\u64cd\u4f5c ReplicaSet \u5bf9\u8c61\uff1a\u76f4\u63a5\u4f7f\u7528 Deployments \u5e76\u5728\u89c4\u8303\u90e8\u5206\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u3002 \u8865\u5145\u8bf4\u660e\uff1a\u5728 K8S \u4e2d\u8fd8\u6709\u4e00\u4e2a\u5bf9\u8c61 --- ReplicationController\uff08\u7b80\u79f0 RC\uff09\uff0c\u5b98\u65b9\u6587\u6863\u5bf9\u5b83\u7684\u5b9a\u4e49\u662f\uff1a ReplicationController \u786e\u4fdd\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u6709\u7279\u5b9a\u6570\u91cf\u7684 Pod \u526f\u672c\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0cReplicationController \u786e\u4fdd\u4e00\u4e2a Pod \u6216\u4e00\u7ec4\u540c\u7c7b\u7684 Pod \u603b\u662f\u53ef\u7528\u7684\u3002 \u600e\u4e48\u6837\uff0c\u548c ReplicaSet \u662f\u4e0d\u662f\u5f88\u76f8\u8fd1\uff1f\u5728 Deployments, ReplicaSets, and pods \u6559\u7a0b\u4e2d\u8bf4\u201cReplicationController \u662f ReplicaSet \u7684\u524d\u8eab\u201d\uff0c\u5b98\u65b9\u4e5f\u63a8\u8350\u7528 Deployment \u53d6\u4ee3 ReplicationController \u6765\u90e8\u7f72\u670d\u52a1\u3002","title":"2.4 Deployment \u548c ReplicaSet\uff08\u7b80\u79f0 RS\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#25-service-\u548c-ingress","text":"\u5410\u69fd\u4e0b K8S \u7684\u6982\u5ff5/\u5bf9\u8c61/\u8d44\u6e90\u662f\u771f\u7684\u591a\u554a\uff01\u524d\u6587\u4ecb\u7ecd\u7684 Deployment\u3001ReplicationController \u548c ReplicaSet \u4e3b\u8981\u7ba1\u63a7 Pod \u7a0b\u5e8f\u670d\u52a1\uff1b \u90a3\u4e48\uff0c Service \u548c Ingress \u5219\u8d1f\u8d23\u7ba1\u63a7 Pod \u7f51\u7edc\u670d\u52a1\u3002 K8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c \u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002 \u6211\u4eec\u5148\u6765\u770b\u770b\u5b98\u65b9\u6587\u6863\u4e2d Service \u7684\u5b9a\u4e49\uff1a \u5c06\u8fd0\u884c\u5728\u4e00\u7ec4 Pods \u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u4e3a\u7f51\u7edc\u670d\u52a1\u7684\u62bd\u8c61\u65b9\u6cd5\u3002 \u4f7f\u7528 Kubernetes\uff0c\u60a8\u65e0\u9700\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\u4f7f\u7528\u4e0d\u719f\u6089\u7684\u670d\u52a1\u53d1\u73b0\u673a\u5236\u3002 Kubernetes \u4e3a Pods \u63d0\u4f9b\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u5e76\u4e3a\u4e00\u7ec4 Pod \u63d0\u4f9b\u76f8\u540c\u7684 DNS \u540d\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u3002 \u7ffb\u8bd1\u4e0b\uff1aK8S \u4e2d\u7684\u670d\u52a1\uff08Service\uff09\u5e76\u4e0d\u662f\u6211\u4eec\u5e38\u8bf4\u7684\u201c\u670d\u52a1\u201d\u7684\u542b\u4e49\uff0c\u800c\u66f4\u50cf\u662f\u7f51\u5173\u5c42\uff0c\u662f\u82e5\u5e72\u4e2a Pod \u7684\u6d41\u91cf\u5165\u53e3\u3001\u6d41\u91cf\u5747\u8861\u5668\u3002","title":"2.5 Service \u548c Ingress"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#\u4e3a\u4ec0\u4e48\u8981-service-\u5462","text":"\u79c1\u4ee5\u4e3a\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b98\u65b9\u6587\u6863\u8bb2\u89e3\u5730\u975e\u5e38\u6e05\u695a\uff1a Kubernetes Pod \u662f\u6709\u751f\u547d\u5468\u671f\u7684\u3002 \u5b83\u4eec\u53ef\u4ee5\u88ab\u521b\u5efa\uff0c\u800c\u4e14\u9500\u6bc1\u4e4b\u540e\u4e0d\u4f1a\u518d\u542f\u52a8\u3002 \u5982\u679c\u60a8\u4f7f\u7528 Deployment \u6765\u8fd0\u884c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5219\u5b83\u53ef\u4ee5\u52a8\u6001\u521b\u5efa\u548c\u9500\u6bc1 Pod\u3002 \u6bcf\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u4f46\u662f\u5728 Deployment \u4e2d\uff0c\u5728\u540c\u4e00\u65f6\u523b\u8fd0\u884c\u7684 Pod \u96c6\u5408\u53ef\u80fd\u4e0e\u7a0d\u540e\u8fd0\u884c\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684 Pod \u96c6\u5408\u4e0d\u540c\u3002 \u8fd9\u5bfc\u81f4\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u4e00\u7ec4 Pod\uff08\u79f0\u4e3a\u201c\u540e\u7aef\u201d\uff09\u4e3a\u7fa4\u96c6\u5185\u7684\u5176\u4ed6 Pod\uff08\u79f0\u4e3a\u201c\u524d\u7aef\u201d\uff09\u63d0\u4f9b\u529f\u80fd\uff0c \u90a3\u4e48\u524d\u7aef\u5982\u4f55\u627e\u51fa\u5e76\u8ddf\u8e2a\u8981\u8fde\u63a5\u7684 IP \u5730\u5740\uff0c\u4ee5\u4fbf\u524d\u7aef\u53ef\u4ee5\u4f7f\u7528\u5de5\u4f5c\u91cf\u7684\u540e\u7aef\u90e8\u5206\uff1f \u8865\u5145\u8bf4\u660e\uff1aK8S \u96c6\u7fa4\u7684\u7f51\u7edc\u7ba1\u7406\u548c\u62d3\u6251\u4e5f\u6709\u7279\u522b\u7684\u8bbe\u8ba1\uff0c\u4ee5\u540e\u4f1a\u4e13\u95e8\u51fa\u4e00\u7ae0\u8282\u6765\u8be6\u7ec6\u4ecb\u7ecd K8S \u4e2d\u7684\u7f51\u7edc\u3002\u8fd9\u91cc\u9700\u8981\u6e05\u695a\u4e00\u70b9\uff1aK8S \u96c6\u7fa4\u5185\u7684\u6bcf\u4e00\u4e2a Pod \u90fd\u6709\u81ea\u5df1\u7684 IP\uff08\u662f\u4e0d\u662f\u5f88\u7c7b\u4f3c\u4e00\u4e2a Pod \u5c31\u662f\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u7136\u800c\u4e8b\u5b9e\u4e0a\u662f\u591a\u4e2a Pod \u5b58\u5728\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff0c\u53ea\u4e0d\u8fc7\u662f K8S \u505a\u4e86\u7f51\u7edc\u9694\u79bb\uff09\uff0c\u5728 K8S \u96c6\u7fa4\u5185\u90e8\u8fd8\u6709 DNS \u7b49\u7f51\u7edc\u670d\u52a1\uff08\u4e00\u4e2a K8S \u96c6\u7fa4\u5c31\u5982\u540c\u7ba1\u7406\u4e86\u591a\u533a\u57df\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u505a\u590d\u6742\u7684\u7f51\u7edc\u62d3\u6251\uff09\u3002 \u6b64\u5916\uff0c\u7b14\u8005\u63a8\u8350 k8s \u5916\u7f51\u5982\u4f55\u8bbf\u95ee\u4e1a\u52a1\u5e94\u7528 \u5bf9\u4e8eService\u7684\u4ecb\u7ecd\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u65b0\u624b\u800c\u8a00\uff0c\u63a8\u8350\u9605\u8bfb\u524d\u534a\u90e8\u5206\u5bf9\u4e8eservice\u7684\u4ecb\u7ecd\u5373\u53ef\uff0c\u540e\u534a\u90e8\u5206\u5c31\u592a\u590d\u6742\u4e86\u3002\u6211\u8fd9\u91cc\u505a\u4e86\u7b80\u5355\u7684\u603b\u7ed3\uff1a Service\u662fK8S\u670d\u52a1\u7684\u6838\u5fc3\uff0c\u5c4f\u853d\u4e86\u670d\u52a1\u7ec6\u8282\uff0c\u7edf\u4e00\u5bf9\u5916\u66b4\u9732\u670d\u52a1\u63a5\u53e3\uff0c\u771f\u6b63\u505a\u5230\u4e86\u201c\u5fae\u670d\u52a1\u201d\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u7684\u4e00\u4e2a\u670d\u52a1A\uff0c\u90e8\u7f72\u4e863\u4e2a\u5907\u4efd\uff0c\u4e5f\u5c31\u662f3\u4e2aPod\uff1b\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u4e00\u4e2aService\u7684\u5165\u53e3\u5c31\u53ef\u4ee5\uff0c\u800c\u4e0d\u9700\u8981\u64cd\u5fc3\u7a76\u7adf\u5e94\u8be5\u8bf7\u6c42\u54ea\u4e00\u4e2aPod\u3002\u4f18\u52bf\u975e\u5e38\u660e\u663e\uff1a\u4e00\u65b9\u9762 \u5916\u90e8\u7528\u6237\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u4e3aPod\u4e0a\u670d\u52a1\u7684\u610f\u5916\u5d29\u6e83\u3001K8S\u91cd\u65b0\u62c9\u8d77Pod\u800c\u9020\u6210\u7684IP\u53d8\u66f4\uff0c\u5916\u90e8\u7528\u6237\u4e5f\u4e0d\u9700\u8981\u611f\u77e5\u56e0\u5347\u7ea7\u3001\u53d8\u66f4\u670d\u52a1\u5e26\u6765\u7684Pod\u66ff\u6362\u800c\u9020\u6210\u7684IP\u53d8\u5316 \uff0c\u53e6\u4e00\u65b9\u9762\uff0cService\u8fd8\u53ef\u4ee5\u505a \u6d41\u91cf\u8d1f\u8f7d\u5747\u8861 \u3002 \u4f46\u662f\uff0cService \u4e3b\u8981\u8d1f\u8d23 K8S \u96c6\u7fa4\u5185\u90e8\u7684\u7f51\u7edc\u62d3\u6251\u3002\u90a3\u4e48\u96c6\u7fa4\u5916\u90e8\u600e\u4e48\u8bbf\u95ee\u96c6\u7fa4\u5185\u90e8\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981 Ingress \u4e86\uff0c\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u89e3\u91ca\u662f\uff1a Ingress \u662f\u5bf9\u96c6\u7fa4\u4e2d\u670d\u52a1\u7684\u5916\u90e8\u8bbf\u95ee\u8fdb\u884c\u7ba1\u7406\u7684 API \u5bf9\u8c61\uff0c\u5178\u578b\u7684\u8bbf\u95ee\u65b9\u5f0f\u662f HTTP\u3002 Ingress \u53ef\u4ee5\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u3001SSL \u7ec8\u7ed3\u548c\u57fa\u4e8e\u540d\u79f0\u7684\u865a\u62df\u6258\u7ba1\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1aIngress \u662f\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u63a5\u5165\u5c42\uff0c\u590d\u6742\u96c6\u7fa4\u5185\u5916\u901a\u8baf\u3002","title":"\u4e3a\u4ec0\u4e48\u8981 Service \u5462\uff1f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#26-namespace-\u547d\u540d\u7a7a\u95f4","text":"namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u548c\u524d\u6587\u4ecb\u7ecd\u7684\u6240\u6709\u7684\u6982\u5ff5\u90fd\u4e0d\u4e00\u6837\uff0cnamespace \u8ddf Pod \u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\uff0c\u800c\u662f K8S \u53e6\u4e00\u4e2a\u7ef4\u5ea6\u7684\u5bf9\u8c61\u3002\u6216\u8005\u8bf4\uff0c\u524d\u6587\u63d0\u5230\u7684\u6982\u5ff5\u90fd\u662f\u4e3a\u4e86\u670d\u52a1 Pod \u7684\uff0c\u800c namespace \u5219\u662f\u4e3a\u4e86\u670d\u52a1\u6574\u4e2a K8S \u96c6\u7fa4\u7684\u3002 \u90a3\u4e48\uff0cnamespace \u662f\u4ec0\u4e48\u5462\uff1f \u4e0a\u5b98\u65b9\u6587\u6863\u5b9a\u4e49\uff1a Kubernetes \u652f\u6301\u591a\u4e2a\u865a\u62df\u96c6\u7fa4\uff0c\u5b83\u4eec\u5e95\u5c42\u4f9d\u8d56\u4e8e\u540c\u4e00\u4e2a\u7269\u7406\u96c6\u7fa4\u3002 \u8fd9\u4e9b\u865a\u62df\u96c6\u7fa4\u88ab\u79f0\u4e3a\u540d\u5b57\u7a7a\u95f4\u3002 \u7ffb\u8bd1\u4e00\u4e0b\uff1a namespace \u662f\u4e3a\u4e86\u628a\u4e00\u4e2a K8S \u96c6\u7fa4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u8d44\u6e90\u4e0d\u53ef\u5171\u4eab\u7684\u865a\u62df\u96c6\u7fa4\u800c\u8bde\u751f\u7684\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u53ef\u4ee5\u901a\u8fc7\u5728 K8S \u96c6\u7fa4\u5185\u521b\u5efa namespace \u6765\u5206\u9694\u8d44\u6e90\u548c\u5bf9\u8c61\u3002 \u6bd4\u5982\u6211\u6709 2 \u4e2a\u4e1a\u52a1 A \u548c B\uff0c\u90a3\u4e48\u6211\u53ef\u4ee5\u521b\u5efa ns-a \u548c ns-b \u5206\u522b\u90e8\u7f72\u4e1a\u52a1 A \u548c B \u7684\u670d\u52a1\uff0c\u5982\u5728 ns-a \u4e2d\u90e8\u7f72\u4e86\u4e00\u4e2a deployment \uff0c\u540d\u5b57\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello a\u201d\uff1b\u5728 ns-b \u4e2d\u4e5f\u90e8\u7f72\u4e86\u4e00\u4e2a deployment\uff0c\u540d\u5b57\u6070\u5de7\u4e5f\u662f hello\uff0c\u8fd4\u56de\u7528\u6237\u7684\u662f\u201chello b\u201d \uff08\u8981\u77e5\u9053\uff0c\u5728\u540c\u4e00\u4e2a namespace \u4e0b deployment \u4e0d\u80fd\u540c\u540d\uff1b\u4f46\u662f\u4e0d\u540c namespace \u4e4b\u95f4\u6ca1\u6709\u5f71\u54cd\uff09 \u3002\u524d\u6587\u63d0\u5230\u7684\u6240\u6709\u5bf9\u8c61\uff0c\u90fd\u662f\u5728 namespace \u4e0b\u7684\uff1b\u5f53\u7136\uff0c\u4e5f\u6709\u4e00\u4e9b\u5bf9\u8c61\u662f\u4e0d\u96b6\u5c5e\u4e8e namespace \u7684\uff0c\u800c\u662f\u5728 K8S \u96c6\u7fa4\u5185\u5168\u5c40\u53ef\u89c1\u7684\uff0c\u5b98\u65b9\u6587\u6863\u63d0\u5230\u7684\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u6765\u67e5\u770b\uff0c\u5177\u4f53\u547d\u4ee4\u7684\u4f7f\u7528\u529e\u6cd5\uff0c\u7b14\u8005\u4f1a\u51fa\u540e\u7eed\u7684\u5b9e\u6218\u6587\u7ae0\u6765\u4ecb\u7ecd\uff0c\u5148\u8d34\u4e0b\u547d\u4ee4\uff1a Bash 1 2 3 4 5 # \u4f4d\u4e8e\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = true # \u4e0d\u5728\u540d\u5b57\u7a7a\u95f4\u4e2d\u7684\u8d44\u6e90 kubectl api-resources --namespaced = false \u5728 namespace \u4e0b\u7684\u5bf9\u8c61\u6709\uff08\u90e8\u5206\uff09\uff1a","title":"2.6 namespace \u547d\u540d\u7a7a\u95f4"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#27-\u5176\u4ed6","text":"K8S \u7684\u5bf9\u8c61\u5b9e\u5728\u592a\u591a\u4e86\uff0c2.1-2.6 \u4ecb\u7ecd\u7684\u662f\u5728\u5b9e\u9645\u4f7f\u7528 K8S \u90e8\u7f72\u670d\u52a1\u6700\u5e38\u89c1\u7684\u3002\u5176\u4ed6\u7684\u8fd8\u6709 Job\u3001CronJob \u7b49\u7b49\uff0c\u5728\u5bf9 K8S \u6709\u4e86\u6bd4\u8f83\u6e05\u695a\u7684\u8ba4\u77e5\u4e4b\u540e\uff0c\u518d\u53bb\u5b66\u4e60\u66f4\u591a\u7684 K8S \u5bf9\u8c61\uff0c\u4e0d\u662f\u96be\u4e8b\u3002","title":"2.7 \u5176\u4ed6"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/02%20K8S/K8S%E7%B3%BB%E5%88%97%E4%B8%80%EF%BC%9A%E6%A6%82%E5%BF%B5%E5%85%A5%E9%97%A8/#\u5199\u5728\u540e\u9762","text":"\u672c\u6587\u662f K8S \u7cfb\u5217\u6587\u7ae0\u7b2c\u4e00\u7bc7\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u5bf9 K8S \u4e0d\u4e86\u89e3\u7684\u65b0\u624b\u5feb\u901f\u4e86\u89e3 K8S\u3002\u5982\u679c\u6587\u7ae0\u4e2d\u6709\u7eb0\u6f0f\uff0c\u975e\u5e38\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u6307\u51fa\uff1b\u6709\u7406\u89e3\u9519\u8bef\u7684\u5730\u65b9\uff0c\u66f4\u662f\u6b22\u8fce\u7559\u8a00\u6216\u8005\u79c1\u4fe1\u544a\u77e5\u3002 \u7b14\u8005\u4e00\u8fb9\u5199\u6587\u7ae0\uff0c\u4e00\u8fb9\u67e5\u9605\u548c\u6574\u7406 K8S \u8d44\u6599\uff0c\u8fc7\u7a0b\u4e2d\u8d8a\u53d1\u611f\u89c9 K8S \u67b6\u6784\u7684\u5b8c\u5907\u3001\u8bbe\u8ba1\u7684\u7cbe\u5999\uff0c\u662f\u503c\u5f97\u6df1\u5165\u7814\u7a76\u7684\uff0cK8S \u5927\u53d7\u6b22\u8fce\u662f\u6709\u9053\u7406\u7684\uff01\u518d\u6b21\u611f\u53f9\u4e0b\u3002","title":"\u5199\u5728\u540e\u9762"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/00%20Raft%20%E5%9F%BA%E7%A1%80/","text":"0. \u590d\u5236\u72b6\u6001\u673a\u7684\u6982\u5ff5 \u00b6 1. 3 \u79cd\u72b6\u6001 \u00b6 2. 2 \u79cd RPC \u00b6","title":"0. \u590d\u5236\u72b6\u6001\u673a\u7684\u6982\u5ff5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/00%20Raft%20%E5%9F%BA%E7%A1%80/#0-\u590d\u5236\u72b6\u6001\u673a\u7684\u6982\u5ff5","text":"","title":"0. \u590d\u5236\u72b6\u6001\u673a\u7684\u6982\u5ff5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/00%20Raft%20%E5%9F%BA%E7%A1%80/#1-3-\u79cd\u72b6\u6001","text":"","title":"1. 3 \u79cd\u72b6\u6001"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/00%20Raft%20%E5%9F%BA%E7%A1%80/#2-2-\u79cd-rpc","text":"","title":"2. 2 \u79cd RPC"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/01%20%E9%97%AE%E9%A2%981%20%E9%A2%86%E5%AF%BC%E8%80%85%E9%80%89%E4%B8%BE/","text":"Raft \u8bba\u6587\u6458\u5f55\uff1a 5.2 \u9886\u5bfc\u4eba\u9009\u4e3e \u00b6 Raft \u4f7f\u7528\u4e00\u79cd \u5fc3\u8df3\u673a\u5236 \u6765\u89e6\u53d1\u9886\u5bfc\u4eba\u9009\u4e3e\u3002\u5f53\u670d\u52a1\u5668\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u4ed6\u4eec\u90fd\u662f\u8ddf\u968f\u8005\u8eab\u4efd\u3002 \u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u7ee7\u7eed\u4fdd\u6301\u7740\u8ddf\u968f\u8005\u72b6\u6001\u53ea\u8981\u4ed6\u4ece\u9886\u5bfc\u4eba\u6216\u8005\u5019\u9009\u8005\u5904\u63a5\u6536\u5230\u6709\u6548\u7684 RPCs \u3002\u9886\u5bfc\u8005\u5468\u671f\u6027\u7684\u5411\u6240\u6709\u8ddf\u968f\u8005\u53d1\u9001 \u5fc3\u8df3\u5305 \uff08\u5373\u4e0d\u5305\u542b\u65e5\u5fd7\u9879\u5185\u5bb9\u7684\u9644\u52a0\u65e5\u5fd7\u9879 RPCs\uff09\u6765\u7ef4\u6301\u81ea\u5df1\u7684\u6743\u5a01\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u5728\u4e00\u6bb5\u65f6\u95f4\u91cc\u6ca1\u6709\u63a5\u6536\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u4e5f\u5c31\u662f \u300c\u9009\u4e3e\u8d85\u65f6\u300d \uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u8ba4\u4e3a\u7cfb\u7edf\u4e2d\u6ca1\u6709\u53ef\u7528\u7684\u9886\u5bfc\u8005,\u5e76\u4e14\u53d1\u8d77\u9009\u4e3e\u4ee5\u9009\u51fa\u65b0\u7684\u9886\u5bfc\u8005\u3002 \u8981\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u8fc7\u7a0b\uff0c\u8ddf\u968f\u8005\u5148\u8981 \u589e\u52a0\u81ea\u5df1\u7684\u5f53\u524d\u4efb\u671f\u53f7 \u5e76\u4e14\u8f6c\u6362\u5230\u5019\u9009\u4eba\u72b6\u6001\u3002\u7136\u540e\u4ed6\u4f1a\u5e76\u884c\u7684\u5411\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u8282\u70b9\u53d1\u9001\u8bf7\u6c42\u6295\u7968\u7684 RPCs \u6765\u7ed9\u81ea\u5df1\u6295\u7968\u3002\u5019\u9009\u4eba\u4f1a\u7ee7\u7eed\u4fdd\u6301\u7740\u5f53\u524d\u72b6\u6001\u76f4\u5230\u4ee5\u4e0b\u4e09\u4ef6\u4e8b\u60c5\u4e4b\u4e00\u53d1\u751f\uff1a(a) \u4ed6\u81ea\u5df1\u8d62\u5f97\u4e86\u8fd9\u6b21\u7684\u9009\u4e3e\uff0c(b) \u5176\u4ed6\u7684\u670d\u52a1\u5668\u6210\u4e3a\u9886\u5bfc\u8005\uff0c\u00a9 \u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u83b7\u80dc\u7684\u4eba\u3002\u8fd9\u4e9b\u7ed3\u679c\u4f1a\u5206\u522b\u7684\u5728\u4e0b\u9762\u7684\u6bb5\u843d\u91cc\u8fdb\u884c\u8ba8\u8bba\u3002 (a) \u5f53\u4e00\u4e2a\u5019\u9009\u4eba\u4ece\u6574\u4e2a\u96c6\u7fa4\u7684\u5927\u591a\u6570\u670d\u52a1\u5668\u8282\u70b9\u83b7\u5f97\u4e86\u9488\u5bf9\u540c\u4e00\u4e2a\u4efb\u671f\u53f7\u7684\u9009\u7968\uff0c\u90a3\u4e48\u4ed6\u5c31\u8d62\u5f97\u4e86\u8fd9\u6b21\u9009\u4e3e\u5e76\u6210\u4e3a\u9886\u5bfc\u4eba\u3002 \u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u4f1a\u5bf9\u4e00\u4e2a\u4efb\u671f\u53f7\u6295\u51fa\u4e00\u5f20\u9009\u7968\uff0c\u6309\u7167 \u5148\u6765\u5148\u670d\u52a1\u7684\u539f\u5219 \uff08\u6ce8\u610f\uff1a5.4 \u8282\u5728\u6295\u7968\u4e0a\u589e\u52a0\u4e86\u4e00\u70b9\u989d\u5916\u7684\u9650\u5236\uff09\u3002\u8981\u6c42\u5927\u591a\u6570\u9009\u7968\u7684\u89c4\u5219\u786e\u4fdd\u4e86\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u6b64\u6b21\u9009\u4e3e\uff08\u56fe 3 \u4e2d\u7684\u9009\u4e3e\u5b89\u5168\u6027\uff09\u3002\u4e00\u65e6\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u4ed6\u5c31\u7acb\u5373\u6210\u4e3a\u9886\u5bfc\u4eba\u3002 \u7136\u540e\u4ed6\u4f1a\u5411\u5176\u4ed6\u7684\u670d\u52a1\u5668\u53d1\u9001\u5fc3\u8df3\u6d88\u606f\u6765\u5efa\u7acb\u81ea\u5df1\u7684\u6743\u5a01\u5e76\u4e14\u963b\u6b62\u65b0\u7684\u9886\u5bfc\u4eba\u7684\u4ea7\u751f\u3002 (b) \u5728\u7b49\u5f85\u6295\u7968\u7684\u65f6\u5019\uff0c\u5019\u9009\u4eba\u53ef\u80fd\u4f1a\u4ece\u5176\u4ed6\u7684\u670d\u52a1\u5668\u63a5\u6536\u5230\u58f0\u660e\u5b83\u662f\u9886\u5bfc\u4eba\u7684\u9644\u52a0\u65e5\u5fd7\u9879 RPC\u3002 \u5982\u679c\u8fd9\u4e2a\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u53f7\uff08\u5305\u542b\u5728\u6b64\u6b21\u7684 RPC\u4e2d\uff09\u4e0d\u5c0f\u4e8e\u5019\u9009\u4eba\u5f53\u524d\u7684\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u4f1a\u627f\u8ba4\u9886\u5bfc\u4eba\u5408\u6cd5\u5e76\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\u3002 \u5982\u679c\u6b64\u6b21 RPC \u4e2d\u7684**\u4efb\u671f\u53f7\u6bd4\u81ea\u5df1\u5c0f**\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u5c31\u4f1a\u62d2\u7edd\u8fd9\u6b21\u7684 RPC \u5e76\u4e14\u7ee7\u7eed\u4fdd\u6301\u5019\u9009\u4eba\u72b6\u6001\u3002 \u00a9 \u7b2c\u4e09\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\u662f\u5019\u9009\u4eba\u65e2\u6ca1\u6709\u8d62\u5f97\u9009\u4e3e\u4e5f\u6ca1\u6709\u8f93\uff1a\u5982\u679c\u6709\u591a\u4e2a\u8ddf\u968f\u8005\u540c\u65f6- \u6210\u4e3a\u5019\u9009\u4eba\uff0c\u90a3\u4e48\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u74dc\u5206\u4ee5\u81f3\u4e8e\u6ca1\u6709\u5019\u9009\u4eba\u53ef\u4ee5\u8d62\u5f97\u5927\u591a\u6570\u4eba\u7684\u652f\u6301\u3002 \u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u4f1a\u8d85\u65f6\uff0c\u7136\u540e\u901a\u8fc7\u589e\u52a0\u5f53\u524d\u4efb\u671f\u53f7\u6765\u5f00\u59cb\u4e00\u8f6e\u65b0\u7684\u9009\u4e3e\u3002\u7136\u800c\uff0c\u6ca1\u6709\u5176\u4ed6\u673a\u5236\u7684\u8bdd\uff0c\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u65e0\u9650\u7684\u91cd\u590d\u74dc\u5206\u3002 Raft \u7b97\u6cd5\u4f7f\u7528\u968f\u673a\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\u6765\u786e\u4fdd\u5f88\u5c11\u4f1a\u53d1\u751f\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\uff0c\u5c31\u7b97\u53d1\u751f\u4e5f\u80fd\u5f88\u5feb\u7684\u89e3\u51b3\u3002 \u4e3a\u4e86\u963b\u6b62\u9009\u7968\u8d77\u521d\u5c31\u88ab\u74dc\u5206\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u4ece\u4e00\u4e2a\u56fa\u5b9a\u7684\u533a\u95f4\uff08\u4f8b\u5982 150-300 \u6beb\u79d2\uff09 \u968f\u673a\u9009\u62e9 \u3002 \u8fd9\u6837\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u90fd\u5206\u6563\u5f00\u4ee5\u81f3\u4e8e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u6709\u4e00\u4e2a\u670d\u52a1\u5668\u4f1a\u9009\u4e3e\u8d85\u65f6 \uff1b\u7136\u540e\u4ed6\u8d62\u5f97\u9009\u4e3e\u5e76\u5728\u5176\u4ed6\u670d\u52a1\u5668\u8d85\u65f6\u4e4b\u524d\u53d1\u9001\u5fc3\u8df3\u5305\u3002 \u540c\u6837\u7684\u673a\u5236\u88ab\u7528\u5728\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u4e0b\u3002 \u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u5728\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u7684\u65f6\u5019\u4f1a\u91cd\u7f6e\u4e00\u4e2a\u968f\u673a\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff0c \u7136\u540e\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u7b49\u5f85\u6295\u7968\u7684\u7ed3\u679c\uff1b\u8fd9\u6837\u51cf\u5c11\u4e86\u5728\u65b0\u7684\u9009\u4e3e\u4e2d\u53e6\u5916\u7684\u9009\u7968\u74dc\u5206\u7684\u53ef\u80fd\u6027\u30029.3 \u8282\u5c55\u793a\u4e86\u8fd9\u79cd\u65b9\u6848\u80fd\u591f\u5feb\u901f\u7684\u9009\u51fa\u4e00\u4e2a\u9886\u5bfc\u4eba\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4f53\u73b0\u4e86\u53ef\u7406\u89e3\u6027\u539f\u5219\u662f\u5982\u4f55\u6307\u5bfc\u6211\u4eec\u8fdb\u884c\u65b9\u6848\u8bbe\u8ba1\u7684\u3002\u8d77\u521d\u6211\u4eec\u8ba1\u5212\u4f7f\u7528\u4e00\u79cd\u6392\u540d\u7cfb\u7edf\uff1a\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u88ab\u8d4b\u4e88\u4e00\u4e2a\u552f\u4e00\u7684\u6392\u540d\uff0c\u4f9b\u5019\u9009\u4eba\u4e4b\u95f4\u7ade\u4e89\u65f6\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u53d1\u73b0\u53e6\u4e00\u4e2a\u5019\u9009\u4eba\u62e5\u6709\u66f4\u9ad8\u7684\u6392\u540d\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\uff0c\u8fd9\u6837\u9ad8\u6392\u540d\u7684\u5019\u9009\u4eba\u80fd\u591f\u66f4\u52a0\u5bb9\u6613\u7684\u8d62\u5f97\u4e0b\u4e00\u6b21\u9009\u4e3e\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u5728\u53ef\u7528\u6027\u65b9\u9762\u4f1a\u6709\u4e00\u70b9\u95ee\u9898\uff08\u5982\u679c\u9ad8\u6392\u540d\u7684\u670d\u52a1\u5668\u5b95\u673a\u4e86\uff0c\u90a3\u4e48\u4f4e\u6392\u540d\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u8d85\u65f6\u5e76\u518d\u6b21\u8fdb\u5165\u5019\u9009\u4eba\u72b6\u6001\u3002\u800c\u4e14\u5982\u679c\u8fd9\u4e2a\u884c\u4e3a\u53d1\u751f\u5f97\u8db3\u591f\u5feb\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u9009\u4e3e\u8fc7\u7a0b\u90fd\u88ab\u91cd\u7f6e\u6389\uff09\u3002\u6211\u4eec\u9488\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u591a\u6b21\u8c03\u6574\uff0c\u4f46\u662f\u6bcf\u6b21\u8c03\u6574\u4e4b\u540e\u90fd\u4f1a\u6709\u65b0\u7684\u95ee\u9898\u3002 \u6700\u7ec8\u6211\u4eec\u8ba4\u4e3a\u968f\u673a\u91cd\u8bd5\u7684\u65b9\u6cd5\u662f\u66f4\u52a0\u660e\u663e\u548c\u6613\u4e8e\u7406\u89e3\u7684\u3002","title":"01 \u95ee\u98981 \u9886\u5bfc\u8005\u9009\u4e3e"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/01%20%E9%97%AE%E9%A2%981%20%E9%A2%86%E5%AF%BC%E8%80%85%E9%80%89%E4%B8%BE/#raft--\u8bba\u6587\u6458\u5f55-52-\u9886\u5bfc\u4eba\u9009\u4e3e","text":"Raft \u4f7f\u7528\u4e00\u79cd \u5fc3\u8df3\u673a\u5236 \u6765\u89e6\u53d1\u9886\u5bfc\u4eba\u9009\u4e3e\u3002\u5f53\u670d\u52a1\u5668\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u4ed6\u4eec\u90fd\u662f\u8ddf\u968f\u8005\u8eab\u4efd\u3002 \u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u7ee7\u7eed\u4fdd\u6301\u7740\u8ddf\u968f\u8005\u72b6\u6001\u53ea\u8981\u4ed6\u4ece\u9886\u5bfc\u4eba\u6216\u8005\u5019\u9009\u8005\u5904\u63a5\u6536\u5230\u6709\u6548\u7684 RPCs \u3002\u9886\u5bfc\u8005\u5468\u671f\u6027\u7684\u5411\u6240\u6709\u8ddf\u968f\u8005\u53d1\u9001 \u5fc3\u8df3\u5305 \uff08\u5373\u4e0d\u5305\u542b\u65e5\u5fd7\u9879\u5185\u5bb9\u7684\u9644\u52a0\u65e5\u5fd7\u9879 RPCs\uff09\u6765\u7ef4\u6301\u81ea\u5df1\u7684\u6743\u5a01\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u5728\u4e00\u6bb5\u65f6\u95f4\u91cc\u6ca1\u6709\u63a5\u6536\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u4e5f\u5c31\u662f \u300c\u9009\u4e3e\u8d85\u65f6\u300d \uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u8ba4\u4e3a\u7cfb\u7edf\u4e2d\u6ca1\u6709\u53ef\u7528\u7684\u9886\u5bfc\u8005,\u5e76\u4e14\u53d1\u8d77\u9009\u4e3e\u4ee5\u9009\u51fa\u65b0\u7684\u9886\u5bfc\u8005\u3002 \u8981\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u8fc7\u7a0b\uff0c\u8ddf\u968f\u8005\u5148\u8981 \u589e\u52a0\u81ea\u5df1\u7684\u5f53\u524d\u4efb\u671f\u53f7 \u5e76\u4e14\u8f6c\u6362\u5230\u5019\u9009\u4eba\u72b6\u6001\u3002\u7136\u540e\u4ed6\u4f1a\u5e76\u884c\u7684\u5411\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u8282\u70b9\u53d1\u9001\u8bf7\u6c42\u6295\u7968\u7684 RPCs \u6765\u7ed9\u81ea\u5df1\u6295\u7968\u3002\u5019\u9009\u4eba\u4f1a\u7ee7\u7eed\u4fdd\u6301\u7740\u5f53\u524d\u72b6\u6001\u76f4\u5230\u4ee5\u4e0b\u4e09\u4ef6\u4e8b\u60c5\u4e4b\u4e00\u53d1\u751f\uff1a(a) \u4ed6\u81ea\u5df1\u8d62\u5f97\u4e86\u8fd9\u6b21\u7684\u9009\u4e3e\uff0c(b) \u5176\u4ed6\u7684\u670d\u52a1\u5668\u6210\u4e3a\u9886\u5bfc\u8005\uff0c\u00a9 \u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u83b7\u80dc\u7684\u4eba\u3002\u8fd9\u4e9b\u7ed3\u679c\u4f1a\u5206\u522b\u7684\u5728\u4e0b\u9762\u7684\u6bb5\u843d\u91cc\u8fdb\u884c\u8ba8\u8bba\u3002 (a) \u5f53\u4e00\u4e2a\u5019\u9009\u4eba\u4ece\u6574\u4e2a\u96c6\u7fa4\u7684\u5927\u591a\u6570\u670d\u52a1\u5668\u8282\u70b9\u83b7\u5f97\u4e86\u9488\u5bf9\u540c\u4e00\u4e2a\u4efb\u671f\u53f7\u7684\u9009\u7968\uff0c\u90a3\u4e48\u4ed6\u5c31\u8d62\u5f97\u4e86\u8fd9\u6b21\u9009\u4e3e\u5e76\u6210\u4e3a\u9886\u5bfc\u4eba\u3002 \u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u4f1a\u5bf9\u4e00\u4e2a\u4efb\u671f\u53f7\u6295\u51fa\u4e00\u5f20\u9009\u7968\uff0c\u6309\u7167 \u5148\u6765\u5148\u670d\u52a1\u7684\u539f\u5219 \uff08\u6ce8\u610f\uff1a5.4 \u8282\u5728\u6295\u7968\u4e0a\u589e\u52a0\u4e86\u4e00\u70b9\u989d\u5916\u7684\u9650\u5236\uff09\u3002\u8981\u6c42\u5927\u591a\u6570\u9009\u7968\u7684\u89c4\u5219\u786e\u4fdd\u4e86\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u6b64\u6b21\u9009\u4e3e\uff08\u56fe 3 \u4e2d\u7684\u9009\u4e3e\u5b89\u5168\u6027\uff09\u3002\u4e00\u65e6\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u4ed6\u5c31\u7acb\u5373\u6210\u4e3a\u9886\u5bfc\u4eba\u3002 \u7136\u540e\u4ed6\u4f1a\u5411\u5176\u4ed6\u7684\u670d\u52a1\u5668\u53d1\u9001\u5fc3\u8df3\u6d88\u606f\u6765\u5efa\u7acb\u81ea\u5df1\u7684\u6743\u5a01\u5e76\u4e14\u963b\u6b62\u65b0\u7684\u9886\u5bfc\u4eba\u7684\u4ea7\u751f\u3002 (b) \u5728\u7b49\u5f85\u6295\u7968\u7684\u65f6\u5019\uff0c\u5019\u9009\u4eba\u53ef\u80fd\u4f1a\u4ece\u5176\u4ed6\u7684\u670d\u52a1\u5668\u63a5\u6536\u5230\u58f0\u660e\u5b83\u662f\u9886\u5bfc\u4eba\u7684\u9644\u52a0\u65e5\u5fd7\u9879 RPC\u3002 \u5982\u679c\u8fd9\u4e2a\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u53f7\uff08\u5305\u542b\u5728\u6b64\u6b21\u7684 RPC\u4e2d\uff09\u4e0d\u5c0f\u4e8e\u5019\u9009\u4eba\u5f53\u524d\u7684\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u4f1a\u627f\u8ba4\u9886\u5bfc\u4eba\u5408\u6cd5\u5e76\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\u3002 \u5982\u679c\u6b64\u6b21 RPC \u4e2d\u7684**\u4efb\u671f\u53f7\u6bd4\u81ea\u5df1\u5c0f**\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u5c31\u4f1a\u62d2\u7edd\u8fd9\u6b21\u7684 RPC \u5e76\u4e14\u7ee7\u7eed\u4fdd\u6301\u5019\u9009\u4eba\u72b6\u6001\u3002 \u00a9 \u7b2c\u4e09\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\u662f\u5019\u9009\u4eba\u65e2\u6ca1\u6709\u8d62\u5f97\u9009\u4e3e\u4e5f\u6ca1\u6709\u8f93\uff1a\u5982\u679c\u6709\u591a\u4e2a\u8ddf\u968f\u8005\u540c\u65f6- \u6210\u4e3a\u5019\u9009\u4eba\uff0c\u90a3\u4e48\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u74dc\u5206\u4ee5\u81f3\u4e8e\u6ca1\u6709\u5019\u9009\u4eba\u53ef\u4ee5\u8d62\u5f97\u5927\u591a\u6570\u4eba\u7684\u652f\u6301\u3002 \u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u4f1a\u8d85\u65f6\uff0c\u7136\u540e\u901a\u8fc7\u589e\u52a0\u5f53\u524d\u4efb\u671f\u53f7\u6765\u5f00\u59cb\u4e00\u8f6e\u65b0\u7684\u9009\u4e3e\u3002\u7136\u800c\uff0c\u6ca1\u6709\u5176\u4ed6\u673a\u5236\u7684\u8bdd\uff0c\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u65e0\u9650\u7684\u91cd\u590d\u74dc\u5206\u3002 Raft \u7b97\u6cd5\u4f7f\u7528\u968f\u673a\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\u6765\u786e\u4fdd\u5f88\u5c11\u4f1a\u53d1\u751f\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\uff0c\u5c31\u7b97\u53d1\u751f\u4e5f\u80fd\u5f88\u5feb\u7684\u89e3\u51b3\u3002 \u4e3a\u4e86\u963b\u6b62\u9009\u7968\u8d77\u521d\u5c31\u88ab\u74dc\u5206\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u4ece\u4e00\u4e2a\u56fa\u5b9a\u7684\u533a\u95f4\uff08\u4f8b\u5982 150-300 \u6beb\u79d2\uff09 \u968f\u673a\u9009\u62e9 \u3002 \u8fd9\u6837\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u90fd\u5206\u6563\u5f00\u4ee5\u81f3\u4e8e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u6709\u4e00\u4e2a\u670d\u52a1\u5668\u4f1a\u9009\u4e3e\u8d85\u65f6 \uff1b\u7136\u540e\u4ed6\u8d62\u5f97\u9009\u4e3e\u5e76\u5728\u5176\u4ed6\u670d\u52a1\u5668\u8d85\u65f6\u4e4b\u524d\u53d1\u9001\u5fc3\u8df3\u5305\u3002 \u540c\u6837\u7684\u673a\u5236\u88ab\u7528\u5728\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u4e0b\u3002 \u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u5728\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u7684\u65f6\u5019\u4f1a\u91cd\u7f6e\u4e00\u4e2a\u968f\u673a\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff0c \u7136\u540e\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u7b49\u5f85\u6295\u7968\u7684\u7ed3\u679c\uff1b\u8fd9\u6837\u51cf\u5c11\u4e86\u5728\u65b0\u7684\u9009\u4e3e\u4e2d\u53e6\u5916\u7684\u9009\u7968\u74dc\u5206\u7684\u53ef\u80fd\u6027\u30029.3 \u8282\u5c55\u793a\u4e86\u8fd9\u79cd\u65b9\u6848\u80fd\u591f\u5feb\u901f\u7684\u9009\u51fa\u4e00\u4e2a\u9886\u5bfc\u4eba\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4f53\u73b0\u4e86\u53ef\u7406\u89e3\u6027\u539f\u5219\u662f\u5982\u4f55\u6307\u5bfc\u6211\u4eec\u8fdb\u884c\u65b9\u6848\u8bbe\u8ba1\u7684\u3002\u8d77\u521d\u6211\u4eec\u8ba1\u5212\u4f7f\u7528\u4e00\u79cd\u6392\u540d\u7cfb\u7edf\uff1a\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u88ab\u8d4b\u4e88\u4e00\u4e2a\u552f\u4e00\u7684\u6392\u540d\uff0c\u4f9b\u5019\u9009\u4eba\u4e4b\u95f4\u7ade\u4e89\u65f6\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u53d1\u73b0\u53e6\u4e00\u4e2a\u5019\u9009\u4eba\u62e5\u6709\u66f4\u9ad8\u7684\u6392\u540d\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\uff0c\u8fd9\u6837\u9ad8\u6392\u540d\u7684\u5019\u9009\u4eba\u80fd\u591f\u66f4\u52a0\u5bb9\u6613\u7684\u8d62\u5f97\u4e0b\u4e00\u6b21\u9009\u4e3e\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u5728\u53ef\u7528\u6027\u65b9\u9762\u4f1a\u6709\u4e00\u70b9\u95ee\u9898\uff08\u5982\u679c\u9ad8\u6392\u540d\u7684\u670d\u52a1\u5668\u5b95\u673a\u4e86\uff0c\u90a3\u4e48\u4f4e\u6392\u540d\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u8d85\u65f6\u5e76\u518d\u6b21\u8fdb\u5165\u5019\u9009\u4eba\u72b6\u6001\u3002\u800c\u4e14\u5982\u679c\u8fd9\u4e2a\u884c\u4e3a\u53d1\u751f\u5f97\u8db3\u591f\u5feb\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u9009\u4e3e\u8fc7\u7a0b\u90fd\u88ab\u91cd\u7f6e\u6389\uff09\u3002\u6211\u4eec\u9488\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u591a\u6b21\u8c03\u6574\uff0c\u4f46\u662f\u6bcf\u6b21\u8c03\u6574\u4e4b\u540e\u90fd\u4f1a\u6709\u65b0\u7684\u95ee\u9898\u3002 \u6700\u7ec8\u6211\u4eec\u8ba4\u4e3a\u968f\u673a\u91cd\u8bd5\u7684\u65b9\u6cd5\u662f\u66f4\u52a0\u660e\u663e\u548c\u6613\u4e8e\u7406\u89e3\u7684\u3002","title":"Raft  \u8bba\u6587\u6458\u5f55\uff1a 5.2 \u9886\u5bfc\u4eba\u9009\u4e3e"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/02%20%E9%97%AE%E9%A2%982%20%E6%97%A5%E5%BF%97%E5%A4%8D%E5%88%B6/","text":"\u4f18\u5316\uff1a \u7531 follower \u53d1\u9001\u81ea\u5df1\u6700\u540e\u4e00\u4e2a\u65e5\u5fd7\u53f7 Leader \u95f4\u9694\u53d1\u9001\u65e5\u5fd7\u53f7\uff0c \u91c7\u7528\u4e8c\u5206\u67e5\u627e Raft \u8bba\u6587\u6458\u5f55\uff1a 5.3 \u65e5\u5fd7\u590d\u5236 \u00b6 \u4e00\u65e6\u4e00\u4e2a\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff0c\u4ed6\u5c31\u5f00\u59cb\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\u3002 \u5ba2\u6237\u7aef \u7684\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u5305\u542b \u4e00\u6761\u88ab\u590d\u5236\u72b6\u6001\u673a\u6267\u884c\u7684\u6307\u4ee4 \u3002 \u9886\u5bfc\u4eba \u628a\u8fd9\u6761\u6307\u4ee4\u4f5c\u4e3a \u4e00\u6761\u65b0\u7684\u65e5\u5fd7\u6761\u76ee \u9644\u52a0\u5230\u65e5\u5fd7\u4e2d\u53bb\uff0c\u7136\u540e**\u5e76\u884c**\u7684\u53d1\u8d77\u9644\u52a0\u6761\u76ee RPCs \u7ed9\u5176\u4ed6\u7684\u670d\u52a1\u5668\uff0c\u8ba9\u4ed6\u4eec\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u3002 \u5f53\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u88ab\u5b89\u5168\u7684\u590d\u5236 \uff08\u4e0b\u9762\u4f1a\u4ecb\u7ecd\uff09\uff0c \u9886\u5bfc\u4eba \u4f1a\u5e94\u7528\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u5230\u5b83\u7684\u72b6\u6001\u673a\u4e2d\u7136\u540e\u628a\u6267\u884c\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9 \u5ba2\u6237\u7aef \u3002 \u5982\u679c\u8ddf\u968f\u8005\u5d29\u6e83\u6216\u8005\u8fd0\u884c\u7f13\u6162\uff0c\u518d\u6216\u8005\u7f51\u7edc\u4e22\u5305\uff0c \u9886\u5bfc\u4eba \u4f1a\u4e0d\u65ad\u7684\u91cd\u590d\u5c1d\u8bd5\u9644\u52a0\u65e5\u5fd7\u6761\u76ee RPCs \uff08\u5c3d\u7ba1\u5df2\u7ecf\u56de\u590d\u4e86\u5ba2\u6237\u7aef\uff09\u76f4\u5230\u6240\u6709\u7684 \u8ddf\u968f\u8005 \u90fd\u6700\u7ec8\u5b58\u50a8\u4e86\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u56fe 6\uff1a\u65e5\u5fd7\u7531\u6709\u5e8f\u5e8f\u53f7\u6807\u8bb0\u7684\u6761\u76ee\u7ec4\u6210\u3002\u6bcf\u4e2a\u6761\u76ee\u90fd\u5305\u542b\u521b\u5efa\u65f6\u7684\u4efb\u671f\u53f7\uff08\u56fe\u4e2d\u6846\u4e2d\u7684\u6570\u5b57\uff09\uff0c\u548c\u4e00\u4e2a\u72b6\u6001\u673a\u9700\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002\u4e00\u4e2a\u6761\u76ee\u5f53\u53ef\u4ee5\u5b89\u5168\u7684\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u53bb\u7684\u65f6\u5019\uff0c\u5c31\u8ba4\u4e3a\u662f\u53ef\u4ee5\u63d0\u4ea4\u4e86\u3002 \u65e5\u5fd7\u4ee5\u56fe 6 \u5c55\u793a\u7684\u65b9\u5f0f\u7ec4\u7ec7\u3002 \u6bcf\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u5b58\u50a8 \u4e00\u6761\u72b6\u6001\u673a\u6307\u4ee4 \u548c \u4ece\u9886\u5bfc\u4eba\u6536\u5230\u8fd9\u6761\u6307\u4ee4\u65f6\u7684\u4efb\u671f\u53f7 \u3002\u65e5\u5fd7\u4e2d\u7684\u4efb\u671f\u53f7\u7528\u6765\u68c0\u67e5\u662f\u5426\u51fa\u73b0\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u4e5f\u7528\u6765\u4fdd\u8bc1\u56fe 3 \u4e2d\u7684\u67d0\u4e9b\u6027\u8d28\u3002 \u6bcf\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u540c\u65f6\u4e5f\u90fd\u6709 \u4e00\u4e2a\u6574\u6570\u7d22\u5f15\u503c \u6765\u8868\u660e\u5b83\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u3002 \u9886\u5bfc\u4eba\u6765\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u628a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u662f\u5b89\u5168\u7684\uff1b\u8fd9\u79cd\u65e5\u5fd7\u6761\u76ee\u88ab\u79f0\u4e3a \u300c\u5df2\u63d0\u4ea4\u300d \u3002Raft \u7b97\u6cd5\u4fdd\u8bc1\u6240\u6709\u5df2\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u90fd\u662f\u6301\u4e45\u5316\u7684\u5e76\u4e14\u6700\u7ec8\u4f1a\u88ab\u6240\u6709\u53ef\u7528\u7684\u72b6\u6001\u673a\u6267\u884c\u3002\u5728\u9886\u5bfc\u4eba\u5c06\u521b\u5efa\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230 \u5927\u591a\u6570 \u7684\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\u5728\u56fe 6 \u4e2d\u7684\u6761\u76ee 7\uff09\u3002 \u540c\u65f6\uff0c\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u4e2d\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u63d0\u4ea4\uff0c\u5305\u62ec\u7531\u5176\u4ed6\u9886\u5bfc\u4eba\u521b\u5efa\u7684\u6761\u76ee\u3002 5.4 \u8282\u4f1a\u8ba8\u8bba\u67d0\u4e9b\u5f53\u5728\u9886\u5bfc\u4eba\u6539\u53d8\u4e4b\u540e\u5e94\u7528\u8fd9\u6761\u89c4\u5219\u7684\u9690\u6666\u5185\u5bb9\uff0c\u540c\u65f6\u4ed6\u4e5f\u5c55\u793a\u4e86\u8fd9\u79cd\u63d0\u4ea4\u7684\u5b9a\u4e49\u662f\u5b89\u5168\u7684\u3002\u9886\u5bfc\u4eba\u8ddf\u8e2a\u4e86\u6700\u5927\u7684\u5c06\u4f1a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u9879\u7684\u7d22\u5f15\uff0c\u5e76\u4e14\u7d22\u5f15\u503c\u4f1a\u88ab\u5305\u542b\u5728\u672a\u6765\u7684\u6240\u6709\u9644\u52a0\u65e5\u5fd7 RPCs \uff08\u5305\u62ec\u5fc3\u8df3\u5305\uff09\uff0c\u8fd9\u6837\u5176\u4ed6\u7684\u670d\u52a1\u5668\u624d\u80fd\u6700\u7ec8\u77e5\u9053\u9886\u5bfc\u4eba\u7684\u63d0\u4ea4\u4f4d\u7f6e\u3002\u4e00\u65e6\u8ddf\u968f\u8005\u77e5\u9053\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u4ed6\u4e5f\u4f1a\u5c06\u8fd9\u4e2a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u672c\u5730\u7684\u72b6\u6001\u673a\u4e2d\uff08\u6309\u7167\u65e5\u5fd7\u7684\u987a\u5e8f\uff09\u3002 \u6211\u4eec\u8bbe\u8ba1\u4e86 Raft \u7684\u65e5\u5fd7\u673a\u5236\u6765\u7ef4\u62a4\u4e00\u4e2a\u4e0d\u540c\u670d\u52a1\u5668\u7684\u65e5\u5fd7\u4e4b\u95f4\u7684\u9ad8\u5c42\u6b21\u7684\u4e00\u81f4\u6027\u3002 \u8fd9\u4e48\u505a\u4e0d\u4ec5\u7b80\u5316\u4e86\u7cfb\u7edf\u7684\u884c\u4e3a\u4e5f\u4f7f\u5f97\u66f4\u52a0\u53ef\u9884\u8ba1\uff0c\u540c\u65f6\u4ed6\u4e5f\u662f\u5b89\u5168\u6027\u4fdd\u8bc1\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u4ef6\u3002Raft \u7ef4\u62a4\u7740\u4ee5\u4e0b\u7684\u7279\u6027\uff0c\u8fd9\u4e9b\u540c\u65f6\u4e5f\u7ec4\u6210\u4e86\u56fe 3 \u4e2d\u7684\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff1a \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u5b58\u50a8\u4e86\u76f8\u540c\u7684\u6307\u4ee4\u3002 \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u5168\u90e8\u76f8\u540c\u3002 \u7b2c\u4e00\u4e2a\u7279\u6027\u6765\u81ea\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u9886\u5bfc\u4eba\u6700\u591a\u5728\u4e00\u4e2a\u4efb\u671f\u91cc\u5728\u6307\u5b9a\u7684\u4e00\u4e2a\u65e5\u5fd7\u7d22\u5f15\u4f4d\u7f6e\u521b\u5efa\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u540c\u65f6\u65e5\u5fd7\u6761\u76ee\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u4e5f\u4ece\u6765\u4e0d\u4f1a\u6539\u53d8\u3002 \u7b2c\u4e8c\u4e2a\u7279\u6027\u7531\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u6240\u4fdd\u8bc1 \u3002\u5728\u53d1\u9001\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u65f6\u5019\uff0c\u9886\u5bfc\u4eba\u4f1a\u628a\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u7d27\u63a5\u7740\u4e4b\u524d\u7684\u6761\u76ee\u7684\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u5305\u542b\u5728\u91cc\u9762\u3002\u5982\u679c\u8ddf\u968f\u8005\u5728\u5b83\u7684\u65e5\u5fd7\u4e2d\u627e\u4e0d\u5230\u5305\u542b\u76f8\u540c\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u7684\u6761\u76ee\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u62d2\u7edd\u63a5\u6536\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u50cf\u4e00\u4e2a \u5f52\u7eb3\u6b65\u9aa4 \uff1a\u4e00\u5f00\u59cb\u7a7a\u7684\u65e5\u5fd7\u72b6\u6001\u80af\u5b9a\u662f\u6ee1\u8db3\u65e5\u5fd7\u5339\u914d\u7279\u6027\u7684\uff0c\u7136\u540e\u4e00\u81f4\u6027\u68c0\u67e5\u4fdd\u62a4\u4e86\u65e5\u5fd7\u5339\u914d\u7279\u6027\u5f53\u65e5\u5fd7\u6269\u5c55\u7684\u65f6\u5019\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u8fd4\u56de\u6210\u529f\u65f6\uff0c\u9886\u5bfc\u4eba\u5c31\u77e5\u9053\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4e00\u5b9a\u662f\u548c\u81ea\u5df1\u76f8\u540c\u7684\u4e86\u3002 \u5728\u6b63\u5e38\u7684\u64cd\u4f5c\u4e2d\uff0c\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u6240\u4ee5\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u4ece\u6765\u4e0d\u4f1a\u5931\u8d25 \u3002\u7136\u800c\uff0c \u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u4f1a\u4f7f\u5f97\u65e5\u5fd7\u5904\u4e8e\u4e0d\u4e00\u81f4\u7684\u72b6\u6001\uff08\u8001\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u5168\u590d\u5236\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff09\u3002 \u8fd9\u79cd\u4e0d\u4e00\u81f4\u95ee\u9898\u4f1a\u5728\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u4e00\u7cfb\u5217\u5d29\u6e83\u4e0b\u52a0\u5267\u3002\u56fe 7 \u5c55\u793a\u4e86\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u53ef\u80fd\u548c\u65b0\u7684\u9886\u5bfc\u4eba\u4e0d\u540c\u7684\u65b9\u5f0f\u3002\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u4e22\u5931\u4e00\u4e9b\u5728\u65b0\u7684\u9886\u5bfc\u4eba\u4e2d\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4ed6\u4e5f\u53ef\u80fd\u62e5\u6709\u4e00\u4e9b\u9886\u5bfc\u4eba\u6ca1\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u6216\u8005\u4e24\u8005\u90fd\u53d1\u751f\u3002\u4e22\u5931\u6216\u8005\u591a\u51fa\u65e5\u5fd7\u6761\u76ee\u53ef\u80fd\u4f1a\u6301\u7eed\u591a\u4e2a\u4efb\u671f\u3002 \u56fe 7\uff1a\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u6210\u529f\u5f53\u9009\u65f6\uff0c\u8ddf\u968f\u8005\u53ef\u80fd\u662f\u4efb\u4f55\u60c5\u51b5\uff08a-f\uff09\u3002\u6bcf\u4e00\u4e2a\u76d2\u5b50\u8868\u793a\u662f\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\uff1b\u91cc\u9762\u7684\u6570\u5b57\u8868\u793a\u4efb\u671f\u53f7\u3002 \u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u7f3a\u5c11\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\uff08a-b\uff09\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u672a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08c-d\uff09\uff0c\u6216\u8005\u4e24\u79cd\u60c5\u51b5\u90fd\u5b58\u5728\uff08e-f\uff09\u3002 \u4f8b\u5982\uff0c\u573a\u666f f \u53ef\u80fd\u4f1a\u8fd9\u6837\u53d1\u751f\uff0c\u67d0\u670d\u52a1\u5668\u5728\u4efb\u671f 2 \u7684\u65f6\u5019\u662f\u9886\u5bfc\u4eba\uff0c\u5df2\u9644\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff0c\u4f46\u5728\u63d0\u4ea4\u4e4b\u524d\u5c31\u5d29\u6e83\u4e86\uff1b\u5f88\u5feb\u8fd9\u4e2a\u673a\u5668\u5c31\u88ab\u91cd\u542f\u4e86\uff0c\u5728\u4efb\u671f 3 \u91cd\u65b0\u88ab\u9009\u4e3a\u9886\u5bfc\u4eba\uff0c\u5e76\u4e14\u53c8\u589e\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff1b\u5728\u4efb\u671f 2 \u548c\u4efb\u671f 3 \u7684\u65e5\u5fd7\u88ab\u63d0\u4ea4\u4e4b\u524d\uff0c\u8fd9\u4e2a\u670d\u52a1\u5668\u53c8\u5b95\u673a\u4e86\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u4efb\u671f\u91cc\u4e00\u76f4\u5904\u4e8e\u5b95\u673a\u72b6\u6001\u3002 \u5728 Raft \u7b97\u6cd5\u4e2d\uff0c \u9886\u5bfc\u4eba\u5904\u7406\u4e0d\u4e00\u81f4\u662f\u901a\u8fc7\u5f3a\u5236\u8ddf\u968f\u8005\u76f4\u63a5\u590d\u5236\u81ea\u5df1\u7684\u65e5\u5fd7\u6765\u89e3\u51b3\u3002 \u8fd9\u610f\u5473\u7740\u5728\u8ddf\u968f\u8005\u4e2d\u7684\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u4f1a\u88ab\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7 \u8986\u76d6 \u30025.4 \u8282\u4f1a\u9610\u8ff0\u5982\u4f55\u901a\u8fc7\u589e\u52a0\u4e00\u4e9b\u9650\u5236\u6765\u4f7f\u5f97\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u5b89\u5168\u7684\u3002 \u8981\u4f7f\u5f97\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fdb\u5165\u548c\u81ea\u5df1\u4e00\u81f4\u7684\u72b6\u6001\uff0c\u9886\u5bfc\u4eba\u5fc5\u987b\u627e\u5230\u6700\u540e\u4e24\u8005\u8fbe\u6210\u4e00\u81f4\u7684\u5730\u65b9\uff0c\u7136\u540e\u5220\u9664\u4ece\u90a3\u4e2a\u70b9\u4e4b\u540e\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff0c\u53d1\u9001\u81ea\u5df1\u7684\u65e5\u5fd7\u7ed9\u8ddf\u968f\u8005 \u3002\u6240\u6709\u7684\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u5728\u8fdb\u884c\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u65f6\u5b8c\u6210\u3002\u9886\u5bfc\u4eba\u9488\u5bf9\u6bcf\u4e00\u4e2a\u8ddf\u968f\u8005\u7ef4\u62a4\u4e86\u4e00\u4e2a \u300cnextIndex\u300d \uff0c\u8fd9\u8868\u793a\u4e0b\u4e00\u4e2a\u9700\u8981\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u5730\u5740\u3002\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u521a\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\uff0c\u4ed6\u521d\u59cb\u5316\u6240\u6709\u7684 nextIndex \u503c\u4e3a\u81ea\u5df1\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684index\u52a01\uff08\u56fe 7 \u4e2d\u7684 11\uff09\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u548c\u9886\u5bfc\u4eba\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u5728\u4e0b\u4e00\u6b21\u7684\u9644\u52a0\u65e5\u5fd7 RPC \u65f6\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u4f1a\u5931\u8d25\u3002\u5728\u88ab\u8ddf\u968f\u8005\u62d2\u7edd\u4e4b\u540e\uff0c\u9886\u5bfc\u4eba\u5c31\u4f1a\u51cf\u5c0f nextIndex \u503c\u5e76\u8fdb\u884c\u91cd\u8bd5\u3002\u6700\u7ec8 nextIndex \u4f1a\u5728\u67d0\u4e2a\u4f4d\u7f6e\u4f7f\u5f97\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fbe\u6210\u4e00\u81f4\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u9644\u52a0\u65e5\u5fd7 RPC \u5c31\u4f1a\u6210\u529f\uff0c\u8fd9\u65f6\u5c31\u4f1a\u628a\u8ddf\u968f\u8005\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u5168\u90e8\u5220\u9664\u5e76\u4e14\u52a0\u4e0a\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u3002\u4e00\u65e6\u9644\u52a0\u65e5\u5fd7 RPC \u6210\u529f\uff0c\u90a3\u4e48\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u5c31\u4f1a\u548c\u9886\u5bfc\u4eba\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u4efb\u671f\u91cc\u4e00\u76f4\u7ee7\u7eed\u4fdd\u6301\u3002 \u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u88ab\u62d2\u7edd\u7684\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u6b21\u6570\u6765 \u4f18\u5316 \u3002\u4f8b\u5982\uff0c\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u8bf7\u6c42\u88ab\u62d2\u7edd\u7684\u65f6\u5019\uff0c\u8ddf\u968f\u8005\u53ef\u4ee5\u5305\u542b\u51b2\u7a81\u7684\u6761\u76ee\u7684\u4efb\u671f\u53f7\u548c\u81ea\u5df1\u5b58\u50a8\u7684\u90a3\u4e2a\u4efb\u671f\u7684\u6700\u65e9\u7684\u7d22\u5f15\u5730\u5740\u3002\u501f\u52a9\u8fd9\u4e9b\u4fe1\u606f\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u51cf\u5c0f nextIndex \u8d8a\u8fc7\u6240\u6709\u90a3\u4e2a\u4efb\u671f\u51b2\u7a81\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff1b\u8fd9\u6837\u5c31\u53d8\u6210\u6bcf\u4e2a\u4efb\u671f\u9700\u8981\u4e00\u6b21\u9644\u52a0\u6761\u76ee RPC \u800c\u4e0d\u662f\u6bcf\u4e2a\u6761\u76ee\u4e00\u6b21\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5341\u5206\u6000\u7591\u8fd9\u79cd\u4f18\u5316\u662f\u5426\u662f\u5fc5\u8981\u7684\uff0c \u56e0\u4e3a\u5931\u8d25\u662f\u5f88\u5c11\u53d1\u751f\u7684\u5e76\u4e14\u4e5f\u4e0d\u5927\u53ef\u80fd\u4f1a\u6709\u8fd9\u4e48\u591a\u4e0d\u4e00\u81f4\u7684\u65e5\u5fd7 \u3002 \u901a\u8fc7\u8fd9\u79cd\u673a\u5236\uff0c\u9886\u5bfc\u4eba\u5728\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u7684\u64cd\u4f5c\u6765\u6062\u590d\u4e00\u81f4\u6027\u3002\u4ed6\u53ea\u9700\u8981\u8fdb\u884c\u6b63\u5e38\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u65e5\u5fd7\u5c31\u80fd\u81ea\u52a8\u7684\u5728\u56de\u590d\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5931\u8d25\u7684\u65f6\u5019\u81ea\u52a8\u8d8b\u4e8e\u4e00\u81f4\u3002\u9886\u5bfc\u4eba\u4ece\u6765\u4e0d\u4f1a\u8986\u76d6\u6216\u8005\u5220\u9664\u81ea\u5df1\u7684\u65e5\u5fd7\uff08\u56fe 3 \u7684\u9886\u5bfc\u4eba\u53ea\u9644\u52a0\u7279\u6027\uff09\u3002 \u65e5\u5fd7\u590d\u5236\u673a\u5236\u5c55\u793a\u51fa\u4e86\u7b2c 2 \u8282\u4e2d\u5f62\u5bb9\u7684\u4e00\u81f4\u6027\u7279\u6027\uff1a Raft \u80fd\u591f\u63a5\u53d7\uff0c\u590d\u5236\u5e76\u5e94\u7528\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ea\u8981\u5927\u90e8\u5206\u7684\u673a\u5668\u662f\u5de5\u4f5c\u7684\uff1b \u5728\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ef\u4ee5\u5728\u4e00\u6b21 RPC \u4e2d\u88ab\u590d\u5236\u7ed9\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\uff1b \u5e76\u4e14\u5355\u4e2a\u7684\u7f13\u6162\u7684\u8ddf\u968f\u8005\u4e0d\u4f1a\u5f71\u54cd\u6574\u4f53\u7684\u6027\u80fd\u3002","title":"02 \u95ee\u98982 \u65e5\u5fd7\u590d\u5236"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/02%20%E9%97%AE%E9%A2%982%20%E6%97%A5%E5%BF%97%E5%A4%8D%E5%88%B6/#raft-\u8bba\u6587\u6458\u5f55-53-\u65e5\u5fd7\u590d\u5236","text":"\u4e00\u65e6\u4e00\u4e2a\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff0c\u4ed6\u5c31\u5f00\u59cb\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\u3002 \u5ba2\u6237\u7aef \u7684\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u5305\u542b \u4e00\u6761\u88ab\u590d\u5236\u72b6\u6001\u673a\u6267\u884c\u7684\u6307\u4ee4 \u3002 \u9886\u5bfc\u4eba \u628a\u8fd9\u6761\u6307\u4ee4\u4f5c\u4e3a \u4e00\u6761\u65b0\u7684\u65e5\u5fd7\u6761\u76ee \u9644\u52a0\u5230\u65e5\u5fd7\u4e2d\u53bb\uff0c\u7136\u540e**\u5e76\u884c**\u7684\u53d1\u8d77\u9644\u52a0\u6761\u76ee RPCs \u7ed9\u5176\u4ed6\u7684\u670d\u52a1\u5668\uff0c\u8ba9\u4ed6\u4eec\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u3002 \u5f53\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u88ab\u5b89\u5168\u7684\u590d\u5236 \uff08\u4e0b\u9762\u4f1a\u4ecb\u7ecd\uff09\uff0c \u9886\u5bfc\u4eba \u4f1a\u5e94\u7528\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u5230\u5b83\u7684\u72b6\u6001\u673a\u4e2d\u7136\u540e\u628a\u6267\u884c\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9 \u5ba2\u6237\u7aef \u3002 \u5982\u679c\u8ddf\u968f\u8005\u5d29\u6e83\u6216\u8005\u8fd0\u884c\u7f13\u6162\uff0c\u518d\u6216\u8005\u7f51\u7edc\u4e22\u5305\uff0c \u9886\u5bfc\u4eba \u4f1a\u4e0d\u65ad\u7684\u91cd\u590d\u5c1d\u8bd5\u9644\u52a0\u65e5\u5fd7\u6761\u76ee RPCs \uff08\u5c3d\u7ba1\u5df2\u7ecf\u56de\u590d\u4e86\u5ba2\u6237\u7aef\uff09\u76f4\u5230\u6240\u6709\u7684 \u8ddf\u968f\u8005 \u90fd\u6700\u7ec8\u5b58\u50a8\u4e86\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u56fe 6\uff1a\u65e5\u5fd7\u7531\u6709\u5e8f\u5e8f\u53f7\u6807\u8bb0\u7684\u6761\u76ee\u7ec4\u6210\u3002\u6bcf\u4e2a\u6761\u76ee\u90fd\u5305\u542b\u521b\u5efa\u65f6\u7684\u4efb\u671f\u53f7\uff08\u56fe\u4e2d\u6846\u4e2d\u7684\u6570\u5b57\uff09\uff0c\u548c\u4e00\u4e2a\u72b6\u6001\u673a\u9700\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002\u4e00\u4e2a\u6761\u76ee\u5f53\u53ef\u4ee5\u5b89\u5168\u7684\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u53bb\u7684\u65f6\u5019\uff0c\u5c31\u8ba4\u4e3a\u662f\u53ef\u4ee5\u63d0\u4ea4\u4e86\u3002 \u65e5\u5fd7\u4ee5\u56fe 6 \u5c55\u793a\u7684\u65b9\u5f0f\u7ec4\u7ec7\u3002 \u6bcf\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u5b58\u50a8 \u4e00\u6761\u72b6\u6001\u673a\u6307\u4ee4 \u548c \u4ece\u9886\u5bfc\u4eba\u6536\u5230\u8fd9\u6761\u6307\u4ee4\u65f6\u7684\u4efb\u671f\u53f7 \u3002\u65e5\u5fd7\u4e2d\u7684\u4efb\u671f\u53f7\u7528\u6765\u68c0\u67e5\u662f\u5426\u51fa\u73b0\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u4e5f\u7528\u6765\u4fdd\u8bc1\u56fe 3 \u4e2d\u7684\u67d0\u4e9b\u6027\u8d28\u3002 \u6bcf\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u540c\u65f6\u4e5f\u90fd\u6709 \u4e00\u4e2a\u6574\u6570\u7d22\u5f15\u503c \u6765\u8868\u660e\u5b83\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u3002 \u9886\u5bfc\u4eba\u6765\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u628a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u662f\u5b89\u5168\u7684\uff1b\u8fd9\u79cd\u65e5\u5fd7\u6761\u76ee\u88ab\u79f0\u4e3a \u300c\u5df2\u63d0\u4ea4\u300d \u3002Raft \u7b97\u6cd5\u4fdd\u8bc1\u6240\u6709\u5df2\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u90fd\u662f\u6301\u4e45\u5316\u7684\u5e76\u4e14\u6700\u7ec8\u4f1a\u88ab\u6240\u6709\u53ef\u7528\u7684\u72b6\u6001\u673a\u6267\u884c\u3002\u5728\u9886\u5bfc\u4eba\u5c06\u521b\u5efa\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230 \u5927\u591a\u6570 \u7684\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\u5728\u56fe 6 \u4e2d\u7684\u6761\u76ee 7\uff09\u3002 \u540c\u65f6\uff0c\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u4e2d\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u63d0\u4ea4\uff0c\u5305\u62ec\u7531\u5176\u4ed6\u9886\u5bfc\u4eba\u521b\u5efa\u7684\u6761\u76ee\u3002 5.4 \u8282\u4f1a\u8ba8\u8bba\u67d0\u4e9b\u5f53\u5728\u9886\u5bfc\u4eba\u6539\u53d8\u4e4b\u540e\u5e94\u7528\u8fd9\u6761\u89c4\u5219\u7684\u9690\u6666\u5185\u5bb9\uff0c\u540c\u65f6\u4ed6\u4e5f\u5c55\u793a\u4e86\u8fd9\u79cd\u63d0\u4ea4\u7684\u5b9a\u4e49\u662f\u5b89\u5168\u7684\u3002\u9886\u5bfc\u4eba\u8ddf\u8e2a\u4e86\u6700\u5927\u7684\u5c06\u4f1a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u9879\u7684\u7d22\u5f15\uff0c\u5e76\u4e14\u7d22\u5f15\u503c\u4f1a\u88ab\u5305\u542b\u5728\u672a\u6765\u7684\u6240\u6709\u9644\u52a0\u65e5\u5fd7 RPCs \uff08\u5305\u62ec\u5fc3\u8df3\u5305\uff09\uff0c\u8fd9\u6837\u5176\u4ed6\u7684\u670d\u52a1\u5668\u624d\u80fd\u6700\u7ec8\u77e5\u9053\u9886\u5bfc\u4eba\u7684\u63d0\u4ea4\u4f4d\u7f6e\u3002\u4e00\u65e6\u8ddf\u968f\u8005\u77e5\u9053\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u4ed6\u4e5f\u4f1a\u5c06\u8fd9\u4e2a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u672c\u5730\u7684\u72b6\u6001\u673a\u4e2d\uff08\u6309\u7167\u65e5\u5fd7\u7684\u987a\u5e8f\uff09\u3002 \u6211\u4eec\u8bbe\u8ba1\u4e86 Raft \u7684\u65e5\u5fd7\u673a\u5236\u6765\u7ef4\u62a4\u4e00\u4e2a\u4e0d\u540c\u670d\u52a1\u5668\u7684\u65e5\u5fd7\u4e4b\u95f4\u7684\u9ad8\u5c42\u6b21\u7684\u4e00\u81f4\u6027\u3002 \u8fd9\u4e48\u505a\u4e0d\u4ec5\u7b80\u5316\u4e86\u7cfb\u7edf\u7684\u884c\u4e3a\u4e5f\u4f7f\u5f97\u66f4\u52a0\u53ef\u9884\u8ba1\uff0c\u540c\u65f6\u4ed6\u4e5f\u662f\u5b89\u5168\u6027\u4fdd\u8bc1\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u4ef6\u3002Raft \u7ef4\u62a4\u7740\u4ee5\u4e0b\u7684\u7279\u6027\uff0c\u8fd9\u4e9b\u540c\u65f6\u4e5f\u7ec4\u6210\u4e86\u56fe 3 \u4e2d\u7684\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff1a \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u5b58\u50a8\u4e86\u76f8\u540c\u7684\u6307\u4ee4\u3002 \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u5168\u90e8\u76f8\u540c\u3002 \u7b2c\u4e00\u4e2a\u7279\u6027\u6765\u81ea\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u9886\u5bfc\u4eba\u6700\u591a\u5728\u4e00\u4e2a\u4efb\u671f\u91cc\u5728\u6307\u5b9a\u7684\u4e00\u4e2a\u65e5\u5fd7\u7d22\u5f15\u4f4d\u7f6e\u521b\u5efa\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u540c\u65f6\u65e5\u5fd7\u6761\u76ee\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u4e5f\u4ece\u6765\u4e0d\u4f1a\u6539\u53d8\u3002 \u7b2c\u4e8c\u4e2a\u7279\u6027\u7531\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u6240\u4fdd\u8bc1 \u3002\u5728\u53d1\u9001\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u65f6\u5019\uff0c\u9886\u5bfc\u4eba\u4f1a\u628a\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u7d27\u63a5\u7740\u4e4b\u524d\u7684\u6761\u76ee\u7684\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u5305\u542b\u5728\u91cc\u9762\u3002\u5982\u679c\u8ddf\u968f\u8005\u5728\u5b83\u7684\u65e5\u5fd7\u4e2d\u627e\u4e0d\u5230\u5305\u542b\u76f8\u540c\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u7684\u6761\u76ee\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u62d2\u7edd\u63a5\u6536\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u50cf\u4e00\u4e2a \u5f52\u7eb3\u6b65\u9aa4 \uff1a\u4e00\u5f00\u59cb\u7a7a\u7684\u65e5\u5fd7\u72b6\u6001\u80af\u5b9a\u662f\u6ee1\u8db3\u65e5\u5fd7\u5339\u914d\u7279\u6027\u7684\uff0c\u7136\u540e\u4e00\u81f4\u6027\u68c0\u67e5\u4fdd\u62a4\u4e86\u65e5\u5fd7\u5339\u914d\u7279\u6027\u5f53\u65e5\u5fd7\u6269\u5c55\u7684\u65f6\u5019\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u8fd4\u56de\u6210\u529f\u65f6\uff0c\u9886\u5bfc\u4eba\u5c31\u77e5\u9053\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4e00\u5b9a\u662f\u548c\u81ea\u5df1\u76f8\u540c\u7684\u4e86\u3002 \u5728\u6b63\u5e38\u7684\u64cd\u4f5c\u4e2d\uff0c\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u6240\u4ee5\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u4ece\u6765\u4e0d\u4f1a\u5931\u8d25 \u3002\u7136\u800c\uff0c \u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u4f1a\u4f7f\u5f97\u65e5\u5fd7\u5904\u4e8e\u4e0d\u4e00\u81f4\u7684\u72b6\u6001\uff08\u8001\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u5168\u590d\u5236\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff09\u3002 \u8fd9\u79cd\u4e0d\u4e00\u81f4\u95ee\u9898\u4f1a\u5728\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u4e00\u7cfb\u5217\u5d29\u6e83\u4e0b\u52a0\u5267\u3002\u56fe 7 \u5c55\u793a\u4e86\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u53ef\u80fd\u548c\u65b0\u7684\u9886\u5bfc\u4eba\u4e0d\u540c\u7684\u65b9\u5f0f\u3002\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u4e22\u5931\u4e00\u4e9b\u5728\u65b0\u7684\u9886\u5bfc\u4eba\u4e2d\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4ed6\u4e5f\u53ef\u80fd\u62e5\u6709\u4e00\u4e9b\u9886\u5bfc\u4eba\u6ca1\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u6216\u8005\u4e24\u8005\u90fd\u53d1\u751f\u3002\u4e22\u5931\u6216\u8005\u591a\u51fa\u65e5\u5fd7\u6761\u76ee\u53ef\u80fd\u4f1a\u6301\u7eed\u591a\u4e2a\u4efb\u671f\u3002 \u56fe 7\uff1a\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u6210\u529f\u5f53\u9009\u65f6\uff0c\u8ddf\u968f\u8005\u53ef\u80fd\u662f\u4efb\u4f55\u60c5\u51b5\uff08a-f\uff09\u3002\u6bcf\u4e00\u4e2a\u76d2\u5b50\u8868\u793a\u662f\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\uff1b\u91cc\u9762\u7684\u6570\u5b57\u8868\u793a\u4efb\u671f\u53f7\u3002 \u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u7f3a\u5c11\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\uff08a-b\uff09\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u672a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08c-d\uff09\uff0c\u6216\u8005\u4e24\u79cd\u60c5\u51b5\u90fd\u5b58\u5728\uff08e-f\uff09\u3002 \u4f8b\u5982\uff0c\u573a\u666f f \u53ef\u80fd\u4f1a\u8fd9\u6837\u53d1\u751f\uff0c\u67d0\u670d\u52a1\u5668\u5728\u4efb\u671f 2 \u7684\u65f6\u5019\u662f\u9886\u5bfc\u4eba\uff0c\u5df2\u9644\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff0c\u4f46\u5728\u63d0\u4ea4\u4e4b\u524d\u5c31\u5d29\u6e83\u4e86\uff1b\u5f88\u5feb\u8fd9\u4e2a\u673a\u5668\u5c31\u88ab\u91cd\u542f\u4e86\uff0c\u5728\u4efb\u671f 3 \u91cd\u65b0\u88ab\u9009\u4e3a\u9886\u5bfc\u4eba\uff0c\u5e76\u4e14\u53c8\u589e\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff1b\u5728\u4efb\u671f 2 \u548c\u4efb\u671f 3 \u7684\u65e5\u5fd7\u88ab\u63d0\u4ea4\u4e4b\u524d\uff0c\u8fd9\u4e2a\u670d\u52a1\u5668\u53c8\u5b95\u673a\u4e86\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u4efb\u671f\u91cc\u4e00\u76f4\u5904\u4e8e\u5b95\u673a\u72b6\u6001\u3002 \u5728 Raft \u7b97\u6cd5\u4e2d\uff0c \u9886\u5bfc\u4eba\u5904\u7406\u4e0d\u4e00\u81f4\u662f\u901a\u8fc7\u5f3a\u5236\u8ddf\u968f\u8005\u76f4\u63a5\u590d\u5236\u81ea\u5df1\u7684\u65e5\u5fd7\u6765\u89e3\u51b3\u3002 \u8fd9\u610f\u5473\u7740\u5728\u8ddf\u968f\u8005\u4e2d\u7684\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u4f1a\u88ab\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7 \u8986\u76d6 \u30025.4 \u8282\u4f1a\u9610\u8ff0\u5982\u4f55\u901a\u8fc7\u589e\u52a0\u4e00\u4e9b\u9650\u5236\u6765\u4f7f\u5f97\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u5b89\u5168\u7684\u3002 \u8981\u4f7f\u5f97\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fdb\u5165\u548c\u81ea\u5df1\u4e00\u81f4\u7684\u72b6\u6001\uff0c\u9886\u5bfc\u4eba\u5fc5\u987b\u627e\u5230\u6700\u540e\u4e24\u8005\u8fbe\u6210\u4e00\u81f4\u7684\u5730\u65b9\uff0c\u7136\u540e\u5220\u9664\u4ece\u90a3\u4e2a\u70b9\u4e4b\u540e\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff0c\u53d1\u9001\u81ea\u5df1\u7684\u65e5\u5fd7\u7ed9\u8ddf\u968f\u8005 \u3002\u6240\u6709\u7684\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u5728\u8fdb\u884c\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u65f6\u5b8c\u6210\u3002\u9886\u5bfc\u4eba\u9488\u5bf9\u6bcf\u4e00\u4e2a\u8ddf\u968f\u8005\u7ef4\u62a4\u4e86\u4e00\u4e2a \u300cnextIndex\u300d \uff0c\u8fd9\u8868\u793a\u4e0b\u4e00\u4e2a\u9700\u8981\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u5730\u5740\u3002\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u521a\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\uff0c\u4ed6\u521d\u59cb\u5316\u6240\u6709\u7684 nextIndex \u503c\u4e3a\u81ea\u5df1\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684index\u52a01\uff08\u56fe 7 \u4e2d\u7684 11\uff09\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u548c\u9886\u5bfc\u4eba\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u5728\u4e0b\u4e00\u6b21\u7684\u9644\u52a0\u65e5\u5fd7 RPC \u65f6\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u4f1a\u5931\u8d25\u3002\u5728\u88ab\u8ddf\u968f\u8005\u62d2\u7edd\u4e4b\u540e\uff0c\u9886\u5bfc\u4eba\u5c31\u4f1a\u51cf\u5c0f nextIndex \u503c\u5e76\u8fdb\u884c\u91cd\u8bd5\u3002\u6700\u7ec8 nextIndex \u4f1a\u5728\u67d0\u4e2a\u4f4d\u7f6e\u4f7f\u5f97\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fbe\u6210\u4e00\u81f4\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u9644\u52a0\u65e5\u5fd7 RPC \u5c31\u4f1a\u6210\u529f\uff0c\u8fd9\u65f6\u5c31\u4f1a\u628a\u8ddf\u968f\u8005\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u5168\u90e8\u5220\u9664\u5e76\u4e14\u52a0\u4e0a\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u3002\u4e00\u65e6\u9644\u52a0\u65e5\u5fd7 RPC \u6210\u529f\uff0c\u90a3\u4e48\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u5c31\u4f1a\u548c\u9886\u5bfc\u4eba\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u4efb\u671f\u91cc\u4e00\u76f4\u7ee7\u7eed\u4fdd\u6301\u3002 \u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u88ab\u62d2\u7edd\u7684\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u6b21\u6570\u6765 \u4f18\u5316 \u3002\u4f8b\u5982\uff0c\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u8bf7\u6c42\u88ab\u62d2\u7edd\u7684\u65f6\u5019\uff0c\u8ddf\u968f\u8005\u53ef\u4ee5\u5305\u542b\u51b2\u7a81\u7684\u6761\u76ee\u7684\u4efb\u671f\u53f7\u548c\u81ea\u5df1\u5b58\u50a8\u7684\u90a3\u4e2a\u4efb\u671f\u7684\u6700\u65e9\u7684\u7d22\u5f15\u5730\u5740\u3002\u501f\u52a9\u8fd9\u4e9b\u4fe1\u606f\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u51cf\u5c0f nextIndex \u8d8a\u8fc7\u6240\u6709\u90a3\u4e2a\u4efb\u671f\u51b2\u7a81\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff1b\u8fd9\u6837\u5c31\u53d8\u6210\u6bcf\u4e2a\u4efb\u671f\u9700\u8981\u4e00\u6b21\u9644\u52a0\u6761\u76ee RPC \u800c\u4e0d\u662f\u6bcf\u4e2a\u6761\u76ee\u4e00\u6b21\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5341\u5206\u6000\u7591\u8fd9\u79cd\u4f18\u5316\u662f\u5426\u662f\u5fc5\u8981\u7684\uff0c \u56e0\u4e3a\u5931\u8d25\u662f\u5f88\u5c11\u53d1\u751f\u7684\u5e76\u4e14\u4e5f\u4e0d\u5927\u53ef\u80fd\u4f1a\u6709\u8fd9\u4e48\u591a\u4e0d\u4e00\u81f4\u7684\u65e5\u5fd7 \u3002 \u901a\u8fc7\u8fd9\u79cd\u673a\u5236\uff0c\u9886\u5bfc\u4eba\u5728\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u7684\u64cd\u4f5c\u6765\u6062\u590d\u4e00\u81f4\u6027\u3002\u4ed6\u53ea\u9700\u8981\u8fdb\u884c\u6b63\u5e38\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u65e5\u5fd7\u5c31\u80fd\u81ea\u52a8\u7684\u5728\u56de\u590d\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5931\u8d25\u7684\u65f6\u5019\u81ea\u52a8\u8d8b\u4e8e\u4e00\u81f4\u3002\u9886\u5bfc\u4eba\u4ece\u6765\u4e0d\u4f1a\u8986\u76d6\u6216\u8005\u5220\u9664\u81ea\u5df1\u7684\u65e5\u5fd7\uff08\u56fe 3 \u7684\u9886\u5bfc\u4eba\u53ea\u9644\u52a0\u7279\u6027\uff09\u3002 \u65e5\u5fd7\u590d\u5236\u673a\u5236\u5c55\u793a\u51fa\u4e86\u7b2c 2 \u8282\u4e2d\u5f62\u5bb9\u7684\u4e00\u81f4\u6027\u7279\u6027\uff1a Raft \u80fd\u591f\u63a5\u53d7\uff0c\u590d\u5236\u5e76\u5e94\u7528\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ea\u8981\u5927\u90e8\u5206\u7684\u673a\u5668\u662f\u5de5\u4f5c\u7684\uff1b \u5728\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ef\u4ee5\u5728\u4e00\u6b21 RPC \u4e2d\u88ab\u590d\u5236\u7ed9\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\uff1b \u5e76\u4e14\u5355\u4e2a\u7684\u7f13\u6162\u7684\u8ddf\u968f\u8005\u4e0d\u4f1a\u5f71\u54cd\u6574\u4f53\u7684\u6027\u80fd\u3002","title":"Raft \u8bba\u6587\u6458\u5f55\uff1a 5.3 \u65e5\u5fd7\u590d\u5236"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/03%20%E9%97%AE%E9%A2%983%20%E5%AE%89%E5%85%A8%E6%80%A7/","text":"Raft \u8bba\u6587\u6458\u5f55\uff1a 5.4 \u5b89\u5168\u6027 \u00b6 \u524d\u9762\u7684\u7ae0\u8282\u91cc\u63cf\u8ff0\u4e86 Raft \u7b97\u6cd5\u662f\u5982\u4f55\u9009\u4e3e\u548c\u590d\u5236\u65e5\u5fd7\u7684\u3002 \u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u63cf\u8ff0\u7684\u673a\u5236\u5e76\u4e0d\u80fd\u5145\u5206\u7684\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u72b6\u6001\u673a\u4f1a\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u3002 \u4f8b\u5982\uff0c\u4e00 \u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u8fdb\u5165\u4e0d\u53ef\u7528\u72b6\u6001\u540c\u65f6\u9886\u5bfc\u4eba\u5df2\u7ecf\u63d0\u4ea4\u4e86\u82e5\u5e72\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u7136\u540e\u8fd9\u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\u5e76\u4e14\u8986\u76d6\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\uff1b \u56e0\u6b64\uff0c\u4e0d\u540c\u7684\u72b6\u6001\u673a\u53ef\u80fd\u4f1a\u6267\u884c\u4e0d\u540c\u7684\u6307\u4ee4\u5e8f\u5217\u3002 \u8fd9\u4e00\u8282\u901a\u8fc7\u5728\u9886\u5bfc\u9009\u4e3e\u7684\u65f6\u5019\u589e\u52a0\u4e00\u4e9b \u9650\u5236 \u6765\u5b8c\u5584 Raft \u7b97\u6cd5\u3002 \u8fd9\u4e00\u9650\u5236\u4fdd\u8bc1\u4e86\u4efb\u4f55\u7684\u9886\u5bfc\u4eba\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4efb\u671f\u53f7\uff0c\u90fd\u62e5\u6709\u4e86\u4e4b\u524d\u4efb\u671f\u7684\u6240\u6709\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u56fe 3 \u4e2d\u7684\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\uff09\u3002 \u589e\u52a0\u8fd9\u4e00\u9009\u4e3e\u65f6\u7684\u9650\u5236\uff0c\u6211\u4eec\u5bf9\u4e8e\u63d0\u4ea4\u65f6\u7684\u89c4\u5219\u4e5f\u66f4\u52a0\u6e05\u6670\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5bf9\u4e8e\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\u7684\u7b80\u8981\u8bc1\u660e\uff0c\u5e76\u4e14\u8bf4\u660e\u9886\u5bfc\u4eba\u662f\u5982\u4f55\u9886\u5bfc\u590d\u5236\u72b6\u6001\u673a\u7684\u505a\u51fa\u6b63\u786e\u884c\u4e3a\u7684\u3002 5.4.1 \u9009\u4e3e\u9650\u5236 \u00b6 \u5728\u4efb\u4f55\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u9886\u5bfc\u4eba\u90fd\u5fc5\u987b\u5b58\u50a8\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u5728\u67d0\u4e9b\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u4f8b\u5982 Viewstamped Replication\uff0c\u67d0\u4e2a\u8282\u70b9\u5373\u4f7f\u662f\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u5305\u542b\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u5b83\u4e5f\u80fd\u88ab\u9009\u4e3a\u9886\u5bfc\u8005\u3002 \u8fd9\u4e9b\u7b97\u6cd5\u90fd\u5305\u542b\u4e00\u4e9b\u989d\u5916\u7684\u673a\u5236\u6765\u8bc6\u522b\u4e22\u5931\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u628a\u4ed6\u4eec\u4f20\u9001\u7ed9\u65b0\u7684\u9886\u5bfc\u4eba\uff0c \u8981\u4e48\u662f\u5728\u9009\u4e3e\u9636\u6bb5 \uff0c \u8981\u4e48\u5728\u4e4b\u540e\u5f88\u5feb\u8fdb\u884c \u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u76f8\u5f53\u5927\u7684\u989d\u5916\u7684\u673a\u5236\u548c\u590d\u6742\u6027 \u3002Raft \u4f7f\u7528\u4e86\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u4e4b\u524d\u7684\u4efb\u671f\u53f7\u4e2d\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee \u5728\u9009\u4e3e\u7684\u65f6\u5019\u90fd\u4f1a\u51fa\u73b0\u5728\u65b0\u7684\u9886\u5bfc\u4eba\u4e2d\uff0c\u4e0d\u9700\u8981\u4f20\u9001\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\u7ed9\u9886\u5bfc\u4eba\u3002 \u8fd9\u610f\u5473\u7740\u65e5\u5fd7\u6761\u76ee\u7684\u4f20\u9001\u662f\u5355\u5411\u7684\uff0c\u53ea\u4ece\u9886\u5bfc\u4eba\u4f20\u7ed9\u8ddf\u968f\u8005\uff0c\u5e76\u4e14\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u8986\u76d6\u81ea\u8eab\u672c\u5730\u65e5\u5fd7\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u3002 Raft \u4f7f\u7528\u6295\u7968\u7684\u65b9\u5f0f\u6765\u963b\u6b62\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\u9664\u975e\u8fd9\u4e2a\u5019\u9009\u4eba\u5305\u542b\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u5019\u9009\u4eba\u4e3a\u4e86\u8d62\u5f97\u9009\u4e3e\u5fc5\u987b\u8054\u7cfb\u96c6\u7fa4\u4e2d\u7684\u5927\u90e8\u5206\u8282\u70b9\uff0c \u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u4e2a\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u5728\u8fd9\u4e9b\u670d\u52a1\u5668\u8282\u70b9\u4e2d\u80af\u5b9a\u5b58\u5728\u4e8e\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u5982\u679c\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u8282\u70b9\u4e00\u6837\u65b0\uff08\u8fd9\u4e2a\u65b0\u7684\u5b9a\u4e49\u4f1a\u5728\u4e0b\u9762\u8ba8\u8bba\uff09\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u6301\u6709\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u8bf7\u6c42\u6295\u7968 RPC \u5b9e\u73b0\u4e86\u8fd9\u6837\u7684\u9650\u5236\uff1aRPC \u4e2d\u5305\u542b\u4e86\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u7136\u540e\u6295\u7968\u4eba\u4f1a\u62d2\u7edd\u6389\u90a3\u4e9b\u65e5\u5fd7\u6ca1\u6709\u81ea\u5df1\u65b0\u7684\u6295\u7968\u8bf7\u6c42\u3002 Raft \u901a\u8fc7\u6bd4\u8f83\u4e24\u4efd\u65e5\u5fd7\u4e2d\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\u5b9a\u4e49\u8c01\u7684\u65e5\u5fd7\u6bd4\u8f83\u65b0\u3002 \u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u7684\u4efb\u671f\u53f7\u4e0d\u540c\uff0c\u90a3\u4e48\u4efb\u671f\u53f7\u5927\u7684\u65e5\u5fd7\u66f4\u52a0\u65b0\u3002\u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u65e5\u5fd7\u6bd4\u8f83\u957f\u7684\u90a3\u4e2a\u5c31\u66f4\u52a0\u65b0\u3002 5.4.2 \u63d0\u4ea4\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee \u00b6 \u5982\u540c 5.3 \u8282\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u9886\u5bfc\u4eba\u77e5\u9053\u4e00\u6761\u5f53\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u8bb0\u5f55\u662f\u53ef\u4ee5\u88ab\u63d0\u4ea4\u7684\uff0c\u53ea\u8981\u5b83\u88ab\u5b58\u50a8\u5230\u4e86\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u4e0a\u3002 \u5982\u679c\u4e00\u4e2a\u9886\u5bfc\u4eba\u5728\u63d0\u4ea4\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u5d29\u6e83\u4e86\uff0c\u672a\u6765\u540e\u7eed\u7684\u9886\u5bfc\u4eba\u4f1a\u7ee7\u7eed\u5c1d\u8bd5\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u8bb0\u5f55\u3002 \u7136\u800c\uff0c\u4e00\u4e2a\u9886\u5bfc\u4eba\u4e0d\u80fd\u65ad\u5b9a\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u88ab\u4fdd\u5b58\u5230\u5927\u591a\u6570\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u5df2\u7ecf\u63d0\u4ea4\u4e86\u3002 \u56fe 8 \u5c55\u793a\u4e86\u4e00\u79cd\u60c5\u51b5\uff0c\u4e00\u6761\u5df2\u7ecf\u88ab\u5b58\u50a8\u5230\u5927\u591a\u6570\u8282\u70b9\u4e0a\u7684\u8001\u65e5\u5fd7\u6761\u76ee\uff0c\u4e5f\u4f9d\u7136\u6709\u53ef\u80fd\u4f1a\u88ab\u672a\u6765\u7684\u9886\u5bfc\u4eba\u8986\u76d6\u6389\u3002 \u56fe 8\uff1a \u5982\u56fe\u7684\u65f6\u95f4\u5e8f\u5217\u5c55\u793a\u4e86\u4e3a\u4ec0\u4e48\u9886\u5bfc\u4eba\u65e0\u6cd5\u51b3\u5b9a\u5bf9\u8001\u4efb\u671f\u53f7\u7684\u65e5\u5fd7\u6761\u76ee\u8fdb\u884c\u63d0\u4ea4\u3002 \u5728 (a) \u4e2d\uff0cS1 \u662f\u9886\u5bfc\u8005\uff0c\u90e8\u5206\u7684\u590d\u5236\u4e86\u7d22\u5f15\u4f4d\u7f6e 2 \u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u5728 (b) \u4e2d\uff0cS1 \u5d29\u6e83\u4e86\uff0c\u7136\u540e S5 \u5728\u4efb\u671f 3 \u91cc\u901a\u8fc7 S3\u3001S4 \u548c\u81ea\u5df1\u7684\u9009\u7968\u8d62\u5f97\u9009\u4e3e\uff0c\u7136\u540e\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u4e86\u4e00\u6761\u4e0d\u4e00\u6837\u7684\u65e5\u5fd7\u6761\u76ee\u653e\u5728\u4e86\u7d22\u5f15 2 \u5904\u3002 \u7136\u540e\u5230 \u00a9\uff0cS5 \u53c8\u5d29\u6e83\u4e86\uff1bS1 \u91cd\u65b0\u542f\u52a8\uff0c\u9009\u4e3e\u6210\u529f\uff0c\u5f00\u59cb\u590d\u5236\u65e5\u5fd7\u3002\u5728\u8fd9\u65f6\uff0c\u6765\u81ea\u4efb\u671f 2 \u7684\u90a3\u6761\u65e5\u5fd7\u5df2\u7ecf\u88ab\u590d\u5236\u5230\u4e86\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\u4e0a\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u3002 \u5982\u679c S1 \u5728 (d) \u4e2d\u53c8\u5d29\u6e83\u4e86\uff0cS5 \u53ef\u4ee5\u91cd\u65b0\u88ab\u9009\u4e3e\u6210\u529f\uff08\u901a\u8fc7\u6765\u81ea S2\uff0cS3 \u548c S4 \u7684\u9009\u7968\uff09\uff0c\u7136\u540e\u8986\u76d6\u4e86\u4ed6\u4eec\u5728\u7d22\u5f15 2 \u5904\u7684\u65e5\u5fd7\u3002 \u53cd\u4e4b\uff0c \u5982\u679c\u5728\u5d29\u6e83\u4e4b\u524d\uff0cS1 \u628a\u81ea\u5df1\u4e3b\u5bfc\u7684\u65b0\u4efb\u671f\u91cc\u4ea7\u751f\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u4e86\u5927\u591a\u6570\u673a\u5668\u4e0a \uff0c\u5c31\u5982 (e) \u4e2d\u90a3\u6837\uff0c\u90a3\u4e48\u5728\u540e\u9762\u4efb\u671f\u91cc\u9762\u8fd9\u4e9b\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u56e0\u4e3aS5 \u5c31\u4e0d\u53ef\u80fd\u9009\u4e3e\u6210\u529f\uff09\u3002\u8fd9\u6837\u5728\u540c\u4e00\u65f6\u523b\u5c31\u540c\u65f6\u4fdd\u8bc1\u4e86\uff0c\u4e4b\u524d\u7684\u6240\u6709\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\u3002 \u4e3a\u4e86\u6d88\u9664\u56fe 8 \u91cc\u63cf\u8ff0\u7684\u60c5\u51b5\uff0cRaft \u6c38\u8fdc\u4e0d\u4f1a\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u7684\u65b9\u5f0f\u53bb\u63d0\u4ea4\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u53ea \u6709\u9886\u5bfc\u4eba\u5f53\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u53ef\u4ee5\u88ab\u63d0\u4ea4\uff1b\u4e00\u65e6\u5f53\u524d\u4efb\u671f\u7684\u65e5\u5fd7\u6761\u76ee\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u7531\u4e8e\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff0c\u4e4b\u524d\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u95f4\u63a5\u7684\u63d0\u4ea4\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u5b89\u5168\u7684\u77e5\u9053\u4e00\u4e2a\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\uff0c\u8be5\u6761\u76ee\u662f\u5426\u5b58\u50a8\u5230\u6240\u6709\u670d\u52a1\u5668\u4e0a\uff09\uff0c\u4f46\u662f Raft \u4e3a\u4e86\u7b80\u5316\u95ee\u9898\u4f7f\u7528\u4e00\u79cd\u66f4\u52a0\u4fdd\u5b88\u7684\u65b9\u6cd5\u3002 \u5f53\u9886\u5bfc\u4eba\u590d\u5236\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0cRaft \u4f1a\u4e3a\u6240\u6709\u65e5\u5fd7\u4fdd\u7559\u539f\u59cb\u7684\u4efb\u671f\u53f7, \u8fd9\u5728\u63d0\u4ea4\u89c4\u5219\u4e0a\u4ea7\u751f\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u3002\u5728\u5176\u4ed6\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u8981\u91cd\u65b0\u590d\u5236\u4e4b\u524d\u7684\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0c\u5b83\u5fc5\u987b\u4f7f\u7528\u5f53\u524d\u65b0\u7684\u4efb\u671f\u53f7\u3002Raft \u4f7f\u7528\u7684\u65b9\u6cd5\u66f4\u52a0\u5bb9\u6613\u8fa8\u522b\u51fa\u65e5\u5fd7\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u548c\u65e5\u5fd7\u7684\u53d8\u5316\u5bf9\u65e5\u5fd7\u7ef4\u62a4\u7740\u540c\u4e00\u4e2a\u4efb\u671f\u7f16\u53f7\u3002\u53e6\u5916\uff0c\u548c\u5176\u4ed6\u7684\u7b97\u6cd5\u76f8\u6bd4\uff0cRaft \u4e2d\u7684\u65b0\u9886\u5bfc\u4eba\u53ea\u9700\u8981\u53d1\u9001\u66f4\u5c11\u65e5\u5fd7\u6761\u76ee\uff08\u5176\u4ed6\u7b97\u6cd5\u4e2d\u5fc5\u987b\u5728\u4ed6\u4eec\u88ab\u63d0\u4ea4\u4e4b\u524d\u53d1\u9001\u66f4\u591a\u7684\u5197\u4f59\u65e5\u5fd7\u6761\u76ee\u6765\u4e3a\u4ed6\u4eec\u91cd\u65b0\u7f16\u53f7\uff09\u3002 5.4.3 \u5b89\u5168\u6027\u8bba\u8bc1 \u00b6 5.5 \u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83 \u00b6 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u53ea\u5173\u6ce8\u4e86\u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u3002\u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83\u540e\u7684\u5904\u7406\u65b9\u5f0f\u6bd4\u9886\u5bfc\u4eba\u8981\u7b80\u5355\u7684\u591a\uff0c\u5e76\u4e14\u4ed6\u4eec\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002 \u5982\u679c\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u540e\u7eed\u53d1\u9001\u7ed9\u4ed6\u4eec\u7684 RPCs \u90fd\u4f1a\u5931\u8d25\u3002Raft \u4e2d\u5904\u7406\u8fd9\u79cd\u5931\u8d25\u5c31\u662f\u7b80\u5355\u7684\u901a\u8fc7\u65e0\u9650\u7684\u91cd\u8bd5\uff1b\u5982\u679c\u5d29\u6e83\u7684\u673a\u5668\u91cd\u542f\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e9b RPC \u5c31\u4f1a\u5b8c\u6574\u7684\u6210\u529f\u3002 \u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5668\u5728\u5b8c\u6210\u4e86\u4e00\u4e2a RPC\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u54cd\u5e94\u7684\u65f6\u5019\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5728\u4ed6\u91cd\u65b0\u542f\u52a8\u4e4b\u540e\u5c31\u4f1a\u518d\u6b21\u6536\u5230\u540c\u6837\u7684\u8bf7\u6c42\u3002Raft \u7684 RPCs \u90fd\u662f\u5e42\u7b49\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u91cd\u8bd5\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u95ee\u9898\u3002\u4f8b\u5982\u4e00\u4e2a\u8ddf\u968f\u8005\u5982\u679c\u6536\u5230\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\u4f46\u662f\u4ed6\u5df2\u7ecf\u5305\u542b\u4e86\u8fd9\u4e00\u65e5\u5fd7\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u65b0\u7684\u8bf7\u6c42\u3002 5.6 \u65f6\u95f4\u53ef\u7528\u6027 \u00b6 Raft \u7684\u8981\u6c42\u4e4b\u4e00\u5c31\u662f\u5b89\u5168\u6027\u4e0d\u80fd\u4f9d\u8d56\u65f6\u95f4\uff1a\u6574\u4e2a\u7cfb\u7edf\u4e0d\u80fd\u56e0\u4e3a\u67d0\u4e9b\u4e8b\u4ef6\u8fd0\u884c\u7684\u6bd4\u9884\u671f\u5feb\u4e00\u70b9\u6216\u8005\u6162\u4e00\u70b9\u5c31\u4ea7\u751f\u4e86\u9519\u8bef\u7684\u7ed3\u679c\u3002 \u4f46\u662f\uff0c\u53ef\u7528\u6027\uff08\u7cfb\u7edf\u53ef\u4ee5\u53ca\u65f6\u7684\u54cd\u5e94\u5ba2\u6237\u7aef\uff09\u4e0d\u53ef\u907f\u514d\u7684\u8981\u4f9d\u8d56\u4e8e\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6d88\u606f\u4ea4\u6362\u6bd4\u670d\u52a1\u5668\u6545\u969c\u95f4\u9694\u65f6\u95f4\u957f\uff0c\u5019\u9009\u4eba\u5c06\u6ca1\u6709\u8db3\u591f\u957f\u7684\u65f6\u95f4\u6765\u8d62\u5f97\u9009\u4e3e\uff1b\u6ca1\u6709\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba\uff0cRaft \u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u662f Raft \u4e2d\u5bf9\u65f6\u95f4\u8981\u6c42\u6700\u4e3a\u5173\u952e\u7684\u65b9\u9762\u3002 Raft \u53ef\u4ee5\u9009\u4e3e\u5e76\u7ef4\u6301\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba,\u53ea\u8981\u7cfb\u7edf\u6ee1\u8db3\u4e0b\u9762\u7684\u65f6\u95f4\u8981\u6c42\uff1a \u5728\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e2d\uff0c \u5e7f\u64ad\u65f6\u95f4 \u6307\u7684\u662f\u4ece\u4e00\u4e2a\u670d\u52a1\u5668\u5e76\u884c\u7684\u53d1\u9001 RPCs \u7ed9\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u5e76\u63a5\u6536\u54cd\u5e94\u7684\u5e73\u5747\u65f6\u95f4\uff1b \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4 \u5c31\u662f\u5728 5.2 \u8282\u4e2d\u4ecb\u7ecd\u7684\u9009\u4e3e\u7684\u8d85\u65f6\u65f6\u95f4\u9650\u5236\uff1b \u7136\u540e \u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4 \u5c31\u662f\u5bf9\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u800c\u8a00\uff0c\u4e24\u6b21\u6545\u969c\u4e4b\u95f4\u7684\u5e73\u5747\u65f6\u95f4\u3002 \u5e7f\u64ad\u65f6\u95f4\u5fc5\u987b\u6bd4\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5c0f\u4e00\u4e2a\u91cf\u7ea7\uff0c\u8fd9\u6837\u9886\u5bfc\u4eba\u624d\u80fd\u591f\u53d1\u9001\u7a33\u5b9a\u7684 \u5fc3\u8df3\u6d88\u606f \u6765\u963b\u6b62\u8ddf\u968f\u8005\u5f00\u59cb\u8fdb\u5165\u9009\u4e3e\u72b6\u6001\uff1b\u901a\u8fc7\u968f\u673a\u5316\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e5f\u4f7f\u5f97\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u53d8\u5f97\u4e0d\u53ef\u80fd\u3002\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5e94\u8be5\u8981\u6bd4\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5c0f\u4e0a\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u8fd9\u6837\u6574\u4e2a\u7cfb\u7edf\u624d\u80fd\u7a33\u5b9a\u7684\u8fd0\u884c\u3002\u5f53\u9886\u5bfc\u4eba\u5d29\u6e83\u540e\uff0c\u6574\u4e2a\u7cfb\u7edf\u4f1a\u5927\u7ea6\u76f8\u5f53\u4e8e\u9009\u4e3e\u8d85\u65f6\u7684\u65f6\u95f4\u91cc\u4e0d\u53ef\u7528\uff1b\u6211\u4eec\u5e0c\u671b\u8fd9\u79cd\u60c5\u51b5\u5728\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u884c\u4e2d\u5f88\u5c11\u51fa\u73b0\u3002 \u5e7f\u64ad\u65f6\u95f4\u548c\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u662f\u7531\u7cfb\u7edf\u51b3\u5b9a\u7684\uff0c\u4f46\u662f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u6211\u4eec\u81ea\u5df1\u9009\u62e9\u7684\u3002Raft \u7684 RPCs \u9700\u8981\u63a5\u6536\u65b9\u5c06\u4fe1\u606f\u6301\u4e45\u5316\u7684\u4fdd\u5b58\u5230\u7a33\u5b9a\u5b58\u50a8\u4e2d\u53bb\uff0c\u6240\u4ee5\u5e7f\u64ad\u65f6\u95f4\u5927\u7ea6\u662f 0.5 \u6beb\u79d2\u5230 20 \u6beb\u79d2\uff0c\u53d6\u51b3\u4e8e\u5b58\u50a8\u7684\u6280\u672f\u3002\u56e0\u6b64\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u53ef\u80fd\u9700\u8981\u5728 10 \u6beb\u79d2\u5230 500 \u6beb\u79d2\u4e4b\u95f4\u3002\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u7684\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u90fd\u5728\u51e0\u4e2a\u6708\u751a\u81f3\u66f4\u957f\uff0c\u5f88\u5bb9\u6613\u6ee1\u8db3\u65f6\u95f4\u7684\u9700\u6c42\u3002","title":"Raft \u8bba\u6587\u6458\u5f55\uff1a 5.4 \u5b89\u5168\u6027"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/03%20%E9%97%AE%E9%A2%983%20%E5%AE%89%E5%85%A8%E6%80%A7/#raft-\u8bba\u6587\u6458\u5f55-54-\u5b89\u5168\u6027","text":"\u524d\u9762\u7684\u7ae0\u8282\u91cc\u63cf\u8ff0\u4e86 Raft \u7b97\u6cd5\u662f\u5982\u4f55\u9009\u4e3e\u548c\u590d\u5236\u65e5\u5fd7\u7684\u3002 \u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u63cf\u8ff0\u7684\u673a\u5236\u5e76\u4e0d\u80fd\u5145\u5206\u7684\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u72b6\u6001\u673a\u4f1a\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u3002 \u4f8b\u5982\uff0c\u4e00 \u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u8fdb\u5165\u4e0d\u53ef\u7528\u72b6\u6001\u540c\u65f6\u9886\u5bfc\u4eba\u5df2\u7ecf\u63d0\u4ea4\u4e86\u82e5\u5e72\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u7136\u540e\u8fd9\u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\u5e76\u4e14\u8986\u76d6\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\uff1b \u56e0\u6b64\uff0c\u4e0d\u540c\u7684\u72b6\u6001\u673a\u53ef\u80fd\u4f1a\u6267\u884c\u4e0d\u540c\u7684\u6307\u4ee4\u5e8f\u5217\u3002 \u8fd9\u4e00\u8282\u901a\u8fc7\u5728\u9886\u5bfc\u9009\u4e3e\u7684\u65f6\u5019\u589e\u52a0\u4e00\u4e9b \u9650\u5236 \u6765\u5b8c\u5584 Raft \u7b97\u6cd5\u3002 \u8fd9\u4e00\u9650\u5236\u4fdd\u8bc1\u4e86\u4efb\u4f55\u7684\u9886\u5bfc\u4eba\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4efb\u671f\u53f7\uff0c\u90fd\u62e5\u6709\u4e86\u4e4b\u524d\u4efb\u671f\u7684\u6240\u6709\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u56fe 3 \u4e2d\u7684\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\uff09\u3002 \u589e\u52a0\u8fd9\u4e00\u9009\u4e3e\u65f6\u7684\u9650\u5236\uff0c\u6211\u4eec\u5bf9\u4e8e\u63d0\u4ea4\u65f6\u7684\u89c4\u5219\u4e5f\u66f4\u52a0\u6e05\u6670\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5bf9\u4e8e\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\u7684\u7b80\u8981\u8bc1\u660e\uff0c\u5e76\u4e14\u8bf4\u660e\u9886\u5bfc\u4eba\u662f\u5982\u4f55\u9886\u5bfc\u590d\u5236\u72b6\u6001\u673a\u7684\u505a\u51fa\u6b63\u786e\u884c\u4e3a\u7684\u3002","title":"Raft \u8bba\u6587\u6458\u5f55\uff1a 5.4 \u5b89\u5168\u6027"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/03%20%E9%97%AE%E9%A2%983%20%E5%AE%89%E5%85%A8%E6%80%A7/#541-\u9009\u4e3e\u9650\u5236","text":"\u5728\u4efb\u4f55\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u9886\u5bfc\u4eba\u90fd\u5fc5\u987b\u5b58\u50a8\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u5728\u67d0\u4e9b\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u4f8b\u5982 Viewstamped Replication\uff0c\u67d0\u4e2a\u8282\u70b9\u5373\u4f7f\u662f\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u5305\u542b\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u5b83\u4e5f\u80fd\u88ab\u9009\u4e3a\u9886\u5bfc\u8005\u3002 \u8fd9\u4e9b\u7b97\u6cd5\u90fd\u5305\u542b\u4e00\u4e9b\u989d\u5916\u7684\u673a\u5236\u6765\u8bc6\u522b\u4e22\u5931\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u628a\u4ed6\u4eec\u4f20\u9001\u7ed9\u65b0\u7684\u9886\u5bfc\u4eba\uff0c \u8981\u4e48\u662f\u5728\u9009\u4e3e\u9636\u6bb5 \uff0c \u8981\u4e48\u5728\u4e4b\u540e\u5f88\u5feb\u8fdb\u884c \u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u76f8\u5f53\u5927\u7684\u989d\u5916\u7684\u673a\u5236\u548c\u590d\u6742\u6027 \u3002Raft \u4f7f\u7528\u4e86\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u4e4b\u524d\u7684\u4efb\u671f\u53f7\u4e2d\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee \u5728\u9009\u4e3e\u7684\u65f6\u5019\u90fd\u4f1a\u51fa\u73b0\u5728\u65b0\u7684\u9886\u5bfc\u4eba\u4e2d\uff0c\u4e0d\u9700\u8981\u4f20\u9001\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\u7ed9\u9886\u5bfc\u4eba\u3002 \u8fd9\u610f\u5473\u7740\u65e5\u5fd7\u6761\u76ee\u7684\u4f20\u9001\u662f\u5355\u5411\u7684\uff0c\u53ea\u4ece\u9886\u5bfc\u4eba\u4f20\u7ed9\u8ddf\u968f\u8005\uff0c\u5e76\u4e14\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u8986\u76d6\u81ea\u8eab\u672c\u5730\u65e5\u5fd7\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u3002 Raft \u4f7f\u7528\u6295\u7968\u7684\u65b9\u5f0f\u6765\u963b\u6b62\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\u9664\u975e\u8fd9\u4e2a\u5019\u9009\u4eba\u5305\u542b\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u5019\u9009\u4eba\u4e3a\u4e86\u8d62\u5f97\u9009\u4e3e\u5fc5\u987b\u8054\u7cfb\u96c6\u7fa4\u4e2d\u7684\u5927\u90e8\u5206\u8282\u70b9\uff0c \u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u4e2a\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u5728\u8fd9\u4e9b\u670d\u52a1\u5668\u8282\u70b9\u4e2d\u80af\u5b9a\u5b58\u5728\u4e8e\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u5982\u679c\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u8282\u70b9\u4e00\u6837\u65b0\uff08\u8fd9\u4e2a\u65b0\u7684\u5b9a\u4e49\u4f1a\u5728\u4e0b\u9762\u8ba8\u8bba\uff09\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u6301\u6709\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u8bf7\u6c42\u6295\u7968 RPC \u5b9e\u73b0\u4e86\u8fd9\u6837\u7684\u9650\u5236\uff1aRPC \u4e2d\u5305\u542b\u4e86\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u7136\u540e\u6295\u7968\u4eba\u4f1a\u62d2\u7edd\u6389\u90a3\u4e9b\u65e5\u5fd7\u6ca1\u6709\u81ea\u5df1\u65b0\u7684\u6295\u7968\u8bf7\u6c42\u3002 Raft \u901a\u8fc7\u6bd4\u8f83\u4e24\u4efd\u65e5\u5fd7\u4e2d\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\u5b9a\u4e49\u8c01\u7684\u65e5\u5fd7\u6bd4\u8f83\u65b0\u3002 \u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u7684\u4efb\u671f\u53f7\u4e0d\u540c\uff0c\u90a3\u4e48\u4efb\u671f\u53f7\u5927\u7684\u65e5\u5fd7\u66f4\u52a0\u65b0\u3002\u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u65e5\u5fd7\u6bd4\u8f83\u957f\u7684\u90a3\u4e2a\u5c31\u66f4\u52a0\u65b0\u3002","title":"5.4.1 \u9009\u4e3e\u9650\u5236"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/03%20%E9%97%AE%E9%A2%983%20%E5%AE%89%E5%85%A8%E6%80%A7/#542-\u63d0\u4ea4\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee","text":"\u5982\u540c 5.3 \u8282\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u9886\u5bfc\u4eba\u77e5\u9053\u4e00\u6761\u5f53\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u8bb0\u5f55\u662f\u53ef\u4ee5\u88ab\u63d0\u4ea4\u7684\uff0c\u53ea\u8981\u5b83\u88ab\u5b58\u50a8\u5230\u4e86\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u4e0a\u3002 \u5982\u679c\u4e00\u4e2a\u9886\u5bfc\u4eba\u5728\u63d0\u4ea4\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u5d29\u6e83\u4e86\uff0c\u672a\u6765\u540e\u7eed\u7684\u9886\u5bfc\u4eba\u4f1a\u7ee7\u7eed\u5c1d\u8bd5\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u8bb0\u5f55\u3002 \u7136\u800c\uff0c\u4e00\u4e2a\u9886\u5bfc\u4eba\u4e0d\u80fd\u65ad\u5b9a\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u88ab\u4fdd\u5b58\u5230\u5927\u591a\u6570\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u5df2\u7ecf\u63d0\u4ea4\u4e86\u3002 \u56fe 8 \u5c55\u793a\u4e86\u4e00\u79cd\u60c5\u51b5\uff0c\u4e00\u6761\u5df2\u7ecf\u88ab\u5b58\u50a8\u5230\u5927\u591a\u6570\u8282\u70b9\u4e0a\u7684\u8001\u65e5\u5fd7\u6761\u76ee\uff0c\u4e5f\u4f9d\u7136\u6709\u53ef\u80fd\u4f1a\u88ab\u672a\u6765\u7684\u9886\u5bfc\u4eba\u8986\u76d6\u6389\u3002 \u56fe 8\uff1a \u5982\u56fe\u7684\u65f6\u95f4\u5e8f\u5217\u5c55\u793a\u4e86\u4e3a\u4ec0\u4e48\u9886\u5bfc\u4eba\u65e0\u6cd5\u51b3\u5b9a\u5bf9\u8001\u4efb\u671f\u53f7\u7684\u65e5\u5fd7\u6761\u76ee\u8fdb\u884c\u63d0\u4ea4\u3002 \u5728 (a) \u4e2d\uff0cS1 \u662f\u9886\u5bfc\u8005\uff0c\u90e8\u5206\u7684\u590d\u5236\u4e86\u7d22\u5f15\u4f4d\u7f6e 2 \u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u5728 (b) \u4e2d\uff0cS1 \u5d29\u6e83\u4e86\uff0c\u7136\u540e S5 \u5728\u4efb\u671f 3 \u91cc\u901a\u8fc7 S3\u3001S4 \u548c\u81ea\u5df1\u7684\u9009\u7968\u8d62\u5f97\u9009\u4e3e\uff0c\u7136\u540e\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u4e86\u4e00\u6761\u4e0d\u4e00\u6837\u7684\u65e5\u5fd7\u6761\u76ee\u653e\u5728\u4e86\u7d22\u5f15 2 \u5904\u3002 \u7136\u540e\u5230 \u00a9\uff0cS5 \u53c8\u5d29\u6e83\u4e86\uff1bS1 \u91cd\u65b0\u542f\u52a8\uff0c\u9009\u4e3e\u6210\u529f\uff0c\u5f00\u59cb\u590d\u5236\u65e5\u5fd7\u3002\u5728\u8fd9\u65f6\uff0c\u6765\u81ea\u4efb\u671f 2 \u7684\u90a3\u6761\u65e5\u5fd7\u5df2\u7ecf\u88ab\u590d\u5236\u5230\u4e86\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\u4e0a\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u3002 \u5982\u679c S1 \u5728 (d) \u4e2d\u53c8\u5d29\u6e83\u4e86\uff0cS5 \u53ef\u4ee5\u91cd\u65b0\u88ab\u9009\u4e3e\u6210\u529f\uff08\u901a\u8fc7\u6765\u81ea S2\uff0cS3 \u548c S4 \u7684\u9009\u7968\uff09\uff0c\u7136\u540e\u8986\u76d6\u4e86\u4ed6\u4eec\u5728\u7d22\u5f15 2 \u5904\u7684\u65e5\u5fd7\u3002 \u53cd\u4e4b\uff0c \u5982\u679c\u5728\u5d29\u6e83\u4e4b\u524d\uff0cS1 \u628a\u81ea\u5df1\u4e3b\u5bfc\u7684\u65b0\u4efb\u671f\u91cc\u4ea7\u751f\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u4e86\u5927\u591a\u6570\u673a\u5668\u4e0a \uff0c\u5c31\u5982 (e) \u4e2d\u90a3\u6837\uff0c\u90a3\u4e48\u5728\u540e\u9762\u4efb\u671f\u91cc\u9762\u8fd9\u4e9b\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u56e0\u4e3aS5 \u5c31\u4e0d\u53ef\u80fd\u9009\u4e3e\u6210\u529f\uff09\u3002\u8fd9\u6837\u5728\u540c\u4e00\u65f6\u523b\u5c31\u540c\u65f6\u4fdd\u8bc1\u4e86\uff0c\u4e4b\u524d\u7684\u6240\u6709\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\u3002 \u4e3a\u4e86\u6d88\u9664\u56fe 8 \u91cc\u63cf\u8ff0\u7684\u60c5\u51b5\uff0cRaft \u6c38\u8fdc\u4e0d\u4f1a\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u7684\u65b9\u5f0f\u53bb\u63d0\u4ea4\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u53ea \u6709\u9886\u5bfc\u4eba\u5f53\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u53ef\u4ee5\u88ab\u63d0\u4ea4\uff1b\u4e00\u65e6\u5f53\u524d\u4efb\u671f\u7684\u65e5\u5fd7\u6761\u76ee\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u7531\u4e8e\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff0c\u4e4b\u524d\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u95f4\u63a5\u7684\u63d0\u4ea4\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u5b89\u5168\u7684\u77e5\u9053\u4e00\u4e2a\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\uff0c\u8be5\u6761\u76ee\u662f\u5426\u5b58\u50a8\u5230\u6240\u6709\u670d\u52a1\u5668\u4e0a\uff09\uff0c\u4f46\u662f Raft \u4e3a\u4e86\u7b80\u5316\u95ee\u9898\u4f7f\u7528\u4e00\u79cd\u66f4\u52a0\u4fdd\u5b88\u7684\u65b9\u6cd5\u3002 \u5f53\u9886\u5bfc\u4eba\u590d\u5236\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0cRaft \u4f1a\u4e3a\u6240\u6709\u65e5\u5fd7\u4fdd\u7559\u539f\u59cb\u7684\u4efb\u671f\u53f7, \u8fd9\u5728\u63d0\u4ea4\u89c4\u5219\u4e0a\u4ea7\u751f\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u3002\u5728\u5176\u4ed6\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u8981\u91cd\u65b0\u590d\u5236\u4e4b\u524d\u7684\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0c\u5b83\u5fc5\u987b\u4f7f\u7528\u5f53\u524d\u65b0\u7684\u4efb\u671f\u53f7\u3002Raft \u4f7f\u7528\u7684\u65b9\u6cd5\u66f4\u52a0\u5bb9\u6613\u8fa8\u522b\u51fa\u65e5\u5fd7\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u548c\u65e5\u5fd7\u7684\u53d8\u5316\u5bf9\u65e5\u5fd7\u7ef4\u62a4\u7740\u540c\u4e00\u4e2a\u4efb\u671f\u7f16\u53f7\u3002\u53e6\u5916\uff0c\u548c\u5176\u4ed6\u7684\u7b97\u6cd5\u76f8\u6bd4\uff0cRaft \u4e2d\u7684\u65b0\u9886\u5bfc\u4eba\u53ea\u9700\u8981\u53d1\u9001\u66f4\u5c11\u65e5\u5fd7\u6761\u76ee\uff08\u5176\u4ed6\u7b97\u6cd5\u4e2d\u5fc5\u987b\u5728\u4ed6\u4eec\u88ab\u63d0\u4ea4\u4e4b\u524d\u53d1\u9001\u66f4\u591a\u7684\u5197\u4f59\u65e5\u5fd7\u6761\u76ee\u6765\u4e3a\u4ed6\u4eec\u91cd\u65b0\u7f16\u53f7\uff09\u3002","title":"5.4.2 \u63d0\u4ea4\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/03%20%E9%97%AE%E9%A2%983%20%E5%AE%89%E5%85%A8%E6%80%A7/#543-\u5b89\u5168\u6027\u8bba\u8bc1","text":"","title":"5.4.3 \u5b89\u5168\u6027\u8bba\u8bc1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/03%20%E9%97%AE%E9%A2%983%20%E5%AE%89%E5%85%A8%E6%80%A7/#55-\u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u53ea\u5173\u6ce8\u4e86\u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u3002\u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83\u540e\u7684\u5904\u7406\u65b9\u5f0f\u6bd4\u9886\u5bfc\u4eba\u8981\u7b80\u5355\u7684\u591a\uff0c\u5e76\u4e14\u4ed6\u4eec\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002 \u5982\u679c\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u540e\u7eed\u53d1\u9001\u7ed9\u4ed6\u4eec\u7684 RPCs \u90fd\u4f1a\u5931\u8d25\u3002Raft \u4e2d\u5904\u7406\u8fd9\u79cd\u5931\u8d25\u5c31\u662f\u7b80\u5355\u7684\u901a\u8fc7\u65e0\u9650\u7684\u91cd\u8bd5\uff1b\u5982\u679c\u5d29\u6e83\u7684\u673a\u5668\u91cd\u542f\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e9b RPC \u5c31\u4f1a\u5b8c\u6574\u7684\u6210\u529f\u3002 \u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5668\u5728\u5b8c\u6210\u4e86\u4e00\u4e2a RPC\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u54cd\u5e94\u7684\u65f6\u5019\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5728\u4ed6\u91cd\u65b0\u542f\u52a8\u4e4b\u540e\u5c31\u4f1a\u518d\u6b21\u6536\u5230\u540c\u6837\u7684\u8bf7\u6c42\u3002Raft \u7684 RPCs \u90fd\u662f\u5e42\u7b49\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u91cd\u8bd5\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u95ee\u9898\u3002\u4f8b\u5982\u4e00\u4e2a\u8ddf\u968f\u8005\u5982\u679c\u6536\u5230\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\u4f46\u662f\u4ed6\u5df2\u7ecf\u5305\u542b\u4e86\u8fd9\u4e00\u65e5\u5fd7\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u65b0\u7684\u8bf7\u6c42\u3002","title":"5.5 \u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/03%20%E9%97%AE%E9%A2%983%20%E5%AE%89%E5%85%A8%E6%80%A7/#56-\u65f6\u95f4\u53ef\u7528\u6027","text":"Raft \u7684\u8981\u6c42\u4e4b\u4e00\u5c31\u662f\u5b89\u5168\u6027\u4e0d\u80fd\u4f9d\u8d56\u65f6\u95f4\uff1a\u6574\u4e2a\u7cfb\u7edf\u4e0d\u80fd\u56e0\u4e3a\u67d0\u4e9b\u4e8b\u4ef6\u8fd0\u884c\u7684\u6bd4\u9884\u671f\u5feb\u4e00\u70b9\u6216\u8005\u6162\u4e00\u70b9\u5c31\u4ea7\u751f\u4e86\u9519\u8bef\u7684\u7ed3\u679c\u3002 \u4f46\u662f\uff0c\u53ef\u7528\u6027\uff08\u7cfb\u7edf\u53ef\u4ee5\u53ca\u65f6\u7684\u54cd\u5e94\u5ba2\u6237\u7aef\uff09\u4e0d\u53ef\u907f\u514d\u7684\u8981\u4f9d\u8d56\u4e8e\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6d88\u606f\u4ea4\u6362\u6bd4\u670d\u52a1\u5668\u6545\u969c\u95f4\u9694\u65f6\u95f4\u957f\uff0c\u5019\u9009\u4eba\u5c06\u6ca1\u6709\u8db3\u591f\u957f\u7684\u65f6\u95f4\u6765\u8d62\u5f97\u9009\u4e3e\uff1b\u6ca1\u6709\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba\uff0cRaft \u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u662f Raft \u4e2d\u5bf9\u65f6\u95f4\u8981\u6c42\u6700\u4e3a\u5173\u952e\u7684\u65b9\u9762\u3002 Raft \u53ef\u4ee5\u9009\u4e3e\u5e76\u7ef4\u6301\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba,\u53ea\u8981\u7cfb\u7edf\u6ee1\u8db3\u4e0b\u9762\u7684\u65f6\u95f4\u8981\u6c42\uff1a \u5728\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e2d\uff0c \u5e7f\u64ad\u65f6\u95f4 \u6307\u7684\u662f\u4ece\u4e00\u4e2a\u670d\u52a1\u5668\u5e76\u884c\u7684\u53d1\u9001 RPCs \u7ed9\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u5e76\u63a5\u6536\u54cd\u5e94\u7684\u5e73\u5747\u65f6\u95f4\uff1b \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4 \u5c31\u662f\u5728 5.2 \u8282\u4e2d\u4ecb\u7ecd\u7684\u9009\u4e3e\u7684\u8d85\u65f6\u65f6\u95f4\u9650\u5236\uff1b \u7136\u540e \u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4 \u5c31\u662f\u5bf9\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u800c\u8a00\uff0c\u4e24\u6b21\u6545\u969c\u4e4b\u95f4\u7684\u5e73\u5747\u65f6\u95f4\u3002 \u5e7f\u64ad\u65f6\u95f4\u5fc5\u987b\u6bd4\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5c0f\u4e00\u4e2a\u91cf\u7ea7\uff0c\u8fd9\u6837\u9886\u5bfc\u4eba\u624d\u80fd\u591f\u53d1\u9001\u7a33\u5b9a\u7684 \u5fc3\u8df3\u6d88\u606f \u6765\u963b\u6b62\u8ddf\u968f\u8005\u5f00\u59cb\u8fdb\u5165\u9009\u4e3e\u72b6\u6001\uff1b\u901a\u8fc7\u968f\u673a\u5316\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e5f\u4f7f\u5f97\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u53d8\u5f97\u4e0d\u53ef\u80fd\u3002\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5e94\u8be5\u8981\u6bd4\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5c0f\u4e0a\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u8fd9\u6837\u6574\u4e2a\u7cfb\u7edf\u624d\u80fd\u7a33\u5b9a\u7684\u8fd0\u884c\u3002\u5f53\u9886\u5bfc\u4eba\u5d29\u6e83\u540e\uff0c\u6574\u4e2a\u7cfb\u7edf\u4f1a\u5927\u7ea6\u76f8\u5f53\u4e8e\u9009\u4e3e\u8d85\u65f6\u7684\u65f6\u95f4\u91cc\u4e0d\u53ef\u7528\uff1b\u6211\u4eec\u5e0c\u671b\u8fd9\u79cd\u60c5\u51b5\u5728\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u884c\u4e2d\u5f88\u5c11\u51fa\u73b0\u3002 \u5e7f\u64ad\u65f6\u95f4\u548c\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u662f\u7531\u7cfb\u7edf\u51b3\u5b9a\u7684\uff0c\u4f46\u662f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u6211\u4eec\u81ea\u5df1\u9009\u62e9\u7684\u3002Raft \u7684 RPCs \u9700\u8981\u63a5\u6536\u65b9\u5c06\u4fe1\u606f\u6301\u4e45\u5316\u7684\u4fdd\u5b58\u5230\u7a33\u5b9a\u5b58\u50a8\u4e2d\u53bb\uff0c\u6240\u4ee5\u5e7f\u64ad\u65f6\u95f4\u5927\u7ea6\u662f 0.5 \u6beb\u79d2\u5230 20 \u6beb\u79d2\uff0c\u53d6\u51b3\u4e8e\u5b58\u50a8\u7684\u6280\u672f\u3002\u56e0\u6b64\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u53ef\u80fd\u9700\u8981\u5728 10 \u6beb\u79d2\u5230 500 \u6beb\u79d2\u4e4b\u95f4\u3002\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u7684\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u90fd\u5728\u51e0\u4e2a\u6708\u751a\u81f3\u66f4\u957f\uff0c\u5f88\u5bb9\u6613\u6ee1\u8db3\u65f6\u95f4\u7684\u9700\u6c42\u3002","title":"5.6 \u65f6\u95f4\u53ef\u7528\u6027"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/04%20%E9%97%AE%E9%A2%984%20%E9%9B%86%E7%BE%A4%E6%88%90%E5%91%98%E5%8F%98%E5%8C%96/","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u5047\u8bbe\u96c6\u7fa4\u7684\u914d\u7f6e\uff08\u52a0\u5165\u5230\u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u670d\u52a1\u5668\u96c6\u5408\uff09\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\u3002\u4f46\u662f\u5728\u5b9e\u8df5\u4e2d\uff0c\u5076\u5c14\u662f\u4f1a\u6539\u53d8\u96c6\u7fa4\u7684\u914d\u7f6e\u7684\uff0c\u4f8b\u5982\u66ff\u6362\u90a3\u4e9b\u5b95\u673a\u7684\u673a\u5668\u6216\u8005\u6539\u53d8\u590d\u5236\u7ea7\u522b\u3002\u5c3d\u7ba1\u53ef\u4ee5\u901a\u8fc7\u6682\u505c\u6574\u4e2a\u96c6\u7fa4\uff0c\u66f4\u65b0\u6240\u6709\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u6574\u4e2a\u96c6\u7fa4\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u5728\u66f4\u6539\u7684\u65f6\u5019\u96c6\u7fa4\u4f1a\u4e0d\u53ef\u7528\u3002\u53e6\u5916\uff0c\u5982\u679c\u5b58\u5728\u624b\u5de5\u64cd\u4f5c\u6b65\u9aa4\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u64cd\u4f5c\u5931\u8bef\u7684\u98ce\u9669\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6211\u4eec\u51b3\u5b9a\u81ea\u52a8\u5316\u914d\u7f6e\u6539\u53d8\u5e76\u4e14\u5c06\u5176\u7eb3\u5165\u5230 Raft \u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\u6765\u3002 \u4e3a\u4e86\u8ba9\u914d\u7f6e\u4fee\u6539\u673a\u5236\u80fd\u591f\u5b89\u5168\uff0c\u90a3\u4e48\u5728\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u591f\u5b58\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\u4f7f\u5f97\u4e24\u4e2a\u9886\u5bfc\u4eba\u540c\u65f6\u88ab\u9009\u4e3e\u6210\u529f\u5728\u540c\u4e00\u4e2a\u4efb\u671f\u91cc\u3002\u4e0d\u5e78\u7684\u662f\uff0c \u4efb\u4f55\u670d\u52a1\u5668\u76f4\u63a5\u4ece\u65e7\u7684\u914d\u7f6e\u76f4\u63a5\u8f6c\u6362\u5230\u65b0\u7684\u914d\u7f6e\u7684\u65b9\u6848\u90fd\u662f\u4e0d\u5b89\u5168\u7684 \u3002 \u4e00\u6b21\u6027\u81ea\u52a8\u7684\u8f6c\u6362\u6240\u6709\u670d\u52a1\u5668\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u671f\u95f4\u6574\u4e2a\u96c6\u7fa4\u5b58\u5728\u5212\u5206\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u5927\u591a\u6570\u7fa4\u4f53\u7684\u53ef\u80fd\u6027\uff08\u89c1\u56fe 10\uff09\u3002 \u56fe 10 \uff1a\u76f4\u63a5\u4ece\u4e00\u79cd\u914d\u7f6e\u8f6c\u5230\u65b0\u7684\u914d\u7f6e\u662f\u5341\u5206\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5404\u4e2a\u673a\u5668\u53ef\u80fd\u5728\u4efb\u4f55\u7684\u65f6\u5019\u8fdb\u884c\u8f6c\u6362\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u96c6\u7fa4\u914d\u989d\u4ece 3 \u53f0\u673a\u5668\u53d8\u6210\u4e86 5 \u53f0\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u5b58\u5728\u8fd9\u6837\u7684\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e24\u4e2a\u4e0d\u540c\u7684\u9886\u5bfc\u4eba\u5728\u540c\u4e00\u4e2a\u4efb\u671f\u91cc\u90fd\u53ef\u4ee5\u88ab\u9009\u4e3e\u6210\u529f\u3002 \u4e00\u4e2a\u662f\u901a\u8fc7\u65e7\u7684\u914d\u7f6e\uff0c\u4e00\u4e2a\u901a\u8fc7\u65b0\u7684\u914d\u7f6e\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\u6027\uff0c\u914d\u7f6e\u66f4\u6539\u5fc5\u987b\u4f7f\u7528\u4e24\u9636\u6bb5\u65b9\u6cd5\u3002\u76ee\u524d\u6709\u5f88\u591a\u79cd\u4e24\u9636\u6bb5\u7684\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u6709\u4e9b\u7cfb\u7edf\u5728\u7b2c\u4e00\u9636\u6bb5\u505c\u6389\u65e7\u7684\u914d\u7f6e\u6240\u4ee5\u96c6\u7fa4\u5c31\u4e0d\u80fd\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff1b\u7136\u540e\u5728\u7b2c\u4e8c\u9636\u6bb5\u5728\u542f\u7528\u65b0\u7684\u914d\u7f6e\u3002\u5728 Raft \u4e2d\uff0c \u96c6\u7fa4\u5148\u5207\u6362\u5230\u4e00\u4e2a\u8fc7\u6e21\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5171\u540c\u4e00\u81f4 \uff1b \u4e00\u65e6\u5171\u540c\u4e00\u81f4\u5df2\u7ecf\u88ab\u63d0\u4ea4\u4e86\uff0c\u90a3\u4e48\u7cfb\u7edf\u5c31\u5207\u6362\u5230\u65b0\u7684\u914d\u7f6e\u4e0a\u3002 \u5171\u540c\u4e00\u81f4\u662f\u8001\u914d\u7f6e\u548c\u65b0\u914d\u7f6e\u7684\u7ed3\u5408\uff1a \u65e5\u5fd7\u6761\u76ee\u88ab\u590d\u5236\u7ed9\u96c6\u7fa4\u4e2d\u65b0\u3001\u8001\u914d\u7f6e\u7684\u6240\u6709\u670d\u52a1\u5668\u3002 \u65b0\u3001\u65e7\u914d\u7f6e\u7684\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u6210\u4e3a\u9886\u5bfc\u4eba\u3002 \u8fbe\u6210\u4e00\u81f4\uff08\u9488\u5bf9\u9009\u4e3e\u548c\u63d0\u4ea4\uff09\u9700\u8981\u5206\u522b\u5728\u4e24\u79cd\u914d\u7f6e\u4e0a\u83b7\u5f97\u5927\u591a\u6570\u7684\u652f\u6301\u3002 \u5171\u540c\u4e00\u81f4\u5141\u8bb8\u72ec\u7acb\u7684\u670d\u52a1\u5668\u5728\u4e0d\u5f71\u54cd\u5b89\u5168\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u8fdb\u884c\u914d\u7f6e\u8f6c\u6362\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u5171\u540c\u4e00\u81f4\u53ef\u4ee5\u8ba9\u96c6\u7fa4\u5728\u914d\u7f6e\u8f6c\u6362\u7684\u8fc7\u7a0b\u4eba\u4f9d\u7136\u54cd\u5e94\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002 \u96c6\u7fa4\u914d\u7f6e\u5728\u590d\u5236\u65e5\u5fd7\u4e2d\u4ee5\u7279\u6b8a\u7684\u65e5\u5fd7\u6761\u76ee\u6765\u5b58\u50a8\u548c\u901a\u4fe1\uff1b\u56fe 11 \u5c55\u793a\u4e86\u914d\u7f6e\u8f6c\u6362\u7684\u8fc7\u7a0b\u3002\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u63a5\u6536\u5230\u4e00\u4e2a\u6539\u53d8\u914d\u7f6e\u4ece C-old \u5230 C-new \u7684\u8bf7\u6c42\uff0c\u4ed6\u4f1a\u4e3a\u4e86\u5171\u540c\u4e00\u81f4\u5b58\u50a8\u914d\u7f6e\uff08\u56fe\u4e2d\u7684 C-old,new\uff09\uff0c\u4ee5\u524d\u9762\u63cf\u8ff0\u7684\u65e5\u5fd7\u6761\u76ee\u548c\u526f\u672c\u7684\u5f62\u5f0f\u3002\u4e00\u65e6\u4e00\u4e2a\u670d\u52a1\u5668\u5c06\u65b0\u7684\u914d\u7f6e\u65e5\u5fd7\u6761\u76ee\u589e\u52a0\u5230\u5b83\u7684\u65e5\u5fd7\u4e2d\uff0c\u4ed6\u5c31\u4f1a\u7528\u8fd9\u4e2a\u914d\u7f6e\u6765\u505a\u51fa\u672a\u6765\u6240\u6709\u7684\u51b3\u5b9a\uff08\u670d\u52a1\u5668\u603b\u662f\u4f7f\u7528\u6700\u65b0\u7684\u914d\u7f6e\uff0c\u65e0\u8bba\u4ed6\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff09\u3002\u8fd9\u610f\u5473\u7740\u9886\u5bfc\u4eba\u8981\u4f7f\u7528 C-old,new \u7684\u89c4\u5219\u6765\u51b3\u5b9a\u65e5\u5fd7\u6761\u76ee C-old,new \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u88ab\u63d0\u4ea4\u3002\u5982\u679c\u9886\u5bfc\u4eba\u5d29\u6e83\u4e86\uff0c\u88ab\u9009\u51fa\u6765\u7684\u65b0\u9886\u5bfc\u4eba\u53ef\u80fd\u662f\u4f7f\u7528 C-old \u914d\u7f6e\u4e5f\u53ef\u80fd\u662f C-old,new \u914d\u7f6e\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8d62\u5f97\u9009\u4e3e\u7684\u5019\u9009\u4eba\u662f\u5426\u5df2\u7ecf\u63a5\u6536\u5230\u4e86 C-old,new \u914d\u7f6e\u3002 \u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c C-new \u914d\u7f6e\u5728\u8fd9\u4e00\u65f6\u671f\u90fd\u4e0d\u4f1a\u5355\u65b9\u9762\u7684\u505a\u51fa\u51b3\u5b9a\u3002 \u4e00\u65e6 C-old,new \u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u65e0\u8bba\u662f C-old \u8fd8\u662f C-new\uff0c\u5728\u6ca1\u6709\u7ecf\u8fc7\u4ed6\u4eba\u6279\u51c6\u7684\u60c5\u51b5\u4e0b\u90fd\u4e0d\u53ef\u80fd\u505a\u51fa\u51b3\u5b9a\uff0c\u5e76\u4e14\u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027\u4fdd\u8bc1\u4e86\u53ea\u6709\u62e5\u6709 C-old,new \u65e5\u5fd7\u6761\u76ee\u7684\u670d\u52a1\u5668\u624d\u6709\u53ef\u80fd\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u9886\u5bfc\u4eba\u521b\u5efa\u4e00\u6761\u5173\u4e8e C-new \u914d\u7f6e\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u590d\u5236\u7ed9\u96c6\u7fa4\u5c31\u662f\u5b89\u5168\u7684\u4e86\u3002\u518d\u8005\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u5728\u89c1\u5230\u65b0\u7684\u914d\u7f6e\u7684\u65f6\u5019\u5c31\u4f1a\u7acb\u5373\u751f\u6548\u3002\u5f53\u65b0\u7684\u914d\u7f6e\u5728 C-new \u7684\u89c4\u5219\u4e0b\u88ab\u63d0\u4ea4\uff0c\u65e7\u7684\u914d\u7f6e\u5c31\u53d8\u5f97\u65e0\u5173\u7d27\u8981\uff0c\u540c\u65f6\u4e0d\u4f7f\u7528\u65b0\u7684\u914d\u7f6e\u7684\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u88ab\u5173\u95ed\u4e86\u3002\u5982\u56fe 11\uff0cC-old \u548c C-new \u6ca1\u6709\u4efb\u4f55\u673a\u4f1a\u540c\u65f6\u505a\u51fa\u5355\u65b9\u9762\u7684\u51b3\u5b9a\uff1b\u8fd9\u4fdd\u8bc1\u4e86\u5b89\u5168\u6027\u3002 \u56fe 11 \uff1a\u4e00\u4e2a\u914d\u7f6e\u5207\u6362\u7684\u65f6\u95f4\u7ebf\u3002\u865a\u7ebf\u8868\u793a\u5df2\u7ecf\u88ab\u521b\u5efa\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u7684\u6761\u76ee\uff0c\u5b9e\u7ebf\u8868\u793a\u6700\u540e\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u9886\u5bfc\u4eba\u9996\u5148\u521b\u5efa\u4e86 C-old,new \u7684\u914d\u7f6e\u6761\u76ee\u5728\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff0c\u5e76\u63d0\u4ea4\u5230 C-old,new \u4e2d\uff08C-old \u7684\u5927\u591a\u6570\u548c C-new \u7684\u5927\u591a\u6570\uff09\u3002\u7136\u540e\u4ed6\u521b\u5efa C-new \u6761\u76ee\u5e76\u63d0\u4ea4\u5230 C-new \u4e2d\u7684\u5927\u591a\u6570\u3002\u8fd9\u6837\u5c31\u4e0d\u5b58\u5728 C-new \u548c C-old \u53ef\u4ee5\u540c\u65f6\u505a\u51fa\u51b3\u5b9a\u7684\u65f6\u95f4\u70b9\u3002 \u5728\u5173\u4e8e\u91cd\u65b0\u914d\u7f6e\u8fd8\u6709\u4e09\u4e2a\u95ee\u9898\u9700\u8981\u63d0\u51fa\u3002 \u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u65b0\u7684\u670d\u52a1\u5668\u53ef\u80fd\u521d\u59cb\u5316\u6ca1\u6709\u5b58\u50a8\u4efb\u4f55\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u5f53\u8fd9\u4e9b\u670d\u52a1\u5668\u4ee5\u8fd9\u79cd\u72b6\u6001\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\uff0c\u90a3\u4e48\u4ed6\u4eec\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u6765\u66f4\u65b0\u8ffd\u8d76\uff0c\u8fd9\u65f6\u8fd8\u4e0d\u80fd\u63d0\u4ea4\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u53ef\u7528\u6027\u7684\u95f4\u9694\u65f6\u95f4\uff0cRaft \u5728\u914d\u7f6e\u66f4\u65b0\u7684\u65f6\u5019\u4f7f\u7528\u4e86\u4e00\u79cd\u989d\u5916\u7684\u9636\u6bb5\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u65b0\u7684\u670d\u52a1\u5668\u4ee5\u6ca1\u6709\u6295\u7968\u6743\u8eab\u4efd\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\u6765\uff08\u9886\u5bfc\u4eba\u590d\u5236\u65e5\u5fd7\u7ed9\u4ed6\u4eec\uff0c\u4f46\u662f\u4e0d\u8003\u8651\u4ed6\u4eec\u662f\u5927\u591a\u6570\uff09\u3002 \u4e00\u65e6\u65b0\u7684\u670d\u52a1\u5668\u8ffd\u8d76\u4e0a\u4e86\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u673a\u5668\uff0c\u91cd\u65b0\u914d\u7f6e\u53ef\u4ee5\u50cf\u4e0a\u9762\u63cf\u8ff0\u7684\u4e00\u6837\u5904\u7406\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u96c6\u7fa4\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u4e0d\u662f\u65b0\u914d\u7f6e\u7684\u4e00\u5458 \u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9886\u5bfc\u4eba\u5c31\u4f1a\u5728\u63d0\u4ea4\u4e86 C-new \u65e5\u5fd7\u4e4b\u540e\u9000\u4f4d\uff08\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\uff09\u3002 \u8fd9\u610f\u5473\u7740\u6709\u8fd9\u6837\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u9886\u5bfc\u4eba\u7ba1\u7406\u7740\u96c6\u7fa4\uff0c\u4f46\u662f\u4e0d\u5305\u62ec\u4ed6\u81ea\u5df1\uff1b\u4ed6\u590d\u5236\u65e5\u5fd7\u4f46\u662f\u4e0d\u628a\u4ed6\u81ea\u5df1\u7b97\u4f5c\u662f\u5927\u591a\u6570\u4e4b\u4e00\u3002 \u5f53 C-new \u88ab\u63d0\u4ea4\u65f6\uff0c\u4f1a\u53d1\u751f\u9886\u5bfc\u4eba\u8fc7\u6e21\uff0c\u56e0\u4e3a\u8fd9\u65f6\u662f\u6700\u65e9\u65b0\u7684\u914d\u7f6e\u53ef\u4ee5\u72ec\u7acb\u5de5\u4f5c\u7684\u65f6\u95f4\u70b9\uff08\u5c06\u603b\u662f\u80fd\u591f\u5728 C-new \u914d\u7f6e\u4e0b\u9009\u51fa\u65b0\u7684\u9886\u5bfc\u4eba\uff09\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u53ef\u80fd\u53ea\u80fd\u4ece C-old \u4e2d\u9009\u51fa\u9886\u5bfc\u4eba\u3002 \u7b2c\u4e09\u4e2a\u95ee\u9898\u662f\uff0c\u79fb\u9664\u4e0d\u5728 C-new \u4e2d\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u6270\u4e71\u96c6\u7fa4\u3002 \u8fd9\u4e9b\u670d\u52a1\u5668\u5c06\u4e0d\u4f1a\u518d\u63a5\u6536\u5230\u5fc3\u8df3\uff0c\u6240\u4ee5\u5f53\u9009\u4e3e\u8d85\u65f6\uff0c\u4ed6\u4eec\u5c31\u4f1a\u8fdb\u884c\u65b0\u7684\u9009\u4e3e\u8fc7\u7a0b\u3002\u4ed6\u4eec\u4f1a\u53d1\u9001\u62e5\u6709\u65b0\u7684\u4efb\u671f\u53f7\u7684\u8bf7\u6c42\u6295\u7968 RPCs\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5f53\u524d\u7684\u9886\u5bfc\u4eba\u56de\u9000\u6210\u8ddf\u968f\u8005\u72b6\u6001\u3002\u65b0\u7684\u9886\u5bfc\u4eba\u6700\u7ec8\u4f1a\u88ab\u9009\u51fa\u6765\uff0c\u4f46\u662f\u88ab\u79fb\u9664\u7684\u670d\u52a1\u5668\u5c06\u4f1a\u518d\u6b21\u8d85\u65f6\uff0c\u7136\u540e\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u518d\u6b21\u91cd\u590d\uff0c\u5bfc\u81f4\u6574\u4f53\u53ef\u7528\u6027\u5927\u5e45\u964d\u4f4e\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f53\u670d\u52a1\u5668\u786e\u8ba4\u5f53\u524d\u9886\u5bfc\u4eba\u5b58\u5728\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u5ffd\u7565\u8bf7\u6c42\u6295\u7968 RPCs\u3002\u7279\u522b\u7684\uff0c\u5f53\u670d\u52a1\u5668\u5728\u5f53\u524d\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5185\u6536\u5230\u4e00\u4e2a\u8bf7\u6c42\u6295\u7968 RPC\uff0c\u4ed6\u4e0d\u4f1a\u66f4\u65b0\u5f53\u524d\u7684\u4efb\u671f\u53f7\u6216\u8005\u6295\u51fa\u9009\u7968\u3002\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u6b63\u5e38\u7684\u9009\u4e3e\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u5728\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u4e4b\u524d\uff0c\u81f3\u5c11\u7b49\u5f85\u4e00\u4e2a\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u3002\u7136\u800c\uff0c\u8fd9\u6709\u5229\u4e8e\u907f\u514d\u88ab\u79fb\u9664\u7684\u670d\u52a1\u5668\u6270\u4e71\uff1a\u5982\u679c\u9886\u5bfc\u4eba\u80fd\u591f\u53d1\u9001\u5fc3\u8df3\u7ed9\u96c6\u7fa4\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u4f1a\u88ab\u66f4\u5927\u7684\u4efb\u671f\u53f7\u5e9f\u9edc\u3002","title":"04 \u95ee\u98984 \u96c6\u7fa4\u6210\u5458\u53d8\u5316"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/99%20%E5%85%B6%E4%BB%96%20%E4%BA%86%E8%A7%A3%20RPC/","text":"RPC\uff08Remote Procedure Call\uff09\u6838\u5fc3\uff0c\u4e07\u53d8\u4e0d\u79bb\u5176\u5b97 gRPC\u8be6\u7ec6\u5165\u95e8\u6559\u7a0b\uff0cGolang/Python/PHP\u591a\u8bed\u8a00\u89e3","title":"99 \u5176\u4ed6 \u4e86\u89e3 RPC"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/","text":"# \u89e3\u8bfb\u5171\u8bc6\u7b97\u6cd5Raft\uff08\u5408\u96c6\uff09 0. \u4ec0\u4e48\u662fraft \u00b6 00:49 1. \u590d\u5236\u72b6\u6001\u673a \u00b6 03:53 2. \u72b6\u6001\u7b80\u5316 \u00b6 05:22 2.1 \u4efb\u671f \u00b6 06:34 \u53ef\u4ee5\u901a\u8fc7\u5224\u65ad\u4e00\u53f0\u670d\u52a1\u662f\u5426\u5305\u542b t2 \u65f6\u523b\u7684\u65e5\u5fd7\u6765\u5224\u65ad\u8fd9\u53f0\u670d\u52a1\u5668\u5728 t2 \u65f6\u523b\u5185\u662f\u5426\u53d1\u751f\u8fc7\u5b95\u673a 2.2 RPC \u4e0e\u65b0\u8bbe\u8ba1\u7684\u529f\u80fd \u00b6 07:26 3. \u9886\u5bfc\u8005\u9009\u4e3e \u00b6 09:05 3.1 \u9886\u5bfc\u8005\u9009\u4e3e\u53ef\u80fd\u4ea7\u751f\u76843\u79cd\u7ed3\u679c \u00b6 10:08","title":"Raft \u89c6\u9891\u7b14\u8bb0"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/#0-\u4ec0\u4e48\u662fraft","text":"00:49","title":"0. \u4ec0\u4e48\u662fraft"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/#1-\u590d\u5236\u72b6\u6001\u673a","text":"03:53","title":"1. \u590d\u5236\u72b6\u6001\u673a"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/#2-\u72b6\u6001\u7b80\u5316","text":"05:22","title":"2. \u72b6\u6001\u7b80\u5316"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/#21-\u4efb\u671f","text":"06:34 \u53ef\u4ee5\u901a\u8fc7\u5224\u65ad\u4e00\u53f0\u670d\u52a1\u662f\u5426\u5305\u542b t2 \u65f6\u523b\u7684\u65e5\u5fd7\u6765\u5224\u65ad\u8fd9\u53f0\u670d\u52a1\u5668\u5728 t2 \u65f6\u523b\u5185\u662f\u5426\u53d1\u751f\u8fc7\u5b95\u673a","title":"2.1 \u4efb\u671f"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/#22-rpc-\u4e0e\u65b0\u8bbe\u8ba1\u7684\u529f\u80fd","text":"07:26","title":"2.2 RPC \u4e0e\u65b0\u8bbe\u8ba1\u7684\u529f\u80fd"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/#3-\u9886\u5bfc\u8005\u9009\u4e3e","text":"09:05","title":"3. \u9886\u5bfc\u8005\u9009\u4e3e"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/#31-\u9886\u5bfc\u8005\u9009\u4e3e\u53ef\u80fd\u4ea7\u751f\u76843\u79cd\u7ed3\u679c","text":"10:08","title":"3.1 \u9886\u5bfc\u8005\u9009\u4e3e\u53ef\u80fd\u4ea7\u751f\u76843\u79cd\u7ed3\u679c"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/","text":"\u5bfb\u627e\u4e00\u79cd\u6613\u4e8e\u7406\u89e3\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\uff08\u6269\u5c55\u7248\uff09 \u00b6 \u6458\u8981 \u00b6 Raft \u662f\u4e00\u79cd\u4e3a\u4e86\u7ba1\u7406\u590d\u5236\u65e5\u5fd7\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u3002\u5b83\u63d0\u4f9b\u4e86\u548c Paxos \u7b97\u6cd5\u76f8\u540c\u7684\u529f\u80fd\u548c\u6027\u80fd\uff0c\u4f46\u662f\u5b83\u7684\u7b97\u6cd5\u7ed3\u6784\u548c Paxos \u4e0d\u540c\uff0c\u4f7f\u5f97 Raft \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u5e76\u4e14\u66f4\u5bb9\u6613\u6784\u5efa\u5b9e\u9645\u7684\u7cfb\u7edf\u3002\u4e3a\u4e86\u63d0\u5347\u53ef\u7406\u89e3\u6027\uff0cRaft \u5c06\u4e00\u81f4\u6027\u7b97\u6cd5\u5206\u89e3\u6210\u4e86\u51e0\u4e2a\u5173\u952e\u6a21\u5757\uff0c\u4f8b\u5982\u9886\u5bfc\u4eba\u9009\u4e3e\u3001\u65e5\u5fd7\u590d\u5236\u548c\u5b89\u5168\u6027\u3002\u540c\u65f6\u5b83\u901a\u8fc7\u5b9e\u65bd\u4e00\u4e2a\u66f4\u5f3a\u7684\u4e00\u81f4\u6027\u6765\u51cf\u5c11\u9700\u8981\u8003\u8651\u7684\u72b6\u6001\u7684\u6570\u91cf\u3002\u4e00\u9879\u7528\u6237\u7814\u7a76\u7684\u7ed3\u679c\u8868\u660e\uff0c\u5bf9\u4e8e\u5b66\u751f\u800c\u8a00\uff0cRaft \u7b97\u6cd5\u6bd4 Paxos \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u5b66\u4e60\u3002Raft \u7b97\u6cd5\u8fd8\u5305\u62ec\u4e00\u4e2a\u65b0\u7684\u673a\u5236\u6765\u5141\u8bb8\u96c6\u7fa4\u6210\u5458\u7684\u52a8\u6001\u6539\u53d8\uff0c\u5b83\u5229\u7528\u91cd\u53e0\u7684\u5927\u591a\u6570\u6765\u4fdd\u8bc1\u5b89\u5168\u6027\u3002 1 \u4ecb\u7ecd \u00b6 \u4e00\u81f4\u6027\u7b97\u6cd5\u5141\u8bb8\u4e00\u7ec4\u673a\u5668\u50cf\u4e00\u4e2a\u6574\u4f53\u4e00\u6837\u5de5\u4f5c\uff0c\u5373\u4f7f\u5176\u4e2d\u4e00\u4e9b\u673a\u5668\u51fa\u73b0\u6545\u969c\u4e5f\u80fd\u591f\u7ee7\u7eed\u5de5\u4f5c\u4e0b\u53bb\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u4e00\u81f4\u6027\u7b97\u6cd5\u5728\u6784\u5efa\u53ef\u4fe1\u8d56\u7684\u5927\u89c4\u6a21\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272\u3002\u5728\u8fc7\u53bb\u7684 10 \u5e74\u91cc\uff0cPaxos \u7b97\u6cd5\u7edf\u6cbb\u7740\u4e00\u81f4\u6027\u7b97\u6cd5\u8fd9\u4e00\u9886\u57df\uff1a\u7edd\u5927\u591a\u6570\u7684\u5b9e\u73b0\u90fd\u662f\u57fa\u4e8e Paxos \u6216\u8005\u53d7\u5176\u5f71\u54cd\u3002\u540c\u65f6 Paxos \u4e5f\u6210\u4e3a\u4e86\u6559\u5b66\u9886\u57df\u91cc\u8bb2\u89e3\u4e00\u81f4\u6027\u95ee\u9898\u65f6\u7684\u793a\u4f8b\u3002 \u4f46\u662f\u4e0d\u5e78\u7684\u662f\uff0c\u5c3d\u7ba1\u6709\u5f88\u591a\u5de5\u4f5c\u90fd\u5728\u5c1d\u8bd5\u964d\u4f4e\u5b83\u7684\u590d\u6742\u6027\uff0c\u4f46\u662f Paxos \u7b97\u6cd5\u4f9d\u7136\u5341\u5206\u96be\u4ee5\u7406\u89e3\u3002\u5e76\u4e14\uff0cPaxos \u81ea\u8eab\u7684\u7b97\u6cd5\u7ed3\u6784\u9700\u8981\u8fdb\u884c\u5927\u5e45\u7684\u4fee\u6539\u624d\u80fd\u591f\u5e94\u7528\u5230\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\u3002\u56e0\u6b64\u5de5\u4e1a\u754c\u548c\u5b66\u672f\u754c\u90fd\u5bf9 Paxos \u7b97\u6cd5\u611f\u5230\u5341\u5206\u5934\u75bc\u3002 \u52aa\u529b\u7814\u7a76\u8fc7 Paxos \u7b97\u6cd5\u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u5bfb\u627e\u4e00\u79cd\u65b0\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\uff0c\u53ef\u4ee5\u4e3a\u6784\u5efa\u5b9e\u9645\u7684\u7cfb\u7edf\u548c\u6559\u5b66\u63d0\u4f9b\u66f4\u597d\u7684\u57fa\u7840\u3002\u4e0e Paxos \u4e0d\u540c\uff0c\u6211\u4eec\u7684\u9996\u8981\u76ee\u6807\u662f\u53ef\u7406\u89e3\u6027\uff1a\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u4e00\u81f4\u6027\u7b97\u6cd5\uff0c\u5e76\u4e14\u6bd4 Paxos \u7b97\u6cd5\u66f4\u5bb9\u6613\u5b66\u4e60\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5e0c\u671b\u8be5\u7b97\u6cd5\u65b9\u4fbf\u7cfb\u7edf\u6784\u5efa\u8005\u7684\u76f4\u89c9\u7684\u53d1\u5c55\u3002\u91cd\u8981\u7684\u4e0d\u4ec5\u4ec5\u662f\u7b97\u6cd5\u80fd\u591f\u5de5\u4f5c\uff0c\u66f4\u91cd\u8981\u7684\u662f\u80fd\u591f\u5f88\u6e05\u695a\u5730\u77e5\u9053\u5b83\u4e3a\u4ec0\u4e48\u80fd\u5de5\u4f5c\u3002 Raft \u4e00\u81f4\u6027\u7b97\u6cd5\u5c31\u662f\u8fd9\u4e9b\u5de5\u4f5c\u7684\u7ed3\u679c\u3002\u5728\u8bbe\u8ba1 Raft \u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e9b\u7279\u522b\u7684\u6280\u5de7\u6765\u63d0\u5347\u5b83\u7684\u53ef\u7406\u89e3\u6027\uff0c\u5305\u62ec\u7b97\u6cd5\u5206\u89e3\uff08Raft \u4e3b\u8981\u88ab\u5206\u6210\u4e86\u9886\u5bfc\u4eba\u9009\u4e3e\uff0c\u65e5\u5fd7\u590d\u5236\u548c\u5b89\u5168\u4e09\u4e2a\u6a21\u5757\uff09\u548c\u51cf\u5c11\u72b6\u6001\u673a\u7684\u72b6\u6001\uff08\u76f8\u5bf9\u4e8e Paxos\uff0cRaft \u51cf\u5c11\u4e86\u975e\u786e\u5b9a\u6027\u548c\u670d\u52a1\u5668\u4e92\u76f8\u5904\u4e8e\u975e\u4e00\u81f4\u6027\u7684\u65b9\u5f0f\uff09\u3002\u4e00\u4efd\u9488\u5bf9\u4e24\u6240\u5927\u5b66 43 \u4e2a\u5b66\u751f\u7684\u7814\u7a76\u8868\u660e Raft \u660e\u663e\u6bd4 Paxos \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u3002\u5728\u8fd9\u4e9b\u5b66\u751f\u540c\u65f6\u5b66\u4e60\u4e86\u8fd9\u4e24\u79cd\u7b97\u6cd5\u4e4b\u540e\uff0c\u548c Paxos \u6bd4\u8d77\u6765\uff0c\u5176\u4e2d 33 \u4e2a\u5b66\u751f\u80fd\u591f\u56de\u7b54\u6709\u5173\u4e8e Raft \u7684\u95ee\u9898\u3002 Raft \u7b97\u6cd5\u5728\u8bb8\u591a\u65b9\u9762\u548c\u73b0\u6709\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u90fd\u5f88\u76f8\u4f3c\uff08\u4e3b\u8981\u662f Oki \u548c Liskov \u7684 Viewstamped Replication\uff09\uff0c\u4f46\u662f\u5b83\u4e5f\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u7279\u6027\uff1a \u5f3a\u9886\u5bfc\u4eba \uff1a\u548c\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u76f8\u6bd4\uff0cRaft \u4f7f\u7528\u4e00\u79cd\u66f4\u5f3a\u7684\u9886\u5bfc\u80fd\u529b\u5f62\u5f0f\u3002\u6bd4\u5982\uff0c\u65e5\u5fd7\u6761\u76ee\u53ea\u4ece\u9886\u5bfc\u4eba\u53d1\u9001\u7ed9\u5176\u4ed6\u7684\u670d\u52a1\u5668\u3002\u8fd9\u79cd\u65b9\u5f0f\u7b80\u5316\u4e86\u5bf9\u590d\u5236\u65e5\u5fd7\u7684\u7ba1\u7406\u5e76\u4e14\u4f7f\u5f97 Raft \u7b97\u6cd5\u66f4\u52a0\u6613\u4e8e\u7406\u89e3\u3002 \u9886\u5bfc\u9009\u4e3e \uff1aRaft \u7b97\u6cd5\u4f7f\u7528\u4e00\u4e2a\u968f\u673a\u8ba1\u65f6\u5668\u6765\u9009\u4e3e\u9886\u5bfc\u4eba\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ea\u662f\u5728\u4efb\u4f55\u4e00\u81f4\u6027\u7b97\u6cd5\u90fd\u5fc5\u987b\u5b9e\u73b0\u7684\u5fc3\u8df3\u673a\u5236\u4e0a\u589e\u52a0\u4e86\u4e00\u70b9\u673a\u5236\u3002\u5728\u89e3\u51b3\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u66f4\u52a0\u7b80\u5355\u5feb\u6377\u3002 \u6210\u5458\u5173\u7cfb\u8c03\u6574 \uff1aRaft \u4f7f\u7528\u4e00\u79cd\u5171\u540c\u4e00\u81f4\u7684\u65b9\u6cd5\u6765\u5904\u7406\u96c6\u7fa4\u6210\u5458\u53d8\u6362\u7684\u95ee\u9898\uff0c\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e0b\uff0c\u5904\u4e8e\u8c03\u6574\u8fc7\u7a0b\u4e2d\u7684\u4e24\u79cd\u4e0d\u540c\u7684\u914d\u7f6e\u96c6\u7fa4\u4e2d\u5927\u591a\u6570\u673a\u5668\u4f1a\u6709\u91cd\u53e0\uff0c\u8fd9\u5c31\u4f7f\u5f97\u96c6\u7fa4\u5728\u6210\u5458\u53d8\u6362\u7684\u65f6\u5019\u4f9d\u7136\u53ef\u4ee5\u7ee7\u7eed\u5de5\u4f5c\u3002 \u6211\u4eec\u76f8\u4fe1\uff0cRaft \u7b97\u6cd5\u4e0d\u8bba\u51fa\u4e8e\u6559\u5b66\u76ee\u7684\u8fd8\u662f\u4f5c\u4e3a\u5b9e\u8df5\u9879\u76ee\u7684\u57fa\u7840\u90fd\u662f\u8981\u6bd4 Paxos \u6216\u8005\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u8981\u4f18\u5f02\u7684\u3002\u5b83\u6bd4\u5176\u4ed6\u7b97\u6cd5\u66f4\u52a0\u7b80\u5355\uff0c\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\uff1b\u5b83\u7684\u7b97\u6cd5\u63cf\u8ff0\u8db3\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u73b0\u5b9e\u7684\u7cfb\u7edf\uff1b\u5b83\u6709\u597d\u591a\u5f00\u6e90\u7684\u5b9e\u73b0\u5e76\u4e14\u5728\u5f88\u591a\u516c\u53f8\u91cc\u4f7f\u7528\uff1b\u5b83\u7684\u5b89\u5168\u7279\u6027\u5df2\u7ecf\u88ab\u6b63\u5f0f\u5b9a\u4e49\u548c\u8bc1\u660e\uff1b\u5b83\u7684\u6548\u7387\u548c\u5176\u4ed6\u7b97\u6cd5\u6bd4\u8d77\u6765\u4e5f\u4e0d\u76f8\u4e0a\u4e0b\u3002 \u63a5\u4e0b\u6765\uff0c\u8fd9\u7bc7\u8bba\u6587\u4f1a\u4ecb\u7ecd\u4ee5\u4e0b\u5185\u5bb9\uff1a\u590d\u5236\u72b6\u6001\u673a\u95ee\u9898\uff08\u7b2c 2 \u8282\uff09\uff0c\u8ba8\u8bba Paxos \u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff08\u7b2c 3 \u8282\uff09\uff0c\u8ba8\u8bba\u6211\u4eec\u4e3a\u4e86\u53ef\u7406\u89e3\u6027\u800c\u91c7\u53d6\u7684\u65b9\u6cd5\uff08\u7b2c 4 \u8282\uff09\uff0c\u9610\u8ff0 Raft \u4e00\u81f4\u6027\u7b97\u6cd5\uff08\u7b2c 5-8 \u8282\uff09\uff0c\u8bc4\u4ef7 Raft \u7b97\u6cd5\uff08\u7b2c 9 \u8282\uff09\uff0c\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u7684\u5de5\u4f5c\uff08\u7b2c 10 \u8282\uff09\u3002 2 \u590d\u5236\u72b6\u6001\u673a \u00b6 \u4e00\u81f4\u6027\u7b97\u6cd5\u662f\u4ece\u590d\u5236\u72b6\u6001\u673a\u7684\u80cc\u666f\u4e0b\u63d0\u51fa\u7684\uff08\u53c2\u8003\u82f1\u6587\u539f\u6587\u5f15\u752837\uff09\u3002\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u4e00\u7ec4\u670d\u52a1\u5668\u4e0a\u7684\u72b6\u6001\u673a\u4ea7\u751f\u76f8\u540c\u72b6\u6001\u7684\u526f\u672c\uff0c\u5e76\u4e14\u5728\u4e00\u4e9b\u673a\u5668\u5b95\u6389\u7684\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u3002\u590d\u5236\u72b6\u6001\u673a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u88ab\u7528\u4e8e\u89e3\u51b3\u5f88\u591a\u5bb9\u9519\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5927\u89c4\u6a21\u7684\u7cfb\u7edf\u4e2d\u901a\u5e38\u90fd\u6709\u4e00\u4e2a\u96c6\u7fa4\u9886\u5bfc\u4eba\uff0c\u50cf GFS\u3001HDFS \u548c RAMCloud\uff0c\u5178\u578b\u5e94\u7528\u5c31\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u590d\u5236\u72b6\u6001\u673a\u53bb\u7ba1\u7406\u9886\u5bfc\u9009\u4e3e\u548c\u5b58\u50a8\u914d\u7f6e\u4fe1\u606f\u5e76\u4e14\u5728\u9886\u5bfc\u4eba\u5b95\u673a\u7684\u60c5\u51b5\u4e0b\u4e5f\u8981\u5b58\u6d3b\u4e0b\u6765\u3002\u6bd4\u5982 Chubby \u548c ZooKeeper\u3002 \u56fe 1 \uff1a\u590d\u5236\u72b6\u6001\u673a\u7684\u7ed3\u6784\u3002\u4e00\u81f4\u6027\u7b97\u6cd5\u7ba1\u7406\u7740\u6765\u81ea\u5ba2\u6237\u7aef\u6307\u4ee4\u7684\u590d\u5236\u65e5\u5fd7\u3002\u72b6\u6001\u673a\u4ece\u65e5\u5fd7\u4e2d\u5904\u7406\u76f8\u540c\u987a\u5e8f\u7684\u76f8\u540c\u6307\u4ee4\uff0c\u6240\u4ee5\u4ea7\u751f\u7684\u7ed3\u679c\u4e5f\u662f\u76f8\u540c\u7684\u3002 \u590d\u5236\u72b6\u6001\u673a\u901a\u5e38\u90fd\u662f\u57fa\u4e8e\u590d\u5236\u65e5\u5fd7\u5b9e\u73b0\u7684\uff0c\u5982\u56fe 1\u3002\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u5b58\u50a8\u4e00\u4e2a\u5305\u542b\u4e00\u7cfb\u5217\u6307\u4ee4\u7684\u65e5\u5fd7\uff0c\u5e76\u4e14\u6309\u7167\u65e5\u5fd7\u7684\u987a\u5e8f\u8fdb\u884c\u6267\u884c\u3002\u6bcf\u4e00\u4e2a\u65e5\u5fd7\u90fd\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u5305\u542b\u76f8\u540c\u7684\u6307\u4ee4\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u90fd\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u5e8f\u5217\u3002\u56e0\u4e3a\u6bcf\u4e2a\u72b6\u6001\u673a\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u6bcf\u4e00\u6b21\u6267\u884c\u64cd\u4f5c\u90fd\u4ea7\u751f\u76f8\u540c\u7684\u72b6\u6001\u548c\u540c\u6837\u7684\u5e8f\u5217\u3002 \u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u4efb\u52a1\u662f\u4fdd\u8bc1\u590d\u5236\u65e5\u5fd7\u7684\u4e00\u81f4\u6027\u3002\u670d\u52a1\u5668\u4e0a\u7684\u4e00\u81f4\u6027\u6a21\u5757\u63a5\u6536\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6307\u4ee4\u7136\u540e\u6dfb\u52a0\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\u3002\u5b83\u548c\u5176\u4ed6\u670d\u52a1\u5668\u4e0a\u7684\u4e00\u81f4\u6027\u6a21\u5757\u8fdb\u884c\u901a\u4fe1\u6765\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\u7684\u65e5\u5fd7\u6700\u7ec8\u90fd\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u5305\u542b\u76f8\u540c\u7684\u8bf7\u6c42\uff0c\u5373\u4f7f\u6709\u4e9b\u670d\u52a1\u5668\u53d1\u751f\u6545\u969c\u3002\u4e00\u65e6\u6307\u4ee4\u88ab\u6b63\u786e\u7684\u590d\u5236\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u72b6\u6001\u673a\u6309\u7167\u65e5\u5fd7\u987a\u5e8f\u5904\u7406\u4ed6\u4eec\uff0c\u7136\u540e\u8f93\u51fa\u7ed3\u679c\u88ab\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u56e0\u6b64\uff0c\u670d\u52a1\u5668\u96c6\u7fa4\u770b\u8d77\u6765\u5f62\u6210\u4e86\u4e00\u4e2a\u9ad8\u53ef\u9760\u7684\u72b6\u6001\u673a\u3002 \u5b9e\u9645\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u901a\u5e38\u542b\u6709\u4ee5\u4e0b\u7279\u6027\uff1a \u5b89\u5168\u6027\u4fdd\u8bc1\uff08\u7edd\u5bf9\u4e0d\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7684\u7ed3\u679c\uff09\uff1a\u5728\u975e\u62dc\u5360\u5ead\u9519\u8bef\u60c5\u51b5\u4e0b\uff0c\u5305\u62ec\u7f51\u7edc\u5ef6\u8fdf\u3001\u5206\u533a\u3001\u4e22\u5305\u3001\u91cd\u590d\u548c\u4e71\u5e8f\u7b49\u9519\u8bef\u90fd\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u3002 \u53ef\u7528\u6027\uff1a\u96c6\u7fa4\u4e2d\u53ea\u8981\u6709\u5927\u591a\u6570\u7684\u673a\u5668\u53ef\u8fd0\u884c\u5e76\u4e14\u80fd\u591f\u76f8\u4e92\u901a\u4fe1\u3001\u548c\u5ba2\u6237\u7aef\u901a\u4fe1\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u53ef\u7528\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u5178\u578b\u7684\u5305\u542b 5 \u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\u53ef\u4ee5\u5bb9\u5fcd\u4e24\u4e2a\u8282\u70b9\u7684\u5931\u8d25\u3002\u670d\u52a1\u5668\u88ab\u505c\u6b62\u5c31\u8ba4\u4e3a\u662f\u5931\u8d25\u3002\u5b83\u4eec\u7a0d\u540e\u53ef\u80fd\u4f1a\u4ece\u53ef\u9760\u5b58\u50a8\u7684\u72b6\u6001\u4e2d\u6062\u590d\u5e76\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4\u3002 \u4e0d\u4f9d\u8d56\u65f6\u5e8f\u6765\u4fdd\u8bc1\u4e00\u81f4\u6027\uff1a\u7269\u7406\u65f6\u949f\u9519\u8bef\u6216\u8005\u6781\u7aef\u7684\u6d88\u606f\u5ef6\u8fdf\u53ea\u6709\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u624d\u4f1a\u5bfc\u81f4\u53ef\u7528\u6027\u95ee\u9898\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u5728\u96c6\u7fa4\u4e2d\u5927\u591a\u6570\u8282\u70b9\u54cd\u5e94\u4e00\u8f6e\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u65f6\u5b8c\u6210\u3002\u5c0f\u90e8\u5206\u6bd4\u8f83\u6162\u7684\u8282\u70b9\u4e0d\u4f1a\u5f71\u54cd\u7cfb\u7edf\u6574\u4f53\u7684\u6027\u80fd\u3002 3 Paxos \u7b97\u6cd5\u7684\u95ee\u9898 \u00b6 \u5728\u8fc7\u53bb\u7684 10 \u5e74\u91cc\uff0cLeslie Lamport \u7684 Paxos \u7b97\u6cd5\u51e0\u4e4e\u5df2\u7ecf\u6210\u4e3a\u4e00\u81f4\u6027\u7684\u4ee3\u540d\u8bcd\uff1aPaxos \u662f\u5728\u8bfe\u7a0b\u6559\u5b66\u4e2d\u6700\u7ecf\u5e38\u4f7f\u7528\u7684\u7b97\u6cd5\uff0c\u540c\u65f6\u4e5f\u662f\u5927\u591a\u6570\u4e00\u81f4\u6027\u7b97\u6cd5\u5b9e\u73b0\u7684\u8d77\u70b9\u3002Paxos \u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u80fd\u591f\u8fbe\u6210\u5355\u4e00\u51b3\u7b56\u4e00\u81f4\u7684\u534f\u8bae\uff0c\u6bd4\u5982\u5355\u6761\u7684\u590d\u5236\u65e5\u5fd7\u9879\u3002\u6211\u4eec\u628a\u8fd9\u4e00\u5b50\u96c6\u53eb\u505a\u5355\u51b3\u7b56 Paxos\u3002\u7136\u540e\u901a\u8fc7\u7ec4\u5408\u591a\u4e2a Paxos \u534f\u8bae\u7684\u5b9e\u4f8b\u6765\u4fc3\u8fdb\u4e00\u7cfb\u5217\u51b3\u7b56\u7684\u8fbe\u6210\u3002Paxos \u4fdd\u8bc1\u5b89\u5168\u6027\u548c\u6d3b\u6027\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u96c6\u7fa4\u6210\u5458\u5173\u7cfb\u7684\u53d8\u66f4\u3002Paxos \u7684\u6b63\u786e\u6027\u5df2\u7ecf\u88ab\u8bc1\u660e\uff0c\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u4e5f\u5f88\u9ad8\u6548\u3002 \u4e0d\u5e78\u7684\u662f\uff0cPaxos \u6709\u4e24\u4e2a\u660e\u663e\u7684\u7f3a\u70b9\u3002\u7b2c\u4e00\u4e2a\u7f3a\u70b9\u662f Paxos \u7b97\u6cd5\u7279\u522b\u7684\u96be\u4ee5\u7406\u89e3\u3002\u5b8c\u6574\u7684\u89e3\u91ca\u662f\u51fa\u4e86\u540d\u7684\u4e0d\u900f\u660e\uff1b\u901a\u8fc7\u6781\u5927\u7684\u52aa\u529b\u4e4b\u540e\uff0c\u4e5f\u53ea\u6709\u5c11\u6570\u4eba\u6210\u529f\u7406\u89e3\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u3002\u56e0\u6b64\uff0c\u6709\u4e86\u51e0\u6b21\u7528\u66f4\u7b80\u5355\u7684\u672f\u8bed\u6765\u89e3\u91ca Paxos \u7684\u5c1d\u8bd5\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u89e3\u91ca\u90fd\u53ea\u5173\u6ce8\u4e86\u5355\u51b3\u7b56\u7684\u5b50\u96c6\u95ee\u9898\uff0c\u4f46\u4f9d\u7136\u5f88\u5177\u6709\u6311\u6218\u6027\u3002\u5728 2012 \u5e74 NSDI \u7684\u4f1a\u8bae\u4e2d\u7684\u4e00\u6b21\u8c03\u67e5\u663e\u793a\uff0c\u5f88\u5c11\u6709\u4eba\u5bf9 Paxos \u7b97\u6cd5\u611f\u5230\u6ee1\u610f\uff0c\u751a\u81f3\u5728\u7ecf\u9a8c\u8001\u9053\u7684\u7814\u7a76\u8005\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u6211\u4eec\u81ea\u5df1\u4e5f\u5c1d\u8bd5\u53bb\u7406\u89e3 Paxos\uff1b\u6211\u4eec\u4e00\u76f4\u6ca1\u80fd\u7406\u89e3 Paxos \u76f4\u5230\u6211\u4eec\u8bfb\u4e86\u5f88\u591a\u5bf9 Paxos \u7684\u7b80\u5316\u89e3\u91ca\u5e76\u4e14\u8bbe\u8ba1\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u82b1\u4e86\u8fd1\u4e00\u5e74\u65f6\u95f4\u3002 \u6211\u4eec\u5047\u8bbe Paxos \u7684\u4e0d\u900f\u660e\u6027\u6765\u81ea\u5b83\u9009\u62e9\u5355\u51b3\u7b56\u95ee\u9898\u4f5c\u4e3a\u5b83\u7684\u57fa\u7840\u3002\u5355\u51b3\u7b56 Paxos \u662f\u6666\u6da9\u5fae\u5999\u7684\uff0c\u5b83\u88ab\u5212\u5206\u6210\u4e86\u4e24\u79cd\u6ca1\u6709\u7b80\u5355\u76f4\u89c2\u89e3\u91ca\u548c\u65e0\u6cd5\u72ec\u7acb\u7406\u89e3\u7684\u60c5\u666f\u3002\u56e0\u6b64\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5f88\u96be\u5efa\u7acb\u8d77\u76f4\u89c2\u7684\u611f\u53d7\u4e3a\u4ec0\u4e48\u5355\u51b3\u7b56 Paxos \u7b97\u6cd5\u80fd\u591f\u5de5\u4f5c\u3002\u6784\u6210\u591a\u51b3\u7b56 Paxos \u589e\u52a0\u4e86\u5f88\u591a\u9519\u7efc\u590d\u6742\u7684\u89c4\u5219\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u5728\u591a\u51b3\u7b56\u4e0a\u8fbe\u6210\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff08\u4e00\u4efd\u65e5\u5fd7\u800c\u4e0d\u662f\u5355\u4e00\u7684\u65e5\u5fd7\u8bb0\u5f55\uff09\u80fd\u591f\u88ab\u5206\u89e3\u6210\u5176\u4ed6\u7684\u65b9\u5f0f\u5e76\u4e14\u66f4\u52a0\u76f4\u63a5\u548c\u660e\u663e\u3002 Paxos\u7b97\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\u5c31\u662f\u5b83\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u7528\u6765\u6784\u5efa\u4e00\u4e2a\u73b0\u5b9e\u7cfb\u7edf\u7684\u57fa\u7840\u3002\u4e00\u4e2a\u539f\u56e0\u662f\u8fd8\u6ca1\u6709\u4e00\u79cd\u88ab\u5e7f\u6cdb\u8ba4\u540c\u7684\u591a\u51b3\u7b56\u95ee\u9898\u7684\u7b97\u6cd5\u3002Lamport \u7684\u63cf\u8ff0\u57fa\u672c\u4e0a\u90fd\u662f\u5173\u4e8e\u5355\u51b3\u7b56 Paxos \u7684\uff1b\u4ed6\u7b80\u8981\u63cf\u8ff0\u4e86\u5b9e\u65bd\u591a\u51b3\u7b56 Paxos \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u7f3a\u4e4f\u5f88\u591a\u7ec6\u8282\u3002\u5f53\u7136\u4e5f\u6709\u5f88\u591a\u5177\u4f53\u5316 Paxos \u7684\u5c1d\u8bd5\uff0c\u4f46\u662f\u4ed6\u4eec\u90fd\u4e92\u76f8\u4e0d\u4e00\u6837\uff0c\u548c Paxos \u7684\u6982\u8ff0\u4e5f\u4e0d\u540c\u3002\u4f8b\u5982 Chubby \u8fd9\u6837\u7684\u7cfb\u7edf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e Paxos \u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u5927\u591a\u6570\u7684\u7ec6\u8282\u5e76\u6ca1\u6709\u88ab\u516c\u5f00\u3002 \u800c\u4e14\uff0cPaxos \u7b97\u6cd5\u7684\u7ed3\u6784\u4e5f\u4e0d\u662f\u5341\u5206\u6613\u4e8e\u6784\u5efa\u5b9e\u8df5\u7684\u7cfb\u7edf\uff1b\u5355\u51b3\u7b56\u5206\u89e3\u4e5f\u4f1a\u4ea7\u751f\u5176\u4ed6\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u72ec\u7acb\u5730\u9009\u62e9\u4e00\u7ec4\u65e5\u5fd7\u6761\u76ee\u7136\u540e\u5408\u5e76\u6210\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u65e5\u5fd7\u5e76\u6ca1\u6709\u5e26\u6765\u592a\u591a\u7684\u597d\u5904\uff0c\u4ec5\u4ec5\u589e\u52a0\u4e86\u4e0d\u5c11\u590d\u6742\u6027\u3002\u56f4\u7ed5\u7740\u65e5\u5fd7\u6765\u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\u662f\u66f4\u52a0\u7b80\u5355\u9ad8\u6548\u7684\uff1b\u65b0\u65e5\u5fd7\u6761\u76ee\u4ee5\u4e25\u683c\u9650\u5236\u7684\u987a\u5e8f\u589e\u6dfb\u5230\u65e5\u5fd7\u4e2d\u53bb\u3002\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0cPaxos \u4f7f\u7528\u4e86\u4e00\u79cd\u5bf9\u7b49\u7684\u70b9\u5bf9\u70b9\u7684\u65b9\u5f0f\u4f5c\u4e3a\u5b83\u7684\u6838\u5fc3\uff08\u5c3d\u7ba1\u5b83\u6700\u7ec8\u63d0\u8bae\u4e86\u4e00\u79cd\u5f31\u9886\u5bfc\u4eba\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u6027\u80fd\uff09\u3002\u5728\u53ea\u6709\u4e00\u4e2a\u51b3\u7b56\u4f1a\u88ab\u5236\u5b9a\u7684\u7b80\u5316\u4e16\u754c\u4e2d\u662f\u5f88\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u5f88\u5c11\u6709\u73b0\u5b9e\u7684\u7cfb\u7edf\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002\u5982\u679c\u6709\u4e00\u7cfb\u5217\u7684\u51b3\u7b56\u9700\u8981\u88ab\u5236\u5b9a\uff0c\u9996\u5148\u9009\u62e9\u4e00\u4e2a\u9886\u5bfc\u4eba\uff0c\u7136\u540e\u8ba9\u4ed6\u53bb\u534f\u8c03\u6240\u6709\u7684\u51b3\u8bae\uff0c\u4f1a\u66f4\u52a0\u7b80\u5355\u5feb\u901f\u3002 \u56e0\u6b64\uff0c\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\u5f88\u5c11\u6709\u548c Paxos \u76f8\u4f3c\u7684\u5b9e\u8df5\u3002\u6bcf\u4e00\u79cd\u5b9e\u73b0\u90fd\u662f\u4ece Paxos \u5f00\u59cb\u7814\u7a76\uff0c\u7136\u540e\u53d1\u73b0\u5f88\u591a\u5b9e\u73b0\u4e0a\u7684\u96be\u9898\uff0c\u518d\u7136\u540e\u5f00\u53d1\u4e86\u4e00\u79cd\u548c Paxos \u660e\u663e\u4e0d\u4e00\u6837\u7684\u7ed3\u6784\u3002\u8fd9\u6837\u662f\u975e\u5e38\u8d39\u65f6\u548c\u5bb9\u6613\u51fa\u9519\u7684\uff0c\u5e76\u4e14\u7406\u89e3 Paxos \u7684\u96be\u5ea6\u4f7f\u5f97\u8fd9\u4e2a\u95ee\u9898\u66f4\u52a0\u7cdf\u7cd5\u3002Paxos \u7b97\u6cd5\u5728\u7406\u8bba\u4e0a\u88ab\u8bc1\u660e\u662f\u6b63\u786e\u53ef\u884c\u7684\uff0c\u4f46\u662f\u73b0\u5b9e\u7684\u7cfb\u7edf\u548c Paxos \u5dee\u522b\u662f\u5982\u6b64\u7684\u5927\uff0c\u4ee5\u81f3\u4e8e\u8fd9\u4e9b\u8bc1\u660e\u6ca1\u6709\u4ec0\u4e48\u592a\u5927\u7684\u4ef7\u503c\u3002\u4e0b\u9762\u6765\u81ea Chubby \u5b9e\u73b0\u975e\u5e38\u5178\u578b\uff1a \u5728Paxos\u7b97\u6cd5\u63cf\u8ff0\u548c\u5b9e\u73b0\u73b0\u5b9e\u7cfb\u7edf\u4e2d\u95f4\u6709\u7740\u5de8\u5927\u7684\u9e3f\u6c9f\u3002\u6700\u7ec8\u7684\u7cfb\u7edf\u5efa\u7acb\u5728\u4e00\u79cd\u6ca1\u6709\u7ecf\u8fc7\u8bc1\u660e\u7684\u7b97\u6cd5\u4e4b\u4e0a\u3002 \u7531\u4e8e\u4ee5\u4e0a\u95ee\u9898\uff0c\u6211\u4eec\u8ba4\u4e3a Paxos \u7b97\u6cd5\u65e2\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u826f\u597d\u7684\u57fa\u7840\u7ed9\u5b9e\u8df5\u7684\u7cfb\u7edf\uff0c\u4e5f\u6ca1\u6709\u7ed9\u6559\u5b66\u5f88\u597d\u7684\u5e2e\u52a9\u3002\u57fa\u4e8e\u4e00\u81f4\u6027\u95ee\u9898\u5728\u5927\u89c4\u6a21\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u7684\u91cd\u8981\u6027\uff0c\u6211\u4eec\u51b3\u5b9a\u770b\u770b\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u62e5\u6709\u66f4\u597d\u7279\u6027\u7684\u66ff\u4ee3 Paxos \u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u3002Raft \u7b97\u6cd5\u5c31\u662f\u8fd9\u6b21\u5b9e\u9a8c\u7684\u7ed3\u679c\u3002 4 \u4e3a\u4e86\u53ef\u7406\u89e3\u6027\u7684\u8bbe\u8ba1 \u00b6 \u8bbe\u8ba1 Raft \u7b97\u6cd5\u6211\u4eec\u6709\u51e0\u4e2a\u521d\u8877\uff1a\u5b83\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u5b9e\u9645\u7684\u7cfb\u7edf\u5b9e\u73b0\u57fa\u7840\uff0c\u8fd9\u6837\u624d\u80fd\u5927\u5927\u51cf\u5c11\u5f00\u53d1\u8005\u7684\u5de5\u4f5c\uff1b\u5b83\u5fc5\u987b\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u5b89\u5168\u7684\u5e76\u4e14\u5728\u5927\u591a\u6570\u7684\u60c5\u51b5\u4e0b\u90fd\u662f\u53ef\u7528\u7684\uff1b\u5e76\u4e14\u5b83\u7684\u5927\u90e8\u5206\u64cd\u4f5c\u5fc5\u987b\u662f\u9ad8\u6548\u7684\u3002\u4f46\u662f\u6211\u4eec\u6700\u91cd\u8981\u4e5f\u662f\u6700\u5927\u7684\u6311\u6218\u662f\u53ef\u7406\u89e3\u6027\u3002\u5b83\u5fc5\u987b\u4fdd\u8bc1\u5bf9\u4e8e\u666e\u904d\u7684\u4eba\u7fa4\u90fd\u53ef\u4ee5\u5341\u5206\u5bb9\u6613\u7684\u53bb\u7406\u89e3\u3002\u53e6\u5916\uff0c\u5b83\u5fc5\u987b\u80fd\u591f\u8ba9\u4eba\u5f62\u6210\u76f4\u89c2\u7684\u8ba4\u8bc6\uff0c\u8fd9\u6837\u7cfb\u7edf\u7684\u6784\u5efa\u8005\u624d\u80fd\u591f\u5728\u73b0\u5b9e\u4e2d\u8fdb\u884c\u5fc5\u7136\u7684\u6269\u5c55\u3002 \u5728\u8bbe\u8ba1 Raft \u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u6709\u5f88\u591a\u7684\u70b9\u9700\u8981\u6211\u4eec\u5728\u5404\u79cd\u5907\u9009\u65b9\u6848\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8bc4\u4f30\u5907\u9009\u65b9\u6848\u57fa\u4e8e\u53ef\u7406\u89e3\u6027\u539f\u5219\uff1a\u89e3\u91ca\u5404\u4e2a\u5907\u9009\u65b9\u6848\u6709\u591a\u5927\u7684\u96be\u5ea6\uff08\u4f8b\u5982\uff0cRaft \u7684\u72b6\u6001\u7a7a\u95f4\u6709\u591a\u590d\u6742\uff0c\u662f\u5426\u6709\u5fae\u5999\u7684\u6697\u793a\uff09\uff1f\u5bf9\u4e8e\u4e00\u4e2a\u8bfb\u8005\u800c\u8a00\uff0c\u5b8c\u5168\u7406\u89e3\u8fd9\u4e2a\u65b9\u6848\u548c\u6697\u793a\u662f\u5426\u5bb9\u6613\uff1f \u6211\u4eec\u610f\u8bc6\u5230\u5bf9\u8fd9\u79cd\u53ef\u7406\u89e3\u6027\u5206\u6790\u4e0a\u5177\u6709\u9ad8\u5ea6\u7684\u4e3b\u89c2\u6027\uff1b\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u79cd\u901a\u5e38\u9002\u7528\u7684\u6280\u672f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u7b2c\u4e00\u4e2a\u6280\u672f\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684\u95ee\u9898\u5206\u89e3\uff1a\u6211\u4eec\u5c3d\u53ef\u80fd\u5730\u5c06\u95ee\u9898\u5206\u89e3\u6210\u51e0\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\uff0c\u53ef\u88ab\u89e3\u51b3\u7684\u3001\u53ef\u89e3\u91ca\u7684\u548c\u53ef\u7406\u89e3\u7684\u5b50\u95ee\u9898\u3002\u4f8b\u5982\uff0cRaft \u7b97\u6cd5\u88ab\u6211\u4eec\u5206\u6210\u9886\u5bfc\u4eba\u9009\u4e3e\uff0c\u65e5\u5fd7\u590d\u5236\uff0c\u5b89\u5168\u6027\u548c\u6210\u5458\u53d8\u66f4\u51e0\u4e2a\u90e8\u5206\u3002 \u6211\u4eec\u4f7f\u7528\u7684\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u662f\u901a\u8fc7\u51cf\u5c11\u72b6\u6001\u7684\u6570\u91cf\u6765\u7b80\u5316\u9700\u8981\u8003\u8651\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u4f7f\u5f97\u7cfb\u7edf\u66f4\u52a0\u8fde\u8d2f\u5e76\u4e14\u5728\u53ef\u80fd\u7684\u65f6\u5019\u6d88\u9664\u4e0d\u786e\u5b9a\u6027\u3002\u7279\u522b\u7684\uff0c\u6240\u6709\u7684\u65e5\u5fd7\u662f\u4e0d\u5141\u8bb8\u6709\u7a7a\u6d1e\u7684\uff0c\u5e76\u4e14 Raft \u9650\u5236\u4e86\u65e5\u5fd7\u4e4b\u95f4\u53d8\u6210\u4e0d\u4e00\u81f4\u72b6\u6001\u7684\u53ef\u80fd\u3002\u5c3d\u7ba1\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u90fd\u8bd5\u56fe\u6d88\u9664\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u63d0\u5347\u53ef\u7406\u89e3\u6027\u3002\u5c24\u5176\u662f\uff0c\u968f\u673a\u5316\u65b9\u6cd5\u589e\u52a0\u4e86\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46\u662f\u4ed6\u4eec\u6709\u5229\u4e8e\u51cf\u5c11\u72b6\u6001\u7a7a\u95f4\u6570\u91cf\uff0c\u901a\u8fc7\u5904\u7406\u6240\u6709\u53ef\u80fd\u9009\u62e9\u65f6\u4f7f\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u4f7f\u7528\u968f\u673a\u5316\u6765\u7b80\u5316 Raft \u4e2d\u9886\u5bfc\u4eba\u9009\u4e3e\u7b97\u6cd5\u3002 5 Raft \u4e00\u81f4\u6027\u7b97\u6cd5 \u00b6 Raft \u662f\u4e00\u79cd\u7528\u6765\u7ba1\u7406\u7ae0\u8282 2 \u4e2d\u63cf\u8ff0\u7684\u590d\u5236\u65e5\u5fd7\u7684\u7b97\u6cd5\u3002\u56fe 2 \u4e3a\u4e86\u53c2\u8003\u4e4b\u7528\uff0c\u603b\u7ed3\u8fd9\u4e2a\u7b97\u6cd5\u7684\u7b80\u7565\u7248\u672c\uff0c\u56fe 3 \u5217\u4e3e\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4e00\u4e9b\u5173\u952e\u7279\u6027\u3002\u56fe\u4e2d\u7684\u8fd9\u4e9b\u5143\u7d20\u4f1a\u5728\u5269\u4e0b\u7684\u7ae0\u8282\u9010\u4e00\u4ecb\u7ecd\u3002 Raft \u901a\u8fc7\u9009\u4e3e\u4e00\u4e2a\u6770\u51fa\u7684\u9886\u5bfc\u4eba\uff0c\u7136\u540e\u7ed9\u4e88\u4ed6\u5168\u90e8\u7684\u7ba1\u7406\u590d\u5236\u65e5\u5fd7\u7684\u8d23\u4efb\u6765\u5b9e\u73b0\u4e00\u81f4\u6027\u3002\u9886\u5bfc\u4eba\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u65e5\u5fd7\u6761\u76ee\uff08log entries\uff09\uff0c\u628a\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u5176\u4ed6\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u544a\u8bc9\u5176\u4ed6\u7684\u670d\u52a1\u5668\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u5b89\u5168\u5730\u5c06\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u4ed6\u4eec\u7684\u72b6\u6001\u673a\u4e2d\u3002\u62e5\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u5927\u5927\u7b80\u5316\u4e86\u5bf9\u590d\u5236\u65e5\u5fd7\u7684\u7ba1\u7406\u3002\u4f8b\u5982\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u51b3\u5b9a\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u9700\u8981\u653e\u5728\u65e5\u5fd7\u4e2d\u7684\u4ec0\u4e48\u4f4d\u7f6e\u800c\u4e0d\u9700\u8981\u548c\u5176\u4ed6\u670d\u52a1\u5668\u5546\u8bae\uff0c\u5e76\u4e14\u6570\u636e\u90fd\u4ece\u9886\u5bfc\u4eba\u6d41\u5411\u5176\u4ed6\u670d\u52a1\u5668\u3002\u4e00\u4e2a\u9886\u5bfc\u4eba\u53ef\u80fd\u4f1a\u53d1\u751f\u6545\u969c\uff0c\u6216\u8005\u548c\u5176\u4ed6\u670d\u52a1\u5668\u5931\u53bb\u8fde\u63a5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u4f1a\u88ab\u9009\u4e3e\u51fa\u6765\u3002 \u901a\u8fc7\u9886\u5bfc\u4eba\u7684\u65b9\u5f0f\uff0cRaft \u5c06\u4e00\u81f4\u6027\u95ee\u9898\u5206\u89e3\u6210\u4e86\u4e09\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u5b50\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u5b50\u7ae0\u8282\u4e2d\u8fdb\u884c\u8ba8\u8bba\uff1a \u9886\u5bfc\u9009\u4e3e \uff1a\u5f53\u73b0\u5b58\u7684\u9886\u5bfc\u4eba\u53d1\u751f\u6545\u969c\u7684\u65f6\u5019, \u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u9700\u8981\u88ab\u9009\u4e3e\u51fa\u6765\uff08\u7ae0\u8282 5.2\uff09 \u65e5\u5fd7\u590d\u5236 \uff1a\u9886\u5bfc\u4eba\u5fc5\u987b\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u65e5\u5fd7\u6761\u76ee\uff08log entries\uff09\u7136\u540e\u590d\u5236\u5230\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u5e76\u5f3a\u5236\u8981\u6c42\u5176\u4ed6\u8282\u70b9\u7684\u65e5\u5fd7\u548c\u81ea\u5df1\u4fdd\u6301\u4e00\u81f4\u3002 \u5b89\u5168\u6027 \uff1a\u5728 Raft \u4e2d\u5b89\u5168\u6027\u7684\u5173\u952e\u662f\u5728\u56fe 3 \u4e2d\u5c55\u793a\u7684\u72b6\u6001\u673a\u5b89\u5168\uff1a\u5982\u679c\u6709\u4efb\u4f55\u7684\u670d\u52a1\u5668\u8282\u70b9\u5df2\u7ecf\u5e94\u7528\u4e86\u4e00\u4e2a\u786e\u5b9a\u7684\u65e5\u5fd7\u6761\u76ee\u5230\u5b83\u7684\u72b6\u6001\u673a\u4e2d\uff0c\u90a3\u4e48\u5176\u4ed6\u670d\u52a1\u5668\u8282\u70b9\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u65e5\u5fd7\u7d22\u5f15\u4f4d\u7f6e\u5e94\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u6307\u4ee4\u3002\u7ae0\u8282 5.4 \u9610\u8ff0\u4e86 Raft \u7b97\u6cd5\u662f\u5982\u4f55\u4fdd\u8bc1\u8fd9\u4e2a\u7279\u6027\u7684\uff1b\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u6d89\u53ca\u5230\u9009\u4e3e\u673a\u5236\uff085.2 \u8282\uff09\u4e0a\u7684\u4e00\u4e2a\u989d\u5916\u9650\u5236\u3002 \u5728\u5c55\u793a\u4e00\u81f4\u6027\u7b97\u6cd5\u4e4b\u540e\uff0c\u8fd9\u4e00\u7ae0\u8282\u4f1a\u8ba8\u8bba\u4e00\u4e9b\u53ef\u7528\u6027\u7684\u95ee\u9898\u548c\u8ba1\u65f6\u5728\u7cfb\u7edf\u4e2d\u7684\u4f5c\u7528\u3002 \u72b6\u6001 \uff1a \u6240\u6709\u670d\u52a1\u5668\u4e0a\u7684\u6301\u4e45\u6027\u72b6\u6001 (\u5728\u54cd\u5e94 RPC \u8bf7\u6c42\u4e4b\u524d\uff0c\u5df2\u7ecf\u66f4\u65b0\u5230\u4e86\u7a33\u5b9a\u7684\u5b58\u50a8\u8bbe\u5907) | \u53c2\u6570 | \u89e3\u91ca | | --- | --- | | currentTerm | \u670d\u52a1\u5668\u5df2\u77e5\u6700\u65b0\u7684\u4efb\u671f\uff08\u5728\u670d\u52a1\u5668\u9996\u6b21\u542f\u52a8\u65f6\u521d\u59cb\u5316\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| | votedFor | \u5f53\u524d\u4efb\u671f\u5185\u6536\u5230\u9009\u7968\u7684 candidateId\uff0c\u5982\u679c\u6ca1\u6709\u6295\u7ed9\u4efb\u4f55\u5019\u9009\u4eba \u5219\u4e3a\u7a7a| | log[] | \u65e5\u5fd7\u6761\u76ee\uff1b\u6bcf\u4e2a\u6761\u76ee\u5305\u542b\u4e86\u7528\u4e8e\u72b6\u6001\u673a\u7684\u547d\u4ee4\uff0c\u4ee5\u53ca\u9886\u5bfc\u4eba\u63a5\u6536\u5230\u8be5\u6761\u76ee\u65f6\u7684\u4efb\u671f\uff08\u521d\u59cb\u7d22\u5f15\u4e3a1\uff09 | \u6240\u6709\u670d\u52a1\u5668\u4e0a\u7684\u6613\u5931\u6027\u72b6\u6001 | \u53c2\u6570 | \u89e3\u91ca | | --- | --- | | commitIndex | \u5df2\u77e5\u5df2\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| | lastApplied | \u5df2\u7ecf\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| \u9886\u5bfc\u4eba\uff08\u670d\u52a1\u5668\uff09\u4e0a\u7684\u6613\u5931\u6027\u72b6\u6001 (\u9009\u4e3e\u540e\u5df2\u7ecf\u91cd\u65b0\u521d\u59cb\u5316) | \u53c2\u6570 | \u89e3\u91ca | | --- | --- | | nextIndex[] | \u5bf9\u4e8e\u6bcf\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u53d1\u9001\u5230\u8be5\u670d\u52a1\u5668\u7684\u4e0b\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a\u9886\u5bfc\u4eba\u6700\u540e\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15+1\uff09| | matchIndex[] | \u5bf9\u4e8e\u6bcf\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u5df2\u77e5\u7684\u5df2\u7ecf\u590d\u5236\u5230\u8be5\u670d\u52a1\u5668\u7684\u6700\u9ad8\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| \u8ffd\u52a0\u6761\u76ee\uff08AppendEntries\uff09RPC \uff1a \u7531\u9886\u5bfc\u4eba\u8c03\u7528\uff0c\u7528\u4e8e\u65e5\u5fd7\u6761\u76ee\u7684\u590d\u5236\uff0c\u540c\u65f6\u4e5f\u88ab\u5f53\u505a\u5fc3\u8df3\u4f7f\u7528 \u53c2\u6570 \u89e3\u91ca term \u9886\u5bfc\u4eba\u7684\u4efb\u671f leaderId \u9886\u5bfc\u4eba ID \u56e0\u6b64\u8ddf\u968f\u8005\u53ef\u4ee5\u5bf9\u5ba2\u6237\u7aef\u8fdb\u884c\u91cd\u5b9a\u5411\uff08\u8bd1\u8005\u6ce8\uff1a\u8ddf\u968f\u8005\u6839\u636e\u9886\u5bfc\u4eba ID \u628a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u91cd\u5b9a\u5411\u5230\u9886\u5bfc\u4eba\uff0c\u6bd4\u5982\u6709\u65f6\u5ba2\u6237\u7aef\u628a\u8bf7\u6c42\u53d1\u7ed9\u4e86\u8ddf\u968f\u8005\u800c\u4e0d\u662f\u9886\u5bfc\u4eba\uff09 prevLogIndex \u7d27\u90bb\u65b0\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u7684\u90a3\u4e2a\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15 prevLogTerm \u7d27\u90bb\u65b0\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u7684\u90a3\u4e2a\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f entries[] \u9700\u8981\u88ab\u4fdd\u5b58\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u88ab\u5f53\u505a\u5fc3\u8df3\u4f7f\u7528\u65f6\uff0c\u5219\u65e5\u5fd7\u6761\u76ee\u5185\u5bb9\u4e3a\u7a7a\uff1b\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u53ef\u80fd\u4e00\u6b21\u6027\u53d1\u9001\u591a\u4e2a\uff09 leaderCommit \u9886\u5bfc\u4eba\u7684\u5df2\u77e5\u5df2\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15 \u8fd4\u56de\u503c \u89e3\u91ca term \u5f53\u524d\u4efb\u671f\uff0c\u5bf9\u4e8e\u9886\u5bfc\u4eba\u800c\u8a00 \u5b83\u4f1a\u66f4\u65b0\u81ea\u5df1\u7684\u4efb\u671f success \u5982\u679c\u8ddf\u968f\u8005\u6240\u542b\u6709\u7684\u6761\u76ee\u548c prevLogIndex \u4ee5\u53ca prevLogTerm \u5339\u914d\u4e0a\u4e86\uff0c\u5219\u4e3a true \u63a5\u6536\u8005\u7684\u5b9e\u73b0\uff1a \u8fd4\u56de\u5047 \u5982\u679c\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u5c0f\u4e8e\u63a5\u6536\u8005\u7684\u5f53\u524d\u4efb\u671f\uff08\u8bd1\u8005\u6ce8\uff1a\u8fd9\u91cc\u7684\u63a5\u6536\u8005\u662f\u6307\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\uff09\uff085.1 \u8282\uff09 \u8fd4\u56de\u5047 \u5982\u679c\u63a5\u6536\u8005\u65e5\u5fd7\u4e2d\u6ca1\u6709\u5305\u542b\u8fd9\u6837\u4e00\u4e2a\u6761\u76ee \u5373\u8be5\u6761\u76ee\u7684\u4efb\u671f\u5728 prevLogIndex \u4e0a\u80fd\u548c prevLogTerm \u5339\u914d\u4e0a \uff08\u8bd1\u8005\u6ce8\uff1a\u5728\u63a5\u6536\u8005\u65e5\u5fd7\u4e2d \u5982\u679c\u80fd\u627e\u5230\u4e00\u4e2a\u548c prevLogIndex \u4ee5\u53ca prevLogTerm \u4e00\u6837\u7684\u7d22\u5f15\u548c\u4efb\u671f\u7684\u65e5\u5fd7\u6761\u76ee \u5219\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u6b65\u9aa4 \u5426\u5219\u8fd4\u56de\u5047\uff09\uff085.3 \u8282\uff09 \u5982\u679c\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u548c\u65b0\u6761\u76ee\uff08\u8bd1\u8005\u6ce8\uff1a\u5373\u521a\u521a\u63a5\u6536\u5230\u7684\u65e5\u5fd7\u6761\u76ee\uff09\u53d1\u751f\u4e86\u51b2\u7a81\uff08\u56e0\u4e3a\u7d22\u5f15\u76f8\u540c\uff0c\u4efb\u671f\u4e0d\u540c\uff09\uff0c\u90a3\u4e48\u5c31\u5220\u9664\u8fd9\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u4ee5\u53ca\u5b83\u4e4b\u540e\u7684\u6240\u6709\u6761\u76ee \uff085.3 \u8282\uff09 \u8ffd\u52a0\u65e5\u5fd7\u4e2d\u5c1a\u672a\u5b58\u5728\u7684\u4efb\u4f55\u65b0\u6761\u76ee \u5982\u679c\u9886\u5bfc\u4eba\u7684\u5df2\u77e5\u5df2\u63d0\u4ea4\u7684\u6700\u9ad8\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u5927\u4e8e\u63a5\u6536\u8005\u7684\u5df2\u77e5\u5df2\u63d0\u4ea4\u6700\u9ad8\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08 leaderCommit > commitIndex \uff09\uff0c\u5219\u628a\u63a5\u6536\u8005\u7684\u5df2\u77e5\u5df2\u7ecf\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15commitIndex \u91cd\u7f6e\u4e3a \u9886\u5bfc\u4eba\u7684\u5df2\u77e5\u5df2\u7ecf\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15 leaderCommit \u6216\u8005\u662f \u4e0a\u4e00\u4e2a\u65b0\u6761\u76ee\u7684\u7d22\u5f15 \u53d6\u4e24\u8005\u7684\u6700\u5c0f\u503c \u8bf7\u6c42\u6295\u7968\uff08RequestVote\uff09RPC \uff1a \u7531\u5019\u9009\u4eba\u8d1f\u8d23\u8c03\u7528\u7528\u6765\u5f81\u96c6\u9009\u7968\uff085.2 \u8282\uff09 \u53c2\u6570 \u89e3\u91ca term \u5019\u9009\u4eba\u7684\u4efb\u671f\u53f7 candidateId \u8bf7\u6c42\u9009\u7968\u7684\u5019\u9009\u4eba\u7684 ID lastLogIndex \u5019\u9009\u4eba\u7684\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c lastLogTerm \u5019\u9009\u4eba\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f\u53f7 \u8fd4\u56de\u503c \u89e3\u91ca term \u5f53\u524d\u4efb\u671f\u53f7\uff0c\u4ee5\u4fbf\u4e8e\u5019\u9009\u4eba\u53bb\u66f4\u65b0\u81ea\u5df1\u7684\u4efb\u671f\u53f7 voteGranted \u5019\u9009\u4eba\u8d62\u5f97\u4e86\u6b64\u5f20\u9009\u7968\u65f6\u4e3a\u771f \u63a5\u6536\u8005\u5b9e\u73b0\uff1a \u5982\u679c term < currentTerm \u8fd4\u56de false \uff085.2 \u8282\uff09 \u5982\u679c votedFor \u4e3a\u7a7a\u6216\u8005\u4e3a candidateId\uff0c\u5e76\u4e14\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u81ea\u5df1\u4e00\u6837\u65b0\uff0c\u90a3\u4e48\u5c31\u6295\u7968\u7ed9\u4ed6\uff085.2 \u8282\uff0c5.4 \u8282\uff09 \u6240\u6709\u670d\u52a1\u5668\u9700\u9075\u5b88\u7684\u89c4\u5219 \uff1a \u6240\u6709\u670d\u52a1\u5668\uff1a \u5982\u679c commitIndex > lastApplied \uff0c\u5219 lastApplied \u9012\u589e\uff0c\u5e76\u5c06 log[lastApplied] \u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\uff085.3 \u8282\uff09 \u5982\u679c\u63a5\u6536\u5230\u7684 RPC \u8bf7\u6c42\u6216\u54cd\u5e94\u4e2d\uff0c\u4efb\u671f\u53f7 T > currentTerm \uff0c\u5219\u4ee4 currentTerm = T \uff0c\u5e76\u5207\u6362\u4e3a\u8ddf\u968f\u8005\u72b6\u6001\uff085.1 \u8282\uff09 \u8ddf\u968f\u8005\uff085.2 \u8282\uff09\uff1a \u54cd\u5e94\u6765\u81ea\u5019\u9009\u4eba\u548c\u9886\u5bfc\u4eba\u7684\u8bf7\u6c42 \u5982\u679c\u5728\u8d85\u8fc7\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u60c5\u51b5\u4e4b\u524d\u6ca1\u6709\u6536\u5230**\u5f53\u524d\u9886\u5bfc\u4eba**\uff08\u5373\u8be5\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u9700\u4e0e\u8fd9\u4e2a\u8ddf\u968f\u8005\u7684\u5f53\u524d\u4efb\u671f\u76f8\u540c\uff09\u7684\u5fc3\u8df3/\u9644\u52a0\u65e5\u5fd7\uff0c\u6216\u8005\u662f\u7ed9\u67d0\u4e2a\u5019\u9009\u4eba\u6295\u4e86\u7968\uff0c\u5c31\u81ea\u5df1\u53d8\u6210\u5019\u9009\u4eba \u5019\u9009\u4eba\uff085.2 \u8282\uff09\uff1a \u5728\u8f6c\u53d8\u6210\u5019\u9009\u4eba\u540e\u5c31\u7acb\u5373\u5f00\u59cb\u9009\u4e3e\u8fc7\u7a0b \u81ea\u589e\u5f53\u524d\u7684\u4efb\u671f\u53f7\uff08currentTerm\uff09 \u7ed9\u81ea\u5df1\u6295\u7968 \u91cd\u7f6e\u9009\u4e3e\u8d85\u65f6\u8ba1\u65f6\u5668 \u53d1\u9001\u8bf7\u6c42\u6295\u7968\u7684 RPC \u7ed9\u5176\u4ed6\u6240\u6709\u670d\u52a1\u5668 \u5982\u679c\u63a5\u6536\u5230\u5927\u591a\u6570\u670d\u52a1\u5668\u7684\u9009\u7968\uff0c\u90a3\u4e48\u5c31\u53d8\u6210\u9886\u5bfc\u4eba \u5982\u679c\u63a5\u6536\u5230\u6765\u81ea\u65b0\u7684\u9886\u5bfc\u4eba\u7684\u9644\u52a0\u65e5\u5fd7\uff08AppendEntries\uff09RPC\uff0c\u5219\u8f6c\u53d8\u6210\u8ddf\u968f\u8005 \u5982\u679c\u9009\u4e3e\u8fc7\u7a0b\u8d85\u65f6\uff0c\u5219\u518d\u6b21\u53d1\u8d77\u4e00\u8f6e\u9009\u4e3e \u9886\u5bfc\u4eba\uff1a \u4e00\u65e6\u6210\u4e3a\u9886\u5bfc\u4eba\uff1a\u53d1\u9001\u7a7a\u7684\u9644\u52a0\u65e5\u5fd7\uff08AppendEntries\uff09RPC\uff08\u5fc3\u8df3\uff09\u7ed9\u5176\u4ed6\u6240\u6709\u7684\u670d\u52a1\u5668\uff1b\u5728\u4e00\u5b9a\u7684\u7a7a\u4f59\u65f6\u95f4\u4e4b\u540e\u4e0d\u505c\u7684\u91cd\u590d\u53d1\u9001\uff0c\u4ee5\u9632\u6b62\u8ddf\u968f\u8005\u8d85\u65f6\uff085.2 \u8282\uff09 \u5982\u679c\u63a5\u6536\u5230\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff1a\u9644\u52a0\u6761\u76ee\u5230\u672c\u5730\u65e5\u5fd7\u4e2d\uff0c\u5728\u6761\u76ee\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u540e\u54cd\u5e94\u5ba2\u6237\u7aef\uff085.3 \u8282\uff09 \u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u8ddf\u968f\u8005\uff0c\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u5927\u4e8e\u7b49\u4e8e nextIndex\uff08 lastLogIndex \u2265 nextIndex \uff09\uff0c\u5219\u53d1\u9001\u4ece nextIndex \u5f00\u59cb\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff1a \u5982\u679c\u6210\u529f\uff1a\u66f4\u65b0\u76f8\u5e94\u8ddf\u968f\u8005\u7684 nextIndex \u548c matchIndex \u5982\u679c\u56e0\u4e3a\u65e5\u5fd7\u4e0d\u4e00\u81f4\u800c\u5931\u8d25\uff0c\u5219 nextIndex \u9012\u51cf\u5e76\u91cd\u8bd5 \u5047\u8bbe\u5b58\u5728 N \u6ee1\u8db3 N > commitIndex \uff0c\u4f7f\u5f97\u5927\u591a\u6570\u7684 matchIndex[i] \u2265 N \u4ee5\u53ca log[N].term == currentTerm \u6210\u7acb\uff0c\u5219\u4ee4 commitIndex = N \uff085.3 \u548c 5.4 \u8282\uff09 \u56fe 2\uff1a\u4e00\u4e2a\u5173\u4e8e Raft \u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u6d53\u7f29\u603b\u7ed3\uff08\u4e0d\u5305\u62ec\u6210\u5458\u53d8\u6362\u548c\u65e5\u5fd7\u538b\u7f29\uff09\u3002 \u7279\u6027 \u89e3\u91ca \u9009\u4e3e\u5b89\u5168\u7279\u6027 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4efb\u671f\u53f7\uff0c\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff085.2 \u8282\uff09 \u9886\u5bfc\u4eba\u53ea\u9644\u52a0\u539f\u5219 \u9886\u5bfc\u4eba\u7edd\u5bf9\u4e0d\u4f1a\u5220\u9664\u6216\u8005\u8986\u76d6\u81ea\u5df1\u7684\u65e5\u5fd7\uff0c\u53ea\u4f1a\u589e\u52a0\uff085.3 \u8282\uff09 \u65e5\u5fd7\u5339\u914d\u539f\u5219 \u5982\u679c\u4e24\u4e2a\u65e5\u5fd7\u5728\u67d0\u4e00\u76f8\u540c\u7d22\u5f15\u4f4d\u7f6e\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u65e5\u5fd7\u4ece\u5934\u5230\u8be5\u7d22\u5f15\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5185\u5bb9\u5b8c\u5168\u4e00\u81f4\uff085.3 \u8282\uff09 \u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027 \u5982\u679c\u67d0\u4e2a\u65e5\u5fd7\u6761\u76ee\u5728\u67d0\u4e2a\u4efb\u671f\u53f7\u4e2d\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6761\u76ee\u5fc5\u7136\u51fa\u73b0\u5728\u66f4\u5927\u4efb\u671f\u53f7\u7684\u6240\u6709\u9886\u5bfc\u4eba\u4e2d\uff085.4 \u8282\uff09 \u72b6\u6001\u673a\u5b89\u5168\u7279\u6027 \u5982\u679c\u67d0\u4e00\u670d\u52a1\u5668\u5df2\u5c06\u7ed9\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u81f3\u5176\u72b6\u6001\u673a\u4e2d\uff0c\u5219\u5176\u4ed6\u4efb\u4f55\u670d\u52a1\u5668\u5728\u8be5\u7d22\u5f15\u4f4d\u7f6e\u4e0d\u4f1a\u5e94\u7528\u4e0d\u540c\u7684\u65e5\u5fd7\u6761\u76ee\uff085.4.3 \u8282\uff09 \u56fe 3\uff1aRaft \u5728\u4efb\u4f55\u65f6\u5019\u90fd\u4fdd\u8bc1\u4ee5\u4e0a\u7684\u5404\u4e2a\u7279\u6027\u3002 5.1 Raft \u57fa\u7840 \u00b6 \u4e00\u4e2a Raft \u96c6\u7fa4\u5305\u542b\u82e5\u5e72\u4e2a\u670d\u52a1\u5668\u8282\u70b9\uff1b5 \u4e2a\u670d\u52a1\u5668\u8282\u70b9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u8fd9\u5141\u8bb8\u6574\u4e2a\u7cfb\u7edf\u5bb9\u5fcd 2 \u4e2a\u8282\u70b9\u5931\u6548\u3002\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u90fd\u5904\u4e8e\u8fd9\u4e09\u4e2a\u72b6\u6001\u4e4b\u4e00\uff1a\u9886\u5bfc\u4eba\u3001\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u5e76\u4e14\u5176\u4ed6\u7684\u8282\u70b9\u5168\u90e8\u90fd\u662f\u8ddf\u968f\u8005\u3002\u8ddf\u968f\u8005\u90fd\u662f\u88ab\u52a8\u7684\uff1a\u4ed6\u4eec\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8bf7\u6c42\uff0c\u53ea\u662f\u7b80\u5355\u7684\u54cd\u5e94\u6765\u81ea\u9886\u5bfc\u4eba\u6216\u8005\u5019\u9009\u4eba\u7684\u8bf7\u6c42\u3002\u9886\u5bfc\u4eba\u5904\u7406\u6240\u6709\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\uff08\u5982\u679c\u4e00\u4e2a\u5ba2\u6237\u7aef\u548c\u8ddf\u968f\u8005\u8054\u7cfb\uff0c\u90a3\u4e48\u8ddf\u968f\u8005\u4f1a\u628a\u8bf7\u6c42\u91cd\u5b9a\u5411\u7ed9\u9886\u5bfc\u4eba\uff09\u3002\u7b2c\u4e09\u79cd\u72b6\u6001\uff0c\u5019\u9009\u4eba\uff0c\u662f\u7528\u6765\u5728 5.2 \u8282\u63cf\u8ff0\u7684\u9009\u4e3e\u65b0\u9886\u5bfc\u4eba\u65f6\u4f7f\u7528\u3002\u56fe 4 \u5c55\u793a\u4e86\u8fd9\u4e9b\u72b6\u6001\u548c\u4ed6\u4eec\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\uff1b\u8fd9\u4e9b\u8f6c\u6362\u5173\u7cfb\u4f1a\u5728\u63a5\u4e0b\u6765\u8fdb\u884c\u8ba8\u8bba\u3002 \u56fe 4\uff1a\u670d\u52a1\u5668\u72b6\u6001\u3002\u8ddf\u968f\u8005\u53ea\u54cd\u5e94\u6765\u81ea\u5176\u4ed6\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u3002\u5982\u679c\u8ddf\u968f\u8005\u63a5\u6536\u4e0d\u5230\u6d88\u606f\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u53d8\u6210\u5019\u9009\u4eba\u5e76\u53d1\u8d77\u4e00\u6b21\u9009\u4e3e\u3002\u83b7\u5f97\u96c6\u7fa4\u4e2d\u5927\u591a\u6570\u9009\u7968\u7684\u5019\u9009\u4eba\u5c06\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u5728\u4e00\u4e2a\u4efb\u671f\u5185\uff0c\u9886\u5bfc\u4eba\u4e00\u76f4\u90fd\u4f1a\u662f\u9886\u5bfc\u4eba\uff0c\u76f4\u5230\u81ea\u5df1\u5b95\u673a\u4e86\u3002 \u56fe 5\uff1a\u65f6\u95f4\u88ab\u5212\u5206\u6210\u4e00\u4e2a\u4e2a\u7684\u4efb\u671f\uff0c\u6bcf\u4e2a\u4efb\u671f\u59cb\u4e8e\u4e00\u6b21\u9009\u4e3e\u3002\u5728\u9009\u4e3e\u6210\u529f\u540e\uff0c\u9886\u5bfc\u4eba\u4f1a\u7ba1\u7406\u6574\u4e2a\u96c6\u7fa4\u76f4\u5230\u4efb\u671f\u7ed3\u675f\u3002\u6709\u65f6\u5019\u9009\u4e3e\u4f1a\u5931\u8d25\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4efb\u671f\u5c31\u4f1a\u6ca1\u6709\u9886\u5bfc\u4eba\u800c\u7ed3\u675f\u3002\u4efb\u671f\u4e4b\u95f4\u7684\u5207\u6362\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0a\u89c2\u5bdf\u5230\u3002 Raft \u628a\u65f6\u95f4\u5206\u5272\u6210\u4efb\u610f\u957f\u5ea6\u7684**\u4efb\u671f**\uff0c\u5982\u56fe 5\u3002\u4efb\u671f\u7528\u8fde\u7eed\u7684\u6574\u6570\u6807\u8bb0\u3002\u6bcf\u4e00\u6bb5\u4efb\u671f\u4ece\u4e00\u6b21**\u9009\u4e3e**\u5f00\u59cb\uff0c\u5c31\u50cf\u7ae0\u8282 5.2 \u63cf\u8ff0\u7684\u4e00\u6837\uff0c\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5019\u9009\u4eba\u5c1d\u8bd5\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u7136\u540e\u4ed6\u5c31\u5728\u63a5\u4e0b\u6765\u7684\u4efb\u671f\u5185\u5145\u5f53\u9886\u5bfc\u4eba\u7684\u804c\u8d23\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u6b21\u9009\u4e3e\u8fc7\u7a0b\u4f1a\u9020\u6210\u9009\u7968\u7684\u74dc\u5206\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e00\u4efb\u671f\u4f1a\u4ee5\u6ca1\u6709\u9886\u5bfc\u4eba\u7ed3\u675f\uff1b\u4e00\u4e2a\u65b0\u7684\u4efb\u671f\uff08\u548c\u4e00\u6b21\u65b0\u7684\u9009\u4e3e\uff09\u4f1a\u5f88\u5feb\u91cd\u65b0\u5f00\u59cb\u3002Raft \u4fdd\u8bc1\u4e86\u5728\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4efb\u671f\u5185\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u3002 \u4e0d\u540c\u7684\u670d\u52a1\u5668\u8282\u70b9\u53ef\u80fd\u591a\u6b21\u89c2\u5bdf\u5230\u4efb\u671f\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u80fd\u89c2\u5bdf\u4e0d\u5230\u4efb\u4f55\u4e00\u6b21\u9009\u4e3e\u6216\u8005\u6574\u4e2a\u4efb\u671f\u5168\u7a0b\u3002\u4efb\u671f\u5728 Raft \u7b97\u6cd5\u4e2d\u5145\u5f53\u903b\u8f91\u65f6\u949f\u7684\u4f5c\u7528\uff0c\u4efb\u671f\u4f7f\u5f97\u670d\u52a1\u5668\u53ef\u4ee5\u68c0\u6d4b\u4e00\u4e9b\u8fc7\u671f\u7684\u4fe1\u606f\uff1a\u6bd4\u5982\u8fc7\u671f\u7684\u9886\u5bfc\u4eba\u3002\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u4e00\u4e2a\u5f53\u524d\u4efb\u671f\u53f7\uff0c\u8fd9\u4e00\u7f16\u53f7\u5728\u6574\u4e2a\u65f6\u671f\u5185\u5355\u8c03\u9012\u589e\u3002\u6bcf\u5f53\u670d\u52a1\u5668\u4e4b\u95f4\u901a\u4fe1\u7684\u65f6\u5019\u90fd\u4f1a\u4ea4\u6362\u5f53\u524d\u4efb\u671f\u53f7\uff1b\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u5f53\u524d\u4efb\u671f\u53f7\u6bd4\u5176\u4ed6\u4eba\u5c0f\uff0c\u90a3\u4e48\u4ed6\u4f1a\u66f4\u65b0\u81ea\u5df1\u7684\u7f16\u53f7\u5230\u8f83\u5927\u7684\u7f16\u53f7\u503c\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u6216\u8005\u9886\u5bfc\u4eba\u53d1\u73b0\u81ea\u5df1\u7684\u4efb\u671f\u53f7\u8fc7\u671f\u4e86\uff0c\u90a3\u4e48\u4ed6\u4f1a\u7acb\u5373\u6062\u590d\u6210\u8ddf\u968f\u8005\u72b6\u6001\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u63a5\u6536\u5230\u4e00\u4e2a\u5305\u542b\u8fc7\u671f\u7684\u4efb\u671f\u53f7\u7684\u8bf7\u6c42\uff0c\u90a3\u4e48\u4ed6\u4f1a\u76f4\u63a5\u62d2\u7edd\u8fd9\u4e2a\u8bf7\u6c42\u3002 Raft \u7b97\u6cd5\u4e2d\u670d\u52a1\u5668\u8282\u70b9\u4e4b\u95f4\u901a\u4fe1\u4f7f\u7528\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff08RPCs\uff09\uff0c\u5e76\u4e14\u57fa\u672c\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u53ea\u9700\u8981\u4e24\u79cd\u7c7b\u578b\u7684 RPCs\u3002\u8bf7\u6c42\u6295\u7968\uff08RequestVote\uff09 RPCs \u7531\u5019\u9009\u4eba\u5728\u9009\u4e3e\u671f\u95f4\u53d1\u8d77\uff08\u7ae0\u8282 5.2\uff09\uff0c\u7136\u540e\u9644\u52a0\u6761\u76ee\uff08AppendEntries\uff09RPCs \u7531\u9886\u5bfc\u4eba\u53d1\u8d77\uff0c\u7528\u6765\u590d\u5236\u65e5\u5fd7\u548c\u63d0\u4f9b\u4e00\u79cd\u5fc3\u8df3\u673a\u5236\uff08\u7ae0\u8282 5.3\uff09\u3002\u7b2c 7 \u8282\u4e3a\u4e86\u5728\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u5feb\u7167\u589e\u52a0\u4e86\u7b2c\u4e09\u79cd RPC\u3002\u5f53\u670d\u52a1\u5668\u6ca1\u6709\u53ca\u65f6\u7684\u6536\u5230 RPC \u7684\u54cd\u5e94\u65f6\uff0c\u4f1a\u8fdb\u884c\u91cd\u8bd5\uff0c \u5e76\u4e14\u4ed6\u4eec\u80fd\u591f\u5e76\u884c\u7684\u53d1\u8d77 RPCs \u6765\u83b7\u5f97\u6700\u4f73\u7684\u6027\u80fd\u3002 5.2 \u9886\u5bfc\u4eba\u9009\u4e3e \u00b6 Raft \u4f7f\u7528\u4e00\u79cd\u5fc3\u8df3\u673a\u5236\u6765\u89e6\u53d1\u9886\u5bfc\u4eba\u9009\u4e3e\u3002\u5f53\u670d\u52a1\u5668\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u4ed6\u4eec\u90fd\u662f\u8ddf\u968f\u8005\u8eab\u4efd\u3002\u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u7ee7\u7eed\u4fdd\u6301\u7740\u8ddf\u968f\u8005\u72b6\u6001\u53ea\u8981\u4ed6\u4ece\u9886\u5bfc\u4eba\u6216\u8005\u5019\u9009\u4eba\u5904\u63a5\u6536\u5230\u6709\u6548\u7684 RPCs\u3002\u9886\u5bfc\u4eba\u5468\u671f\u6027\u7684\u5411\u6240\u6709\u8ddf\u968f\u8005\u53d1\u9001\u5fc3\u8df3\u5305\uff08\u5373\u4e0d\u5305\u542b\u65e5\u5fd7\u9879\u5185\u5bb9\u7684\u9644\u52a0\u6761\u76ee\uff08AppendEntries\uff09 RPCs\uff09\u6765\u7ef4\u6301\u81ea\u5df1\u7684\u6743\u5a01\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u5728\u4e00\u6bb5\u65f6\u95f4\u91cc\u6ca1\u6709\u63a5\u6536\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u4e5f\u5c31\u662f**\u9009\u4e3e\u8d85\u65f6**\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u8ba4\u4e3a\u7cfb\u7edf\u4e2d\u6ca1\u6709\u53ef\u7528\u7684\u9886\u5bfc\u4eba,\u5e76\u4e14\u53d1\u8d77\u9009\u4e3e\u4ee5\u9009\u51fa\u65b0\u7684\u9886\u5bfc\u4eba\u3002 \u8981\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u8fc7\u7a0b\uff0c\u8ddf\u968f\u8005\u5148\u8981\u589e\u52a0\u81ea\u5df1\u7684\u5f53\u524d\u4efb\u671f\u53f7\u5e76\u4e14\u8f6c\u6362\u5230\u5019\u9009\u4eba\u72b6\u6001\u3002\u7136\u540e\u4ed6\u4f1a\u5e76\u884c\u5730\u5411\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u8282\u70b9\u53d1\u9001\u8bf7\u6c42\u6295\u7968\u7684 RPCs \u6765\u7ed9\u81ea\u5df1\u6295\u7968\u3002\u5019\u9009\u4eba\u4f1a\u7ee7\u7eed\u4fdd\u6301\u7740\u5f53\u524d\u72b6\u6001\u76f4\u5230\u4ee5\u4e0b\u4e09\u4ef6\u4e8b\u60c5\u4e4b\u4e00\u53d1\u751f\uff1a(a) \u4ed6\u81ea\u5df1\u8d62\u5f97\u4e86\u8fd9\u6b21\u7684\u9009\u4e3e\uff0c(b) \u5176\u4ed6\u7684\u670d\u52a1\u5668\u6210\u4e3a\u9886\u5bfc\u4eba\uff0c\u00a9 \u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u83b7\u80dc\u7684\u4eba\u3002\u8fd9\u4e9b\u7ed3\u679c\u4f1a\u5206\u522b\u7684\u5728\u4e0b\u9762\u7684\u6bb5\u843d\u91cc\u8fdb\u884c\u8ba8\u8bba\u3002 \u5f53\u4e00\u4e2a\u5019\u9009\u4eba\u4ece\u6574\u4e2a\u96c6\u7fa4\u7684\u5927\u591a\u6570\u670d\u52a1\u5668\u8282\u70b9\u83b7\u5f97\u4e86\u9488\u5bf9\u540c\u4e00\u4e2a\u4efb\u671f\u53f7\u7684\u9009\u7968\uff0c\u90a3\u4e48\u4ed6\u5c31\u8d62\u5f97\u4e86\u8fd9\u6b21\u9009\u4e3e\u5e76\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u4f1a\u5bf9\u4e00\u4e2a\u4efb\u671f\u53f7\u6295\u51fa\u4e00\u5f20\u9009\u7968\uff0c\u6309\u7167\u5148\u6765\u5148\u670d\u52a1\u7684\u539f\u5219\uff08\u6ce8\u610f\uff1a5.4 \u8282\u5728\u6295\u7968\u4e0a\u589e\u52a0\u4e86\u4e00\u70b9\u989d\u5916\u7684\u9650\u5236\uff09\u3002\u8981\u6c42\u5927\u591a\u6570\u9009\u7968\u7684\u89c4\u5219\u786e\u4fdd\u4e86\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u6b64\u6b21\u9009\u4e3e\uff08\u56fe 3 \u4e2d\u7684\u9009\u4e3e\u5b89\u5168\u6027\uff09\u3002\u4e00\u65e6\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u4ed6\u5c31\u7acb\u5373\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u7136\u540e\u4ed6\u4f1a\u5411\u5176\u4ed6\u7684\u670d\u52a1\u5668\u53d1\u9001\u5fc3\u8df3\u6d88\u606f\u6765\u5efa\u7acb\u81ea\u5df1\u7684\u6743\u5a01\u5e76\u4e14\u963b\u6b62\u53d1\u8d77\u65b0\u7684\u9009\u4e3e\u3002 \u5728\u7b49\u5f85\u6295\u7968\u7684\u65f6\u5019\uff0c\u5019\u9009\u4eba\u53ef\u80fd\u4f1a\u4ece\u5176\u4ed6\u7684\u670d\u52a1\u5668\u63a5\u6536\u5230\u58f0\u660e\u5b83\u662f\u9886\u5bfc\u4eba\u7684\u9644\u52a0\u6761\u76ee\uff08AppendEntries\uff09RPC\u3002\u5982\u679c\u8fd9\u4e2a\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u53f7\uff08\u5305\u542b\u5728\u6b64\u6b21\u7684 RPC\u4e2d\uff09\u4e0d\u5c0f\u4e8e\u5019\u9009\u4eba\u5f53\u524d\u7684\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u4f1a\u627f\u8ba4\u9886\u5bfc\u4eba\u5408\u6cd5\u5e76\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\u3002 \u5982\u679c\u6b64\u6b21 RPC \u4e2d\u7684\u4efb\u671f\u53f7\u6bd4\u81ea\u5df1\u5c0f\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u5c31\u4f1a\u62d2\u7edd\u8fd9\u6b21\u7684 RPC \u5e76\u4e14\u7ee7\u7eed\u4fdd\u6301\u5019\u9009\u4eba\u72b6\u6001\u3002 \u7b2c\u4e09\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\u662f\u5019\u9009\u4eba\u65e2\u6ca1\u6709\u8d62\u5f97\u9009\u4e3e\u4e5f\u6ca1\u6709\u8f93\uff1a\u5982\u679c\u6709\u591a\u4e2a\u8ddf\u968f\u8005\u540c\u65f6\u6210\u4e3a\u5019\u9009\u4eba\uff0c\u90a3\u4e48\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u74dc\u5206\u4ee5\u81f3\u4e8e\u6ca1\u6709\u5019\u9009\u4eba\u53ef\u4ee5\u8d62\u5f97\u5927\u591a\u6570\u4eba\u7684\u652f\u6301\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u4f1a\u8d85\u65f6\uff0c\u7136\u540e\u901a\u8fc7\u589e\u52a0\u5f53\u524d\u4efb\u671f\u53f7\u6765\u5f00\u59cb\u4e00\u8f6e\u65b0\u7684\u9009\u4e3e\u3002\u7136\u800c\uff0c\u6ca1\u6709\u5176\u4ed6\u673a\u5236\u7684\u8bdd\uff0c\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u65e0\u9650\u7684\u91cd\u590d\u74dc\u5206\u3002 Raft \u7b97\u6cd5\u4f7f\u7528\u968f\u673a\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\u6765\u786e\u4fdd\u5f88\u5c11\u4f1a\u53d1\u751f\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\uff0c\u5c31\u7b97\u53d1\u751f\u4e5f\u80fd\u5f88\u5feb\u7684\u89e3\u51b3\u3002\u4e3a\u4e86\u963b\u6b62\u9009\u7968\u8d77\u521d\u5c31\u88ab\u74dc\u5206\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u4ece\u4e00\u4e2a\u56fa\u5b9a\u7684\u533a\u95f4\uff08\u4f8b\u5982 150-300 \u6beb\u79d2\uff09\u968f\u673a\u9009\u62e9\u3002\u8fd9\u6837\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u90fd\u5206\u6563\u5f00\u4ee5\u81f3\u4e8e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u6709\u4e00\u4e2a\u670d\u52a1\u5668\u4f1a\u9009\u4e3e\u8d85\u65f6\uff1b\u7136\u540e\u4ed6\u8d62\u5f97\u9009\u4e3e\u5e76\u5728\u5176\u4ed6\u670d\u52a1\u5668\u8d85\u65f6\u4e4b\u524d\u53d1\u9001\u5fc3\u8df3\u5305\u3002\u540c\u6837\u7684\u673a\u5236\u88ab\u7528\u5728\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u4e0b\u3002\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u5728\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u7684\u65f6\u5019\u4f1a\u91cd\u7f6e\u4e00\u4e2a\u968f\u673a\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff0c\u7136\u540e\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u7b49\u5f85\u6295\u7968\u7684\u7ed3\u679c\uff1b\u8fd9\u6837\u51cf\u5c11\u4e86\u5728\u65b0\u7684\u9009\u4e3e\u4e2d\u53e6\u5916\u7684\u9009\u7968\u74dc\u5206\u7684\u53ef\u80fd\u6027\u30029.3 \u8282\u5c55\u793a\u4e86\u8fd9\u79cd\u65b9\u6848\u80fd\u591f\u5feb\u901f\u7684\u9009\u51fa\u4e00\u4e2a\u9886\u5bfc\u4eba\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4f53\u73b0\u4e86\u53ef\u7406\u89e3\u6027\u539f\u5219\u662f\u5982\u4f55\u6307\u5bfc\u6211\u4eec\u8fdb\u884c\u65b9\u6848\u8bbe\u8ba1\u7684\u3002\u8d77\u521d\u6211\u4eec\u8ba1\u5212\u4f7f\u7528\u4e00\u79cd\u6392\u540d\u7cfb\u7edf\uff1a\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u88ab\u8d4b\u4e88\u4e00\u4e2a\u552f\u4e00\u7684\u6392\u540d\uff0c\u4f9b\u5019\u9009\u4eba\u4e4b\u95f4\u7ade\u4e89\u65f6\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u53d1\u73b0\u53e6\u4e00\u4e2a\u5019\u9009\u4eba\u62e5\u6709\u66f4\u9ad8\u7684\u6392\u540d\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\uff0c\u8fd9\u6837\u9ad8\u6392\u540d\u7684\u5019\u9009\u4eba\u80fd\u591f\u66f4\u52a0\u5bb9\u6613\u7684\u8d62\u5f97\u4e0b\u4e00\u6b21\u9009\u4e3e\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u5728\u53ef\u7528\u6027\u65b9\u9762\u4f1a\u6709\u4e00\u70b9\u95ee\u9898\uff08\u5982\u679c\u9ad8\u6392\u540d\u7684\u670d\u52a1\u5668\u5b95\u673a\u4e86\uff0c\u90a3\u4e48\u4f4e\u6392\u540d\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u8d85\u65f6\u5e76\u518d\u6b21\u8fdb\u5165\u5019\u9009\u4eba\u72b6\u6001\u3002\u800c\u4e14\u5982\u679c\u8fd9\u4e2a\u884c\u4e3a\u53d1\u751f\u5f97\u8db3\u591f\u5feb\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u9009\u4e3e\u8fc7\u7a0b\u90fd\u88ab\u91cd\u7f6e\u6389\uff09\u3002\u6211\u4eec\u9488\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u591a\u6b21\u8c03\u6574\uff0c\u4f46\u662f\u6bcf\u6b21\u8c03\u6574\u4e4b\u540e\u90fd\u4f1a\u6709\u65b0\u7684\u95ee\u9898\u3002\u6700\u7ec8\u6211\u4eec\u8ba4\u4e3a\u968f\u673a\u91cd\u8bd5\u7684\u65b9\u6cd5\u662f\u66f4\u52a0\u660e\u663e\u548c\u6613\u4e8e\u7406\u89e3\u7684\u3002 5.3 \u65e5\u5fd7\u590d\u5236 \u00b6 \u4e00\u65e6\u4e00\u4e2a\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff0c\u4ed6\u5c31\u5f00\u59cb\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\u3002\u5ba2\u6237\u7aef\u7684\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u5305\u542b\u4e00\u6761\u88ab\u590d\u5236\u72b6\u6001\u673a\u6267\u884c\u7684\u6307\u4ee4\u3002\u9886\u5bfc\u4eba\u628a\u8fd9\u6761\u6307\u4ee4\u4f5c\u4e3a\u4e00\u6761\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u9644\u52a0\u5230\u65e5\u5fd7\u4e2d\u53bb\uff0c\u7136\u540e\u5e76\u884c\u5730\u53d1\u8d77\u9644\u52a0\u6761\u76ee RPCs \u7ed9\u5176\u4ed6\u7684\u670d\u52a1\u5668\uff0c\u8ba9\u4ed6\u4eec\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u3002\u5f53\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u88ab\u5b89\u5168\u5730\u590d\u5236\uff08\u4e0b\u9762\u4f1a\u4ecb\u7ecd\uff09\uff0c\u9886\u5bfc\u4eba\u4f1a\u5e94\u7528\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u5230\u5b83\u7684\u72b6\u6001\u673a\u4e2d\u7136\u540e\u628a\u6267\u884c\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u5982\u679c\u8ddf\u968f\u8005\u5d29\u6e83\u6216\u8005\u8fd0\u884c\u7f13\u6162\uff0c\u518d\u6216\u8005\u7f51\u7edc\u4e22\u5305\uff0c\u9886\u5bfc\u4eba\u4f1a\u4e0d\u65ad\u7684\u91cd\u590d\u5c1d\u8bd5\u9644\u52a0\u65e5\u5fd7\u6761\u76ee RPCs \uff08\u5c3d\u7ba1\u5df2\u7ecf\u56de\u590d\u4e86\u5ba2\u6237\u7aef\uff09\u76f4\u5230\u6240\u6709\u7684\u8ddf\u968f\u8005\u90fd\u6700\u7ec8\u5b58\u50a8\u4e86\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u56fe 6\uff1a\u65e5\u5fd7\u7531\u6709\u5e8f\u5e8f\u53f7\u6807\u8bb0\u7684\u6761\u76ee\u7ec4\u6210\u3002\u6bcf\u4e2a\u6761\u76ee\u90fd\u5305\u542b\u521b\u5efa\u65f6\u7684\u4efb\u671f\u53f7\uff08\u56fe\u4e2d\u6846\u4e2d\u7684\u6570\u5b57\uff09\uff0c\u548c\u4e00\u4e2a\u72b6\u6001\u673a\u9700\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002\u4e00\u4e2a\u6761\u76ee\u5f53\u53ef\u4ee5\u5b89\u5168\u5730\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u53bb\u7684\u65f6\u5019\uff0c\u5c31\u8ba4\u4e3a\u662f\u53ef\u4ee5\u63d0\u4ea4\u4e86\u3002 \u65e5\u5fd7\u4ee5\u56fe 6 \u5c55\u793a\u7684\u65b9\u5f0f\u7ec4\u7ec7\u3002\u6bcf\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u5b58\u50a8\u4e00\u6761\u72b6\u6001\u673a\u6307\u4ee4\u548c\u4ece\u9886\u5bfc\u4eba\u6536\u5230\u8fd9\u6761\u6307\u4ee4\u65f6\u7684\u4efb\u671f\u53f7\u3002\u65e5\u5fd7\u4e2d\u7684\u4efb\u671f\u53f7\u7528\u6765\u68c0\u67e5\u662f\u5426\u51fa\u73b0\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u4e5f\u7528\u6765\u4fdd\u8bc1\u56fe 3 \u4e2d\u7684\u67d0\u4e9b\u6027\u8d28\u3002\u6bcf\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u540c\u65f6\u4e5f\u90fd\u6709\u4e00\u4e2a\u6574\u6570\u7d22\u5f15\u503c\u6765\u8868\u660e\u5b83\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u3002 \u9886\u5bfc\u4eba\u6765\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u628a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u662f\u5b89\u5168\u7684\uff1b\u8fd9\u79cd\u65e5\u5fd7\u6761\u76ee\u88ab\u79f0\u4e3a**\u5df2\u63d0\u4ea4**\u3002Raft \u7b97\u6cd5\u4fdd\u8bc1\u6240\u6709\u5df2\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u90fd\u662f\u6301\u4e45\u5316\u7684\u5e76\u4e14\u6700\u7ec8\u4f1a\u88ab\u6240\u6709\u53ef\u7528\u7684\u72b6\u6001\u673a\u6267\u884c\u3002\u5728\u9886\u5bfc\u4eba\u5c06\u521b\u5efa\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\u5728\u56fe 6 \u4e2d\u7684\u6761\u76ee 7\uff09\u3002\u540c\u65f6\uff0c\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u4e2d\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u63d0\u4ea4\uff0c\u5305\u62ec\u7531\u5176\u4ed6\u9886\u5bfc\u4eba\u521b\u5efa\u7684\u6761\u76ee\u30025.4 \u8282\u4f1a\u8ba8\u8bba\u67d0\u4e9b\u5f53\u5728\u9886\u5bfc\u4eba\u6539\u53d8\u4e4b\u540e\u5e94\u7528\u8fd9\u6761\u89c4\u5219\u7684\u9690\u6666\u5185\u5bb9\uff0c\u540c\u65f6\u4ed6\u4e5f\u5c55\u793a\u4e86\u8fd9\u79cd\u63d0\u4ea4\u7684\u5b9a\u4e49\u662f\u5b89\u5168\u7684\u3002\u9886\u5bfc\u4eba\u8ddf\u8e2a\u4e86\u6700\u5927\u7684\u5c06\u4f1a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u9879\u7684\u7d22\u5f15\uff0c\u5e76\u4e14\u7d22\u5f15\u503c\u4f1a\u88ab\u5305\u542b\u5728\u672a\u6765\u7684\u6240\u6709\u9644\u52a0\u65e5\u5fd7 RPCs \uff08\u5305\u62ec\u5fc3\u8df3\u5305\uff09\uff0c\u8fd9\u6837\u5176\u4ed6\u7684\u670d\u52a1\u5668\u624d\u80fd\u6700\u7ec8\u77e5\u9053\u9886\u5bfc\u4eba\u7684\u63d0\u4ea4\u4f4d\u7f6e\u3002\u4e00\u65e6\u8ddf\u968f\u8005\u77e5\u9053\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u4ed6\u4e5f\u4f1a\u5c06\u8fd9\u4e2a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u672c\u5730\u7684\u72b6\u6001\u673a\u4e2d\uff08\u6309\u7167\u65e5\u5fd7\u7684\u987a\u5e8f\uff09\u3002 \u6211\u4eec\u8bbe\u8ba1\u4e86 Raft \u7684\u65e5\u5fd7\u673a\u5236\u6765\u7ef4\u62a4\u4e0d\u540c\u670d\u52a1\u5668\u65e5\u5fd7\u4e4b\u95f4\u7684\u9ad8\u5c42\u6b21\u7684\u4e00\u81f4\u6027\u3002\u8fd9\u4e48\u505a\u4e0d\u4ec5\u7b80\u5316\u4e86\u7cfb\u7edf\u7684\u884c\u4e3a\u4e5f\u4f7f\u5176\u66f4\u5177\u6709\u53ef\u9884\u6d4b\u6027\uff0c\u540c\u65f6\u5b83\u4e5f\u662f\u5b89\u5168\u6027\u4fdd\u8bc1\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u4ef6\u3002Raft \u7ef4\u62a4\u7740\u4ee5\u4e0b\u7684\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u5171\u540c\u7ec4\u6210\u4e86\u56fe 3 \u4e2d\u7684**\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff08Log Matching Property\uff09**\uff1a \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u5b58\u50a8\u4e86\u76f8\u540c\u7684\u6307\u4ee4\u3002 \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u5168\u90e8\u76f8\u540c\u3002 \u7b2c\u4e00\u4e2a\u7279\u6027\u6765\u81ea\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u9886\u5bfc\u4eba\u6700\u591a\u5728\u4e00\u4e2a\u4efb\u671f\u91cc\u5728\u6307\u5b9a\u7684\u4e00\u4e2a\u65e5\u5fd7\u7d22\u5f15\u4f4d\u7f6e\u521b\u5efa\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u540c\u65f6\u65e5\u5fd7\u6761\u76ee\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u4e5f\u4ece\u6765\u4e0d\u4f1a\u6539\u53d8\u3002\u7b2c\u4e8c\u4e2a\u7279\u6027\u7531\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u6240\u4fdd\u8bc1\u3002\u5728\u53d1\u9001\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u65f6\u5019\uff0c\u9886\u5bfc\u4eba\u4f1a\u628a\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u524d\u7d27\u6328\u7740\u7684\u6761\u76ee\u7684\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u5305\u542b\u5728\u65e5\u5fd7\u5185\u3002\u5982\u679c\u8ddf\u968f\u8005\u5728\u5b83\u7684\u65e5\u5fd7\u4e2d\u627e\u4e0d\u5230\u5305\u542b\u76f8\u540c\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u7684\u6761\u76ee\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u62d2\u7edd\u63a5\u6536\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u50cf\u4e00\u4e2a\u5f52\u7eb3\u6b65\u9aa4\uff1a\u4e00\u5f00\u59cb\u7a7a\u7684\u65e5\u5fd7\u72b6\u6001\u80af\u5b9a\u662f\u6ee1\u8db3\u65e5\u5fd7\u5339\u914d\u7279\u6027\u7684\uff0c\u7136\u540e\u4e00\u81f4\u6027\u68c0\u67e5\u5728\u65e5\u5fd7\u6269\u5c55\u7684\u65f6\u5019\u4fdd\u62a4\u4e86\u65e5\u5fd7\u5339\u914d\u7279\u6027\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u8fd4\u56de\u6210\u529f\u65f6\uff0c\u9886\u5bfc\u4eba\u5c31\u77e5\u9053\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4e00\u5b9a\u662f\u548c\u81ea\u5df1\u76f8\u540c\u7684\u4e86\u3002 \u5728\u6b63\u5e38\u7684\u64cd\u4f5c\u4e2d\uff0c\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u6240\u4ee5\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u4ece\u6765\u4e0d\u4f1a\u5931\u8d25\u3002\u7136\u800c\uff0c\u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u4f1a\u4f7f\u5f97\u65e5\u5fd7\u5904\u4e8e\u4e0d\u4e00\u81f4\u7684\u72b6\u6001\uff08\u8001\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u5168\u590d\u5236\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff09\u3002\u8fd9\u79cd\u4e0d\u4e00\u81f4\u95ee\u9898\u4f1a\u5728\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u4e00\u7cfb\u5217\u5d29\u6e83\u4e0b\u52a0\u5267\u3002\u56fe 7 \u5c55\u793a\u4e86\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u53ef\u80fd\u548c\u65b0\u7684\u9886\u5bfc\u4eba\u4e0d\u540c\u3002\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u4e22\u5931\u4e00\u4e9b\u5728\u65b0\u7684\u9886\u5bfc\u4eba\u4e2d\u5b58\u5728\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4ed6\u4e5f\u53ef\u80fd\u62e5\u6709\u4e00\u4e9b\u9886\u5bfc\u4eba\u6ca1\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u6216\u8005\u4e24\u8005\u90fd\u53d1\u751f\u3002\u4e22\u5931\u6216\u8005\u591a\u51fa\u65e5\u5fd7\u6761\u76ee\u53ef\u80fd\u4f1a\u6301\u7eed\u591a\u4e2a\u4efb\u671f\u3002 \u56fe 7\uff1a\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u6210\u529f\u5f53\u9009\u65f6\uff0c\u8ddf\u968f\u8005\u53ef\u80fd\u662f\u4efb\u4f55\u60c5\u51b5\uff08a-f\uff09\u3002\u6bcf\u4e00\u4e2a\u76d2\u5b50\u8868\u793a\u662f\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\uff1b\u91cc\u9762\u7684\u6570\u5b57\u8868\u793a\u4efb\u671f\u53f7\u3002\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u7f3a\u5c11\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\uff08a-b\uff09\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u672a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08c-d\uff09\uff0c\u6216\u8005\u4e24\u79cd\u60c5\u51b5\u90fd\u5b58\u5728\uff08e-f\uff09\u3002\u4f8b\u5982\uff0c\u573a\u666f f \u53ef\u80fd\u4f1a\u8fd9\u6837\u53d1\u751f\uff0c\u67d0\u670d\u52a1\u5668\u5728\u4efb\u671f 2 \u7684\u65f6\u5019\u662f\u9886\u5bfc\u4eba\uff0c\u5df2\u9644\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff0c\u4f46\u5728\u63d0\u4ea4\u4e4b\u524d\u5c31\u5d29\u6e83\u4e86\uff1b\u5f88\u5feb\u8fd9\u4e2a\u673a\u5668\u5c31\u88ab\u91cd\u542f\u4e86\uff0c\u5728\u4efb\u671f 3 \u91cd\u65b0\u88ab\u9009\u4e3a\u9886\u5bfc\u4eba\uff0c\u5e76\u4e14\u53c8\u589e\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff1b\u5728\u4efb\u671f 2 \u548c\u4efb\u671f 3 \u7684\u65e5\u5fd7\u88ab\u63d0\u4ea4\u4e4b\u524d\uff0c\u8fd9\u4e2a\u670d\u52a1\u5668\u53c8\u5b95\u673a\u4e86\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u4efb\u671f\u91cc\u4e00\u76f4\u5904\u4e8e\u5b95\u673a\u72b6\u6001\u3002 \u5728 Raft \u7b97\u6cd5\u4e2d\uff0c\u9886\u5bfc\u4eba\u662f\u901a\u8fc7\u5f3a\u5236\u8ddf\u968f\u8005\u76f4\u63a5\u590d\u5236\u81ea\u5df1\u7684\u65e5\u5fd7\u6765\u5904\u7406\u4e0d\u4e00\u81f4\u95ee\u9898\u7684\u3002\u8fd9\u610f\u5473\u7740\u5728\u8ddf\u968f\u8005\u4e2d\u7684\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u4f1a\u88ab\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u8986\u76d6\u30025.4 \u8282\u4f1a\u9610\u8ff0\u5982\u4f55\u901a\u8fc7\u589e\u52a0\u4e00\u4e9b\u9650\u5236\u6765\u4f7f\u5f97\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u5b89\u5168\u7684\u3002 \u8981\u4f7f\u5f97\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fdb\u5165\u548c\u81ea\u5df1\u4e00\u81f4\u7684\u72b6\u6001\uff0c\u9886\u5bfc\u4eba\u5fc5\u987b\u627e\u5230\u6700\u540e\u4e24\u8005\u8fbe\u6210\u4e00\u81f4\u7684\u5730\u65b9\uff0c\u7136\u540e\u5220\u9664\u8ddf\u968f\u8005\u4ece\u90a3\u4e2a\u70b9\u4e4b\u540e\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff0c\u5e76\u53d1\u9001\u81ea\u5df1\u5728\u90a3\u4e2a\u70b9\u4e4b\u540e\u7684\u65e5\u5fd7\u7ed9\u8ddf\u968f\u8005\u3002\u6240\u6709\u7684\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u5728\u8fdb\u884c\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u65f6\u5b8c\u6210\u3002\u9886\u5bfc\u4eba\u9488\u5bf9\u6bcf\u4e00\u4e2a\u8ddf\u968f\u8005\u7ef4\u62a4\u4e86\u4e00\u4e2a nextIndex \uff0c\u8fd9\u8868\u793a\u4e0b\u4e00\u4e2a\u9700\u8981\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u5730\u5740\u3002\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u521a\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\uff0c\u4ed6\u521d\u59cb\u5316\u6240\u6709\u7684 nextIndex \u503c\u4e3a\u81ea\u5df1\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684 index \u52a0 1\uff08\u56fe 7 \u4e2d\u7684 11\uff09\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u548c\u9886\u5bfc\u4eba\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u5728\u4e0b\u4e00\u6b21\u7684\u9644\u52a0\u65e5\u5fd7 RPC \u65f6\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u4f1a\u5931\u8d25\u3002\u5728\u88ab\u8ddf\u968f\u8005\u62d2\u7edd\u4e4b\u540e\uff0c\u9886\u5bfc\u4eba\u5c31\u4f1a\u51cf\u5c0f nextIndex \u503c\u5e76\u8fdb\u884c\u91cd\u8bd5\u3002\u6700\u7ec8 nextIndex \u4f1a\u5728\u67d0\u4e2a\u4f4d\u7f6e\u4f7f\u5f97\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fbe\u6210\u4e00\u81f4\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u9644\u52a0\u65e5\u5fd7 RPC \u5c31\u4f1a\u6210\u529f\uff0c\u8fd9\u65f6\u5c31\u4f1a\u628a\u8ddf\u968f\u8005\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u5168\u90e8\u5220\u9664\u5e76\u4e14\u52a0\u4e0a\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u3002\u4e00\u65e6\u9644\u52a0\u65e5\u5fd7 RPC \u6210\u529f\uff0c\u90a3\u4e48\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u5c31\u4f1a\u548c\u9886\u5bfc\u4eba\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u4efb\u671f\u91cc\u4e00\u76f4\u7ee7\u7eed\u4fdd\u6301\u3002 \u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u88ab\u62d2\u7edd\u7684\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u6b21\u6570\u6765\u4f18\u5316\u3002\u4f8b\u5982\uff0c\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u8bf7\u6c42\u88ab\u62d2\u7edd\u7684\u65f6\u5019\uff0c\u8ddf\u968f\u8005\u53ef\u4ee5(\u8fd4\u56de)\u51b2\u7a81\u6761\u76ee\u7684\u4efb\u671f\u53f7\u548c\u8be5\u4efb\u671f\u53f7\u5bf9\u5e94\u7684\u6700\u5c0f\u7d22\u5f15\u5730\u5740\u3002\u501f\u52a9\u8fd9\u4e9b\u4fe1\u606f\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u51cf\u5c0f nextIndex \u4e00\u6b21\u6027\u8d8a\u8fc7\u8be5\u51b2\u7a81\u4efb\u671f\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff1b\u8fd9\u6837\u5c31\u53d8\u6210\u6bcf\u4e2a\u4efb\u671f\u9700\u8981\u4e00\u6b21\u9644\u52a0\u6761\u76ee RPC \u800c\u4e0d\u662f\u6bcf\u4e2a\u6761\u76ee\u4e00\u6b21\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5341\u5206\u6000\u7591\u8fd9\u79cd\u4f18\u5316\u662f\u5426\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5931\u8d25\u662f\u5f88\u5c11\u53d1\u751f\u7684\u5e76\u4e14\u4e5f\u4e0d\u5927\u53ef\u80fd\u4f1a\u6709\u8fd9\u4e48\u591a\u4e0d\u4e00\u81f4\u7684\u65e5\u5fd7\u3002 \u901a\u8fc7\u8fd9\u79cd\u673a\u5236\uff0c\u9886\u5bfc\u4eba\u5728\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u7684\u64cd\u4f5c\u6765\u6062\u590d\u4e00\u81f4\u6027\u3002\u4ed6\u53ea\u9700\u8981\u8fdb\u884c\u6b63\u5e38\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u65e5\u5fd7\u5c31\u80fd\u5728\u56de\u590d\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5931\u8d25\u7684\u65f6\u5019\u81ea\u52a8\u8d8b\u4e8e\u4e00\u81f4\u3002\u9886\u5bfc\u4eba\u4ece\u6765\u4e0d\u4f1a\u8986\u76d6\u6216\u8005\u5220\u9664\u81ea\u5df1\u7684\u65e5\u5fd7\uff08\u56fe 3 \u7684\u9886\u5bfc\u4eba\u53ea\u9644\u52a0\u7279\u6027\uff09\u3002 \u65e5\u5fd7\u590d\u5236\u673a\u5236\u5c55\u793a\u51fa\u4e86\u7b2c 2 \u8282\u4e2d\u5f62\u5bb9\u7684\u4e00\u81f4\u6027\u7279\u6027\uff1aRaft \u80fd\u591f\u63a5\u53d7\uff0c\u590d\u5236\u5e76\u5e94\u7528\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ea\u8981\u5927\u90e8\u5206\u7684\u673a\u5668\u662f\u5de5\u4f5c\u7684\uff1b\u5728\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ef\u4ee5\u5728\u4e00\u6b21 RPC \u4e2d\u88ab\u590d\u5236\u7ed9\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\uff1b\u5e76\u4e14\u5355\u4e2a\u7684\u7f13\u6162\u7684\u8ddf\u968f\u8005\u4e0d\u4f1a\u5f71\u54cd\u6574\u4f53\u7684\u6027\u80fd\u3002 5.4 \u5b89\u5168\u6027 \u00b6 \u524d\u9762\u7684\u7ae0\u8282\u91cc\u63cf\u8ff0\u4e86 Raft \u7b97\u6cd5\u662f\u5982\u4f55\u9009\u4e3e\u548c\u590d\u5236\u65e5\u5fd7\u7684\u3002\u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u63cf\u8ff0\u7684\u673a\u5236\u5e76\u4e0d\u80fd\u5145\u5206\u7684\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u72b6\u6001\u673a\u4f1a\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u8fdb\u5165\u4e0d\u53ef\u7528\u72b6\u6001\u540c\u65f6\u9886\u5bfc\u4eba\u5df2\u7ecf\u63d0\u4ea4\u4e86\u82e5\u5e72\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u7136\u540e\u8fd9\u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\u5e76\u4e14\u8986\u76d6\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\uff1b\u56e0\u6b64\uff0c\u4e0d\u540c\u7684\u72b6\u6001\u673a\u53ef\u80fd\u4f1a\u6267\u884c\u4e0d\u540c\u7684\u6307\u4ee4\u5e8f\u5217\u3002 \u8fd9\u4e00\u8282\u901a\u8fc7\u5728\u9886\u5bfc\u9009\u4e3e\u7684\u65f6\u5019\u589e\u52a0\u4e00\u4e9b\u9650\u5236\u6765\u5b8c\u5584 Raft \u7b97\u6cd5\u3002\u8fd9\u4e00\u9650\u5236\u4fdd\u8bc1\u4e86\u4efb\u4f55\u7684\u9886\u5bfc\u4eba\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4efb\u671f\u53f7\uff0c\u90fd\u62e5\u6709\u4e86\u4e4b\u524d\u4efb\u671f\u7684\u6240\u6709\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u56fe 3 \u4e2d\u7684\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\uff09\u3002\u589e\u52a0\u8fd9\u4e00\u9009\u4e3e\u65f6\u7684\u9650\u5236\uff0c\u6211\u4eec\u5bf9\u4e8e\u63d0\u4ea4\u65f6\u7684\u89c4\u5219\u4e5f\u66f4\u52a0\u6e05\u6670\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5bf9\u4e8e**\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\uff08Leader Completeness Property\uff09** \u7684\u7b80\u8981\u8bc1\u660e\uff0c\u5e76\u4e14\u8bf4\u660e\u8be5\u7279\u6027\u662f\u5982\u4f55\u5f15\u5bfc\u590d\u5236\u72b6\u6001\u673a\u505a\u51fa\u6b63\u786e\u884c\u4e3a\u7684\u3002 5.4.1 \u9009\u4e3e\u9650\u5236 \u00b6 \u5728\u4efb\u4f55\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u9886\u5bfc\u4eba\u90fd\u5fc5\u987b\u5b58\u50a8\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5728\u67d0\u4e9b\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u4f8b\u5982 Viewstamped Replication\uff0c\u67d0\u4e2a\u8282\u70b9\u5373\u4f7f\u662f\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u5305\u542b\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u5b83\u4e5f\u80fd\u88ab\u9009\u4e3a\u9886\u5bfc\u4eba\u3002\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u5305\u542b\u4e00\u4e9b\u989d\u5916\u7684\u673a\u5236\u6765\u8bc6\u522b\u4e22\u5931\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u628a\u4ed6\u4eec\u4f20\u9001\u7ed9\u65b0\u7684\u9886\u5bfc\u4eba\uff0c\u8981\u4e48\u662f\u5728\u9009\u4e3e\u9636\u6bb5\u8981\u4e48\u5728\u4e4b\u540e\u5f88\u5feb\u8fdb\u884c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u76f8\u5f53\u5927\u7684\u989d\u5916\u7684\u673a\u5236\u548c\u590d\u6742\u6027\u3002Raft \u4f7f\u7528\u4e86\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u5728\u9009\u4e3e\u7684\u65f6\u5019\u65b0\u7684\u9886\u5bfc\u4eba\u62e5\u6709\u6240\u6709\u4e4b\u524d\u4efb\u671f\u4e2d\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u800c\u4e0d\u9700\u8981\u4f20\u9001\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\u7ed9\u9886\u5bfc\u4eba\u3002\u8fd9\u610f\u5473\u7740\u65e5\u5fd7\u6761\u76ee\u7684\u4f20\u9001\u662f\u5355\u5411\u7684\uff0c\u53ea\u4ece\u9886\u5bfc\u4eba\u4f20\u7ed9\u8ddf\u968f\u8005\uff0c\u5e76\u4e14\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u8986\u76d6\u81ea\u8eab\u672c\u5730\u65e5\u5fd7\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u3002 Raft \u4f7f\u7528\u6295\u7968\u7684\u65b9\u5f0f\u6765\u963b\u6b62\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u9664\u975e\u8fd9\u4e2a\u5019\u9009\u4eba\u5305\u542b\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5019\u9009\u4eba\u4e3a\u4e86\u8d62\u5f97\u9009\u4e3e\u5fc5\u987b\u8054\u7cfb\u96c6\u7fa4\u4e2d\u7684\u5927\u90e8\u5206\u8282\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u4e2a\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u5728\u8fd9\u4e9b\u670d\u52a1\u5668\u8282\u70b9\u4e2d\u80af\u5b9a\u5b58\u5728\u4e8e\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002\u5982\u679c\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u8282\u70b9\u4e00\u6837\u65b0\uff08\u8fd9\u4e2a\u65b0\u7684\u5b9a\u4e49\u4f1a\u5728\u4e0b\u9762\u8ba8\u8bba\uff09\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u6301\u6709\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u8bf7\u6c42\u6295\u7968\uff08RequestVote\uff09 RPC \u5b9e\u73b0\u4e86\u8fd9\u6837\u7684\u9650\u5236\uff1aRPC \u4e2d\u5305\u542b\u4e86\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u7136\u540e\u6295\u7968\u4eba\u4f1a\u62d2\u7edd\u6389\u90a3\u4e9b\u65e5\u5fd7\u6ca1\u6709\u81ea\u5df1\u65b0\u7684\u6295\u7968\u8bf7\u6c42\u3002 Raft \u901a\u8fc7\u6bd4\u8f83\u4e24\u4efd\u65e5\u5fd7\u4e2d\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\u5b9a\u4e49\u8c01\u7684\u65e5\u5fd7\u6bd4\u8f83\u65b0\u3002\u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u7684\u4efb\u671f\u53f7\u4e0d\u540c\uff0c\u90a3\u4e48\u4efb\u671f\u53f7\u5927\u7684\u65e5\u5fd7\u66f4\u52a0\u65b0\u3002\u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u65e5\u5fd7\u6bd4\u8f83\u957f\u7684\u90a3\u4e2a\u5c31\u66f4\u52a0\u65b0\u3002 5.4.2 \u63d0\u4ea4\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee \u00b6 \u5982\u540c 5.3 \u8282\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u9886\u5bfc\u4eba\u77e5\u9053\u4e00\u6761\u5f53\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u8bb0\u5f55\u662f\u53ef\u4ee5\u88ab\u63d0\u4ea4\u7684\uff0c\u53ea\u8981\u5b83\u88ab\u5b58\u50a8\u5230\u4e86\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u4e0a\u3002\u5982\u679c\u4e00\u4e2a\u9886\u5bfc\u4eba\u5728\u63d0\u4ea4\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u5d29\u6e83\u4e86\uff0c\u672a\u6765\u540e\u7eed\u7684\u9886\u5bfc\u4eba\u4f1a\u7ee7\u7eed\u5c1d\u8bd5\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u8bb0\u5f55\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u9886\u5bfc\u4eba\u4e0d\u80fd\u65ad\u5b9a\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u88ab\u4fdd\u5b58\u5230\u5927\u591a\u6570\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u5df2\u7ecf\u63d0\u4ea4\u4e86\u3002\u56fe 8 \u5c55\u793a\u4e86\u4e00\u79cd\u60c5\u51b5\uff0c\u4e00\u6761\u5df2\u7ecf\u88ab\u5b58\u50a8\u5230\u5927\u591a\u6570\u8282\u70b9\u4e0a\u7684\u8001\u65e5\u5fd7\u6761\u76ee\uff0c\u4e5f\u4f9d\u7136\u6709\u53ef\u80fd\u4f1a\u88ab\u672a\u6765\u7684\u9886\u5bfc\u4eba\u8986\u76d6\u6389\u3002 \u56fe 8\uff1a\u5982\u56fe\u7684\u65f6\u95f4\u5e8f\u5217\u5c55\u793a\u4e86\u4e3a\u4ec0\u4e48\u9886\u5bfc\u4eba\u65e0\u6cd5\u51b3\u5b9a\u5bf9\u8001\u4efb\u671f\u53f7\u7684\u65e5\u5fd7\u6761\u76ee\u8fdb\u884c\u63d0\u4ea4\u3002\u5728 (a) \u4e2d\uff0cS1 \u662f\u9886\u5bfc\u4eba\uff0c\u90e8\u5206\u7684(\u8ddf\u968f\u8005)\u590d\u5236\u4e86\u7d22\u5f15\u4f4d\u7f6e 2 \u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5728 (b) \u4e2d\uff0cS1 \u5d29\u6e83\u4e86\uff0c\u7136\u540e S5 \u5728\u4efb\u671f 3 \u91cc\u901a\u8fc7 S3\u3001S4 \u548c\u81ea\u5df1\u7684\u9009\u7968\u8d62\u5f97\u9009\u4e3e\uff0c\u7136\u540e\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u4e86\u4e00\u6761\u4e0d\u4e00\u6837\u7684\u65e5\u5fd7\u6761\u76ee\u653e\u5728\u4e86\u7d22\u5f15 2 \u5904\u3002\u7136\u540e\u5230 \u00a9\uff0cS5 \u53c8\u5d29\u6e83\u4e86\uff1bS1 \u91cd\u65b0\u542f\u52a8\uff0c\u9009\u4e3e\u6210\u529f\uff0c\u5f00\u59cb\u590d\u5236\u65e5\u5fd7\u3002\u5728\u8fd9\u65f6\uff0c\u6765\u81ea\u4efb\u671f 2 \u7684\u90a3\u6761\u65e5\u5fd7\u5df2\u7ecf\u88ab\u590d\u5236\u5230\u4e86\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\u4e0a\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u3002\u5982\u679c S1 \u5728 (d) \u4e2d\u53c8\u5d29\u6e83\u4e86\uff0cS5 \u53ef\u4ee5\u91cd\u65b0\u88ab\u9009\u4e3e\u6210\u529f\uff08\u901a\u8fc7\u6765\u81ea S2\uff0cS3 \u548c S4 \u7684\u9009\u7968\uff09\uff0c\u7136\u540e\u8986\u76d6\u4e86\u4ed6\u4eec\u5728\u7d22\u5f15 2 \u5904\u7684\u65e5\u5fd7\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u5728\u5d29\u6e83\u4e4b\u524d\uff0cS1 \u628a\u81ea\u5df1\u4e3b\u5bfc\u7684\u65b0\u4efb\u671f\u91cc\u4ea7\u751f\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u4e86\u5927\u591a\u6570\u673a\u5668\u4e0a\uff0c\u5c31\u5982 (e) \u4e2d\u90a3\u6837\uff0c\u90a3\u4e48\u5728\u540e\u9762\u4efb\u671f\u91cc\u9762\u8fd9\u4e9b\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u56e0\u4e3a S5 \u5c31\u4e0d\u53ef\u80fd\u9009\u4e3e\u6210\u529f\uff09\u3002 \u8fd9\u6837\u5728\u540c\u4e00\u65f6\u523b\u5c31\u540c\u65f6\u4fdd\u8bc1\u4e86\uff0c\u4e4b\u524d\u7684\u6240\u6709\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\u3002 \u4e3a\u4e86\u6d88\u9664\u56fe 8 \u91cc\u63cf\u8ff0\u7684\u60c5\u51b5\uff0cRaft \u6c38\u8fdc\u4e0d\u4f1a\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u7684\u65b9\u5f0f\u53bb\u63d0\u4ea4\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u53ea\u6709\u9886\u5bfc\u4eba\u5f53\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u53ef\u4ee5\u88ab\u63d0\u4ea4\uff1b\u4e00\u65e6\u5f53\u524d\u4efb\u671f\u7684\u65e5\u5fd7\u6761\u76ee\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u7531\u4e8e\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff0c\u4e4b\u524d\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u95f4\u63a5\u7684\u63d0\u4ea4\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u5b89\u5168\u7684\u77e5\u9053\u4e00\u4e2a\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\uff0c\u8be5\u6761\u76ee\u662f\u5426\u5b58\u50a8\u5230\u6240\u6709\u670d\u52a1\u5668\u4e0a\uff09\uff0c\u4f46\u662f Raft \u4e3a\u4e86\u7b80\u5316\u95ee\u9898\u4f7f\u7528\u4e00\u79cd\u66f4\u52a0\u4fdd\u5b88\u7684\u65b9\u6cd5\u3002 \u5f53\u9886\u5bfc\u4eba\u590d\u5236\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0cRaft \u4f1a\u4e3a\u6240\u6709\u65e5\u5fd7\u4fdd\u7559\u539f\u59cb\u7684\u4efb\u671f\u53f7, \u8fd9\u5728\u63d0\u4ea4\u89c4\u5219\u4e0a\u4ea7\u751f\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u3002\u5728\u5176\u4ed6\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u8981\u91cd\u65b0\u590d\u5236\u4e4b\u524d\u7684\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0c\u5b83\u5fc5\u987b\u4f7f\u7528\u5f53\u524d\u65b0\u7684\u4efb\u671f\u53f7\u3002Raft \u4f7f\u7528\u7684\u65b9\u6cd5\u66f4\u52a0\u5bb9\u6613\u8fa8\u522b\u51fa\u65e5\u5fd7\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u548c\u65e5\u5fd7\u7684\u53d8\u5316\u5bf9\u65e5\u5fd7\u7ef4\u62a4\u7740\u540c\u4e00\u4e2a\u4efb\u671f\u7f16\u53f7\u3002\u53e6\u5916\uff0c\u548c\u5176\u4ed6\u7684\u7b97\u6cd5\u76f8\u6bd4\uff0cRaft \u4e2d\u7684\u65b0\u9886\u5bfc\u4eba\u53ea\u9700\u8981\u53d1\u9001\u66f4\u5c11\u65e5\u5fd7\u6761\u76ee\uff08\u5176\u4ed6\u7b97\u6cd5\u4e2d\u5fc5\u987b\u5728\u4ed6\u4eec\u88ab\u63d0\u4ea4\u4e4b\u524d\u53d1\u9001\u66f4\u591a\u7684\u5197\u4f59\u65e5\u5fd7\u6761\u76ee\u6765\u4e3a\u4ed6\u4eec\u91cd\u65b0\u7f16\u53f7\uff09\u3002 5.4.3 \u5b89\u5168\u6027\u8bba\u8bc1 \u00b6 \u5728\u7ed9\u5b9a\u4e86\u5b8c\u6574\u7684 Raft \u7b97\u6cd5\u4e4b\u540e\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u66f4\u52a0\u7cbe\u786e\u7684\u8ba8\u8bba\u9886\u5bfc\u4eba\u5b8c\u6574\u6027\u7279\u6027\uff08\u8fd9\u4e00\u8ba8\u8bba\u57fa\u4e8e 9.2 \u8282\u7684\u5b89\u5168\u6027\u8bc1\u660e\uff09\u3002\u6211\u4eec\u5047\u8bbe\u9886\u5bfc\u4eba\u5b8c\u5168\u6027\u7279\u6027\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u7136\u540e\u6211\u4eec\u63a8\u51fa\u77db\u76fe\u6765\u3002\u5047\u8bbe\u4efb\u671f T \u7684\u9886\u5bfc\u4eba\uff08\u9886\u5bfc\u4eba T\uff09\u5728\u4efb\u671f\u5185\u63d0\u4ea4\u4e86\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u4f46\u662f\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u6ca1\u6709\u88ab\u5b58\u50a8\u5230\u672a\u6765\u67d0\u4e2a\u4efb\u671f\u7684\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u4e2d\u3002\u8bbe\u5927\u4e8e T \u7684\u6700\u5c0f\u4efb\u671f U \u7684\u9886\u5bfc\u4eba U \u6ca1\u6709\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u3002 \u56fe 9\uff1a\u5982\u679c S1 \uff08\u4efb\u671f T \u7684\u9886\u5bfc\u4eba\uff09\u5728\u5b83\u7684\u4efb\u671f\u91cc\u63d0\u4ea4\u4e86\u4e00\u6761\u65b0\u7684\u65e5\u5fd7\uff0c\u7136\u540e S5 \u5728\u4e4b\u540e\u7684\u4efb\u671f U \u91cc\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\uff0c\u90a3\u4e48\u81f3\u5c11\u4f1a\u6709\u4e00\u4e2a\u673a\u5668\uff0c\u5982 S3\uff0c\u65e2\u62e5\u6709\u6765\u81ea S1 \u7684\u65e5\u5fd7\uff0c\u4e5f\u7ed9 S5 \u6295\u7968\u4e86\u3002 \u5728\u9886\u5bfc\u4eba U \u9009\u4e3e\u7684\u65f6\u5019\u4e00\u5b9a\u6ca1\u6709\u90a3\u6761\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u5220\u9664\u6216\u8005\u8986\u76d6\u4efb\u4f55\u6761\u76ee\uff09\u3002 \u9886\u5bfc\u4eba T \u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u7ed9\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u8282\u70b9\uff0c\u540c\u65f6\uff0c\u9886\u5bfc\u4eba U \u4ece\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u8282\u70b9\u8d62\u5f97\u4e86\u9009\u7968\u3002\u56e0\u6b64\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u8282\u70b9\uff08\u6295\u7968\u8005\u3001\u9009\u6c11\uff09\u540c\u65f6\u63a5\u53d7\u4e86\u6765\u81ea\u9886\u5bfc\u4eba T \u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u5e76\u4e14\u7ed9\u9886\u5bfc\u4eba U \u6295\u7968\u4e86\uff0c\u5982\u56fe 9\u3002\u8fd9\u4e2a\u6295\u7968\u8005\u662f\u4ea7\u751f\u8fd9\u4e2a\u77db\u76fe\u7684\u5173\u952e\u3002 \u8fd9\u4e2a\u6295\u7968\u8005\u5fc5\u987b\u5728\u7ed9\u9886\u5bfc\u4eba U \u6295\u7968\u4e4b\u524d\u5148\u63a5\u53d7\u4e86\u4ece\u9886\u5bfc\u4eba T \u53d1\u6765\u7684\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff1b\u5426\u5219\u4ed6\u5c31\u4f1a\u62d2\u7edd\u6765\u81ea\u9886\u5bfc\u4eba T \u7684\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\uff08\u56e0\u4e3a\u6b64\u65f6\u4ed6\u7684\u4efb\u671f\u53f7\u4f1a\u6bd4 T \u5927\uff09\u3002 \u6295\u7968\u8005\u5728\u7ed9\u9886\u5bfc\u4eba U \u6295\u7968\u65f6\u4f9d\u7136\u4fdd\u5b58\u6709\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e2d\u95f4\u7684\u9886\u5bfc\u4eba\u90fd\u5305\u542b\u8be5\u65e5\u5fd7\u6761\u76ee\uff08\u6839\u636e\u4e0a\u8ff0\u7684\u5047\u8bbe\uff09\uff0c\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u5220\u9664\u6761\u76ee\uff0c\u5e76\u4e14\u8ddf\u968f\u8005\u53ea\u6709\u5728\u548c\u9886\u5bfc\u4eba\u51b2\u7a81\u7684\u65f6\u5019\u624d\u4f1a\u5220\u9664\u6761\u76ee\u3002 \u6295\u7968\u8005\u628a\u81ea\u5df1\u9009\u7968\u6295\u7ed9\u9886\u5bfc\u4eba U \u65f6\uff0c\u9886\u5bfc\u4eba U \u7684\u65e5\u5fd7\u5fc5\u987b\u548c\u6295\u7968\u8005\u81ea\u5df1\u4e00\u6837\u65b0\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u4e24\u8005\u77db\u76fe\u4e4b\u4e00\u3002 \u9996\u5148\uff0c\u5982\u679c\u6295\u7968\u8005\u548c\u9886\u5bfc\u4eba U \u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u9886\u5bfc\u4eba U \u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u6295\u7968\u8005\u4e00\u6837\u957f\uff0c\u6240\u4ee5\u9886\u5bfc\u4eba U \u7684\u65e5\u5fd7\u4e00\u5b9a\u5305\u542b\u6240\u6709\u6295\u7968\u8005\u7684\u65e5\u5fd7\u3002\u8fd9\u662f\u53e6\u4e00\u5904\u77db\u76fe\uff0c\u56e0\u4e3a\u6295\u7968\u8005\u5305\u542b\u4e86\u90a3\u6761\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4f46\u662f\u5728\u4e0a\u8ff0\u7684\u5047\u8bbe\u91cc\uff0c\u9886\u5bfc\u4eba U \u662f\u4e0d\u5305\u542b\u7684\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u9886\u5bfc\u4eba U \u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\u5c31\u5fc5\u987b\u6bd4\u6295\u7968\u4eba\u5927\u4e86\u3002\u6b64\u5916\uff0c\u4ed6\u4e5f\u6bd4 T \u5927\uff0c\u56e0\u4e3a\u6295\u7968\u4eba\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\u81f3\u5c11\u548c T \u4e00\u6837\u5927\uff08\u4ed6\u5305\u542b\u4e86\u6765\u81ea\u4efb\u671f T \u7684\u5df2\u63d0\u4ea4\u7684\u65e5\u5fd7\uff09\u3002\u521b\u5efa\u4e86\u9886\u5bfc\u4eba U \u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4e4b\u524d\u9886\u5bfc\u4eba\u4e00\u5b9a\u5df2\u7ecf\u5305\u542b\u4e86\u90a3\u6761\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\uff08\u6839\u636e\u4e0a\u8ff0\u5047\u8bbe\uff0c\u9886\u5bfc\u4eba U \u662f\u7b2c\u4e00\u4e2a\u4e0d\u5305\u542b\u8be5\u65e5\u5fd7\u6761\u76ee\u7684\u9886\u5bfc\u4eba\uff09\u3002\u6240\u4ee5\uff0c\u6839\u636e\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff0c\u9886\u5bfc\u4eba U \u4e00\u5b9a\u4e5f\u5305\u542b\u90a3\u6761\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\uff0c\u8fd9\u91cc\u4ea7\u751f\u77db\u76fe\u3002 \u8fd9\u91cc\u5b8c\u6210\u4e86\u77db\u76fe\u3002\u56e0\u6b64\uff0c\u6240\u6709\u6bd4 T \u5927\u7684\u9886\u5bfc\u4eba\u4e00\u5b9a\u5305\u542b\u4e86\u6240\u6709\u6765\u81ea T \u7684\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u3002 \u65e5\u5fd7\u5339\u914d\u539f\u5219\u4fdd\u8bc1\u4e86\u672a\u6765\u7684\u9886\u5bfc\u4eba\u4e5f\u540c\u65f6\u4f1a\u5305\u542b\u88ab\u95f4\u63a5\u63d0\u4ea4\u7684\u6761\u76ee\uff0c\u4f8b\u5982\u56fe 8 (e) \u4e2d\u7684\u7d22\u5f15 2\u3002 \u901a\u8fc7\u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027\uff0c\u6211\u4eec\u5c31\u80fd\u8bc1\u660e\u56fe 3 \u4e2d\u7684\u72b6\u6001\u673a\u5b89\u5168\u7279\u6027\uff0c\u5373\u5982\u679c\u670d\u52a1\u5668\u5df2\u7ecf\u5728\u67d0\u4e2a\u7ed9\u5b9a\u7684\u7d22\u5f15\u503c\u5e94\u7528\u4e86\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u72b6\u6001\u673a\u91cc\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u670d\u52a1\u5668\u4e0d\u4f1a\u5e94\u7528\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u65e5\u5fd7\u5230\u540c\u4e00\u4e2a\u7d22\u5f15\u503c\u4e0a\u3002\u5728\u4e00\u4e2a\u670d\u52a1\u5668\u5e94\u7528\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u5230\u4ed6\u81ea\u5df1\u7684\u72b6\u6001\u673a\u4e2d\u65f6\uff0c\u4ed6\u7684\u65e5\u5fd7\u5fc5\u987b\u548c\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\uff0c\u5728\u8be5\u6761\u76ee\u548c\u4e4b\u524d\u7684\u6761\u76ee\u4e0a\u76f8\u540c\uff0c\u5e76\u4e14\u5df2\u7ecf\u88ab\u63d0\u4ea4\u3002\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651\u5728\u4efb\u4f55\u4e00\u4e2a\u670d\u52a1\u5668\u5e94\u7528\u4e00\u4e2a\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u65e5\u5fd7\u7684\u6700\u5c0f\u4efb\u671f\uff1b\u65e5\u5fd7\u5b8c\u5168\u7279\u6027\u4fdd\u8bc1\u62e5\u6709\u66f4\u9ad8\u4efb\u671f\u53f7\u7684\u9886\u5bfc\u4eba\u4f1a\u5b58\u50a8\u76f8\u540c\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u6240\u4ee5\u4e4b\u540e\u7684\u4efb\u671f\u91cc\u5e94\u7528\u67d0\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u4f1a\u662f\u76f8\u540c\u7684\u503c\u3002\u56e0\u6b64\uff0c\u72b6\u6001\u673a\u5b89\u5168\u7279\u6027\u662f\u6210\u7acb\u7684\u3002 \u6700\u540e\uff0cRaft \u8981\u6c42\u670d\u52a1\u5668\u6309\u7167\u65e5\u5fd7\u4e2d\u7d22\u5f15\u4f4d\u7f6e\u987a\u5e8f\u5e94\u7528\u65e5\u5fd7\u6761\u76ee\u3002\u548c\u72b6\u6001\u673a\u5b89\u5168\u7279\u6027\u7ed3\u5408\u8d77\u6765\u770b\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u6240\u6709\u7684\u670d\u52a1\u5668\u4f1a\u5e94\u7528\u76f8\u540c\u7684\u65e5\u5fd7\u5e8f\u5217\u96c6\u5230\u81ea\u5df1\u7684\u72b6\u6001\u673a\u4e2d\uff0c\u5e76\u4e14\u662f\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u3002 5.5 \u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83 \u00b6 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u53ea\u5173\u6ce8\u4e86\u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u3002\u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83\u540e\u7684\u5904\u7406\u65b9\u5f0f\u6bd4\u9886\u5bfc\u4eba\u8981\u7b80\u5355\u7684\u591a\uff0c\u5e76\u4e14\u4ed6\u4eec\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u540e\u7eed\u53d1\u9001\u7ed9\u4ed6\u4eec\u7684 RPCs \u90fd\u4f1a\u5931\u8d25\u3002Raft \u4e2d\u5904\u7406\u8fd9\u79cd\u5931\u8d25\u5c31\u662f\u7b80\u5355\u5730\u901a\u8fc7\u65e0\u9650\u7684\u91cd\u8bd5\uff1b\u5982\u679c\u5d29\u6e83\u7684\u673a\u5668\u91cd\u542f\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e9b RPC \u5c31\u4f1a\u5b8c\u6574\u7684\u6210\u529f\u3002\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5668\u5728\u5b8c\u6210\u4e86\u4e00\u4e2a RPC\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u54cd\u5e94\u7684\u65f6\u5019\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5728\u4ed6\u91cd\u65b0\u542f\u52a8\u4e4b\u540e\u5c31\u4f1a\u518d\u6b21\u6536\u5230\u540c\u6837\u7684\u8bf7\u6c42\u3002Raft \u7684 RPCs \u90fd\u662f\u5e42\u7b49\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u91cd\u8bd5\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u95ee\u9898\u3002\u4f8b\u5982\u4e00\u4e2a\u8ddf\u968f\u8005\u5982\u679c\u6536\u5230\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\u4f46\u662f\u4ed6\u5df2\u7ecf\u5305\u542b\u4e86\u8fd9\u4e00\u65e5\u5fd7\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u65b0\u7684\u8bf7\u6c42\u3002 5.6 \u65f6\u95f4\u548c\u53ef\u7528\u6027 \u00b6 Raft \u7684\u8981\u6c42\u4e4b\u4e00\u5c31\u662f\u5b89\u5168\u6027\u4e0d\u80fd\u4f9d\u8d56\u65f6\u95f4\uff1a\u6574\u4e2a\u7cfb\u7edf\u4e0d\u80fd\u56e0\u4e3a\u67d0\u4e9b\u4e8b\u4ef6\u8fd0\u884c\u7684\u6bd4\u9884\u671f\u5feb\u4e00\u70b9\u6216\u8005\u6162\u4e00\u70b9\u5c31\u4ea7\u751f\u4e86\u9519\u8bef\u7684\u7ed3\u679c\u3002\u4f46\u662f\uff0c\u53ef\u7528\u6027\uff08\u7cfb\u7edf\u53ef\u4ee5\u53ca\u65f6\u7684\u54cd\u5e94\u5ba2\u6237\u7aef\uff09\u4e0d\u53ef\u907f\u514d\u7684\u8981\u4f9d\u8d56\u4e8e\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6d88\u606f\u4ea4\u6362\u6bd4\u670d\u52a1\u5668\u6545\u969c\u95f4\u9694\u65f6\u95f4\u957f\uff0c\u5019\u9009\u4eba\u5c06\u6ca1\u6709\u8db3\u591f\u957f\u7684\u65f6\u95f4\u6765\u8d62\u5f97\u9009\u4e3e\uff1b\u6ca1\u6709\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba\uff0cRaft \u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u662f Raft \u4e2d\u5bf9\u65f6\u95f4\u8981\u6c42\u6700\u4e3a\u5173\u952e\u7684\u65b9\u9762\u3002Raft \u53ef\u4ee5\u9009\u4e3e\u5e76\u7ef4\u6301\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba,\u53ea\u8981\u7cfb\u7edf\u6ee1\u8db3\u4e0b\u9762\u7684\u65f6\u95f4\u8981\u6c42\uff1a \u5e7f\u64ad\u65f6\u95f4\uff08broadcastTime\uff09 << \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff08electionTimeout\uff09 << \u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\uff08MTBF\uff09 \u5728\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e2d\uff0c\u5e7f\u64ad\u65f6\u95f4\u6307\u7684\u662f\u4ece\u4e00\u4e2a\u670d\u52a1\u5668\u5e76\u884c\u7684\u53d1\u9001 RPCs \u7ed9\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u5e76\u63a5\u6536\u54cd\u5e94\u7684\u5e73\u5747\u65f6\u95f4\uff1b\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5c31\u662f\u5728 5.2 \u8282\u4e2d\u4ecb\u7ecd\u7684\u9009\u4e3e\u7684\u8d85\u65f6\u65f6\u95f4\u9650\u5236\uff1b\u7136\u540e\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5c31\u662f\u5bf9\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u800c\u8a00\uff0c\u4e24\u6b21\u6545\u969c\u4e4b\u95f4\u7684\u5e73\u5747\u65f6\u95f4\u3002\u5e7f\u64ad\u65f6\u95f4\u5fc5\u987b\u6bd4\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5c0f\u4e00\u4e2a\u91cf\u7ea7\uff0c\u8fd9\u6837\u9886\u5bfc\u4eba\u624d\u80fd\u591f\u53d1\u9001\u7a33\u5b9a\u7684\u5fc3\u8df3\u6d88\u606f\u6765\u963b\u6b62\u8ddf\u968f\u8005\u5f00\u59cb\u8fdb\u5165\u9009\u4e3e\u72b6\u6001\uff1b\u901a\u8fc7\u968f\u673a\u5316\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e5f\u4f7f\u5f97\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u53d8\u5f97\u4e0d\u53ef\u80fd\u3002\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5e94\u8be5\u8981\u6bd4\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5c0f\u4e0a\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u8fd9\u6837\u6574\u4e2a\u7cfb\u7edf\u624d\u80fd\u7a33\u5b9a\u7684\u8fd0\u884c\u3002\u5f53\u9886\u5bfc\u4eba\u5d29\u6e83\u540e\uff0c\u6574\u4e2a\u7cfb\u7edf\u4f1a\u5927\u7ea6\u76f8\u5f53\u4e8e\u9009\u4e3e\u8d85\u65f6\u7684\u65f6\u95f4\u91cc\u4e0d\u53ef\u7528\uff1b\u6211\u4eec\u5e0c\u671b\u8fd9\u79cd\u60c5\u51b5\u5728\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u884c\u4e2d\u5f88\u5c11\u51fa\u73b0\u3002 \u5e7f\u64ad\u65f6\u95f4\u548c\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u662f\u7531\u7cfb\u7edf\u51b3\u5b9a\u7684\uff0c\u4f46\u662f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u6211\u4eec\u81ea\u5df1\u9009\u62e9\u7684\u3002Raft \u7684 RPCs \u9700\u8981\u63a5\u6536\u65b9\u5c06\u4fe1\u606f\u6301\u4e45\u5316\u7684\u4fdd\u5b58\u5230\u7a33\u5b9a\u5b58\u50a8\u4e2d\u53bb\uff0c\u6240\u4ee5\u5e7f\u64ad\u65f6\u95f4\u5927\u7ea6\u662f 0.5 \u6beb\u79d2\u5230 20 \u6beb\u79d2\uff0c\u53d6\u51b3\u4e8e\u5b58\u50a8\u7684\u6280\u672f\u3002\u56e0\u6b64\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u53ef\u80fd\u9700\u8981\u5728 10 \u6beb\u79d2\u5230 500 \u6beb\u79d2\u4e4b\u95f4\u3002\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u7684\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u90fd\u5728\u51e0\u4e2a\u6708\u751a\u81f3\u66f4\u957f\uff0c\u5f88\u5bb9\u6613\u6ee1\u8db3\u65f6\u95f4\u7684\u9700\u6c42\u3002 6 \u96c6\u7fa4\u6210\u5458\u53d8\u5316 \u00b6 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u5047\u8bbe\u96c6\u7fa4\u7684\u914d\u7f6e\uff08\u52a0\u5165\u5230\u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u670d\u52a1\u5668\u96c6\u5408\uff09\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\u3002\u4f46\u662f\u5728\u5b9e\u8df5\u4e2d\uff0c\u5076\u5c14\u662f\u4f1a\u6539\u53d8\u96c6\u7fa4\u7684\u914d\u7f6e\u7684\uff0c\u4f8b\u5982\u66ff\u6362\u90a3\u4e9b\u5b95\u673a\u7684\u673a\u5668\u6216\u8005\u6539\u53d8\u590d\u5236\u7ea7\u522b\u3002\u5c3d\u7ba1\u53ef\u4ee5\u901a\u8fc7\u6682\u505c\u6574\u4e2a\u96c6\u7fa4\uff0c\u66f4\u65b0\u6240\u6709\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u6574\u4e2a\u96c6\u7fa4\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u5728\u66f4\u6539\u7684\u65f6\u5019\u96c6\u7fa4\u4f1a\u4e0d\u53ef\u7528\u3002\u53e6\u5916\uff0c\u5982\u679c\u5b58\u5728\u624b\u5de5\u64cd\u4f5c\u6b65\u9aa4\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u64cd\u4f5c\u5931\u8bef\u7684\u98ce\u9669\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6211\u4eec\u51b3\u5b9a\u81ea\u52a8\u5316\u914d\u7f6e\u6539\u53d8\u5e76\u4e14\u5c06\u5176\u7eb3\u5165\u5230 Raft \u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\u6765\u3002 \u4e3a\u4e86\u8ba9\u914d\u7f6e\u4fee\u6539\u673a\u5236\u80fd\u591f\u5b89\u5168\uff0c\u90a3\u4e48\u5728\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u591f\u5b58\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\u4f7f\u5f97\u4e24\u4e2a\u9886\u5bfc\u4eba\u5728\u540c\u4e00\u4e2a\u4efb\u671f\u91cc\u540c\u65f6\u88ab\u9009\u4e3e\u6210\u529f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4efb\u4f55\u670d\u52a1\u5668\u76f4\u63a5\u4ece\u65e7\u7684\u914d\u7f6e\u76f4\u63a5\u8f6c\u6362\u5230\u65b0\u7684\u914d\u7f6e\u7684\u65b9\u6848\u90fd\u662f\u4e0d\u5b89\u5168\u7684\u3002\u4e00\u6b21\u6027\u539f\u5b50\u5730\u8f6c\u6362\u6240\u6709\u670d\u52a1\u5668\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u671f\u95f4\u6574\u4e2a\u96c6\u7fa4\u5b58\u5728\u5212\u5206\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u5927\u591a\u6570\u7fa4\u4f53\u7684\u53ef\u80fd\u6027\uff08\u89c1\u56fe 10\uff09\u3002 \u56fe 10\uff1a\u76f4\u63a5\u4ece\u4e00\u79cd\u914d\u7f6e\u8f6c\u5230\u65b0\u7684\u914d\u7f6e\u662f\u5341\u5206\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5404\u4e2a\u673a\u5668\u53ef\u80fd\u5728\u4efb\u4f55\u7684\u65f6\u5019\u8fdb\u884c\u8f6c\u6362\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u96c6\u7fa4\u914d\u989d\u4ece 3 \u53f0\u673a\u5668\u53d8\u6210\u4e86 5 \u53f0\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b58\u5728\u8fd9\u6837\u7684\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e24\u4e2a\u4e0d\u540c\u7684\u9886\u5bfc\u4eba\u5728\u540c\u4e00\u4e2a\u4efb\u671f\u91cc\u90fd\u53ef\u4ee5\u88ab\u9009\u4e3e\u6210\u529f\u3002\u4e00\u4e2a\u662f\u901a\u8fc7\u65e7\u7684\u914d\u7f6e\uff0c\u4e00\u4e2a\u901a\u8fc7\u65b0\u7684\u914d\u7f6e\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\u6027\uff0c\u914d\u7f6e\u66f4\u6539\u5fc5\u987b\u4f7f\u7528\u4e24\u9636\u6bb5\u65b9\u6cd5\u3002\u76ee\u524d\u6709\u5f88\u591a\u79cd\u4e24\u9636\u6bb5\u7684\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u6709\u4e9b\u7cfb\u7edf\u5728\u7b2c\u4e00\u9636\u6bb5\u505c\u6389\u65e7\u7684\u914d\u7f6e\u6240\u4ee5\u96c6\u7fa4\u5c31\u4e0d\u80fd\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff1b\u7136\u540e\u5728\u7b2c\u4e8c\u9636\u6bb5\u5728\u542f\u7528\u65b0\u7684\u914d\u7f6e\u3002\u5728 Raft \u4e2d\uff0c\u96c6\u7fa4\u5148\u5207\u6362\u5230\u4e00\u4e2a\u8fc7\u6e21\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5171\u540c\u4e00\u81f4\uff08 joint consensus )\uff1b\u4e00\u65e6\u5171\u540c\u4e00\u81f4\u5df2\u7ecf\u88ab\u63d0\u4ea4\u4e86\uff0c\u90a3\u4e48\u7cfb\u7edf\u5c31\u5207\u6362\u5230\u65b0\u7684\u914d\u7f6e\u4e0a\u3002\u5171\u540c\u4e00\u81f4\u662f\u8001\u914d\u7f6e\u548c\u65b0\u914d\u7f6e\u7684\u7ed3\u5408\uff1a \u65e5\u5fd7\u6761\u76ee\u88ab\u590d\u5236\u7ed9\u96c6\u7fa4\u4e2d\u65b0\u3001\u8001\u914d\u7f6e\u7684\u6240\u6709\u670d\u52a1\u5668\u3002 \u65b0\u3001\u65e7\u914d\u7f6e\u7684\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u6210\u4e3a\u9886\u5bfc\u4eba\u3002 \u8fbe\u6210\u4e00\u81f4\uff08\u9488\u5bf9\u9009\u4e3e\u548c\u63d0\u4ea4\uff09\u9700\u8981\u5206\u522b\u5728\u4e24\u79cd\u914d\u7f6e\u4e0a\u83b7\u5f97\u5927\u591a\u6570\u7684\u652f\u6301\u3002 \u5171\u540c\u4e00\u81f4\u5141\u8bb8\u72ec\u7acb\u7684\u670d\u52a1\u5668\u5728\u4e0d\u5f71\u54cd\u5b89\u5168\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u8fdb\u884c\u914d\u7f6e\u8f6c\u6362\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u5171\u540c\u4e00\u81f4\u53ef\u4ee5\u8ba9\u96c6\u7fa4\u5728\u914d\u7f6e\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u4f9d\u7136\u54cd\u5e94\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002 \u96c6\u7fa4\u914d\u7f6e\u5728\u590d\u5236\u65e5\u5fd7\u4e2d\u4ee5\u7279\u6b8a\u7684\u65e5\u5fd7\u6761\u76ee\u6765\u5b58\u50a8\u548c\u901a\u4fe1\uff1b\u56fe 11 \u5c55\u793a\u4e86\u914d\u7f6e\u8f6c\u6362\u7684\u8fc7\u7a0b\u3002\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u63a5\u6536\u5230\u4e00\u4e2a\u6539\u53d8\u914d\u7f6e\u4ece C-old \u5230 C-new \u7684\u8bf7\u6c42\uff0c\u4ed6\u4f1a\u4e3a\u4e86\u5171\u540c\u4e00\u81f4\u5b58\u50a8\u914d\u7f6e\uff08\u56fe\u4e2d\u7684 C-old,new\uff09\uff0c\u4ee5\u524d\u9762\u63cf\u8ff0\u7684\u65e5\u5fd7\u6761\u76ee\u548c\u526f\u672c\u7684\u5f62\u5f0f\u3002\u4e00\u65e6\u4e00\u4e2a\u670d\u52a1\u5668\u5c06\u65b0\u7684\u914d\u7f6e\u65e5\u5fd7\u6761\u76ee\u589e\u52a0\u5230\u5b83\u7684\u65e5\u5fd7\u4e2d\uff0c\u4ed6\u5c31\u4f1a\u7528\u8fd9\u4e2a\u914d\u7f6e\u6765\u505a\u51fa\u672a\u6765\u6240\u6709\u7684\u51b3\u5b9a\uff08\u670d\u52a1\u5668\u603b\u662f\u4f7f\u7528\u6700\u65b0\u7684\u914d\u7f6e\uff0c\u65e0\u8bba\u4ed6\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff09\u3002\u8fd9\u610f\u5473\u7740\u9886\u5bfc\u4eba\u8981\u4f7f\u7528 C-old,new \u7684\u89c4\u5219\u6765\u51b3\u5b9a\u65e5\u5fd7\u6761\u76ee C-old,new \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u88ab\u63d0\u4ea4\u3002\u5982\u679c\u9886\u5bfc\u4eba\u5d29\u6e83\u4e86\uff0c\u88ab\u9009\u51fa\u6765\u7684\u65b0\u9886\u5bfc\u4eba\u53ef\u80fd\u662f\u4f7f\u7528 C-old \u914d\u7f6e\u4e5f\u53ef\u80fd\u662f C-old,new \u914d\u7f6e\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8d62\u5f97\u9009\u4e3e\u7684\u5019\u9009\u4eba\u662f\u5426\u5df2\u7ecf\u63a5\u6536\u5230\u4e86 C-old,new \u914d\u7f6e\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c C-new \u914d\u7f6e\u5728\u8fd9\u4e00\u65f6\u671f\u90fd\u4e0d\u4f1a\u5355\u65b9\u9762\u7684\u505a\u51fa\u51b3\u5b9a\u3002 \u4e00\u65e6 C-old,new \u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u65e0\u8bba\u662f C-old \u8fd8\u662f C-new\uff0c\u5982\u679c\u4e0d\u7ecf\u8fc7\u53e6\u4e00\u4e2a\u914d\u7f6e\u7684\u5141\u8bb8\u90fd\u4e0d\u80fd\u5355\u72ec\u505a\u51fa\u51b3\u5b9a\uff0c\u5e76\u4e14\u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027\u4fdd\u8bc1\u4e86\u53ea\u6709\u62e5\u6709 C-old,new \u65e5\u5fd7\u6761\u76ee\u7684\u670d\u52a1\u5668\u624d\u6709\u53ef\u80fd\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u9886\u5bfc\u4eba\u521b\u5efa\u4e00\u6761\u5173\u4e8e C-new \u914d\u7f6e\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u590d\u5236\u7ed9\u96c6\u7fa4\u5c31\u662f\u5b89\u5168\u7684\u4e86\u3002\u518d\u8005\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u5728\u89c1\u5230\u65b0\u7684\u914d\u7f6e\u7684\u65f6\u5019\u5c31\u4f1a\u7acb\u5373\u751f\u6548\u3002\u5f53\u65b0\u7684\u914d\u7f6e\u5728 C-new \u7684\u89c4\u5219\u4e0b\u88ab\u63d0\u4ea4\uff0c\u65e7\u7684\u914d\u7f6e\u5c31\u53d8\u5f97\u65e0\u5173\u7d27\u8981\uff0c\u540c\u65f6\u4e0d\u4f7f\u7528\u65b0\u7684\u914d\u7f6e\u7684\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u88ab\u5173\u95ed\u4e86\u3002\u5982\u56fe 11\uff0cC-old \u548c C-new \u6ca1\u6709\u4efb\u4f55\u673a\u4f1a\u540c\u65f6\u505a\u51fa\u5355\u65b9\u9762\u7684\u51b3\u5b9a\uff1b\u8fd9\u4fdd\u8bc1\u4e86\u5b89\u5168\u6027\u3002 \u56fe 11\uff1a\u4e00\u4e2a\u914d\u7f6e\u5207\u6362\u7684\u65f6\u95f4\u7ebf\u3002\u865a\u7ebf\u8868\u793a\u5df2\u7ecf\u88ab\u521b\u5efa\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u7684\u914d\u7f6e\u65e5\u5fd7\u6761\u76ee\uff0c\u5b9e\u7ebf\u8868\u793a\u6700\u540e\u88ab\u63d0\u4ea4\u7684\u914d\u7f6e\u65e5\u5fd7\u6761\u76ee\u3002\u9886\u5bfc\u4eba\u9996\u5148\u521b\u5efa\u4e86 C-old,new \u7684\u914d\u7f6e\u6761\u76ee\u5728\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff0c\u5e76\u63d0\u4ea4\u5230 C-old,new \u4e2d\uff08C-old \u7684\u5927\u591a\u6570\u548c C-new \u7684\u5927\u591a\u6570\uff09\u3002\u7136\u540e\u4ed6\u521b\u5efa C-new \u6761\u76ee\u5e76\u63d0\u4ea4\u5230 C-new \u4e2d\u7684\u5927\u591a\u6570\u3002\u8fd9\u6837\u5c31\u4e0d\u5b58\u5728 C-new \u548c C-old \u53ef\u4ee5\u540c\u65f6\u505a\u51fa\u51b3\u5b9a\u7684\u65f6\u95f4\u70b9\u3002 \u5728\u5173\u4e8e\u91cd\u65b0\u914d\u7f6e\u8fd8\u6709\u4e09\u4e2a\u95ee\u9898\u9700\u8981\u63d0\u51fa\u3002\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u65b0\u7684\u670d\u52a1\u5668\u53ef\u80fd\u521d\u59cb\u5316\u6ca1\u6709\u5b58\u50a8\u4efb\u4f55\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5f53\u8fd9\u4e9b\u670d\u52a1\u5668\u4ee5\u8fd9\u79cd\u72b6\u6001\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\uff0c\u90a3\u4e48\u4ed6\u4eec\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u6765\u66f4\u65b0\u8ffd\u8d76\uff0c\u8fd9\u65f6\u8fd8\u4e0d\u80fd\u63d0\u4ea4\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u53ef\u7528\u6027\u7684\u95f4\u9694\u65f6\u95f4\uff0cRaft \u5728\u914d\u7f6e\u66f4\u65b0\u4e4b\u524d\u4f7f\u7528\u4e86\u4e00\u79cd\u989d\u5916\u7684\u9636\u6bb5\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u65b0\u7684\u670d\u52a1\u5668\u4ee5\u6ca1\u6709\u6295\u7968\u6743\u8eab\u4efd\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\u6765\uff08\u9886\u5bfc\u4eba\u590d\u5236\u65e5\u5fd7\u7ed9\u4ed6\u4eec\uff0c\u4f46\u662f\u4e0d\u8003\u8651\u4ed6\u4eec\u662f\u5927\u591a\u6570\uff09\u3002\u4e00\u65e6\u65b0\u7684\u670d\u52a1\u5668\u8ffd\u8d76\u4e0a\u4e86\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u673a\u5668\uff0c\u91cd\u65b0\u914d\u7f6e\u53ef\u4ee5\u50cf\u4e0a\u9762\u63cf\u8ff0\u7684\u4e00\u6837\u5904\u7406\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u96c6\u7fa4\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u4e0d\u662f\u65b0\u914d\u7f6e\u7684\u4e00\u5458\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9886\u5bfc\u4eba\u5c31\u4f1a\u5728\u63d0\u4ea4\u4e86 C-new \u65e5\u5fd7\u4e4b\u540e\u9000\u4f4d\uff08\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\uff09\u3002\u8fd9\u610f\u5473\u7740\u6709\u8fd9\u6837\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u9886\u5bfc\u4eba\u7ba1\u7406\u7740\u96c6\u7fa4\uff0c\u4f46\u662f\u4e0d\u5305\u62ec\u4ed6\u81ea\u5df1\uff1b\u4ed6\u590d\u5236\u65e5\u5fd7\u4f46\u662f\u4e0d\u628a\u4ed6\u81ea\u5df1\u7b97\u4f5c\u662f\u5927\u591a\u6570\u4e4b\u4e00\u3002\u5f53 C-new \u88ab\u63d0\u4ea4\u65f6\uff0c\u4f1a\u53d1\u751f\u9886\u5bfc\u4eba\u8fc7\u6e21\uff0c\u56e0\u4e3a\u8fd9\u65f6\u662f\u6700\u65e9\u65b0\u7684\u914d\u7f6e\u53ef\u4ee5\u72ec\u7acb\u5de5\u4f5c\u7684\u65f6\u95f4\u70b9\uff08\u5c06\u603b\u662f\u80fd\u591f\u5728 C-new \u914d\u7f6e\u4e0b\u9009\u51fa\u65b0\u7684\u9886\u5bfc\u4eba\uff09\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u53ef\u80fd\u53ea\u80fd\u4ece C-old \u4e2d\u9009\u51fa\u9886\u5bfc\u4eba\u3002 \u7b2c\u4e09\u4e2a\u95ee\u9898\u662f\uff0c\u79fb\u9664\u4e0d\u5728 C-new \u4e2d\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u6270\u4e71\u96c6\u7fa4\u3002\u8fd9\u4e9b\u670d\u52a1\u5668\u5c06\u4e0d\u4f1a\u518d\u63a5\u6536\u5230\u5fc3\u8df3\uff0c\u6240\u4ee5\u5f53\u9009\u4e3e\u8d85\u65f6\uff0c\u4ed6\u4eec\u5c31\u4f1a\u8fdb\u884c\u65b0\u7684\u9009\u4e3e\u8fc7\u7a0b\u3002\u4ed6\u4eec\u4f1a\u53d1\u9001\u62e5\u6709\u65b0\u7684\u4efb\u671f\u53f7\u7684\u8bf7\u6c42\u6295\u7968 RPCs\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5f53\u524d\u7684\u9886\u5bfc\u4eba\u56de\u9000\u6210\u8ddf\u968f\u8005\u72b6\u6001\u3002\u65b0\u7684\u9886\u5bfc\u4eba\u6700\u7ec8\u4f1a\u88ab\u9009\u51fa\u6765\uff0c\u4f46\u662f\u88ab\u79fb\u9664\u7684\u670d\u52a1\u5668\u5c06\u4f1a\u518d\u6b21\u8d85\u65f6\uff0c\u7136\u540e\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u518d\u6b21\u91cd\u590d\uff0c\u5bfc\u81f4\u6574\u4f53\u53ef\u7528\u6027\u5927\u5e45\u964d\u4f4e\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f53\u670d\u52a1\u5668\u786e\u8ba4\u5f53\u524d\u9886\u5bfc\u4eba\u5b58\u5728\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u5ffd\u7565\u8bf7\u6c42\u6295\u7968 RPCs\u3002\u7279\u522b\u7684\uff0c\u5f53\u670d\u52a1\u5668\u5728\u5f53\u524d\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5185\u6536\u5230\u4e00\u4e2a\u8bf7\u6c42\u6295\u7968 RPC\uff0c\u4ed6\u4e0d\u4f1a\u66f4\u65b0\u5f53\u524d\u7684\u4efb\u671f\u53f7\u6216\u8005\u6295\u51fa\u9009\u7968\u3002\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u6b63\u5e38\u7684\u9009\u4e3e\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u5728\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u4e4b\u524d\uff0c\u81f3\u5c11\u7b49\u5f85\u4e00\u4e2a\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u3002\u7136\u800c\uff0c\u8fd9\u6709\u5229\u4e8e\u907f\u514d\u88ab\u79fb\u9664\u7684\u670d\u52a1\u5668\u6270\u4e71\uff1a\u5982\u679c\u9886\u5bfc\u4eba\u80fd\u591f\u53d1\u9001\u5fc3\u8df3\u7ed9\u96c6\u7fa4\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u4f1a\u88ab\u66f4\u5927\u7684\u4efb\u671f\u53f7\u5e9f\u9edc\u3002 7 \u65e5\u5fd7\u538b\u7f29 \u00b6 Raft \u7684\u65e5\u5fd7\u5728\u6b63\u5e38\u64cd\u4f5c\u4e2d\u4e0d\u65ad\u5730\u589e\u957f\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\uff0c\u65e5\u5fd7\u4e0d\u80fd\u65e0\u9650\u5236\u5730\u589e\u957f\u3002\u968f\u7740\u65e5\u5fd7\u4e0d\u65ad\u589e\u957f\uff0c\u4ed6\u4f1a\u5360\u7528\u8d8a\u6765\u8d8a\u591a\u7684\u7a7a\u95f4\uff0c\u82b1\u8d39\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u95f4\u6765\u91cd\u7f6e\u3002\u5982\u679c\u6ca1\u6709\u4e00\u5b9a\u7684\u673a\u5236\u53bb\u6e05\u9664\u65e5\u5fd7\u91cc\u79ef\u7d2f\u7684\u9648\u65e7\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u4f1a\u5e26\u6765\u53ef\u7528\u6027\u95ee\u9898\u3002 \u5feb\u7167\u662f\u6700\u7b80\u5355\u7684\u538b\u7f29\u65b9\u6cd5\u3002\u5728\u5feb\u7167\u7cfb\u7edf\u4e2d\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u72b6\u6001\u90fd\u4ee5\u5feb\u7167\u7684\u5f62\u5f0f\u5199\u5165\u5230\u7a33\u5b9a\u7684\u6301\u4e45\u5316\u5b58\u50a8\u4e2d\uff0c\u7136\u540e\u5230\u90a3\u4e2a\u65f6\u95f4\u70b9\u4e4b\u524d\u7684\u65e5\u5fd7\u5168\u90e8\u4e22\u5f03\u3002\u5feb\u7167\u6280\u672f\u88ab\u4f7f\u7528\u5728 Chubby \u548c ZooKeeper \u4e2d\uff0c\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4f1a\u4ecb\u7ecd Raft \u4e2d\u7684\u5feb\u7167\u6280\u672f\u3002 \u589e\u91cf\u538b\u7f29\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u65e5\u5fd7\u6e05\u7406\u6216\u8005\u65e5\u5fd7\u7ed3\u6784\u5408\u5e76\u6811\uff0c\u90fd\u662f\u53ef\u884c\u7684\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6bcf\u6b21\u53ea\u5bf9\u4e00\u5c0f\u90e8\u5206\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u5206\u6563\u4e86\u538b\u7f29\u7684\u8d1f\u8f7d\u538b\u529b\u3002\u9996\u5148\uff0c\u4ed6\u4eec\u5148\u9009\u62e9\u4e00\u4e2a\u5df2\u7ecf\u79ef\u7d2f\u7684\u5927\u91cf\u5df2\u7ecf\u88ab\u5220\u9664\u6216\u8005\u88ab\u8986\u76d6\u5bf9\u8c61\u7684\u533a\u57df\uff0c\u7136\u540e\u91cd\u5199\u90a3\u4e2a\u533a\u57df\u8fd8\u6d3b\u8dc3\u7684\u5bf9\u8c61\uff0c\u4e4b\u540e\u91ca\u653e\u90a3\u4e2a\u533a\u57df\u3002\u548c\u7b80\u5355\u64cd\u4f5c\u6574\u4e2a\u6570\u636e\u96c6\u5408\u7684\u5feb\u7167\u76f8\u6bd4\uff0c\u9700\u8981\u589e\u52a0\u590d\u6742\u7684\u673a\u5236\u6765\u5b9e\u73b0\u3002\u72b6\u6001\u673a\u53ef\u4ee5\u5b9e\u73b0 LSM tree \u4f7f\u7528\u548c\u5feb\u7167\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u4f46\u662f\u65e5\u5fd7\u6e05\u9664\u65b9\u6cd5\u5c31\u9700\u8981\u4fee\u6539 Raft \u4e86\u3002 \u56fe 12\uff1a\u4e00\u4e2a\u670d\u52a1\u5668\u7528\u65b0\u7684\u5feb\u7167\u66ff\u6362\u4e86\u4ece 1 \u5230 5 \u7684\u6761\u76ee\uff0c\u5feb\u7167\u503c\u5b58\u50a8\u4e86\u5f53\u524d\u7684\u72b6\u6001\u3002\u5feb\u7167\u4e2d\u5305\u542b\u4e86\u6700\u540e\u7684\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u3002 \u56fe 12 \u5c55\u793a\u4e86 Raft \u4e2d\u5feb\u7167\u7684\u57fa\u7840\u601d\u60f3\u3002\u6bcf\u4e2a\u670d\u52a1\u5668\u72ec\u7acb\u5730\u521b\u5efa\u5feb\u7167\uff0c\u53ea\u5305\u62ec\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u3002\u4e3b\u8981\u7684\u5de5\u4f5c\u5305\u62ec\u5c06\u72b6\u6001\u673a\u7684\u72b6\u6001\u5199\u5165\u5230\u5feb\u7167\u4e2d\u3002Raft \u4e5f\u5305\u542b\u4e00\u4e9b\u5c11\u91cf\u7684\u5143\u6570\u636e\u5230\u5feb\u7167\u4e2d\uff1a**\u6700\u540e\u88ab\u5305\u542b\u7d22\u5f15**\u6307\u7684\u662f\u88ab\u5feb\u7167\u53d6\u4ee3\u7684\u6700\u540e\u7684\u6761\u76ee\u5728\u65e5\u5fd7\u4e2d\u7684\u7d22\u5f15\u503c\uff08\u72b6\u6001\u673a\u6700\u540e\u5e94\u7528\u7684\u65e5\u5fd7\uff09\uff0c**\u6700\u540e\u88ab\u5305\u542b\u7684\u4efb\u671f**\u6307\u7684\u662f\u8be5\u6761\u76ee\u7684\u4efb\u671f\u53f7\u3002\u4fdd\u7559\u8fd9\u4e9b\u6570\u636e\u662f\u4e3a\u4e86\u652f\u6301\u5feb\u7167\u540e\u7d27\u63a5\u7740\u7684\u7b2c\u4e00\u4e2a\u6761\u76ee\u7684\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\u65f6\u7684\u4e00\u81f4\u6027\u68c0\u67e5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6761\u76ee\u9700\u8981\u524d\u4e00\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\u3002\u4e3a\u4e86\u652f\u6301\u96c6\u7fa4\u6210\u5458\u66f4\u65b0\uff08\u7b2c 6 \u8282\uff09\uff0c\u5feb\u7167\u4e2d\u4e5f\u5c06\u6700\u540e\u7684\u4e00\u6b21\u914d\u7f6e\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u6761\u76ee\u5b58\u4e0b\u6765\u3002\u4e00\u65e6\u670d\u52a1\u5668\u5b8c\u6210\u4e00\u6b21\u5feb\u7167\uff0c\u4ed6\u5c31\u53ef\u4ee5\u5220\u9664\u6700\u540e\u7d22\u5f15\u4f4d\u7f6e\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u548c\u5feb\u7167\u4e86\u3002 \u5c3d\u7ba1\u901a\u5e38\u670d\u52a1\u5668\u90fd\u662f\u72ec\u7acb\u5730\u521b\u5efa\u5feb\u7167\uff0c\u4f46\u662f\u9886\u5bfc\u4eba\u5fc5\u987b\u5076\u5c14\u7684\u53d1\u9001\u5feb\u7167\u7ed9\u4e00\u4e9b\u843d\u540e\u7684\u8ddf\u968f\u8005\u3002\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u5f53\u9886\u5bfc\u4eba\u5df2\u7ecf\u4e22\u5f03\u4e86\u4e0b\u4e00\u6761\u9700\u8981\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u65f6\u5019\u3002\u5e78\u8fd0\u7684\u662f\u8fd9\u79cd\u60c5\u51b5\u4e0d\u662f\u5e38\u89c4\u64cd\u4f5c\uff1a\u4e00\u4e2a\u4e0e\u9886\u5bfc\u4eba\u4fdd\u6301\u540c\u6b65\u7684\u8ddf\u968f\u8005\u901a\u5e38\u90fd\u4f1a\u6709\u8fd9\u4e2a\u6761\u76ee\u3002\u7136\u800c\u4e00\u4e2a\u8fd0\u884c\u975e\u5e38\u7f13\u6162\u7684\u8ddf\u968f\u8005\u6216\u8005\u65b0\u52a0\u5165\u96c6\u7fa4\u7684\u670d\u52a1\u5668\uff08\u7b2c 6 \u8282\uff09\u5c06\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u6761\u76ee\u3002\u8fd9\u65f6\u8ba9\u8fd9\u4e2a\u8ddf\u968f\u8005\u66f4\u65b0\u5230\u6700\u65b0\u7684\u72b6\u6001\u7684\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7\u7f51\u7edc\u628a\u5feb\u7167\u53d1\u9001\u7ed9\u4ed6\u4eec\u3002 \u5b89\u88c5\u5feb\u7167 RPC \uff1a \u7531\u9886\u5bfc\u4eba\u8c03\u7528\u4ee5\u5c06\u5feb\u7167\u7684\u5206\u5757\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u3002\u9886\u5bfc\u4eba\u603b\u662f\u6309\u987a\u5e8f\u53d1\u9001\u5206\u5757\u3002 \u53c2\u6570 \u89e3\u91ca term \u9886\u5bfc\u4eba\u7684\u4efb\u671f\u53f7 leaderId \u9886\u5bfc\u4eba\u7684 ID\uff0c\u4ee5\u4fbf\u4e8e\u8ddf\u968f\u8005\u91cd\u5b9a\u5411\u8bf7\u6c42 lastIncludedIndex \u5feb\u7167\u4e2d\u5305\u542b\u7684\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c lastIncludedTerm \u5feb\u7167\u4e2d\u5305\u542b\u7684\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f\u53f7 offset \u5206\u5757\u5728\u5feb\u7167\u4e2d\u7684\u5b57\u8282\u504f\u79fb\u91cf data[] \u4ece\u504f\u79fb\u91cf\u5f00\u59cb\u7684\u5feb\u7167\u5206\u5757\u7684\u539f\u59cb\u5b57\u8282 done \u5982\u679c\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u5206\u5757\u5219\u4e3a true \u7ed3\u679c \u89e3\u91ca term \u5f53\u524d\u4efb\u671f\u53f7\uff08currentTerm\uff09\uff0c\u4fbf\u4e8e\u9886\u5bfc\u4eba\u66f4\u65b0\u81ea\u5df1 \u63a5\u6536\u8005\u5b9e\u73b0 \uff1a \u5982\u679c term < currentTerm \u5c31\u7acb\u5373\u56de\u590d \u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u5206\u5757\uff08offset \u4e3a 0\uff09\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5feb\u7167 \u5728\u6307\u5b9a\u504f\u79fb\u91cf\u5199\u5165\u6570\u636e \u5982\u679c done \u662f false\uff0c\u5219\u7ee7\u7eed\u7b49\u5f85\u66f4\u591a\u7684\u6570\u636e \u4fdd\u5b58\u5feb\u7167\u6587\u4ef6\uff0c\u4e22\u5f03\u5177\u6709\u8f83\u5c0f\u7d22\u5f15\u7684\u4efb\u4f55\u73b0\u6709\u6216\u90e8\u5206\u5feb\u7167 \u5982\u679c\u73b0\u5b58\u7684\u65e5\u5fd7\u6761\u76ee\u4e0e\u5feb\u7167\u4e2d\u6700\u540e\u5305\u542b\u7684\u65e5\u5fd7\u6761\u76ee\u5177\u6709\u76f8\u540c\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\uff0c\u5219\u4fdd\u7559\u5176\u540e\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u8fdb\u884c\u56de\u590d \u4e22\u5f03\u6574\u4e2a\u65e5\u5fd7 \u4f7f\u7528\u5feb\u7167\u91cd\u7f6e\u72b6\u6001\u673a\uff08\u5e76\u52a0\u8f7d\u5feb\u7167\u7684\u96c6\u7fa4\u914d\u7f6e\uff09 \u56fe 13\uff1a\u4e00\u4e2a\u5173\u4e8e\u5b89\u88c5\u5feb\u7167\u7684\u7b80\u8981\u6982\u8ff0\u3002\u4e3a\u4e86\u4fbf\u4e8e\u4f20\u8f93\uff0c\u5feb\u7167\u90fd\u662f\u88ab\u5206\u6210\u5206\u5757\u7684\uff1b\u6bcf\u4e2a\u5206\u5757\u90fd\u7ed9\u4e86\u8ddf\u968f\u8005\u751f\u547d\u7684\u8ff9\u8c61\uff0c\u6240\u4ee5\u8ddf\u968f\u8005\u53ef\u4ee5\u91cd\u7f6e\u9009\u4e3e\u8d85\u65f6\u8ba1\u65f6\u5668\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9886\u5bfc\u4eba\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u5b89\u88c5\u5feb\u7167\u7684\u65b0\u7684 RPC \u6765\u53d1\u9001\u5feb\u7167\u7ed9\u592a\u843d\u540e\u7684\u8ddf\u968f\u8005\uff1b\u89c1\u56fe 13\u3002\u5f53\u8ddf\u968f\u8005\u901a\u8fc7\u8fd9\u79cd RPC \u63a5\u6536\u5230\u5feb\u7167\u65f6\uff0c\u4ed6\u5fc5\u987b\u81ea\u5df1\u51b3\u5b9a\u5bf9\u4e8e\u5df2\u7ecf\u5b58\u5728\u7684\u65e5\u5fd7\u8be5\u5982\u4f55\u5904\u7406\u3002\u901a\u5e38\u5feb\u7167\u4f1a\u5305\u542b\u6ca1\u6709\u5728\u63a5\u6536\u8005\u65e5\u5fd7\u4e2d\u5b58\u5728\u7684\u4fe1\u606f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8ddf\u968f\u8005\u4e22\u5f03\u5176\u6574\u4e2a\u65e5\u5fd7\uff1b\u5b83\u5168\u90e8\u88ab\u5feb\u7167\u53d6\u4ee3\uff0c\u5e76\u4e14\u53ef\u80fd\u5305\u542b\u4e0e\u5feb\u7167\u51b2\u7a81\u7684\u672a\u63d0\u4ea4\u6761\u76ee\u3002\u5982\u679c\u63a5\u6536\u5230\u7684\u5feb\u7167\u662f\u81ea\u5df1\u65e5\u5fd7\u7684\u524d\u9762\u90e8\u5206\uff08\u7531\u4e8e\u7f51\u7edc\u91cd\u4f20\u6216\u8005\u9519\u8bef\uff09\uff0c\u90a3\u4e48\u88ab\u5feb\u7167\u5305\u542b\u7684\u6761\u76ee\u5c06\u4f1a\u88ab\u5168\u90e8\u5220\u9664\uff0c\u4f46\u662f\u5feb\u7167\u540e\u9762\u7684\u6761\u76ee\u4ecd\u7136\u6709\u6548\uff0c\u5fc5\u987b\u4fdd\u7559\u3002 \u8fd9\u79cd\u5feb\u7167\u7684\u65b9\u5f0f\u80cc\u79bb\u4e86 Raft \u7684\u5f3a\u9886\u5bfc\u4eba\u539f\u5219\uff0c\u56e0\u4e3a\u8ddf\u968f\u8005\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053\u9886\u5bfc\u4eba\u60c5\u51b5\u4e0b\u521b\u5efa\u5feb\u7167\u3002\u4f46\u662f\u6211\u4eec\u8ba4\u4e3a\u8fd9\u79cd\u80cc\u79bb\u662f\u503c\u5f97\u7684\u3002\u9886\u5bfc\u4eba\u7684\u5b58\u5728\uff0c\u662f\u4e3a\u4e86\u89e3\u51b3\u5728\u8fbe\u6210\u4e00\u81f4\u6027\u7684\u65f6\u5019\u7684\u51b2\u7a81\uff0c\u4f46\u662f\u5728\u521b\u5efa\u5feb\u7167\u7684\u65f6\u5019\uff0c\u4e00\u81f4\u6027\u5df2\u7ecf\u8fbe\u6210\uff0c\u8fd9\u65f6\u4e0d\u5b58\u5728\u51b2\u7a81\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u9886\u5bfc\u4eba\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u6570\u636e\u4f9d\u7136\u662f\u4ece\u9886\u5bfc\u4eba\u4f20\u7ed9\u8ddf\u968f\u8005\uff0c\u53ea\u662f\u8ddf\u968f\u8005\u53ef\u4ee5\u91cd\u65b0\u7ec4\u7ec7\u4ed6\u4eec\u7684\u6570\u636e\u4e86\u3002 \u6211\u4eec\u8003\u8651\u8fc7\u4e00\u79cd\u66ff\u4ee3\u7684\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u5feb\u7167\u65b9\u6848\uff0c\u5373\u53ea\u6709\u9886\u5bfc\u4eba\u521b\u5efa\u5feb\u7167\uff0c\u7136\u540e\u53d1\u9001\u7ed9\u6240\u6709\u7684\u8ddf\u968f\u8005\u3002\u4f46\u662f\u8fd9\u6837\u505a\u6709\u4e24\u4e2a\u7f3a\u70b9\u3002\u7b2c\u4e00\uff0c\u53d1\u9001\u5feb\u7167\u4f1a\u6d6a\u8d39\u7f51\u7edc\u5e26\u5bbd\u5e76\u4e14\u5ef6\u7f13\u4e86\u5feb\u7167\u5904\u7406\u7684\u65f6\u95f4\u3002\u6bcf\u4e2a\u8ddf\u968f\u8005\u90fd\u5df2\u7ecf\u62e5\u6709\u4e86\u6240\u6709\u4ea7\u751f\u5feb\u7167\u9700\u8981\u7684\u4fe1\u606f\uff0c\u800c\u4e14\u5f88\u663e\u7136\uff0c\u81ea\u5df1\u4ece\u672c\u5730\u7684\u72b6\u6001\u4e2d\u521b\u5efa\u5feb\u7167\u6bd4\u901a\u8fc7\u7f51\u7edc\u63a5\u6536\u522b\u4eba\u53d1\u6765\u7684\u8981\u7ecf\u6d4e\u3002\u7b2c\u4e8c\uff0c\u9886\u5bfc\u4eba\u7684\u5b9e\u73b0\u4f1a\u66f4\u52a0\u590d\u6742\u3002\u4f8b\u5982\uff0c\u9886\u5bfc\u4eba\u9700\u8981\u53d1\u9001\u5feb\u7167\u7684\u540c\u65f6\u5e76\u884c\u7684\u5c06\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\uff0c\u8fd9\u6837\u624d\u4e0d\u4f1a\u963b\u585e\u65b0\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002 \u8fd8\u6709\u4e24\u4e2a\u95ee\u9898\u5f71\u54cd\u4e86\u5feb\u7167\u7684\u6027\u80fd\u3002\u9996\u5148\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u521b\u5efa\u5feb\u7167\u3002\u5982\u679c\u5feb\u7167\u521b\u5efa\u7684\u8fc7\u4e8e\u9891\u7e41\uff0c\u90a3\u4e48\u5c31\u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u78c1\u76d8\u5e26\u5bbd\u548c\u5176\u4ed6\u8d44\u6e90\uff1b\u5982\u679c\u521b\u5efa\u5feb\u7167\u9891\u7387\u592a\u4f4e\uff0c\u4ed6\u5c31\u8981\u627f\u53d7\u8017\u5c3d\u5b58\u50a8\u5bb9\u91cf\u7684\u98ce\u9669\uff0c\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u4ece\u65e5\u5fd7\u91cd\u5efa\u7684\u65f6\u95f4\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u7b56\u7565\u5c31\u662f\u5f53\u65e5\u5fd7\u5927\u5c0f\u8fbe\u5230\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u65f6\u5019\u5c31\u521b\u5efa\u4e00\u6b21\u5feb\u7167\u3002\u5982\u679c\u8fd9\u4e2a\u9608\u503c\u8bbe\u7f6e\u7684\u663e\u8457\u5927\u4e8e\u671f\u671b\u7684\u5feb\u7167\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u5feb\u7167\u5bf9\u78c1\u76d8\u538b\u529b\u7684\u5f71\u54cd\u5c31\u4f1a\u5f88\u5c0f\u4e86\u3002 \u7b2c\u4e8c\u4e2a\u5f71\u54cd\u6027\u80fd\u7684\u95ee\u9898\u5c31\u662f\u5199\u5165\u5feb\u7167\u9700\u8981\u82b1\u8d39\u663e\u8457\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u5e76\u4e14\u6211\u4eec\u8fd8\u4e0d\u5e0c\u671b\u5f71\u54cd\u5230\u6b63\u5e38\u64cd\u4f5c\u3002\u89e3\u51b3\u65b9\u6848\u662f\u901a\u8fc7\u5199\u65f6\u590d\u5236\u7684\u6280\u672f\uff0c\u8fd9\u6837\u65b0\u7684\u66f4\u65b0\u5c31\u53ef\u4ee5\u88ab\u63a5\u6536\u800c\u4e0d\u5f71\u54cd\u5230\u5feb\u7167\u3002\u4f8b\u5982\uff0c\u5177\u6709\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\u7684\u72b6\u6001\u673a\u5929\u7136\u652f\u6301\u8fd9\u6837\u7684\u529f\u80fd\u3002\u53e6\u5916\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5199\u65f6\u590d\u5236\u6280\u672f\u7684\u652f\u6301\uff08\u5982 Linux \u4e0a\u7684 fork\uff09\u53ef\u4ee5\u88ab\u7528\u6765\u521b\u5efa\u5b8c\u6574\u7684\u72b6\u6001\u673a\u7684\u5185\u5b58\u5feb\u7167\uff08\u6211\u4eec\u7684\u5b9e\u73b0\u5c31\u662f\u8fd9\u6837\u7684\uff09\u3002 8 \u5ba2\u6237\u7aef\u4ea4\u4e92 \u00b6 \u8fd9\u4e00\u8282\u5c06\u4ecb\u7ecd\u5ba2\u6237\u7aef\u662f\u5982\u4f55\u548c Raft \u8fdb\u884c\u4ea4\u4e92\u7684\uff0c\u5305\u62ec\u5ba2\u6237\u7aef\u5982\u4f55\u53d1\u73b0\u9886\u5bfc\u4eba\u548c Raft \u662f\u5982\u4f55\u652f\u6301\u7ebf\u6027\u5316\u8bed\u4e49\u7684\u3002\u8fd9\u4e9b\u95ee\u9898\u5bf9\u4e8e\u6240\u6709\u57fa\u4e8e\u4e00\u81f4\u6027\u7684\u7cfb\u7edf\u90fd\u5b58\u5728\uff0c\u5e76\u4e14 Raft \u7684\u89e3\u51b3\u65b9\u6848\u548c\u5176\u4ed6\u7684\u4e5f\u5dee\u4e0d\u591a\u3002 Raft \u4e2d\u7684\u5ba2\u6237\u7aef\u53d1\u9001\u6240\u6709\u8bf7\u6c42\u7ed9\u9886\u5bfc\u4eba\u3002\u5f53\u5ba2\u6237\u7aef\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4ed6\u4f1a\u968f\u673a\u6311\u9009\u4e00\u4e2a\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u679c\u5ba2\u6237\u7aef\u7b2c\u4e00\u6b21\u6311\u9009\u7684\u670d\u52a1\u5668\u4e0d\u662f\u9886\u5bfc\u4eba\uff0c\u90a3\u4e48\u90a3\u4e2a\u670d\u52a1\u5668\u4f1a\u62d2\u7edd\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5e76\u4e14\u63d0\u4f9b\u4ed6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u9886\u5bfc\u4eba\u7684\u4fe1\u606f\uff08\u9644\u52a0\u6761\u76ee\u8bf7\u6c42\u5305\u542b\u4e86\u9886\u5bfc\u4eba\u7684\u7f51\u7edc\u5730\u5740\uff09\u3002\u5982\u679c\u9886\u5bfc\u4eba\u5df2\u7ecf\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5c31\u4f1a\u8d85\u65f6\uff1b\u5ba2\u6237\u7aef\u4e4b\u540e\u4f1a\u518d\u6b21\u91cd\u8bd5\u968f\u673a\u6311\u9009\u670d\u52a1\u5668\u7684\u8fc7\u7a0b\u3002 \u6211\u4eec Raft \u7684\u76ee\u6807\u662f\u8981\u5b9e\u73b0\u7ebf\u6027\u5316\u8bed\u4e49\uff08\u6bcf\u4e00\u6b21\u64cd\u4f5c\u7acb\u5373\u6267\u884c\uff0c\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u5728\u4ed6\u8c03\u7528\u548c\u6536\u5230\u56de\u590d\u4e4b\u95f4\uff09\u3002\u4f46\u662f\uff0c\u5982\u4e0a\u8ff0\uff0cRaft \u662f\u53ef\u80fd\u6267\u884c\u540c\u4e00\u6761\u547d\u4ee4\u591a\u6b21\u7684\uff1a\u4f8b\u5982\uff0c\u5982\u679c\u9886\u5bfc\u4eba\u5728\u63d0\u4ea4\u4e86\u8fd9\u6761\u65e5\u5fd7\u4e4b\u540e\uff0c\u4f46\u662f\u5728\u54cd\u5e94\u5ba2\u6237\u7aef\u4e4b\u524d\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u4f1a\u548c\u65b0\u7684\u9886\u5bfc\u4eba\u91cd\u8bd5\u8fd9\u6761\u6307\u4ee4\uff0c\u5bfc\u81f4\u8fd9\u6761\u547d\u4ee4\u5c31\u88ab\u518d\u6b21\u6267\u884c\u4e86\u3002\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5ba2\u6237\u7aef\u5bf9\u4e8e\u6bcf\u4e00\u6761\u6307\u4ee4\u90fd\u8d4b\u4e88\u4e00\u4e2a\u552f\u4e00\u7684\u5e8f\u5217\u53f7\u3002\u7136\u540e\uff0c\u72b6\u6001\u673a\u8ddf\u8e2a\u6bcf\u6761\u6307\u4ee4\u6700\u65b0\u7684\u5e8f\u5217\u53f7\u548c\u76f8\u5e94\u7684\u54cd\u5e94\u3002\u5982\u679c\u63a5\u6536\u5230\u4e00\u6761\u6307\u4ee4\uff0c\u5b83\u7684\u5e8f\u5217\u53f7\u5df2\u7ecf\u88ab\u6267\u884c\u4e86\uff0c\u90a3\u4e48\u5c31\u7acb\u5373\u8fd4\u56de\u7ed3\u679c\uff0c\u800c\u4e0d\u91cd\u65b0\u6267\u884c\u6307\u4ee4\u3002 \u53ea\u8bfb\u7684\u64cd\u4f5c\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u800c\u4e0d\u9700\u8981\u8bb0\u5f55\u65e5\u5fd7\u3002\u4f46\u662f\uff0c\u5728\u4e0d\u589e\u52a0\u4efb\u4f55\u9650\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e48\u505a\u53ef\u80fd\u4f1a\u5192\u7740\u8fd4\u56de\u810f\u6570\u636e\u7684\u98ce\u9669\uff0c\u56e0\u4e3a\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u5728\u4ed6\u4e0d\u77e5\u9053\u7684\u65f6\u5019\u5df2\u7ecf\u88ab\u65b0\u7684\u9886\u5bfc\u4eba\u53d6\u4ee3\u4e86\u3002\u7ebf\u6027\u5316\u7684\u8bfb\u64cd\u4f5c\u5fc5\u987b\u4e0d\u80fd\u8fd4\u56de\u810f\u6570\u636e\uff0cRaft \u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u989d\u5916\u7684\u63aa\u65bd\u5728\u4e0d\u4f7f\u7528\u65e5\u5fd7\u7684\u60c5\u51b5\u4e0b\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u3002\u9996\u5148\uff0c\u9886\u5bfc\u4eba\u5fc5\u987b\u6709\u5173\u4e8e\u88ab\u63d0\u4ea4\u65e5\u5fd7\u7684\u6700\u65b0\u4fe1\u606f\u3002\u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027\u4fdd\u8bc1\u4e86\u9886\u5bfc\u4eba\u4e00\u5b9a\u62e5\u6709\u6240\u6709\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4f46\u662f\u5728\u4ed6\u4efb\u671f\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u4ed6\u53ef\u80fd\u4e0d\u77e5\u9053\u54ea\u4e9b\u662f\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u3002\u4e3a\u4e86\u77e5\u9053\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4ed6\u9700\u8981\u5728\u4ed6\u7684\u4efb\u671f\u91cc\u63d0\u4ea4\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u3002Raft \u4e2d\u901a\u8fc7\u9886\u5bfc\u4eba\u5728\u4efb\u671f\u5f00\u59cb\u7684\u65f6\u5019\u63d0\u4ea4\u4e00\u4e2a\u7a7a\u767d\u7684\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u7684\u65e5\u5fd7\u6761\u76ee\u5230\u65e5\u5fd7\u4e2d\u53bb\u6765\u5b9e\u73b0\u3002\u7b2c\u4e8c\uff0c\u9886\u5bfc\u4eba\u5728\u5904\u7406\u53ea\u8bfb\u7684\u8bf7\u6c42\u4e4b\u524d\u5fc5\u987b\u68c0\u67e5\u81ea\u5df1\u662f\u5426\u5df2\u7ecf\u88ab\u5e9f\u9edc\u4e86\uff08\u4ed6\u81ea\u5df1\u7684\u4fe1\u606f\u5df2\u7ecf\u53d8\u810f\u4e86\u5982\u679c\u4e00\u4e2a\u66f4\u65b0\u7684\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff09\u3002Raft \u4e2d\u901a\u8fc7\u8ba9\u9886\u5bfc\u4eba\u5728\u54cd\u5e94\u53ea\u8bfb\u8bf7\u6c42\u4e4b\u524d\uff0c\u5148\u548c\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u8282\u70b9\u4ea4\u6362\u4e00\u6b21\u5fc3\u8df3\u4fe1\u606f\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u53ef\u9009\u7684\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u4f9d\u8d56\u5fc3\u8df3\u673a\u5236\u6765\u5b9e\u73b0\u4e00\u79cd\u79df\u7ea6\u7684\u673a\u5236\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4f9d\u8d56\u65f6\u95f4\u6765\u4fdd\u8bc1\u5b89\u5168\u6027\uff08\u5047\u8bbe\u65f6\u95f4\u8bef\u5dee\u662f\u6709\u754c\u7684\uff09\u3002 9 \u7b97\u6cd5\u5b9e\u73b0\u548c\u8bc4\u4f30 \u00b6 \u6211\u4eec\u5df2\u7ecf\u4e3a RAMCloud \u5b9e\u73b0\u4e86 Raft \u7b97\u6cd5\u4f5c\u4e3a\u5b58\u50a8\u914d\u7f6e\u4fe1\u606f\u7684\u590d\u5236\u72b6\u6001\u673a\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u5e2e\u52a9 RAMCloud \u534f\u8c03\u6545\u969c\u8f6c\u79fb\u3002\u8fd9\u4e2a Raft \u5b9e\u73b0\u5305\u542b\u5927\u7ea6 2000 \u884c C++ \u4ee3\u7801\uff0c\u5176\u4e2d\u4e0d\u5305\u62ec\u6d4b\u8bd5\u3001\u6ce8\u91ca\u548c\u7a7a\u884c\u3002\u8fd9\u4e9b\u4ee3\u7801\u662f\u5f00\u6e90\u7684\u3002\u540c\u65f6\u4e5f\u6709\u5927\u7ea6 25 \u4e2a\u5176\u4ed6\u72ec\u7acb\u7684\u7b2c\u4e09\u65b9\u7684\u57fa\u4e8e\u8fd9\u7bc7\u8bba\u6587\u8349\u7a3f\u7684\u5f00\u6e90\u5b9e\u73b0\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u5f00\u53d1\u573a\u666f\u3002\u540c\u65f6\uff0c\u5f88\u591a\u516c\u53f8\u5df2\u7ecf\u90e8\u7f72\u4e86\u57fa\u4e8e Raft \u7684\u7cfb\u7edf\u3002 \u8fd9\u4e00\u8282\u4f1a\u4ece\u4e09\u4e2a\u65b9\u9762\u6765\u8bc4\u4f30 Raft \u7b97\u6cd5\uff1a\u53ef\u7406\u89e3\u6027\u3001\u6b63\u786e\u6027\u548c\u6027\u80fd\u3002 9.1 \u53ef\u7406\u89e3\u6027 \u00b6 \u4e3a\u4e86\u548c Paxos \u6bd4\u8f83 Raft \u7b97\u6cd5\u7684\u53ef\u7406\u89e3\u80fd\u529b\uff0c\u6211\u4eec\u9488\u5bf9\u9ad8\u5c42\u6b21\u7684\u672c\u79d1\u751f\u548c\u7814\u7a76\u751f\uff0c\u5728\u65af\u5766\u798f\u5927\u5b66\u7684\u9ad8\u7ea7\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u548c\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u8bfe\u7a0b\u4e0a\uff0c\u8fdb\u884c\u4e86\u4e00\u6b21\u5b66\u4e60\u7684\u5b9e\u9a8c\u3002\u6211\u4eec\u5206\u522b\u62cd\u4e86\u9488\u5bf9 Raft \u548c Paxos \u7684\u89c6\u9891\u8bfe\u7a0b\uff0c\u5e76\u51c6\u5907\u4e86\u76f8\u5e94\u7684\u5c0f\u6d4b\u9a8c\u3002Raft \u7684\u89c6\u9891\u8bb2\u8bfe\u8986\u76d6\u4e86\u8fd9\u7bc7\u8bba\u6587\u7684\u6240\u6709\u5185\u5bb9\u9664\u4e86\u65e5\u5fd7\u538b\u7f29\uff1bPaxos \u8bb2\u8bfe\u5305\u542b\u4e86\u8db3\u591f\u7684\u8d44\u6599\u6765\u521b\u5efa\u4e00\u4e2a\u7b49\u4ef7\u7684\u590d\u5236\u72b6\u6001\u673a\uff0c\u5305\u62ec\u5355\u51b3\u7b56 Paxos\uff0c\u591a\u51b3\u7b56 Paxos\uff0c\u91cd\u65b0\u914d\u7f6e\u548c\u4e00\u4e9b\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u7684\u6027\u80fd\u4f18\u5316\uff08\u4f8b\u5982\u9886\u5bfc\u4eba\u9009\u4e3e\uff09\u3002\u5c0f\u6d4b\u9a8c\u6d4b\u8bd5\u4e00\u4e9b\u5bf9\u7b97\u6cd5\u7684\u57fa\u672c\u7406\u89e3\u548c\u89e3\u91ca\u4e00\u4e9b\u8fb9\u89d2\u7684\u793a\u4f8b\u3002\u6bcf\u4e2a\u5b66\u751f\u90fd\u662f\u770b\u5b8c\u7b2c\u4e00\u4e2a\u89c6\u9891\uff0c\u56de\u7b54\u76f8\u5e94\u7684\u6d4b\u8bd5\uff0c\u518d\u770b\u7b2c\u4e8c\u4e2a\u89c6\u9891\uff0c\u56de\u7b54\u76f8\u5e94\u7684\u6d4b\u8bd5\u3002\u5927\u7ea6\u6709\u4e00\u534a\u7684\u5b66\u751f\u5148\u8fdb\u884c Paxos \u90e8\u5206\uff0c\u7136\u540e\u53e6\u4e00\u534a\u5148\u8fdb\u884c Raft \u90e8\u5206\uff0c\u8fd9\u662f\u4e3a\u4e86\u8bf4\u660e\u4e24\u8005\u4ece\u7b2c\u4e00\u90e8\u5206\u7684\u7b97\u6cd5\u5b66\u4e60\u4e2d\u83b7\u5f97\u7684\u8868\u73b0\u548c\u7ecf\u9a8c\u7684\u5dee\u5f02\u3002\u6211\u4eec\u8ba1\u7b97\u53c2\u52a0\u4eba\u5458\u7684\u6bcf\u4e00\u4e2a\u5c0f\u6d4b\u9a8c\u7684\u5f97\u5206\u6765\u770b\u53c2\u4e0e\u8005\u662f\u5426\u5728 Raft \u7b97\u6cd5\u4e0a\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u3002 \u6211\u4eec\u5c3d\u53ef\u80fd\u7684\u4f7f\u5f97 Paxos \u548c Raft \u7684\u6bd4\u8f83\u66f4\u52a0\u516c\u5e73\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u504f\u7231 Paxos \u8868\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a43 \u4e2a\u53c2\u52a0\u8005\u4e2d\u6709 15 \u4e2a\u4eba\u5728\u4e4b\u524d\u6709\u4e00\u4e9b Paxos \u7684\u7ecf\u9a8c\uff0c\u5e76\u4e14 Paxos \u7684\u89c6\u9891\u8981\u957f 14%\u3002\u5982\u8868\u683c 1 \u603b\u7ed3\u7684\u90a3\u6837\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u4e00\u4e9b\u63aa\u65bd\u6765\u51cf\u8f7b\u8fd9\u79cd\u6f5c\u5728\u7684\u504f\u89c1\u3002\u6211\u4eec\u6240\u6709\u7684\u6750\u6599\u90fd\u53ef\u4f9b\u5ba1\u67e5\u3002 \u5173\u5fc3 \u7f13\u548c\u504f\u89c1\u91c7\u53d6\u7684\u624b\u6bb5 \u53ef\u4f9b\u67e5\u770b\u7684\u6750\u6599 \u76f8\u540c\u7684\u8bb2\u8bfe\u8d28\u91cf \u4e24\u8005\u4f7f\u7528\u540c\u4e00\u4e2a\u8bb2\u5e08\u3002Paxos \u4f7f\u7528\u7684\u662f\u73b0\u5728\u5f88\u591a\u5927\u5b66\u91cc\u7ecf\u5e38\u4f7f\u7528\u7684\u3002Paxos \u4f1a\u957f 14%\u3002 \u89c6\u9891 \u76f8\u540c\u7684\u6d4b\u9a8c\u96be\u5ea6 \u95ee\u9898\u4ee5\u96be\u5ea6\u5206\u7ec4\uff0c\u5728\u4e24\u4e2a\u6d4b\u9a8c\u91cc\u6210\u5bf9\u51fa\u73b0\u3002 \u5c0f\u6d4b\u9a8c \u516c\u5e73\u8bc4\u5206 \u4f7f\u7528\u8bc4\u4ef7\u91cf\u89c4\u3002\u968f\u673a\u987a\u5e8f\u6253\u5206\uff0c\u4e24\u4e2a\u6d4b\u9a8c\u4ea4\u66ff\u8fdb\u884c\u3002 \u8bc4\u4ef7\u91cf\u89c4\uff08rubric\uff09 \u8868 1\uff1a\u8003\u8651\u5230\u53ef\u80fd\u4f1a\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u548c\u76f8\u5e94\u7684\u6750\u6599\u3002 \u53c2\u52a0\u8005\u5e73\u5747\u5728 Raft \u7684\u6d4b\u9a8c\u4e2d\u6bd4 Paxos \u9ad8 4.9 \u5206\uff08\u603b\u5206 60\uff0c\u90a3\u4e48 Raft \u7684\u5e73\u5747\u5f97\u5206\u662f 25.7\uff0c\u800c Paxos \u662f 20.8\uff09\uff1b\u56fe 14 \u5c55\u793a\u4e86\u6bcf\u4e2a\u53c2\u4e0e\u8005\u7684\u5f97\u5206\u3002\u914d\u7f6et-\u68c0\u9a8c\uff08\u53c8\u79f0student\u2018s t-test\uff09\u8868\u660e\uff0c\u5728 95% \u7684\u53ef\u4fe1\u5ea6\u4e0b\uff0c\u771f\u5b9e\u7684 Raft \u5206\u6570\u5206\u5e03\u81f3\u5c11\u6bd4 Paxos \u9ad8 2.5 \u5206\u3002 \u56fe 14\uff1a\u4e00\u4e2a\u6563\u70b9\u56fe\u8868\u793a\u4e86 43 \u4e2a\u5b66\u751f\u5728 Paxos \u548c Raft \u7684\u5c0f\u6d4b\u9a8c\u4e2d\u7684\u6210\u7ee9\u3002\u5728\u5bf9\u89d2\u7ebf\u4e4b\u4e0a\u7684\u70b9\u8868\u793a\u5728 Raft \u83b7\u5f97\u4e86\u66f4\u9ad8\u5206\u6570\u7684\u5b66\u751f\u3002 \u6211\u4eec\u4e5f\u5efa\u7acb\u4e86\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6765\u9884\u6d4b\u4e00\u4e2a\u65b0\u7684\u5b66\u751f\u7684\u6d4b\u9a8c\u6210\u7ee9\uff0c\u57fa\u4e8e\u4ee5\u4e0b\u4e09\u4e2a\u56e0\u7d20\uff1a\u4ed6\u4eec\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u5c0f\u6d4b\u9a8c\uff0c\u4e4b\u524d\u5bf9 Paxos \u7684\u7ecf\u9a8c\uff0c\u548c\u5b66\u4e60\u7b97\u6cd5\u7684\u987a\u5e8f\u3002\u6a21\u578b\u9884\u6d4b\uff0c\u5bf9\u5c0f\u6d4b\u9a8c\u7684\u9009\u62e9\u4f1a\u4ea7\u751f 12.5 \u5206\u7684\u5dee\u522b\u3002\u8fd9\u663e\u8457\u7684\u9ad8\u4e8e\u4e4b\u524d\u7684 4.9 \u5206\uff0c\u56e0\u4e3a\u5f88\u591a\u5b66\u751f\u5728\u4e4b\u524d\u90fd\u5df2\u7ecf\u6709\u4e86\u5bf9\u4e8e Paxos \u7684\u7ecf\u9a8c\uff0c\u8fd9\u76f8\u5f53\u660e\u663e\u7684\u5e2e\u52a9 Paxos\uff0c\u5bf9 Raft \u5c31\u6ca1\u4ec0\u4e48\u592a\u5927\u5f71\u54cd\u4e86\u3002\u4f46\u662f\u5947\u602a\u7684\u662f\uff0c\u6a21\u578b\u9884\u6d4b\u5bf9\u4e8e\u5148\u8fdb\u884c Paxos \u5c0f\u6d4b\u9a8c\u7684\u4eba\u800c\u8a00\uff0cRaft\u7684\u5f97\u5206\u4f4e\u4e866.3\u5206; \u867d\u7136\u6211\u4eec\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u4f3c\u4e4e\u5728\u7edf\u8ba1\u4e0a\u662f\u6709\u610f\u4e49\u7684\u3002 \u6211\u4eec\u540c\u65f6\u4e5f\u5728\u6d4b\u9a8c\u4e4b\u540e\u8c03\u67e5\u4e86\u53c2\u4e0e\u8005\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u54ea\u4e2a\u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u5b9e\u73b0\u548c\u89e3\u91ca\uff1b\u8fd9\u4e2a\u7684\u7ed3\u679c\u5728\u56fe 15 \u4e0a\u3002\u538b\u5012\u6027\u7684\u7ed3\u679c\u8868\u660e Raft \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u5b9e\u73b0\u548c\u89e3\u91ca\uff0841 \u4eba\u4e2d\u7684 33\u4e2a\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u81ea\u5df1\u62a5\u544a\u7684\u7ed3\u679c\u4e0d\u5982\u53c2\u4e0e\u8005\u7684\u6210\u7ee9\u66f4\u52a0\u53ef\u4fe1\uff0c\u5e76\u4e14\u53c2\u4e0e\u8005\u53ef\u80fd\u56e0\u4e3a\u6211\u4eec\u7684 Raft \u66f4\u52a0\u6613\u4e8e\u7406\u89e3\u7684\u5047\u8bf4\u800c\u4ea7\u751f\u504f\u89c1\u3002 \u56fe 15\uff1a\u901a\u8fc7\u4e00\u4e2a 5 \u5206\u5236\u7684\u95ee\u9898\uff0c\u53c2\u4e0e\u8005\uff08\u5de6\u8fb9\uff09\u88ab\u95ee\u54ea\u4e2a\u7b97\u6cd5\u4ed6\u4eec\u89c9\u5f97\u5728\u4e00\u4e2a\u9ad8\u6548\u6b63\u786e\u7684\u7cfb\u7edf\u91cc\u66f4\u5bb9\u6613\u5b9e\u73b0\uff0c\u53f3\u8fb9\u88ab\u95ee\u54ea\u4e2a\u66f4\u5bb9\u6613\u5411\u5b66\u751f\u89e3\u91ca\u3002 \u5173\u4e8e Raft \u7528\u6237\u5b66\u4e60\u6709\u4e00\u4e2a\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u3002 9.2 \u6b63\u786e\u6027 \u00b6 \u5728\u7b2c 5 \u8282\uff0c\u6211\u4eec\u5df2\u7ecf\u5236\u5b9a\u4e86\u6b63\u5f0f\u7684\u89c4\u8303\uff0c\u548c\u5bf9\u4e00\u81f4\u6027\u673a\u5236\u7684\u5b89\u5168\u6027\u8bc1\u660e\u3002\u8fd9\u4e2a\u6b63\u5f0f\u89c4\u8303\u4f7f\u7528 TLA+ \u89c4\u8303\u8bed\u8a00\u4f7f\u56fe 2 \u4e2d\u603b\u7ed3\u7684\u4fe1\u606f\u975e\u5e38\u6e05\u6670\u3002\u5b83\u957f\u7ea6400\u884c\uff0c\u5e76\u4f5c\u4e3a\u8bc1\u660e\u7684\u4e3b\u9898\u3002\u540c\u65f6\u5bf9\u4e8e\u4efb\u4f55\u60f3\u5b9e\u73b0 Raft \u7684\u4eba\u4e5f\u662f\u5341\u5206\u6709\u7528\u7684\u3002\u6211\u4eec\u901a\u8fc7 TLA \u8bc1\u660e\u7cfb\u7edf\u975e\u5e38\u673a\u68b0\u7684\u8bc1\u660e\u4e86\u65e5\u5fd7\u5b8c\u5168\u7279\u6027\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u8bc1\u660e\u4f9d\u8d56\u7684\u7ea6\u675f\u524d\u63d0\u8fd8\u6ca1\u6709\u88ab\u673a\u68b0\u8bc1\u660e\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u8bc1\u660e\u89c4\u8303\u7684\u7c7b\u578b\u5b89\u5168\uff09\u3002\u800c\u4e14\uff0c\u6211\u4eec\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a\u975e\u6b63\u5f0f\u7684\u8bc1\u660e\u5173\u4e8e\u72b6\u6001\u673a\u5b89\u5168\u6027\u662f\u5b8c\u5907\u7684\uff0c\u5e76\u4e14\u662f\u76f8\u5f53\u6e05\u6670\u7684\uff08\u5927\u7ea6 3500 \u4e2a\u8bcd\uff09\u3002 9.3 \u6027\u80fd \u00b6 Raft \u548c\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u4f8b\u5982 Paxos \u6709\u7740\u5dee\u4e0d\u591a\u7684\u6027\u80fd\u3002\u5728\u6027\u80fd\u65b9\u9762\uff0c\u6700\u91cd\u8981\u7684\u5173\u6ce8\u70b9\u662f\uff0c\u5f53\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u6210\u529f\u65f6\uff0c\u4ec0\u4e48\u65f6\u5019\u590d\u5236\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002Raft \u901a\u8fc7\u5f88\u5c11\u6570\u91cf\u7684\u6d88\u606f\u5305\uff08\u4e00\u8f6e\u4ece\u9886\u5bfc\u4eba\u5230\u96c6\u7fa4\u5927\u591a\u6570\u673a\u5668\u7684\u6d88\u606f\uff09\u5c31\u8fbe\u6210\u4e86\u8fd9\u4e2a\u76ee\u7684\u3002\u540c\u65f6\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347 Raft \u7684\u6027\u80fd\u4e5f\u662f\u53ef\u884c\u7684\u3002\u4f8b\u5982\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u652f\u6301\u6279\u91cf\u64cd\u4f5c\u548c\u7ba1\u9053\u64cd\u4f5c\u6765\u63d0\u9ad8\u541e\u5410\u91cf\u548c\u964d\u4f4e\u5ef6\u8fdf\u3002\u5bf9\u4e8e\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u5df2\u7ecf\u63d0\u51fa\u8fc7\u5f88\u591a\u6027\u80fd\u4f18\u5316\u65b9\u6848\uff1b\u5176\u4e2d\u6709\u5f88\u591a\u4e5f\u53ef\u4ee5\u5e94\u7528\u5230 Raft \u4e2d\u6765\uff0c\u4f46\u662f\u6211\u4eec\u6682\u65f6\u628a\u8fd9\u4e2a\u95ee\u9898\u653e\u5230\u672a\u6765\u7684\u5de5\u4f5c\u4e2d\u53bb\u3002 \u6211\u4eec\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684 Raft \u5b9e\u73b0\u6765\u8861\u91cf Raft \u9886\u5bfc\u4eba\u9009\u4e3e\u7684\u6027\u80fd\u5e76\u4e14\u56de\u7b54\u4e24\u4e2a\u95ee\u9898\u3002\u9996\u5148\uff0c\u9886\u5bfc\u4eba\u9009\u4e3e\u7684\u8fc7\u7a0b\u6536\u655b\u662f\u5426\u5feb\u901f\uff1f\u7b2c\u4e8c\uff0c\u5728\u9886\u5bfc\u4eba\u5b95\u673a\u4e4b\u540e\uff0c\u6700\u5c0f\u7684\u7cfb\u7edf\u5b95\u673a\u65f6\u95f4\u662f\u591a\u4e45\uff1f \u56fe 16\uff1a\u53d1\u73b0\u5e76\u66ff\u6362\u4e00\u4e2a\u5df2\u7ecf\u5d29\u6e83\u7684\u9886\u5bfc\u4eba\u7684\u65f6\u95f4\u3002\u4e0a\u9762\u7684\u56fe\u8003\u5bdf\u4e86\u5728\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e0a\u7684\u968f\u673a\u5316\u7a0b\u5ea6\uff0c\u4e0b\u9762\u7684\u56fe\u8003\u5bdf\u4e86\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u3002\u6bcf\u6761\u7ebf\u4ee3\u8868\u4e86 1000 \u6b21\u5b9e\u9a8c\uff08\u9664\u4e86 150-150 \u6beb\u79d2\u53ea\u8bd5\u4e86 100 \u6b21\uff09\uff0c\u548c\u76f8\u5e94\u7684\u786e\u5b9a\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u3002\u4f8b\u5982\uff0c150-155 \u6beb\u79d2\u610f\u601d\u662f\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4ece\u8fd9\u4e2a\u533a\u95f4\u8303\u56f4\u5185\u968f\u673a\u9009\u62e9\u5e76\u786e\u5b9a\u4e0b\u6765\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u5728\u4e00\u4e2a\u62e5\u6709 5 \u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\u4e0a\u8fdb\u884c\uff0c\u5176\u5e7f\u64ad\u65f6\u5ef6\u5927\u7ea6\u662f 15 \u6beb\u79d2\u3002\u5bf9\u4e8e 9 \u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\uff0c\u7ed3\u679c\u4e5f\u5dee\u4e0d\u591a\u3002 \u4e3a\u4e86\u8861\u91cf\u9886\u5bfc\u4eba\u9009\u4e3e\uff0c\u6211\u4eec\u53cd\u590d\u7684\u4f7f\u4e00\u4e2a\u62e5\u6709\u4e94\u4e2a\u8282\u70b9\u7684\u670d\u52a1\u5668\u96c6\u7fa4\u7684\u9886\u5bfc\u4eba\u5b95\u673a\uff0c\u5e76\u8ba1\u7b97\u9700\u8981\u591a\u4e45\u624d\u80fd\u53d1\u73b0\u9886\u5bfc\u4eba\u5df2\u7ecf\u5b95\u673a\u5e76\u9009\u51fa\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\uff08\u89c1\u56fe 16\uff09\u3002\u4e3a\u4e86\u6784\u5efa\u4e00\u4e2a\u6700\u574f\u7684\u573a\u666f\uff0c\u5728\u6bcf\u4e00\u7684\u5c1d\u8bd5\u91cc\uff0c\u670d\u52a1\u5668\u90fd\u6709\u4e0d\u540c\u957f\u5ea6\u7684\u65e5\u5fd7\uff0c\u610f\u5473\u7740\u6709\u4e9b\u5019\u9009\u4eba\u662f\u6ca1\u6709\u6210\u4e3a\u9886\u5bfc\u4eba\u7684\u8d44\u683c\u7684\u3002\u53e6\u5916\uff0c\u4e3a\u4e86\u4fc3\u6210\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u7684\u6d4b\u8bd5\u811a\u672c\u5728\u7ec8\u6b62\u9886\u5bfc\u4eba\u4e4b\u524d\u540c\u6b65\u7684\u53d1\u9001\u4e86\u4e00\u6b21\u5fc3\u8df3\u5e7f\u64ad\uff08\u8fd9\u5927\u7ea6\u548c\u9886\u5bfc\u4eba\u5728\u5d29\u6e83\u524d\u590d\u5236\u4e00\u4e2a\u65b0\u7684\u65e5\u5fd7\u7ed9\u5176\u4ed6\u673a\u5668\u5f88\u50cf\uff09\u3002\u9886\u5bfc\u4eba\u5747\u5300\u7684\u968f\u673a\u7684\u5728\u5fc3\u8df3\u95f4\u9694\u91cc\u5b95\u673a\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u4e00\u534a\u3002\u56e0\u6b64\uff0c\u6700\u5c0f\u5b95\u673a\u65f6\u95f4\u5927\u7ea6\u5c31\u662f\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u4e00\u534a\u3002 \u56fe 16 \u4e2d\u4e0a\u9762\u7684\u56fe\u8868\u660e\uff0c\u53ea\u9700\u8981\u5728\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e0a\u4f7f\u7528\u5f88\u5c11\u7684\u968f\u673a\u5316\u5c31\u53ef\u4ee5\u5927\u5927\u907f\u514d\u9009\u7968\u88ab\u74dc\u5206\u7684\u60c5\u51b5\u3002\u5728\u6ca1\u6709\u968f\u673a\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u91cc\uff0c\u9009\u4e3e\u8fc7\u7a0b\u5f80\u5f80\u90fd\u9700\u8981\u82b1\u8d39\u8d85\u8fc7 10 \u79d2\u949f\u7531\u4e8e\u592a\u591a\u7684\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u3002\u4ec5\u4ec5\u589e\u52a0 5 \u6beb\u79d2\u7684\u968f\u673a\u5316\u65f6\u95f4\uff0c\u5c31\u5927\u5927\u7684\u6539\u5584\u4e86\u9009\u4e3e\u8fc7\u7a0b\uff0c\u73b0\u5728\u5e73\u5747\u7684\u5b95\u673a\u65f6\u95f4\u53ea\u6709 287 \u6beb\u79d2\u3002\u589e\u52a0\u66f4\u591a\u7684\u968f\u673a\u5316\u65f6\u95f4\u53ef\u4ee5\u5927\u5927\u6539\u5584\u6700\u574f\u60c5\u51b5\uff1a\u901a\u8fc7\u589e\u52a0 50 \u6beb\u79d2\u7684\u968f\u673a\u5316\u65f6\u95f4\uff0c\u6700\u574f\u7684\u5b8c\u6210\u60c5\u51b5\uff081000 \u6b21\u5c1d\u8bd5\uff09\u53ea\u8981 513 \u6beb\u79d2\u3002 \u56fe 16 \u4e2d\u4e0b\u9762\u7684\u56fe\u663e\u793a\uff0c\u901a\u8fc7\u51cf\u5c11\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u53ef\u4ee5\u51cf\u5c11\u7cfb\u7edf\u7684\u5b95\u673a\u65f6\u95f4\u3002\u5728\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e3a 12-24 \u6beb\u79d2\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u8981\u5e73\u5747 35 \u6beb\u79d2\u5c31\u53ef\u4ee5\u9009\u4e3e\u51fa\u65b0\u7684\u9886\u5bfc\u4eba\uff08\u6700\u957f\u7684\u4e00\u6b21\u82b1\u8d39\u4e86 152 \u6beb\u79d2\uff09\u3002\u7136\u800c\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u8bdd\u5c31\u4f1a\u8fdd\u53cd Raft \u7684\u65f6\u95f4\u4e0d\u7b49\u5f0f\u9700\u6c42\uff1a\u5728\u9009\u4e3e\u65b0\u9886\u5bfc\u4eba\u4e4b\u524d\uff0c\u9886\u5bfc\u4eba\u5c31\u5f88\u96be\u53d1\u9001\u5b8c\u5fc3\u8df3\u5305\u3002\u8fd9\u4f1a\u5bfc\u81f4\u6ca1\u6709\u610f\u4e49\u7684\u9886\u5bfc\u4eba\u6539\u53d8\u5e76\u964d\u4f4e\u4e86\u7cfb\u7edf\u6574\u4f53\u7684\u53ef\u7528\u6027\u3002\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u66f4\u4e3a\u4fdd\u5b88\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff0c\u6bd4\u5982 150-300 \u6beb\u79d2\uff1b\u8fd9\u6837\u7684\u65f6\u95f4\u4e0d\u5927\u53ef\u80fd\u5bfc\u81f4\u6ca1\u6709\u610f\u4e49\u7684\u9886\u5bfc\u4eba\u6539\u53d8\uff0c\u800c\u4e14\u4f9d\u7136\u63d0\u4f9b\u4e0d\u9519\u7684\u53ef\u7528\u6027\u3002 10 \u76f8\u5173\u5de5\u4f5c \u00b6 \u5df2\u7ecf\u6709\u5f88\u591a\u5173\u4e8e\u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u5de5\u4f5c\u88ab\u53d1\u8868\u51fa\u6765\uff0c\u5176\u4e2d\u5f88\u591a\u90fd\u53ef\u4ee5\u5f52\u5230\u4e0b\u9762\u7684\u7c7b\u522b\u4e2d\uff1a Lamport \u5173\u4e8e Paxos \u7684\u539f\u59cb\u63cf\u8ff0\uff0c\u548c\u5c1d\u8bd5\u63cf\u8ff0\u7684\u66f4\u6e05\u6670\u3002 \u5173\u4e8e Paxos \u7684\u66f4\u8be6\u5c3d\u7684\u63cf\u8ff0\uff0c\u8865\u5145\u9057\u6f0f\u7684\u7ec6\u8282\u5e76\u4fee\u6539\u7b97\u6cd5\uff0c\u4f7f\u5f97\u53ef\u4ee5\u63d0\u4f9b\u66f4\u52a0\u5bb9\u6613\u7684\u5b9e\u73b0\u57fa\u7840\u3002 \u5b9e\u73b0\u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u7cfb\u7edf\uff0c\u4f8b\u5982 Chubby\uff0cZooKeeper \u548c Spanner\u3002\u5bf9\u4e8e Chubby \u548c Spanner \u7684\u7b97\u6cd5\u5e76\u6ca1\u6709\u516c\u5f00\u53d1\u8868\u5176\u6280\u672f\u7ec6\u8282\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u90fd\u58f0\u79f0\u662f\u57fa\u4e8e Paxos \u7684\u3002ZooKeeper \u7684\u7b97\u6cd5\u7ec6\u8282\u5df2\u7ecf\u53d1\u8868\uff0c\u4f46\u662f\u548c Paxos \u7740\u5b9e\u6709\u7740\u5f88\u5927\u7684\u5dee\u522b\u3002 Paxos \u53ef\u4ee5\u5e94\u7528\u7684\u6027\u80fd\u4f18\u5316\u3002 Oki \u548c Liskov \u7684 Viewstamped Replication\uff08VR\uff09\uff0c\u4e00\u79cd\u548c Paxos \u5dee\u4e0d\u591a\u7684\u66ff\u4ee3\u7b97\u6cd5\u3002\u539f\u59cb\u7684\u7b97\u6cd5\u63cf\u8ff0\u548c\u5206\u5e03\u5f0f\u4f20\u8f93\u534f\u8bae\u8026\u5408\u5728\u4e86\u4e00\u8d77\uff0c\u4f46\u662f\u6838\u5fc3\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u5728\u6700\u8fd1\u7684\u66f4\u65b0\u91cc\u88ab\u5206\u79bb\u4e86\u51fa\u6765\u3002VR \u4f7f\u7528\u4e86\u4e00\u79cd\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u65b9\u6cd5\uff0c\u548c Raft \u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\u3002 Raft \u548c Paxos \u6700\u5927\u7684\u4e0d\u540c\u4e4b\u5904\u5c31\u5728\u4e8e Raft \u7684\u5f3a\u9886\u5bfc\u7279\u6027\uff1aRaft \u4f7f\u7528\u9886\u5bfc\u4eba\u9009\u4e3e\u4f5c\u4e3a\u4e00\u81f4\u6027\u534f\u8bae\u91cc\u5fc5\u4e0d\u53ef\u5c11\u7684\u90e8\u5206\uff0c\u5e76\u4e14\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u529f\u80fd\u96c6\u4e2d\u5230\u4e86\u9886\u5bfc\u4eba\u8eab\u4e0a\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u5f97\u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u3002\u4f8b\u5982\uff0c\u5728 Paxos \u4e2d\uff0c\u9886\u5bfc\u4eba\u9009\u4e3e\u548c\u57fa\u672c\u7684\u4e00\u81f4\u6027\u534f\u8bae\u662f\u6b63\u4ea4\u7684\uff1a\u9886\u5bfc\u4eba\u9009\u4e3e\u4ec5\u4ec5\u662f\u6027\u80fd\u4f18\u5316\u7684\u624b\u6bb5\uff0c\u800c\u4e14\u4e0d\u662f\u4e00\u81f4\u6027\u6240\u5fc5\u987b\u8981\u6c42\u7684\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u5c31\u589e\u52a0\u4e86\u591a\u4f59\u7684\u673a\u5236\uff1aPaxos \u540c\u65f6\u5305\u542b\u4e86\u9488\u5bf9\u57fa\u672c\u4e00\u81f4\u6027\u8981\u6c42\u7684\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\u548c\u9488\u5bf9\u9886\u5bfc\u4eba\u9009\u4e3e\u7684\u72ec\u7acb\u7684\u673a\u5236\u3002\u76f8\u6bd4\u8f83\u800c\u8a00\uff0cRaft \u5c31\u76f4\u63a5\u5c06\u9886\u5bfc\u4eba\u9009\u4e3e\u7eb3\u5165\u5230\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u5e76\u4f5c\u4e3a\u4e24\u9636\u6bb5\u4e00\u81f4\u6027\u7684\u7b2c\u4e00\u6b65\u3002\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u673a\u5236\u3002 \u50cf Raft \u4e00\u6837\uff0cVR \u548c ZooKeeper \u4e5f\u662f\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e5f\u62e5\u6709\u4e00\u4e9b Raft \u7684\u4f18\u70b9\u3002\u4f46\u662f\uff0cRaft \u6bd4 VR \u548c ZooKeeper \u62e5\u6709\u66f4\u5c11\u7684\u673a\u5236\u56e0\u4e3a Raft \u5c3d\u53ef\u80fd\u7684\u51cf\u5c11\u4e86\u975e\u9886\u5bfc\u4eba\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0cRaft \u4e2d\u65e5\u5fd7\u6761\u76ee\u90fd\u9075\u5faa\u7740\u4ece\u9886\u5bfc\u4eba\u53d1\u9001\u7ed9\u5176\u4ed6\u4eba\u8fd9\u4e00\u4e2a\u65b9\u5411\uff1a\u9644\u52a0\u6761\u76ee RPC \u662f\u5411\u5916\u53d1\u9001\u7684\u3002\u5728 VR \u4e2d\uff0c\u65e5\u5fd7\u6761\u76ee\u7684\u6d41\u52a8\u662f\u53cc\u5411\u7684\uff08\u9886\u5bfc\u4eba\u53ef\u4ee5\u5728\u9009\u4e3e\u8fc7\u7a0b\u4e2d\u63a5\u6536\u65e5\u5fd7\uff09\uff1b\u8fd9\u5c31\u5bfc\u81f4\u4e86\u989d\u5916\u7684\u673a\u5236\u548c\u590d\u6742\u6027\u3002\u6839\u636e ZooKeeper \u516c\u5f00\u7684\u8d44\u6599\u770b\uff0c\u5b83\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u662f\u53cc\u5411\u4f20\u8f93\u7684\uff0c\u4f46\u662f\u5b83\u7684\u5b9e\u73b0\u66f4\u50cf Raft\u3002 \u548c\u4e0a\u8ff0\u6211\u4eec\u63d0\u53ca\u7684\u5176\u4ed6\u57fa\u4e8e\u4e00\u81f4\u6027\u7684\u65e5\u5fd7\u590d\u5236\u7b97\u6cd5\u4e2d\uff0cRaft \u7684\u6d88\u606f\u7c7b\u578b\u66f4\u5c11\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u6570\u4e86\u4e00\u4e0b VR \u548c ZooKeeper \u4f7f\u7528\u7684\u7528\u6765\u57fa\u672c\u4e00\u81f4\u6027\u9700\u8981\u548c\u6210\u5458\u6539\u53d8\u7684\u6d88\u606f\u6570\uff08\u6392\u9664\u4e86\u65e5\u5fd7\u538b\u7f29\u548c\u5ba2\u6237\u7aef\u4ea4\u4e92\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u6bd4\u8f83\u72ec\u7acb\u4e14\u548c\u7b97\u6cd5\u5173\u7cfb\u4e0d\u5927\uff09\u3002VR \u548c ZooKeeper \u90fd\u5206\u522b\u5b9a\u4e49\u4e86 10 \u79cd\u4e0d\u540c\u7684\u6d88\u606f\u7c7b\u578b\uff0c\u76f8\u5bf9\u7684\uff0cRaft \u53ea\u6709 4 \u79cd\u6d88\u606f\u7c7b\u578b\uff08\u4e24\u79cd RPC \u8bf7\u6c42\u548c\u5bf9\u5e94\u7684\u54cd\u5e94\uff09\u3002Raft \u7684\u6d88\u606f\u90fd\u7a0d\u5fae\u6bd4\u5176\u4ed6\u7b97\u6cd5\u7684\u8981\u4fe1\u606f\u91cf\u5927\uff0c\u4f46\u662f\u90fd\u5f88\u7b80\u5355\u3002\u53e6\u5916\uff0cVR \u548c ZooKeeper \u90fd\u5728\u9886\u5bfc\u4eba\u6539\u53d8\u65f6\u4f20\u8f93\u4e86\u6574\u4e2a\u65e5\u5fd7\uff1b\u6240\u4ee5\u4e3a\u4e86\u80fd\u591f\u5b9e\u8df5\u4e2d\u4f7f\u7528\uff0c\u989d\u5916\u7684\u6d88\u606f\u7c7b\u578b\u5c31\u5f88\u5fc5\u8981\u4e86\u3002 Raft \u7684\u5f3a\u9886\u5bfc\u4eba\u6a21\u578b\u7b80\u5316\u4e86\u6574\u4e2a\u7b97\u6cd5\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u6392\u65a5\u4e86\u4e00\u4e9b\u6027\u80fd\u4f18\u5316\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5e73\u7b49\u4e3b\u4e49 Paxos \uff08EPaxos\uff09\u5728\u67d0\u4e9b\u6ca1\u6709\u9886\u5bfc\u4eba\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fbe\u5230\u5f88\u9ad8\u7684\u6027\u80fd\u3002\u5e73\u7b49\u4e3b\u4e49 Paxos \u5145\u5206\u53d1\u6325\u4e86\u5728\u72b6\u6001\u673a\u6307\u4ee4\u4e2d\u7684\u4ea4\u6362\u6027\u3002\u4efb\u4f55\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u5728\u4e00\u8f6e\u901a\u4fe1\u4e0b\u5c31\u63d0\u4ea4\u6307\u4ee4\uff0c\u9664\u975e\u5176\u4ed6\u6307\u4ee4\u540c\u65f6\u88ab\u63d0\u51fa\u4e86\u3002\u7136\u800c\uff0c\u5982\u679c\u6307\u4ee4\u90fd\u662f\u5e76\u53d1\u7684\u88ab\u63d0\u51fa\uff0c\u5e76\u4e14\u4e92\u76f8\u4e4b\u95f4\u4e0d\u901a\u4fe1\u6c9f\u901a\uff0c\u90a3\u4e48 EPaxos \u5c31\u9700\u8981\u989d\u5916\u7684\u4e00\u8f6e\u901a\u4fe1\u3002\u56e0\u4e3a\u4efb\u4f55\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u63d0\u4ea4\u6307\u4ee4\uff0c\u6240\u4ee5 EPaxos \u5728\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8d1f\u8f7d\u5747\u8861\u505a\u7684\u5f88\u597d\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u5728 WAN \u7f51\u7edc\u73af\u5883\u4e0b\u83b7\u5f97\u5f88\u4f4e\u7684\u5ef6\u8fdf\u3002\u4f46\u662f\uff0c\u4ed6\u5728 Paxos \u4e0a\u589e\u52a0\u4e86\u975e\u5e38\u660e\u663e\u7684\u590d\u6742\u6027\u3002 \u4e00\u4e9b\u96c6\u7fa4\u6210\u5458\u53d8\u6362\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u63d0\u51fa\u6216\u8005\u5728\u5176\u4ed6\u7684\u5de5\u4f5c\u4e2d\u88ab\u5b9e\u73b0\uff0c\u5305\u62ec Lamport \u7684\u539f\u59cb\u7684\u8ba8\u8bba\uff0cVR \u548c SMART\u3002\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u5171\u540c\u4e00\u81f4\u7684\u65b9\u6cd5\u56e0\u4e3a\u4ed6\u5bf9\u4e00\u81f4\u6027\u534f\u8bae\u7684\u5176\u4ed6\u90e8\u5206\u5f71\u54cd\u5f88\u5c0f\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5f88\u5c11\u7684\u4e00\u4e9b\u673a\u5236\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6210\u5458\u53d8\u6362\u3002Lamport \u7684\u57fa\u4e8e \u03b1 \u7684\u65b9\u6cd5\u4e4b\u6240\u4ee5\u6ca1\u6709\u88ab Raft \u9009\u62e9\u662f\u56e0\u4e3a\u5b83\u5047\u8bbe\u5728\u6ca1\u6709\u9886\u5bfc\u4eba\u7684\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u8fbe\u5230\u4e00\u81f4\u6027\u3002\u548c VR \u548c SMART \u76f8\u6bd4\u8f83\uff0cRaft \u7684\u91cd\u65b0\u914d\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u4e0d\u9650\u5236\u6b63\u5e38\u8bf7\u6c42\u5904\u7406\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\uff1b\u76f8\u6bd4\u8f83\u7684\uff0cVR \u9700\u8981\u505c\u6b62\u6240\u6709\u7684\u5904\u7406\u8fc7\u7a0b\uff0cSMART \u5f15\u5165\u4e86\u4e00\u4e2a\u548c \u03b1 \u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u9650\u5236\u4e86\u8bf7\u6c42\u5904\u7406\u7684\u6570\u91cf\u3002Raft \u7684\u65b9\u6cd5\u540c\u65f6\u4e5f\u9700\u8981\u66f4\u5c11\u7684\u989d\u5916\u673a\u5236\u6765\u5b9e\u73b0\uff0c\u548c VR\u3001SMART \u6bd4\u8f83\u800c\u8a00\u3002 11 \u7ed3\u8bba \u00b6 \u7b97\u6cd5\u7684\u8bbe\u8ba1\u901a\u5e38\u4f1a\u628a\u6b63\u786e\u6027\uff0c\u6548\u7387\u6216\u8005\u7b80\u6d01\u4f5c\u4e3a\u4e3b\u8981\u7684\u76ee\u6807\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u90fd\u662f\u5f88\u6709\u610f\u4e49\u7684\u76ee\u6807\uff0c\u4f46\u662f\u6211\u4eec\u76f8\u4fe1\uff0c\u53ef\u7406\u89e3\u6027\u4e5f\u662f\u4e00\u6837\u7684\u91cd\u8981\u3002\u5728\u5f00\u53d1\u8005\u628a\u7b97\u6cd5\u5e94\u7528\u5230\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\u4e4b\u524d\uff0c\u8fd9\u4e9b\u76ee\u6807\u6ca1\u6709\u4e00\u4e2a\u4f1a\u88ab\u5b9e\u73b0\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5fc5\u7136\u7684\u504f\u79bb\u53d1\u8868\u65f6\u7684\u5f62\u5f0f\u3002\u9664\u975e\u5f00\u53d1\u4eba\u5458\u5bf9\u8fd9\u4e2a\u7b97\u6cd5\u6709\u7740\u5f88\u6df1\u7684\u7406\u89e3\u5e76\u4e14\u6709\u7740\u76f4\u89c2\u7684\u611f\u89c9\uff0c\u5426\u5219\u5c06\u4f1a\u5bf9\u4ed6\u4eec\u800c\u8a00\u5f88\u96be\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u4fdd\u6301\u539f\u6709\u671f\u671b\u7684\u7279\u6027\u3002 \u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u6211\u4eec\u5c1d\u8bd5\u89e3\u51b3\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u4f46\u662f\u4e00\u4e2a\u5e7f\u4e3a\u63a5\u53d7\u4f46\u662f\u5341\u5206\u4ee4\u4eba\u8d39\u89e3\u7684\u7b97\u6cd5 Paxos \u5df2\u7ecf\u56f0\u6270\u4e86\u65e0\u6570\u5b66\u751f\u548c\u5f00\u53d1\u8005\u5f88\u591a\u5e74\u4e86\u3002\u6211\u4eec\u521b\u9020\u4e86\u4e00\u79cd\u65b0\u7684\u7b97\u6cd5 Raft\uff0c\u663e\u800c\u6613\u89c1\u7684\u6bd4 Paxos \u8981\u5bb9\u6613\u7406\u89e3\u3002\u6211\u4eec\u540c\u65f6\u4e5f\u76f8\u4fe1\uff0cRaft \u4e5f\u53ef\u4ee5\u4e3a\u5b9e\u9645\u7684\u5b9e\u73b0\u63d0\u4f9b\u575a\u5b9e\u7684\u57fa\u7840\u3002\u628a\u53ef\u7406\u89e3\u6027\u4f5c\u4e3a\u8bbe\u8ba1\u7684\u76ee\u6807\u6539\u53d8\u4e86\u6211\u4eec\u8bbe\u8ba1 Raft \u7684\u65b9\u5f0f\uff1b\u968f\u7740\u8bbe\u8ba1\u7684\u8fdb\u5c55\uff0c\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u91cd\u590d\u4f7f\u7528\u4e86\u4e00\u4e9b\u6280\u672f\uff0c\u6bd4\u5982\u5206\u89e3\u95ee\u9898\u548c\u7b80\u5316\u72b6\u6001\u7a7a\u95f4\u3002\u8fd9\u4e9b\u6280\u672f\u4e0d\u4ec5\u63d0\u5347\u4e86 Raft \u7684\u53ef\u7406\u89e3\u6027\uff0c\u540c\u65f6\u4e5f\u4f7f\u6211\u4eec\u575a\u4fe1\u5176\u6b63\u786e\u6027\u3002 12 \u611f\u8c22 \u00b6 \u8fd9\u9879\u7814\u7a76\u5fc5\u987b\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u7684\u652f\u6301\uff1aAli Ghodsi\uff0cDavid Mazie`res\uff0c\u548c\u4f2f\u514b\u5229 CS 294-91 \u8bfe\u7a0b\u3001\u65af\u5766\u798f CS 240 \u8bfe\u7a0b\u7684\u5b66\u751f\u3002Scott Klemmer \u5e2e\u6211\u4eec\u8bbe\u8ba1\u4e86\u7528\u6237\u8c03\u67e5\uff0cNelson Ray \u5efa\u8bae\u6211\u4eec\u8fdb\u884c\u7edf\u8ba1\u5b66\u7684\u5206\u6790\u3002\u5728\u7528\u6237\u8c03\u67e5\u65f6\u4f7f\u7528\u7684\u5173\u4e8e Paxos \u7684\u5e7b\u706f\u7247\u5f88\u5927\u4e00\u90e8\u5206\u662f\u4ece Lorenzo Alvisi \u7684\u5e7b\u706f\u7247\u4e0a\u501f\u9274\u8fc7\u6765\u7684\u3002\u7279\u522b\u7684\uff0c\u975e\u5e38\u611f\u8c22 DavidMazieres \u548c Ezra Hoch\uff0c\u4ed6\u4eec\u627e\u5230\u4e86 Raft \u4e2d\u4e00\u4e9b\u96be\u4ee5\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\u8bb8\u591a\u4eba\u63d0\u4f9b\u4e86\u5173\u4e8e\u8fd9\u7bc7\u8bba\u6587\u5341\u5206\u6709\u7528\u7684\u53cd\u9988\u548c\u7528\u6237\u8c03\u67e5\u6750\u6599\uff0c\u5305\u62ec Ed Bugnion\uff0cMichael Chan\uff0cHugues Evrard\uff0cDaniel Giffin\uff0cArjun Gopalan\uff0cJon Howell\uff0cVimalkumar Jeyakumar\uff0cAnkita Kejriwal\uff0cAleksandar Kracun\uff0cAmit Levy\uff0cJoel Martin\uff0cSatoshi Matsushita\uff0cOleg Pesok\uff0cDavid Ramos\uff0cRobbert van Renesse\uff0cMendel Rosenblum\uff0cNicolas Schiper\uff0cDeian Stefan\uff0cAndrew Stone\uff0cRyan Stutsman\uff0cDavid Terei\uff0cStephen Yang\uff0cMatei Zaharia \u4ee5\u53ca 24 \u4f4d\u533f\u540d\u7684\u4f1a\u8bae\u5ba1\u67e5\u4eba\u5458\uff08\u53ef\u80fd\u6709\u91cd\u590d\uff09\uff0c\u5e76\u4e14\u7279\u522b\u611f\u8c22\u6211\u4eec\u7684\u9886\u5bfc\u4eba Eddie Kohler\u3002Werner Vogels \u53d1\u4e86\u4e00\u6761\u65e9\u671f\u8349\u7a3f\u94fe\u63a5\u7684\u63a8\u7279\uff0c\u7ed9 Raft \u5e26\u6765\u4e86\u6781\u5927\u7684\u5173\u6ce8\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u7531 Gigascale \u7cfb\u7edf\u7814\u7a76\u4e2d\u5fc3\u548c Multiscale \u7cfb\u7edf\u7814\u7a76\u4e2d\u5fc3\u7ed9\u4e88\u652f\u6301\uff0c\u8fd9\u4e24\u4e2a\u7814\u7a76\u4e2d\u5fc3\u7531\u5173\u6ce8\u4e2d\u5fc3\u7814\u7a76\u7a0b\u5e8f\u8d44\u91d1\u652f\u6301\uff0c\u4e00\u4e2a\u662f\u534a\u5bfc\u4f53\u7814\u7a76\u516c\u53f8\u7684\u7a0b\u5e8f\uff0c\u7531 STARnet \u652f\u6301\uff0c\u4e00\u4e2a\u534a\u5bfc\u4f53\u7814\u7a76\u516c\u53f8\u7684\u7a0b\u5e8f\u7531 MARCO \u548c DARPA \u652f\u6301\uff0c\u5728\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u7684 0963859 \u53f7\u6279\u51c6\uff0c\u5e76\u4e14\u83b7\u5f97\u4e86\u6765\u81ea Facebook\uff0cGoogle\uff0cMellanox\uff0cNEC\uff0cNetApp\uff0cSAP \u548c Samsung \u7684\u652f\u6301\u3002Diego Ongaro \u7531 Junglee \u516c\u53f8\uff0c\u65af\u5766\u798f\u7684\u6bd5\u4e1a\u56e2\u4f53\u652f\u6301\u3002 \u53c2\u8003 \u00b6 \u7565","title":"\u5bfb\u627e\u4e00\u79cd\u6613\u4e8e\u7406\u89e3\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\uff08\u6269\u5c55\u7248\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#\u5bfb\u627e\u4e00\u79cd\u6613\u4e8e\u7406\u89e3\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u6269\u5c55\u7248","text":"","title":"\u5bfb\u627e\u4e00\u79cd\u6613\u4e8e\u7406\u89e3\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\uff08\u6269\u5c55\u7248\uff09"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#\u6458\u8981","text":"Raft \u662f\u4e00\u79cd\u4e3a\u4e86\u7ba1\u7406\u590d\u5236\u65e5\u5fd7\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u3002\u5b83\u63d0\u4f9b\u4e86\u548c Paxos \u7b97\u6cd5\u76f8\u540c\u7684\u529f\u80fd\u548c\u6027\u80fd\uff0c\u4f46\u662f\u5b83\u7684\u7b97\u6cd5\u7ed3\u6784\u548c Paxos \u4e0d\u540c\uff0c\u4f7f\u5f97 Raft \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u5e76\u4e14\u66f4\u5bb9\u6613\u6784\u5efa\u5b9e\u9645\u7684\u7cfb\u7edf\u3002\u4e3a\u4e86\u63d0\u5347\u53ef\u7406\u89e3\u6027\uff0cRaft \u5c06\u4e00\u81f4\u6027\u7b97\u6cd5\u5206\u89e3\u6210\u4e86\u51e0\u4e2a\u5173\u952e\u6a21\u5757\uff0c\u4f8b\u5982\u9886\u5bfc\u4eba\u9009\u4e3e\u3001\u65e5\u5fd7\u590d\u5236\u548c\u5b89\u5168\u6027\u3002\u540c\u65f6\u5b83\u901a\u8fc7\u5b9e\u65bd\u4e00\u4e2a\u66f4\u5f3a\u7684\u4e00\u81f4\u6027\u6765\u51cf\u5c11\u9700\u8981\u8003\u8651\u7684\u72b6\u6001\u7684\u6570\u91cf\u3002\u4e00\u9879\u7528\u6237\u7814\u7a76\u7684\u7ed3\u679c\u8868\u660e\uff0c\u5bf9\u4e8e\u5b66\u751f\u800c\u8a00\uff0cRaft \u7b97\u6cd5\u6bd4 Paxos \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u5b66\u4e60\u3002Raft \u7b97\u6cd5\u8fd8\u5305\u62ec\u4e00\u4e2a\u65b0\u7684\u673a\u5236\u6765\u5141\u8bb8\u96c6\u7fa4\u6210\u5458\u7684\u52a8\u6001\u6539\u53d8\uff0c\u5b83\u5229\u7528\u91cd\u53e0\u7684\u5927\u591a\u6570\u6765\u4fdd\u8bc1\u5b89\u5168\u6027\u3002","title":"\u6458\u8981"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#1-\u4ecb\u7ecd","text":"\u4e00\u81f4\u6027\u7b97\u6cd5\u5141\u8bb8\u4e00\u7ec4\u673a\u5668\u50cf\u4e00\u4e2a\u6574\u4f53\u4e00\u6837\u5de5\u4f5c\uff0c\u5373\u4f7f\u5176\u4e2d\u4e00\u4e9b\u673a\u5668\u51fa\u73b0\u6545\u969c\u4e5f\u80fd\u591f\u7ee7\u7eed\u5de5\u4f5c\u4e0b\u53bb\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u4e00\u81f4\u6027\u7b97\u6cd5\u5728\u6784\u5efa\u53ef\u4fe1\u8d56\u7684\u5927\u89c4\u6a21\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272\u3002\u5728\u8fc7\u53bb\u7684 10 \u5e74\u91cc\uff0cPaxos \u7b97\u6cd5\u7edf\u6cbb\u7740\u4e00\u81f4\u6027\u7b97\u6cd5\u8fd9\u4e00\u9886\u57df\uff1a\u7edd\u5927\u591a\u6570\u7684\u5b9e\u73b0\u90fd\u662f\u57fa\u4e8e Paxos \u6216\u8005\u53d7\u5176\u5f71\u54cd\u3002\u540c\u65f6 Paxos \u4e5f\u6210\u4e3a\u4e86\u6559\u5b66\u9886\u57df\u91cc\u8bb2\u89e3\u4e00\u81f4\u6027\u95ee\u9898\u65f6\u7684\u793a\u4f8b\u3002 \u4f46\u662f\u4e0d\u5e78\u7684\u662f\uff0c\u5c3d\u7ba1\u6709\u5f88\u591a\u5de5\u4f5c\u90fd\u5728\u5c1d\u8bd5\u964d\u4f4e\u5b83\u7684\u590d\u6742\u6027\uff0c\u4f46\u662f Paxos \u7b97\u6cd5\u4f9d\u7136\u5341\u5206\u96be\u4ee5\u7406\u89e3\u3002\u5e76\u4e14\uff0cPaxos \u81ea\u8eab\u7684\u7b97\u6cd5\u7ed3\u6784\u9700\u8981\u8fdb\u884c\u5927\u5e45\u7684\u4fee\u6539\u624d\u80fd\u591f\u5e94\u7528\u5230\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\u3002\u56e0\u6b64\u5de5\u4e1a\u754c\u548c\u5b66\u672f\u754c\u90fd\u5bf9 Paxos \u7b97\u6cd5\u611f\u5230\u5341\u5206\u5934\u75bc\u3002 \u52aa\u529b\u7814\u7a76\u8fc7 Paxos \u7b97\u6cd5\u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u5bfb\u627e\u4e00\u79cd\u65b0\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\uff0c\u53ef\u4ee5\u4e3a\u6784\u5efa\u5b9e\u9645\u7684\u7cfb\u7edf\u548c\u6559\u5b66\u63d0\u4f9b\u66f4\u597d\u7684\u57fa\u7840\u3002\u4e0e Paxos \u4e0d\u540c\uff0c\u6211\u4eec\u7684\u9996\u8981\u76ee\u6807\u662f\u53ef\u7406\u89e3\u6027\uff1a\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u4e00\u81f4\u6027\u7b97\u6cd5\uff0c\u5e76\u4e14\u6bd4 Paxos \u7b97\u6cd5\u66f4\u5bb9\u6613\u5b66\u4e60\u3002\u6b64\u5916\uff0c\u6211\u4eec\u5e0c\u671b\u8be5\u7b97\u6cd5\u65b9\u4fbf\u7cfb\u7edf\u6784\u5efa\u8005\u7684\u76f4\u89c9\u7684\u53d1\u5c55\u3002\u91cd\u8981\u7684\u4e0d\u4ec5\u4ec5\u662f\u7b97\u6cd5\u80fd\u591f\u5de5\u4f5c\uff0c\u66f4\u91cd\u8981\u7684\u662f\u80fd\u591f\u5f88\u6e05\u695a\u5730\u77e5\u9053\u5b83\u4e3a\u4ec0\u4e48\u80fd\u5de5\u4f5c\u3002 Raft \u4e00\u81f4\u6027\u7b97\u6cd5\u5c31\u662f\u8fd9\u4e9b\u5de5\u4f5c\u7684\u7ed3\u679c\u3002\u5728\u8bbe\u8ba1 Raft \u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e9b\u7279\u522b\u7684\u6280\u5de7\u6765\u63d0\u5347\u5b83\u7684\u53ef\u7406\u89e3\u6027\uff0c\u5305\u62ec\u7b97\u6cd5\u5206\u89e3\uff08Raft \u4e3b\u8981\u88ab\u5206\u6210\u4e86\u9886\u5bfc\u4eba\u9009\u4e3e\uff0c\u65e5\u5fd7\u590d\u5236\u548c\u5b89\u5168\u4e09\u4e2a\u6a21\u5757\uff09\u548c\u51cf\u5c11\u72b6\u6001\u673a\u7684\u72b6\u6001\uff08\u76f8\u5bf9\u4e8e Paxos\uff0cRaft \u51cf\u5c11\u4e86\u975e\u786e\u5b9a\u6027\u548c\u670d\u52a1\u5668\u4e92\u76f8\u5904\u4e8e\u975e\u4e00\u81f4\u6027\u7684\u65b9\u5f0f\uff09\u3002\u4e00\u4efd\u9488\u5bf9\u4e24\u6240\u5927\u5b66 43 \u4e2a\u5b66\u751f\u7684\u7814\u7a76\u8868\u660e Raft \u660e\u663e\u6bd4 Paxos \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u3002\u5728\u8fd9\u4e9b\u5b66\u751f\u540c\u65f6\u5b66\u4e60\u4e86\u8fd9\u4e24\u79cd\u7b97\u6cd5\u4e4b\u540e\uff0c\u548c Paxos \u6bd4\u8d77\u6765\uff0c\u5176\u4e2d 33 \u4e2a\u5b66\u751f\u80fd\u591f\u56de\u7b54\u6709\u5173\u4e8e Raft \u7684\u95ee\u9898\u3002 Raft \u7b97\u6cd5\u5728\u8bb8\u591a\u65b9\u9762\u548c\u73b0\u6709\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u90fd\u5f88\u76f8\u4f3c\uff08\u4e3b\u8981\u662f Oki \u548c Liskov \u7684 Viewstamped Replication\uff09\uff0c\u4f46\u662f\u5b83\u4e5f\u6709\u4e00\u4e9b\u72ec\u7279\u7684\u7279\u6027\uff1a \u5f3a\u9886\u5bfc\u4eba \uff1a\u548c\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u76f8\u6bd4\uff0cRaft \u4f7f\u7528\u4e00\u79cd\u66f4\u5f3a\u7684\u9886\u5bfc\u80fd\u529b\u5f62\u5f0f\u3002\u6bd4\u5982\uff0c\u65e5\u5fd7\u6761\u76ee\u53ea\u4ece\u9886\u5bfc\u4eba\u53d1\u9001\u7ed9\u5176\u4ed6\u7684\u670d\u52a1\u5668\u3002\u8fd9\u79cd\u65b9\u5f0f\u7b80\u5316\u4e86\u5bf9\u590d\u5236\u65e5\u5fd7\u7684\u7ba1\u7406\u5e76\u4e14\u4f7f\u5f97 Raft \u7b97\u6cd5\u66f4\u52a0\u6613\u4e8e\u7406\u89e3\u3002 \u9886\u5bfc\u9009\u4e3e \uff1aRaft \u7b97\u6cd5\u4f7f\u7528\u4e00\u4e2a\u968f\u673a\u8ba1\u65f6\u5668\u6765\u9009\u4e3e\u9886\u5bfc\u4eba\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ea\u662f\u5728\u4efb\u4f55\u4e00\u81f4\u6027\u7b97\u6cd5\u90fd\u5fc5\u987b\u5b9e\u73b0\u7684\u5fc3\u8df3\u673a\u5236\u4e0a\u589e\u52a0\u4e86\u4e00\u70b9\u673a\u5236\u3002\u5728\u89e3\u51b3\u51b2\u7a81\u7684\u65f6\u5019\u4f1a\u66f4\u52a0\u7b80\u5355\u5feb\u6377\u3002 \u6210\u5458\u5173\u7cfb\u8c03\u6574 \uff1aRaft \u4f7f\u7528\u4e00\u79cd\u5171\u540c\u4e00\u81f4\u7684\u65b9\u6cd5\u6765\u5904\u7406\u96c6\u7fa4\u6210\u5458\u53d8\u6362\u7684\u95ee\u9898\uff0c\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e0b\uff0c\u5904\u4e8e\u8c03\u6574\u8fc7\u7a0b\u4e2d\u7684\u4e24\u79cd\u4e0d\u540c\u7684\u914d\u7f6e\u96c6\u7fa4\u4e2d\u5927\u591a\u6570\u673a\u5668\u4f1a\u6709\u91cd\u53e0\uff0c\u8fd9\u5c31\u4f7f\u5f97\u96c6\u7fa4\u5728\u6210\u5458\u53d8\u6362\u7684\u65f6\u5019\u4f9d\u7136\u53ef\u4ee5\u7ee7\u7eed\u5de5\u4f5c\u3002 \u6211\u4eec\u76f8\u4fe1\uff0cRaft \u7b97\u6cd5\u4e0d\u8bba\u51fa\u4e8e\u6559\u5b66\u76ee\u7684\u8fd8\u662f\u4f5c\u4e3a\u5b9e\u8df5\u9879\u76ee\u7684\u57fa\u7840\u90fd\u662f\u8981\u6bd4 Paxos \u6216\u8005\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u8981\u4f18\u5f02\u7684\u3002\u5b83\u6bd4\u5176\u4ed6\u7b97\u6cd5\u66f4\u52a0\u7b80\u5355\uff0c\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\uff1b\u5b83\u7684\u7b97\u6cd5\u63cf\u8ff0\u8db3\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u73b0\u5b9e\u7684\u7cfb\u7edf\uff1b\u5b83\u6709\u597d\u591a\u5f00\u6e90\u7684\u5b9e\u73b0\u5e76\u4e14\u5728\u5f88\u591a\u516c\u53f8\u91cc\u4f7f\u7528\uff1b\u5b83\u7684\u5b89\u5168\u7279\u6027\u5df2\u7ecf\u88ab\u6b63\u5f0f\u5b9a\u4e49\u548c\u8bc1\u660e\uff1b\u5b83\u7684\u6548\u7387\u548c\u5176\u4ed6\u7b97\u6cd5\u6bd4\u8d77\u6765\u4e5f\u4e0d\u76f8\u4e0a\u4e0b\u3002 \u63a5\u4e0b\u6765\uff0c\u8fd9\u7bc7\u8bba\u6587\u4f1a\u4ecb\u7ecd\u4ee5\u4e0b\u5185\u5bb9\uff1a\u590d\u5236\u72b6\u6001\u673a\u95ee\u9898\uff08\u7b2c 2 \u8282\uff09\uff0c\u8ba8\u8bba Paxos \u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff08\u7b2c 3 \u8282\uff09\uff0c\u8ba8\u8bba\u6211\u4eec\u4e3a\u4e86\u53ef\u7406\u89e3\u6027\u800c\u91c7\u53d6\u7684\u65b9\u6cd5\uff08\u7b2c 4 \u8282\uff09\uff0c\u9610\u8ff0 Raft \u4e00\u81f4\u6027\u7b97\u6cd5\uff08\u7b2c 5-8 \u8282\uff09\uff0c\u8bc4\u4ef7 Raft \u7b97\u6cd5\uff08\u7b2c 9 \u8282\uff09\uff0c\u4ee5\u53ca\u4e00\u4e9b\u76f8\u5173\u7684\u5de5\u4f5c\uff08\u7b2c 10 \u8282\uff09\u3002","title":"1 \u4ecb\u7ecd"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#2-\u590d\u5236\u72b6\u6001\u673a","text":"\u4e00\u81f4\u6027\u7b97\u6cd5\u662f\u4ece\u590d\u5236\u72b6\u6001\u673a\u7684\u80cc\u666f\u4e0b\u63d0\u51fa\u7684\uff08\u53c2\u8003\u82f1\u6587\u539f\u6587\u5f15\u752837\uff09\u3002\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u4e00\u7ec4\u670d\u52a1\u5668\u4e0a\u7684\u72b6\u6001\u673a\u4ea7\u751f\u76f8\u540c\u72b6\u6001\u7684\u526f\u672c\uff0c\u5e76\u4e14\u5728\u4e00\u4e9b\u673a\u5668\u5b95\u6389\u7684\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u3002\u590d\u5236\u72b6\u6001\u673a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u88ab\u7528\u4e8e\u89e3\u51b3\u5f88\u591a\u5bb9\u9519\u7684\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5927\u89c4\u6a21\u7684\u7cfb\u7edf\u4e2d\u901a\u5e38\u90fd\u6709\u4e00\u4e2a\u96c6\u7fa4\u9886\u5bfc\u4eba\uff0c\u50cf GFS\u3001HDFS \u548c RAMCloud\uff0c\u5178\u578b\u5e94\u7528\u5c31\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u590d\u5236\u72b6\u6001\u673a\u53bb\u7ba1\u7406\u9886\u5bfc\u9009\u4e3e\u548c\u5b58\u50a8\u914d\u7f6e\u4fe1\u606f\u5e76\u4e14\u5728\u9886\u5bfc\u4eba\u5b95\u673a\u7684\u60c5\u51b5\u4e0b\u4e5f\u8981\u5b58\u6d3b\u4e0b\u6765\u3002\u6bd4\u5982 Chubby \u548c ZooKeeper\u3002 \u56fe 1 \uff1a\u590d\u5236\u72b6\u6001\u673a\u7684\u7ed3\u6784\u3002\u4e00\u81f4\u6027\u7b97\u6cd5\u7ba1\u7406\u7740\u6765\u81ea\u5ba2\u6237\u7aef\u6307\u4ee4\u7684\u590d\u5236\u65e5\u5fd7\u3002\u72b6\u6001\u673a\u4ece\u65e5\u5fd7\u4e2d\u5904\u7406\u76f8\u540c\u987a\u5e8f\u7684\u76f8\u540c\u6307\u4ee4\uff0c\u6240\u4ee5\u4ea7\u751f\u7684\u7ed3\u679c\u4e5f\u662f\u76f8\u540c\u7684\u3002 \u590d\u5236\u72b6\u6001\u673a\u901a\u5e38\u90fd\u662f\u57fa\u4e8e\u590d\u5236\u65e5\u5fd7\u5b9e\u73b0\u7684\uff0c\u5982\u56fe 1\u3002\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u5b58\u50a8\u4e00\u4e2a\u5305\u542b\u4e00\u7cfb\u5217\u6307\u4ee4\u7684\u65e5\u5fd7\uff0c\u5e76\u4e14\u6309\u7167\u65e5\u5fd7\u7684\u987a\u5e8f\u8fdb\u884c\u6267\u884c\u3002\u6bcf\u4e00\u4e2a\u65e5\u5fd7\u90fd\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u5305\u542b\u76f8\u540c\u7684\u6307\u4ee4\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u90fd\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u5e8f\u5217\u3002\u56e0\u4e3a\u6bcf\u4e2a\u72b6\u6001\u673a\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u6bcf\u4e00\u6b21\u6267\u884c\u64cd\u4f5c\u90fd\u4ea7\u751f\u76f8\u540c\u7684\u72b6\u6001\u548c\u540c\u6837\u7684\u5e8f\u5217\u3002 \u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u4efb\u52a1\u662f\u4fdd\u8bc1\u590d\u5236\u65e5\u5fd7\u7684\u4e00\u81f4\u6027\u3002\u670d\u52a1\u5668\u4e0a\u7684\u4e00\u81f4\u6027\u6a21\u5757\u63a5\u6536\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u6307\u4ee4\u7136\u540e\u6dfb\u52a0\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\u3002\u5b83\u548c\u5176\u4ed6\u670d\u52a1\u5668\u4e0a\u7684\u4e00\u81f4\u6027\u6a21\u5757\u8fdb\u884c\u901a\u4fe1\u6765\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\u7684\u65e5\u5fd7\u6700\u7ec8\u90fd\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u5305\u542b\u76f8\u540c\u7684\u8bf7\u6c42\uff0c\u5373\u4f7f\u6709\u4e9b\u670d\u52a1\u5668\u53d1\u751f\u6545\u969c\u3002\u4e00\u65e6\u6307\u4ee4\u88ab\u6b63\u786e\u7684\u590d\u5236\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u72b6\u6001\u673a\u6309\u7167\u65e5\u5fd7\u987a\u5e8f\u5904\u7406\u4ed6\u4eec\uff0c\u7136\u540e\u8f93\u51fa\u7ed3\u679c\u88ab\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u56e0\u6b64\uff0c\u670d\u52a1\u5668\u96c6\u7fa4\u770b\u8d77\u6765\u5f62\u6210\u4e86\u4e00\u4e2a\u9ad8\u53ef\u9760\u7684\u72b6\u6001\u673a\u3002 \u5b9e\u9645\u7cfb\u7edf\u4e2d\u4f7f\u7528\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u901a\u5e38\u542b\u6709\u4ee5\u4e0b\u7279\u6027\uff1a \u5b89\u5168\u6027\u4fdd\u8bc1\uff08\u7edd\u5bf9\u4e0d\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u7684\u7ed3\u679c\uff09\uff1a\u5728\u975e\u62dc\u5360\u5ead\u9519\u8bef\u60c5\u51b5\u4e0b\uff0c\u5305\u62ec\u7f51\u7edc\u5ef6\u8fdf\u3001\u5206\u533a\u3001\u4e22\u5305\u3001\u91cd\u590d\u548c\u4e71\u5e8f\u7b49\u9519\u8bef\u90fd\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u786e\u3002 \u53ef\u7528\u6027\uff1a\u96c6\u7fa4\u4e2d\u53ea\u8981\u6709\u5927\u591a\u6570\u7684\u673a\u5668\u53ef\u8fd0\u884c\u5e76\u4e14\u80fd\u591f\u76f8\u4e92\u901a\u4fe1\u3001\u548c\u5ba2\u6237\u7aef\u901a\u4fe1\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u53ef\u7528\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u5178\u578b\u7684\u5305\u542b 5 \u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\u53ef\u4ee5\u5bb9\u5fcd\u4e24\u4e2a\u8282\u70b9\u7684\u5931\u8d25\u3002\u670d\u52a1\u5668\u88ab\u505c\u6b62\u5c31\u8ba4\u4e3a\u662f\u5931\u8d25\u3002\u5b83\u4eec\u7a0d\u540e\u53ef\u80fd\u4f1a\u4ece\u53ef\u9760\u5b58\u50a8\u7684\u72b6\u6001\u4e2d\u6062\u590d\u5e76\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4\u3002 \u4e0d\u4f9d\u8d56\u65f6\u5e8f\u6765\u4fdd\u8bc1\u4e00\u81f4\u6027\uff1a\u7269\u7406\u65f6\u949f\u9519\u8bef\u6216\u8005\u6781\u7aef\u7684\u6d88\u606f\u5ef6\u8fdf\u53ea\u6709\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u624d\u4f1a\u5bfc\u81f4\u53ef\u7528\u6027\u95ee\u9898\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e00\u6761\u6307\u4ee4\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5feb\u7684\u5728\u96c6\u7fa4\u4e2d\u5927\u591a\u6570\u8282\u70b9\u54cd\u5e94\u4e00\u8f6e\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u65f6\u5b8c\u6210\u3002\u5c0f\u90e8\u5206\u6bd4\u8f83\u6162\u7684\u8282\u70b9\u4e0d\u4f1a\u5f71\u54cd\u7cfb\u7edf\u6574\u4f53\u7684\u6027\u80fd\u3002","title":"2 \u590d\u5236\u72b6\u6001\u673a"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#3-paxos-\u7b97\u6cd5\u7684\u95ee\u9898","text":"\u5728\u8fc7\u53bb\u7684 10 \u5e74\u91cc\uff0cLeslie Lamport \u7684 Paxos \u7b97\u6cd5\u51e0\u4e4e\u5df2\u7ecf\u6210\u4e3a\u4e00\u81f4\u6027\u7684\u4ee3\u540d\u8bcd\uff1aPaxos \u662f\u5728\u8bfe\u7a0b\u6559\u5b66\u4e2d\u6700\u7ecf\u5e38\u4f7f\u7528\u7684\u7b97\u6cd5\uff0c\u540c\u65f6\u4e5f\u662f\u5927\u591a\u6570\u4e00\u81f4\u6027\u7b97\u6cd5\u5b9e\u73b0\u7684\u8d77\u70b9\u3002Paxos \u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u80fd\u591f\u8fbe\u6210\u5355\u4e00\u51b3\u7b56\u4e00\u81f4\u7684\u534f\u8bae\uff0c\u6bd4\u5982\u5355\u6761\u7684\u590d\u5236\u65e5\u5fd7\u9879\u3002\u6211\u4eec\u628a\u8fd9\u4e00\u5b50\u96c6\u53eb\u505a\u5355\u51b3\u7b56 Paxos\u3002\u7136\u540e\u901a\u8fc7\u7ec4\u5408\u591a\u4e2a Paxos \u534f\u8bae\u7684\u5b9e\u4f8b\u6765\u4fc3\u8fdb\u4e00\u7cfb\u5217\u51b3\u7b56\u7684\u8fbe\u6210\u3002Paxos \u4fdd\u8bc1\u5b89\u5168\u6027\u548c\u6d3b\u6027\uff0c\u540c\u65f6\u4e5f\u652f\u6301\u96c6\u7fa4\u6210\u5458\u5173\u7cfb\u7684\u53d8\u66f4\u3002Paxos \u7684\u6b63\u786e\u6027\u5df2\u7ecf\u88ab\u8bc1\u660e\uff0c\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u4e5f\u5f88\u9ad8\u6548\u3002 \u4e0d\u5e78\u7684\u662f\uff0cPaxos \u6709\u4e24\u4e2a\u660e\u663e\u7684\u7f3a\u70b9\u3002\u7b2c\u4e00\u4e2a\u7f3a\u70b9\u662f Paxos \u7b97\u6cd5\u7279\u522b\u7684\u96be\u4ee5\u7406\u89e3\u3002\u5b8c\u6574\u7684\u89e3\u91ca\u662f\u51fa\u4e86\u540d\u7684\u4e0d\u900f\u660e\uff1b\u901a\u8fc7\u6781\u5927\u7684\u52aa\u529b\u4e4b\u540e\uff0c\u4e5f\u53ea\u6709\u5c11\u6570\u4eba\u6210\u529f\u7406\u89e3\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u3002\u56e0\u6b64\uff0c\u6709\u4e86\u51e0\u6b21\u7528\u66f4\u7b80\u5355\u7684\u672f\u8bed\u6765\u89e3\u91ca Paxos \u7684\u5c1d\u8bd5\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u89e3\u91ca\u90fd\u53ea\u5173\u6ce8\u4e86\u5355\u51b3\u7b56\u7684\u5b50\u96c6\u95ee\u9898\uff0c\u4f46\u4f9d\u7136\u5f88\u5177\u6709\u6311\u6218\u6027\u3002\u5728 2012 \u5e74 NSDI \u7684\u4f1a\u8bae\u4e2d\u7684\u4e00\u6b21\u8c03\u67e5\u663e\u793a\uff0c\u5f88\u5c11\u6709\u4eba\u5bf9 Paxos \u7b97\u6cd5\u611f\u5230\u6ee1\u610f\uff0c\u751a\u81f3\u5728\u7ecf\u9a8c\u8001\u9053\u7684\u7814\u7a76\u8005\u4e2d\u4e5f\u662f\u5982\u6b64\u3002\u6211\u4eec\u81ea\u5df1\u4e5f\u5c1d\u8bd5\u53bb\u7406\u89e3 Paxos\uff1b\u6211\u4eec\u4e00\u76f4\u6ca1\u80fd\u7406\u89e3 Paxos \u76f4\u5230\u6211\u4eec\u8bfb\u4e86\u5f88\u591a\u5bf9 Paxos \u7684\u7b80\u5316\u89e3\u91ca\u5e76\u4e14\u8bbe\u8ba1\u4e86\u6211\u4eec\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u82b1\u4e86\u8fd1\u4e00\u5e74\u65f6\u95f4\u3002 \u6211\u4eec\u5047\u8bbe Paxos \u7684\u4e0d\u900f\u660e\u6027\u6765\u81ea\u5b83\u9009\u62e9\u5355\u51b3\u7b56\u95ee\u9898\u4f5c\u4e3a\u5b83\u7684\u57fa\u7840\u3002\u5355\u51b3\u7b56 Paxos \u662f\u6666\u6da9\u5fae\u5999\u7684\uff0c\u5b83\u88ab\u5212\u5206\u6210\u4e86\u4e24\u79cd\u6ca1\u6709\u7b80\u5355\u76f4\u89c2\u89e3\u91ca\u548c\u65e0\u6cd5\u72ec\u7acb\u7406\u89e3\u7684\u60c5\u666f\u3002\u56e0\u6b64\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5f88\u96be\u5efa\u7acb\u8d77\u76f4\u89c2\u7684\u611f\u53d7\u4e3a\u4ec0\u4e48\u5355\u51b3\u7b56 Paxos \u7b97\u6cd5\u80fd\u591f\u5de5\u4f5c\u3002\u6784\u6210\u591a\u51b3\u7b56 Paxos \u589e\u52a0\u4e86\u5f88\u591a\u9519\u7efc\u590d\u6742\u7684\u89c4\u5219\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u5728\u591a\u51b3\u7b56\u4e0a\u8fbe\u6210\u4e00\u81f4\u6027\u7684\u95ee\u9898\uff08\u4e00\u4efd\u65e5\u5fd7\u800c\u4e0d\u662f\u5355\u4e00\u7684\u65e5\u5fd7\u8bb0\u5f55\uff09\u80fd\u591f\u88ab\u5206\u89e3\u6210\u5176\u4ed6\u7684\u65b9\u5f0f\u5e76\u4e14\u66f4\u52a0\u76f4\u63a5\u548c\u660e\u663e\u3002 Paxos\u7b97\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\u5c31\u662f\u5b83\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u8db3\u591f\u597d\u7684\u7528\u6765\u6784\u5efa\u4e00\u4e2a\u73b0\u5b9e\u7cfb\u7edf\u7684\u57fa\u7840\u3002\u4e00\u4e2a\u539f\u56e0\u662f\u8fd8\u6ca1\u6709\u4e00\u79cd\u88ab\u5e7f\u6cdb\u8ba4\u540c\u7684\u591a\u51b3\u7b56\u95ee\u9898\u7684\u7b97\u6cd5\u3002Lamport \u7684\u63cf\u8ff0\u57fa\u672c\u4e0a\u90fd\u662f\u5173\u4e8e\u5355\u51b3\u7b56 Paxos \u7684\uff1b\u4ed6\u7b80\u8981\u63cf\u8ff0\u4e86\u5b9e\u65bd\u591a\u51b3\u7b56 Paxos \u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u7f3a\u4e4f\u5f88\u591a\u7ec6\u8282\u3002\u5f53\u7136\u4e5f\u6709\u5f88\u591a\u5177\u4f53\u5316 Paxos \u7684\u5c1d\u8bd5\uff0c\u4f46\u662f\u4ed6\u4eec\u90fd\u4e92\u76f8\u4e0d\u4e00\u6837\uff0c\u548c Paxos \u7684\u6982\u8ff0\u4e5f\u4e0d\u540c\u3002\u4f8b\u5982 Chubby \u8fd9\u6837\u7684\u7cfb\u7edf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e Paxos \u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u5927\u591a\u6570\u7684\u7ec6\u8282\u5e76\u6ca1\u6709\u88ab\u516c\u5f00\u3002 \u800c\u4e14\uff0cPaxos \u7b97\u6cd5\u7684\u7ed3\u6784\u4e5f\u4e0d\u662f\u5341\u5206\u6613\u4e8e\u6784\u5efa\u5b9e\u8df5\u7684\u7cfb\u7edf\uff1b\u5355\u51b3\u7b56\u5206\u89e3\u4e5f\u4f1a\u4ea7\u751f\u5176\u4ed6\u7684\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u72ec\u7acb\u5730\u9009\u62e9\u4e00\u7ec4\u65e5\u5fd7\u6761\u76ee\u7136\u540e\u5408\u5e76\u6210\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u65e5\u5fd7\u5e76\u6ca1\u6709\u5e26\u6765\u592a\u591a\u7684\u597d\u5904\uff0c\u4ec5\u4ec5\u589e\u52a0\u4e86\u4e0d\u5c11\u590d\u6742\u6027\u3002\u56f4\u7ed5\u7740\u65e5\u5fd7\u6765\u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\u662f\u66f4\u52a0\u7b80\u5355\u9ad8\u6548\u7684\uff1b\u65b0\u65e5\u5fd7\u6761\u76ee\u4ee5\u4e25\u683c\u9650\u5236\u7684\u987a\u5e8f\u589e\u6dfb\u5230\u65e5\u5fd7\u4e2d\u53bb\u3002\u53e6\u4e00\u4e2a\u95ee\u9898\u662f\uff0cPaxos \u4f7f\u7528\u4e86\u4e00\u79cd\u5bf9\u7b49\u7684\u70b9\u5bf9\u70b9\u7684\u65b9\u5f0f\u4f5c\u4e3a\u5b83\u7684\u6838\u5fc3\uff08\u5c3d\u7ba1\u5b83\u6700\u7ec8\u63d0\u8bae\u4e86\u4e00\u79cd\u5f31\u9886\u5bfc\u4eba\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u6027\u80fd\uff09\u3002\u5728\u53ea\u6709\u4e00\u4e2a\u51b3\u7b56\u4f1a\u88ab\u5236\u5b9a\u7684\u7b80\u5316\u4e16\u754c\u4e2d\u662f\u5f88\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u5f88\u5c11\u6709\u73b0\u5b9e\u7684\u7cfb\u7edf\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002\u5982\u679c\u6709\u4e00\u7cfb\u5217\u7684\u51b3\u7b56\u9700\u8981\u88ab\u5236\u5b9a\uff0c\u9996\u5148\u9009\u62e9\u4e00\u4e2a\u9886\u5bfc\u4eba\uff0c\u7136\u540e\u8ba9\u4ed6\u53bb\u534f\u8c03\u6240\u6709\u7684\u51b3\u8bae\uff0c\u4f1a\u66f4\u52a0\u7b80\u5355\u5feb\u901f\u3002 \u56e0\u6b64\uff0c\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\u5f88\u5c11\u6709\u548c Paxos \u76f8\u4f3c\u7684\u5b9e\u8df5\u3002\u6bcf\u4e00\u79cd\u5b9e\u73b0\u90fd\u662f\u4ece Paxos \u5f00\u59cb\u7814\u7a76\uff0c\u7136\u540e\u53d1\u73b0\u5f88\u591a\u5b9e\u73b0\u4e0a\u7684\u96be\u9898\uff0c\u518d\u7136\u540e\u5f00\u53d1\u4e86\u4e00\u79cd\u548c Paxos \u660e\u663e\u4e0d\u4e00\u6837\u7684\u7ed3\u6784\u3002\u8fd9\u6837\u662f\u975e\u5e38\u8d39\u65f6\u548c\u5bb9\u6613\u51fa\u9519\u7684\uff0c\u5e76\u4e14\u7406\u89e3 Paxos \u7684\u96be\u5ea6\u4f7f\u5f97\u8fd9\u4e2a\u95ee\u9898\u66f4\u52a0\u7cdf\u7cd5\u3002Paxos \u7b97\u6cd5\u5728\u7406\u8bba\u4e0a\u88ab\u8bc1\u660e\u662f\u6b63\u786e\u53ef\u884c\u7684\uff0c\u4f46\u662f\u73b0\u5b9e\u7684\u7cfb\u7edf\u548c Paxos \u5dee\u522b\u662f\u5982\u6b64\u7684\u5927\uff0c\u4ee5\u81f3\u4e8e\u8fd9\u4e9b\u8bc1\u660e\u6ca1\u6709\u4ec0\u4e48\u592a\u5927\u7684\u4ef7\u503c\u3002\u4e0b\u9762\u6765\u81ea Chubby \u5b9e\u73b0\u975e\u5e38\u5178\u578b\uff1a \u5728Paxos\u7b97\u6cd5\u63cf\u8ff0\u548c\u5b9e\u73b0\u73b0\u5b9e\u7cfb\u7edf\u4e2d\u95f4\u6709\u7740\u5de8\u5927\u7684\u9e3f\u6c9f\u3002\u6700\u7ec8\u7684\u7cfb\u7edf\u5efa\u7acb\u5728\u4e00\u79cd\u6ca1\u6709\u7ecf\u8fc7\u8bc1\u660e\u7684\u7b97\u6cd5\u4e4b\u4e0a\u3002 \u7531\u4e8e\u4ee5\u4e0a\u95ee\u9898\uff0c\u6211\u4eec\u8ba4\u4e3a Paxos \u7b97\u6cd5\u65e2\u6ca1\u6709\u63d0\u4f9b\u4e00\u4e2a\u826f\u597d\u7684\u57fa\u7840\u7ed9\u5b9e\u8df5\u7684\u7cfb\u7edf\uff0c\u4e5f\u6ca1\u6709\u7ed9\u6559\u5b66\u5f88\u597d\u7684\u5e2e\u52a9\u3002\u57fa\u4e8e\u4e00\u81f4\u6027\u95ee\u9898\u5728\u5927\u89c4\u6a21\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u7684\u91cd\u8981\u6027\uff0c\u6211\u4eec\u51b3\u5b9a\u770b\u770b\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u62e5\u6709\u66f4\u597d\u7279\u6027\u7684\u66ff\u4ee3 Paxos \u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u3002Raft \u7b97\u6cd5\u5c31\u662f\u8fd9\u6b21\u5b9e\u9a8c\u7684\u7ed3\u679c\u3002","title":"3 Paxos \u7b97\u6cd5\u7684\u95ee\u9898"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#4-\u4e3a\u4e86\u53ef\u7406\u89e3\u6027\u7684\u8bbe\u8ba1","text":"\u8bbe\u8ba1 Raft \u7b97\u6cd5\u6211\u4eec\u6709\u51e0\u4e2a\u521d\u8877\uff1a\u5b83\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u5b9e\u9645\u7684\u7cfb\u7edf\u5b9e\u73b0\u57fa\u7840\uff0c\u8fd9\u6837\u624d\u80fd\u5927\u5927\u51cf\u5c11\u5f00\u53d1\u8005\u7684\u5de5\u4f5c\uff1b\u5b83\u5fc5\u987b\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u5b89\u5168\u7684\u5e76\u4e14\u5728\u5927\u591a\u6570\u7684\u60c5\u51b5\u4e0b\u90fd\u662f\u53ef\u7528\u7684\uff1b\u5e76\u4e14\u5b83\u7684\u5927\u90e8\u5206\u64cd\u4f5c\u5fc5\u987b\u662f\u9ad8\u6548\u7684\u3002\u4f46\u662f\u6211\u4eec\u6700\u91cd\u8981\u4e5f\u662f\u6700\u5927\u7684\u6311\u6218\u662f\u53ef\u7406\u89e3\u6027\u3002\u5b83\u5fc5\u987b\u4fdd\u8bc1\u5bf9\u4e8e\u666e\u904d\u7684\u4eba\u7fa4\u90fd\u53ef\u4ee5\u5341\u5206\u5bb9\u6613\u7684\u53bb\u7406\u89e3\u3002\u53e6\u5916\uff0c\u5b83\u5fc5\u987b\u80fd\u591f\u8ba9\u4eba\u5f62\u6210\u76f4\u89c2\u7684\u8ba4\u8bc6\uff0c\u8fd9\u6837\u7cfb\u7edf\u7684\u6784\u5efa\u8005\u624d\u80fd\u591f\u5728\u73b0\u5b9e\u4e2d\u8fdb\u884c\u5fc5\u7136\u7684\u6269\u5c55\u3002 \u5728\u8bbe\u8ba1 Raft \u7b97\u6cd5\u7684\u65f6\u5019\uff0c\u6709\u5f88\u591a\u7684\u70b9\u9700\u8981\u6211\u4eec\u5728\u5404\u79cd\u5907\u9009\u65b9\u6848\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8bc4\u4f30\u5907\u9009\u65b9\u6848\u57fa\u4e8e\u53ef\u7406\u89e3\u6027\u539f\u5219\uff1a\u89e3\u91ca\u5404\u4e2a\u5907\u9009\u65b9\u6848\u6709\u591a\u5927\u7684\u96be\u5ea6\uff08\u4f8b\u5982\uff0cRaft \u7684\u72b6\u6001\u7a7a\u95f4\u6709\u591a\u590d\u6742\uff0c\u662f\u5426\u6709\u5fae\u5999\u7684\u6697\u793a\uff09\uff1f\u5bf9\u4e8e\u4e00\u4e2a\u8bfb\u8005\u800c\u8a00\uff0c\u5b8c\u5168\u7406\u89e3\u8fd9\u4e2a\u65b9\u6848\u548c\u6697\u793a\u662f\u5426\u5bb9\u6613\uff1f \u6211\u4eec\u610f\u8bc6\u5230\u5bf9\u8fd9\u79cd\u53ef\u7406\u89e3\u6027\u5206\u6790\u4e0a\u5177\u6709\u9ad8\u5ea6\u7684\u4e3b\u89c2\u6027\uff1b\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u79cd\u901a\u5e38\u9002\u7528\u7684\u6280\u672f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u7b2c\u4e00\u4e2a\u6280\u672f\u5c31\u662f\u4f17\u6240\u5468\u77e5\u7684\u95ee\u9898\u5206\u89e3\uff1a\u6211\u4eec\u5c3d\u53ef\u80fd\u5730\u5c06\u95ee\u9898\u5206\u89e3\u6210\u51e0\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\uff0c\u53ef\u88ab\u89e3\u51b3\u7684\u3001\u53ef\u89e3\u91ca\u7684\u548c\u53ef\u7406\u89e3\u7684\u5b50\u95ee\u9898\u3002\u4f8b\u5982\uff0cRaft \u7b97\u6cd5\u88ab\u6211\u4eec\u5206\u6210\u9886\u5bfc\u4eba\u9009\u4e3e\uff0c\u65e5\u5fd7\u590d\u5236\uff0c\u5b89\u5168\u6027\u548c\u6210\u5458\u53d8\u66f4\u51e0\u4e2a\u90e8\u5206\u3002 \u6211\u4eec\u4f7f\u7528\u7684\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u662f\u901a\u8fc7\u51cf\u5c11\u72b6\u6001\u7684\u6570\u91cf\u6765\u7b80\u5316\u9700\u8981\u8003\u8651\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u4f7f\u5f97\u7cfb\u7edf\u66f4\u52a0\u8fde\u8d2f\u5e76\u4e14\u5728\u53ef\u80fd\u7684\u65f6\u5019\u6d88\u9664\u4e0d\u786e\u5b9a\u6027\u3002\u7279\u522b\u7684\uff0c\u6240\u6709\u7684\u65e5\u5fd7\u662f\u4e0d\u5141\u8bb8\u6709\u7a7a\u6d1e\u7684\uff0c\u5e76\u4e14 Raft \u9650\u5236\u4e86\u65e5\u5fd7\u4e4b\u95f4\u53d8\u6210\u4e0d\u4e00\u81f4\u72b6\u6001\u7684\u53ef\u80fd\u3002\u5c3d\u7ba1\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6211\u4eec\u90fd\u8bd5\u56fe\u6d88\u9664\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46\u662f\u4e5f\u6709\u4e00\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u786e\u5b9a\u6027\u53ef\u4ee5\u63d0\u5347\u53ef\u7406\u89e3\u6027\u3002\u5c24\u5176\u662f\uff0c\u968f\u673a\u5316\u65b9\u6cd5\u589e\u52a0\u4e86\u4e0d\u786e\u5b9a\u6027\uff0c\u4f46\u662f\u4ed6\u4eec\u6709\u5229\u4e8e\u51cf\u5c11\u72b6\u6001\u7a7a\u95f4\u6570\u91cf\uff0c\u901a\u8fc7\u5904\u7406\u6240\u6709\u53ef\u80fd\u9009\u62e9\u65f6\u4f7f\u7528\u76f8\u4f3c\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u4f7f\u7528\u968f\u673a\u5316\u6765\u7b80\u5316 Raft \u4e2d\u9886\u5bfc\u4eba\u9009\u4e3e\u7b97\u6cd5\u3002","title":"4 \u4e3a\u4e86\u53ef\u7406\u89e3\u6027\u7684\u8bbe\u8ba1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#5-raft-\u4e00\u81f4\u6027\u7b97\u6cd5","text":"Raft \u662f\u4e00\u79cd\u7528\u6765\u7ba1\u7406\u7ae0\u8282 2 \u4e2d\u63cf\u8ff0\u7684\u590d\u5236\u65e5\u5fd7\u7684\u7b97\u6cd5\u3002\u56fe 2 \u4e3a\u4e86\u53c2\u8003\u4e4b\u7528\uff0c\u603b\u7ed3\u8fd9\u4e2a\u7b97\u6cd5\u7684\u7b80\u7565\u7248\u672c\uff0c\u56fe 3 \u5217\u4e3e\u4e86\u8fd9\u4e2a\u7b97\u6cd5\u7684\u4e00\u4e9b\u5173\u952e\u7279\u6027\u3002\u56fe\u4e2d\u7684\u8fd9\u4e9b\u5143\u7d20\u4f1a\u5728\u5269\u4e0b\u7684\u7ae0\u8282\u9010\u4e00\u4ecb\u7ecd\u3002 Raft \u901a\u8fc7\u9009\u4e3e\u4e00\u4e2a\u6770\u51fa\u7684\u9886\u5bfc\u4eba\uff0c\u7136\u540e\u7ed9\u4e88\u4ed6\u5168\u90e8\u7684\u7ba1\u7406\u590d\u5236\u65e5\u5fd7\u7684\u8d23\u4efb\u6765\u5b9e\u73b0\u4e00\u81f4\u6027\u3002\u9886\u5bfc\u4eba\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u65e5\u5fd7\u6761\u76ee\uff08log entries\uff09\uff0c\u628a\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u5176\u4ed6\u670d\u52a1\u5668\u4e0a\uff0c\u5e76\u544a\u8bc9\u5176\u4ed6\u7684\u670d\u52a1\u5668\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u5b89\u5168\u5730\u5c06\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u4ed6\u4eec\u7684\u72b6\u6001\u673a\u4e2d\u3002\u62e5\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u5927\u5927\u7b80\u5316\u4e86\u5bf9\u590d\u5236\u65e5\u5fd7\u7684\u7ba1\u7406\u3002\u4f8b\u5982\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u51b3\u5b9a\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u9700\u8981\u653e\u5728\u65e5\u5fd7\u4e2d\u7684\u4ec0\u4e48\u4f4d\u7f6e\u800c\u4e0d\u9700\u8981\u548c\u5176\u4ed6\u670d\u52a1\u5668\u5546\u8bae\uff0c\u5e76\u4e14\u6570\u636e\u90fd\u4ece\u9886\u5bfc\u4eba\u6d41\u5411\u5176\u4ed6\u670d\u52a1\u5668\u3002\u4e00\u4e2a\u9886\u5bfc\u4eba\u53ef\u80fd\u4f1a\u53d1\u751f\u6545\u969c\uff0c\u6216\u8005\u548c\u5176\u4ed6\u670d\u52a1\u5668\u5931\u53bb\u8fde\u63a5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u4f1a\u88ab\u9009\u4e3e\u51fa\u6765\u3002 \u901a\u8fc7\u9886\u5bfc\u4eba\u7684\u65b9\u5f0f\uff0cRaft \u5c06\u4e00\u81f4\u6027\u95ee\u9898\u5206\u89e3\u6210\u4e86\u4e09\u4e2a\u76f8\u5bf9\u72ec\u7acb\u7684\u5b50\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u5b50\u7ae0\u8282\u4e2d\u8fdb\u884c\u8ba8\u8bba\uff1a \u9886\u5bfc\u9009\u4e3e \uff1a\u5f53\u73b0\u5b58\u7684\u9886\u5bfc\u4eba\u53d1\u751f\u6545\u969c\u7684\u65f6\u5019, \u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u9700\u8981\u88ab\u9009\u4e3e\u51fa\u6765\uff08\u7ae0\u8282 5.2\uff09 \u65e5\u5fd7\u590d\u5236 \uff1a\u9886\u5bfc\u4eba\u5fc5\u987b\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u65e5\u5fd7\u6761\u76ee\uff08log entries\uff09\u7136\u540e\u590d\u5236\u5230\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u8282\u70b9\uff0c\u5e76\u5f3a\u5236\u8981\u6c42\u5176\u4ed6\u8282\u70b9\u7684\u65e5\u5fd7\u548c\u81ea\u5df1\u4fdd\u6301\u4e00\u81f4\u3002 \u5b89\u5168\u6027 \uff1a\u5728 Raft \u4e2d\u5b89\u5168\u6027\u7684\u5173\u952e\u662f\u5728\u56fe 3 \u4e2d\u5c55\u793a\u7684\u72b6\u6001\u673a\u5b89\u5168\uff1a\u5982\u679c\u6709\u4efb\u4f55\u7684\u670d\u52a1\u5668\u8282\u70b9\u5df2\u7ecf\u5e94\u7528\u4e86\u4e00\u4e2a\u786e\u5b9a\u7684\u65e5\u5fd7\u6761\u76ee\u5230\u5b83\u7684\u72b6\u6001\u673a\u4e2d\uff0c\u90a3\u4e48\u5176\u4ed6\u670d\u52a1\u5668\u8282\u70b9\u4e0d\u80fd\u5728\u540c\u4e00\u4e2a\u65e5\u5fd7\u7d22\u5f15\u4f4d\u7f6e\u5e94\u7528\u4e00\u4e2a\u4e0d\u540c\u7684\u6307\u4ee4\u3002\u7ae0\u8282 5.4 \u9610\u8ff0\u4e86 Raft \u7b97\u6cd5\u662f\u5982\u4f55\u4fdd\u8bc1\u8fd9\u4e2a\u7279\u6027\u7684\uff1b\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u6d89\u53ca\u5230\u9009\u4e3e\u673a\u5236\uff085.2 \u8282\uff09\u4e0a\u7684\u4e00\u4e2a\u989d\u5916\u9650\u5236\u3002 \u5728\u5c55\u793a\u4e00\u81f4\u6027\u7b97\u6cd5\u4e4b\u540e\uff0c\u8fd9\u4e00\u7ae0\u8282\u4f1a\u8ba8\u8bba\u4e00\u4e9b\u53ef\u7528\u6027\u7684\u95ee\u9898\u548c\u8ba1\u65f6\u5728\u7cfb\u7edf\u4e2d\u7684\u4f5c\u7528\u3002 \u72b6\u6001 \uff1a \u6240\u6709\u670d\u52a1\u5668\u4e0a\u7684\u6301\u4e45\u6027\u72b6\u6001 (\u5728\u54cd\u5e94 RPC \u8bf7\u6c42\u4e4b\u524d\uff0c\u5df2\u7ecf\u66f4\u65b0\u5230\u4e86\u7a33\u5b9a\u7684\u5b58\u50a8\u8bbe\u5907) | \u53c2\u6570 | \u89e3\u91ca | | --- | --- | | currentTerm | \u670d\u52a1\u5668\u5df2\u77e5\u6700\u65b0\u7684\u4efb\u671f\uff08\u5728\u670d\u52a1\u5668\u9996\u6b21\u542f\u52a8\u65f6\u521d\u59cb\u5316\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| | votedFor | \u5f53\u524d\u4efb\u671f\u5185\u6536\u5230\u9009\u7968\u7684 candidateId\uff0c\u5982\u679c\u6ca1\u6709\u6295\u7ed9\u4efb\u4f55\u5019\u9009\u4eba \u5219\u4e3a\u7a7a| | log[] | \u65e5\u5fd7\u6761\u76ee\uff1b\u6bcf\u4e2a\u6761\u76ee\u5305\u542b\u4e86\u7528\u4e8e\u72b6\u6001\u673a\u7684\u547d\u4ee4\uff0c\u4ee5\u53ca\u9886\u5bfc\u4eba\u63a5\u6536\u5230\u8be5\u6761\u76ee\u65f6\u7684\u4efb\u671f\uff08\u521d\u59cb\u7d22\u5f15\u4e3a1\uff09 | \u6240\u6709\u670d\u52a1\u5668\u4e0a\u7684\u6613\u5931\u6027\u72b6\u6001 | \u53c2\u6570 | \u89e3\u91ca | | --- | --- | | commitIndex | \u5df2\u77e5\u5df2\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| | lastApplied | \u5df2\u7ecf\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| \u9886\u5bfc\u4eba\uff08\u670d\u52a1\u5668\uff09\u4e0a\u7684\u6613\u5931\u6027\u72b6\u6001 (\u9009\u4e3e\u540e\u5df2\u7ecf\u91cd\u65b0\u521d\u59cb\u5316) | \u53c2\u6570 | \u89e3\u91ca | | --- | --- | | nextIndex[] | \u5bf9\u4e8e\u6bcf\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u53d1\u9001\u5230\u8be5\u670d\u52a1\u5668\u7684\u4e0b\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a\u9886\u5bfc\u4eba\u6700\u540e\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15+1\uff09| | matchIndex[] | \u5bf9\u4e8e\u6bcf\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u5df2\u77e5\u7684\u5df2\u7ecf\u590d\u5236\u5230\u8be5\u670d\u52a1\u5668\u7684\u6700\u9ad8\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08\u521d\u59cb\u503c\u4e3a0\uff0c\u5355\u8c03\u9012\u589e\uff09| \u8ffd\u52a0\u6761\u76ee\uff08AppendEntries\uff09RPC \uff1a \u7531\u9886\u5bfc\u4eba\u8c03\u7528\uff0c\u7528\u4e8e\u65e5\u5fd7\u6761\u76ee\u7684\u590d\u5236\uff0c\u540c\u65f6\u4e5f\u88ab\u5f53\u505a\u5fc3\u8df3\u4f7f\u7528 \u53c2\u6570 \u89e3\u91ca term \u9886\u5bfc\u4eba\u7684\u4efb\u671f leaderId \u9886\u5bfc\u4eba ID \u56e0\u6b64\u8ddf\u968f\u8005\u53ef\u4ee5\u5bf9\u5ba2\u6237\u7aef\u8fdb\u884c\u91cd\u5b9a\u5411\uff08\u8bd1\u8005\u6ce8\uff1a\u8ddf\u968f\u8005\u6839\u636e\u9886\u5bfc\u4eba ID \u628a\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u91cd\u5b9a\u5411\u5230\u9886\u5bfc\u4eba\uff0c\u6bd4\u5982\u6709\u65f6\u5ba2\u6237\u7aef\u628a\u8bf7\u6c42\u53d1\u7ed9\u4e86\u8ddf\u968f\u8005\u800c\u4e0d\u662f\u9886\u5bfc\u4eba\uff09 prevLogIndex \u7d27\u90bb\u65b0\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u7684\u90a3\u4e2a\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15 prevLogTerm \u7d27\u90bb\u65b0\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u7684\u90a3\u4e2a\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f entries[] \u9700\u8981\u88ab\u4fdd\u5b58\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u88ab\u5f53\u505a\u5fc3\u8df3\u4f7f\u7528\u65f6\uff0c\u5219\u65e5\u5fd7\u6761\u76ee\u5185\u5bb9\u4e3a\u7a7a\uff1b\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u53ef\u80fd\u4e00\u6b21\u6027\u53d1\u9001\u591a\u4e2a\uff09 leaderCommit \u9886\u5bfc\u4eba\u7684\u5df2\u77e5\u5df2\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15 \u8fd4\u56de\u503c \u89e3\u91ca term \u5f53\u524d\u4efb\u671f\uff0c\u5bf9\u4e8e\u9886\u5bfc\u4eba\u800c\u8a00 \u5b83\u4f1a\u66f4\u65b0\u81ea\u5df1\u7684\u4efb\u671f success \u5982\u679c\u8ddf\u968f\u8005\u6240\u542b\u6709\u7684\u6761\u76ee\u548c prevLogIndex \u4ee5\u53ca prevLogTerm \u5339\u914d\u4e0a\u4e86\uff0c\u5219\u4e3a true \u63a5\u6536\u8005\u7684\u5b9e\u73b0\uff1a \u8fd4\u56de\u5047 \u5982\u679c\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u5c0f\u4e8e\u63a5\u6536\u8005\u7684\u5f53\u524d\u4efb\u671f\uff08\u8bd1\u8005\u6ce8\uff1a\u8fd9\u91cc\u7684\u63a5\u6536\u8005\u662f\u6307\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\uff09\uff085.1 \u8282\uff09 \u8fd4\u56de\u5047 \u5982\u679c\u63a5\u6536\u8005\u65e5\u5fd7\u4e2d\u6ca1\u6709\u5305\u542b\u8fd9\u6837\u4e00\u4e2a\u6761\u76ee \u5373\u8be5\u6761\u76ee\u7684\u4efb\u671f\u5728 prevLogIndex \u4e0a\u80fd\u548c prevLogTerm \u5339\u914d\u4e0a \uff08\u8bd1\u8005\u6ce8\uff1a\u5728\u63a5\u6536\u8005\u65e5\u5fd7\u4e2d \u5982\u679c\u80fd\u627e\u5230\u4e00\u4e2a\u548c prevLogIndex \u4ee5\u53ca prevLogTerm \u4e00\u6837\u7684\u7d22\u5f15\u548c\u4efb\u671f\u7684\u65e5\u5fd7\u6761\u76ee \u5219\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u6b65\u9aa4 \u5426\u5219\u8fd4\u56de\u5047\uff09\uff085.3 \u8282\uff09 \u5982\u679c\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u548c\u65b0\u6761\u76ee\uff08\u8bd1\u8005\u6ce8\uff1a\u5373\u521a\u521a\u63a5\u6536\u5230\u7684\u65e5\u5fd7\u6761\u76ee\uff09\u53d1\u751f\u4e86\u51b2\u7a81\uff08\u56e0\u4e3a\u7d22\u5f15\u76f8\u540c\uff0c\u4efb\u671f\u4e0d\u540c\uff09\uff0c\u90a3\u4e48\u5c31\u5220\u9664\u8fd9\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u4ee5\u53ca\u5b83\u4e4b\u540e\u7684\u6240\u6709\u6761\u76ee \uff085.3 \u8282\uff09 \u8ffd\u52a0\u65e5\u5fd7\u4e2d\u5c1a\u672a\u5b58\u5728\u7684\u4efb\u4f55\u65b0\u6761\u76ee \u5982\u679c\u9886\u5bfc\u4eba\u7684\u5df2\u77e5\u5df2\u63d0\u4ea4\u7684\u6700\u9ad8\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u5927\u4e8e\u63a5\u6536\u8005\u7684\u5df2\u77e5\u5df2\u63d0\u4ea4\u6700\u9ad8\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\uff08 leaderCommit > commitIndex \uff09\uff0c\u5219\u628a\u63a5\u6536\u8005\u7684\u5df2\u77e5\u5df2\u7ecf\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15commitIndex \u91cd\u7f6e\u4e3a \u9886\u5bfc\u4eba\u7684\u5df2\u77e5\u5df2\u7ecf\u63d0\u4ea4\u7684\u6700\u9ad8\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15 leaderCommit \u6216\u8005\u662f \u4e0a\u4e00\u4e2a\u65b0\u6761\u76ee\u7684\u7d22\u5f15 \u53d6\u4e24\u8005\u7684\u6700\u5c0f\u503c \u8bf7\u6c42\u6295\u7968\uff08RequestVote\uff09RPC \uff1a \u7531\u5019\u9009\u4eba\u8d1f\u8d23\u8c03\u7528\u7528\u6765\u5f81\u96c6\u9009\u7968\uff085.2 \u8282\uff09 \u53c2\u6570 \u89e3\u91ca term \u5019\u9009\u4eba\u7684\u4efb\u671f\u53f7 candidateId \u8bf7\u6c42\u9009\u7968\u7684\u5019\u9009\u4eba\u7684 ID lastLogIndex \u5019\u9009\u4eba\u7684\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c lastLogTerm \u5019\u9009\u4eba\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f\u53f7 \u8fd4\u56de\u503c \u89e3\u91ca term \u5f53\u524d\u4efb\u671f\u53f7\uff0c\u4ee5\u4fbf\u4e8e\u5019\u9009\u4eba\u53bb\u66f4\u65b0\u81ea\u5df1\u7684\u4efb\u671f\u53f7 voteGranted \u5019\u9009\u4eba\u8d62\u5f97\u4e86\u6b64\u5f20\u9009\u7968\u65f6\u4e3a\u771f \u63a5\u6536\u8005\u5b9e\u73b0\uff1a \u5982\u679c term < currentTerm \u8fd4\u56de false \uff085.2 \u8282\uff09 \u5982\u679c votedFor \u4e3a\u7a7a\u6216\u8005\u4e3a candidateId\uff0c\u5e76\u4e14\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u81ea\u5df1\u4e00\u6837\u65b0\uff0c\u90a3\u4e48\u5c31\u6295\u7968\u7ed9\u4ed6\uff085.2 \u8282\uff0c5.4 \u8282\uff09 \u6240\u6709\u670d\u52a1\u5668\u9700\u9075\u5b88\u7684\u89c4\u5219 \uff1a \u6240\u6709\u670d\u52a1\u5668\uff1a \u5982\u679c commitIndex > lastApplied \uff0c\u5219 lastApplied \u9012\u589e\uff0c\u5e76\u5c06 log[lastApplied] \u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\uff085.3 \u8282\uff09 \u5982\u679c\u63a5\u6536\u5230\u7684 RPC \u8bf7\u6c42\u6216\u54cd\u5e94\u4e2d\uff0c\u4efb\u671f\u53f7 T > currentTerm \uff0c\u5219\u4ee4 currentTerm = T \uff0c\u5e76\u5207\u6362\u4e3a\u8ddf\u968f\u8005\u72b6\u6001\uff085.1 \u8282\uff09 \u8ddf\u968f\u8005\uff085.2 \u8282\uff09\uff1a \u54cd\u5e94\u6765\u81ea\u5019\u9009\u4eba\u548c\u9886\u5bfc\u4eba\u7684\u8bf7\u6c42 \u5982\u679c\u5728\u8d85\u8fc7\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u60c5\u51b5\u4e4b\u524d\u6ca1\u6709\u6536\u5230**\u5f53\u524d\u9886\u5bfc\u4eba**\uff08\u5373\u8be5\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u9700\u4e0e\u8fd9\u4e2a\u8ddf\u968f\u8005\u7684\u5f53\u524d\u4efb\u671f\u76f8\u540c\uff09\u7684\u5fc3\u8df3/\u9644\u52a0\u65e5\u5fd7\uff0c\u6216\u8005\u662f\u7ed9\u67d0\u4e2a\u5019\u9009\u4eba\u6295\u4e86\u7968\uff0c\u5c31\u81ea\u5df1\u53d8\u6210\u5019\u9009\u4eba \u5019\u9009\u4eba\uff085.2 \u8282\uff09\uff1a \u5728\u8f6c\u53d8\u6210\u5019\u9009\u4eba\u540e\u5c31\u7acb\u5373\u5f00\u59cb\u9009\u4e3e\u8fc7\u7a0b \u81ea\u589e\u5f53\u524d\u7684\u4efb\u671f\u53f7\uff08currentTerm\uff09 \u7ed9\u81ea\u5df1\u6295\u7968 \u91cd\u7f6e\u9009\u4e3e\u8d85\u65f6\u8ba1\u65f6\u5668 \u53d1\u9001\u8bf7\u6c42\u6295\u7968\u7684 RPC \u7ed9\u5176\u4ed6\u6240\u6709\u670d\u52a1\u5668 \u5982\u679c\u63a5\u6536\u5230\u5927\u591a\u6570\u670d\u52a1\u5668\u7684\u9009\u7968\uff0c\u90a3\u4e48\u5c31\u53d8\u6210\u9886\u5bfc\u4eba \u5982\u679c\u63a5\u6536\u5230\u6765\u81ea\u65b0\u7684\u9886\u5bfc\u4eba\u7684\u9644\u52a0\u65e5\u5fd7\uff08AppendEntries\uff09RPC\uff0c\u5219\u8f6c\u53d8\u6210\u8ddf\u968f\u8005 \u5982\u679c\u9009\u4e3e\u8fc7\u7a0b\u8d85\u65f6\uff0c\u5219\u518d\u6b21\u53d1\u8d77\u4e00\u8f6e\u9009\u4e3e \u9886\u5bfc\u4eba\uff1a \u4e00\u65e6\u6210\u4e3a\u9886\u5bfc\u4eba\uff1a\u53d1\u9001\u7a7a\u7684\u9644\u52a0\u65e5\u5fd7\uff08AppendEntries\uff09RPC\uff08\u5fc3\u8df3\uff09\u7ed9\u5176\u4ed6\u6240\u6709\u7684\u670d\u52a1\u5668\uff1b\u5728\u4e00\u5b9a\u7684\u7a7a\u4f59\u65f6\u95f4\u4e4b\u540e\u4e0d\u505c\u7684\u91cd\u590d\u53d1\u9001\uff0c\u4ee5\u9632\u6b62\u8ddf\u968f\u8005\u8d85\u65f6\uff085.2 \u8282\uff09 \u5982\u679c\u63a5\u6536\u5230\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff1a\u9644\u52a0\u6761\u76ee\u5230\u672c\u5730\u65e5\u5fd7\u4e2d\uff0c\u5728\u6761\u76ee\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u540e\u54cd\u5e94\u5ba2\u6237\u7aef\uff085.3 \u8282\uff09 \u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u8ddf\u968f\u8005\uff0c\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u5927\u4e8e\u7b49\u4e8e nextIndex\uff08 lastLogIndex \u2265 nextIndex \uff09\uff0c\u5219\u53d1\u9001\u4ece nextIndex \u5f00\u59cb\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff1a \u5982\u679c\u6210\u529f\uff1a\u66f4\u65b0\u76f8\u5e94\u8ddf\u968f\u8005\u7684 nextIndex \u548c matchIndex \u5982\u679c\u56e0\u4e3a\u65e5\u5fd7\u4e0d\u4e00\u81f4\u800c\u5931\u8d25\uff0c\u5219 nextIndex \u9012\u51cf\u5e76\u91cd\u8bd5 \u5047\u8bbe\u5b58\u5728 N \u6ee1\u8db3 N > commitIndex \uff0c\u4f7f\u5f97\u5927\u591a\u6570\u7684 matchIndex[i] \u2265 N \u4ee5\u53ca log[N].term == currentTerm \u6210\u7acb\uff0c\u5219\u4ee4 commitIndex = N \uff085.3 \u548c 5.4 \u8282\uff09 \u56fe 2\uff1a\u4e00\u4e2a\u5173\u4e8e Raft \u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u6d53\u7f29\u603b\u7ed3\uff08\u4e0d\u5305\u62ec\u6210\u5458\u53d8\u6362\u548c\u65e5\u5fd7\u538b\u7f29\uff09\u3002 \u7279\u6027 \u89e3\u91ca \u9009\u4e3e\u5b89\u5168\u7279\u6027 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4efb\u671f\u53f7\uff0c\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff085.2 \u8282\uff09 \u9886\u5bfc\u4eba\u53ea\u9644\u52a0\u539f\u5219 \u9886\u5bfc\u4eba\u7edd\u5bf9\u4e0d\u4f1a\u5220\u9664\u6216\u8005\u8986\u76d6\u81ea\u5df1\u7684\u65e5\u5fd7\uff0c\u53ea\u4f1a\u589e\u52a0\uff085.3 \u8282\uff09 \u65e5\u5fd7\u5339\u914d\u539f\u5219 \u5982\u679c\u4e24\u4e2a\u65e5\u5fd7\u5728\u67d0\u4e00\u76f8\u540c\u7d22\u5f15\u4f4d\u7f6e\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u65e5\u5fd7\u4ece\u5934\u5230\u8be5\u7d22\u5f15\u4f4d\u7f6e\u4e4b\u95f4\u7684\u5185\u5bb9\u5b8c\u5168\u4e00\u81f4\uff085.3 \u8282\uff09 \u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027 \u5982\u679c\u67d0\u4e2a\u65e5\u5fd7\u6761\u76ee\u5728\u67d0\u4e2a\u4efb\u671f\u53f7\u4e2d\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6761\u76ee\u5fc5\u7136\u51fa\u73b0\u5728\u66f4\u5927\u4efb\u671f\u53f7\u7684\u6240\u6709\u9886\u5bfc\u4eba\u4e2d\uff085.4 \u8282\uff09 \u72b6\u6001\u673a\u5b89\u5168\u7279\u6027 \u5982\u679c\u67d0\u4e00\u670d\u52a1\u5668\u5df2\u5c06\u7ed9\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u81f3\u5176\u72b6\u6001\u673a\u4e2d\uff0c\u5219\u5176\u4ed6\u4efb\u4f55\u670d\u52a1\u5668\u5728\u8be5\u7d22\u5f15\u4f4d\u7f6e\u4e0d\u4f1a\u5e94\u7528\u4e0d\u540c\u7684\u65e5\u5fd7\u6761\u76ee\uff085.4.3 \u8282\uff09 \u56fe 3\uff1aRaft \u5728\u4efb\u4f55\u65f6\u5019\u90fd\u4fdd\u8bc1\u4ee5\u4e0a\u7684\u5404\u4e2a\u7279\u6027\u3002","title":"5 Raft \u4e00\u81f4\u6027\u7b97\u6cd5"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#51-raft-\u57fa\u7840","text":"\u4e00\u4e2a Raft \u96c6\u7fa4\u5305\u542b\u82e5\u5e72\u4e2a\u670d\u52a1\u5668\u8282\u70b9\uff1b5 \u4e2a\u670d\u52a1\u5668\u8282\u70b9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u8fd9\u5141\u8bb8\u6574\u4e2a\u7cfb\u7edf\u5bb9\u5fcd 2 \u4e2a\u8282\u70b9\u5931\u6548\u3002\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u90fd\u5904\u4e8e\u8fd9\u4e09\u4e2a\u72b6\u6001\u4e4b\u4e00\uff1a\u9886\u5bfc\u4eba\u3001\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\u3002\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u5e76\u4e14\u5176\u4ed6\u7684\u8282\u70b9\u5168\u90e8\u90fd\u662f\u8ddf\u968f\u8005\u3002\u8ddf\u968f\u8005\u90fd\u662f\u88ab\u52a8\u7684\uff1a\u4ed6\u4eec\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u8bf7\u6c42\uff0c\u53ea\u662f\u7b80\u5355\u7684\u54cd\u5e94\u6765\u81ea\u9886\u5bfc\u4eba\u6216\u8005\u5019\u9009\u4eba\u7684\u8bf7\u6c42\u3002\u9886\u5bfc\u4eba\u5904\u7406\u6240\u6709\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\uff08\u5982\u679c\u4e00\u4e2a\u5ba2\u6237\u7aef\u548c\u8ddf\u968f\u8005\u8054\u7cfb\uff0c\u90a3\u4e48\u8ddf\u968f\u8005\u4f1a\u628a\u8bf7\u6c42\u91cd\u5b9a\u5411\u7ed9\u9886\u5bfc\u4eba\uff09\u3002\u7b2c\u4e09\u79cd\u72b6\u6001\uff0c\u5019\u9009\u4eba\uff0c\u662f\u7528\u6765\u5728 5.2 \u8282\u63cf\u8ff0\u7684\u9009\u4e3e\u65b0\u9886\u5bfc\u4eba\u65f6\u4f7f\u7528\u3002\u56fe 4 \u5c55\u793a\u4e86\u8fd9\u4e9b\u72b6\u6001\u548c\u4ed6\u4eec\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\uff1b\u8fd9\u4e9b\u8f6c\u6362\u5173\u7cfb\u4f1a\u5728\u63a5\u4e0b\u6765\u8fdb\u884c\u8ba8\u8bba\u3002 \u56fe 4\uff1a\u670d\u52a1\u5668\u72b6\u6001\u3002\u8ddf\u968f\u8005\u53ea\u54cd\u5e94\u6765\u81ea\u5176\u4ed6\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u3002\u5982\u679c\u8ddf\u968f\u8005\u63a5\u6536\u4e0d\u5230\u6d88\u606f\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u53d8\u6210\u5019\u9009\u4eba\u5e76\u53d1\u8d77\u4e00\u6b21\u9009\u4e3e\u3002\u83b7\u5f97\u96c6\u7fa4\u4e2d\u5927\u591a\u6570\u9009\u7968\u7684\u5019\u9009\u4eba\u5c06\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u5728\u4e00\u4e2a\u4efb\u671f\u5185\uff0c\u9886\u5bfc\u4eba\u4e00\u76f4\u90fd\u4f1a\u662f\u9886\u5bfc\u4eba\uff0c\u76f4\u5230\u81ea\u5df1\u5b95\u673a\u4e86\u3002 \u56fe 5\uff1a\u65f6\u95f4\u88ab\u5212\u5206\u6210\u4e00\u4e2a\u4e2a\u7684\u4efb\u671f\uff0c\u6bcf\u4e2a\u4efb\u671f\u59cb\u4e8e\u4e00\u6b21\u9009\u4e3e\u3002\u5728\u9009\u4e3e\u6210\u529f\u540e\uff0c\u9886\u5bfc\u4eba\u4f1a\u7ba1\u7406\u6574\u4e2a\u96c6\u7fa4\u76f4\u5230\u4efb\u671f\u7ed3\u675f\u3002\u6709\u65f6\u5019\u9009\u4e3e\u4f1a\u5931\u8d25\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4efb\u671f\u5c31\u4f1a\u6ca1\u6709\u9886\u5bfc\u4eba\u800c\u7ed3\u675f\u3002\u4efb\u671f\u4e4b\u95f4\u7684\u5207\u6362\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0a\u89c2\u5bdf\u5230\u3002 Raft \u628a\u65f6\u95f4\u5206\u5272\u6210\u4efb\u610f\u957f\u5ea6\u7684**\u4efb\u671f**\uff0c\u5982\u56fe 5\u3002\u4efb\u671f\u7528\u8fde\u7eed\u7684\u6574\u6570\u6807\u8bb0\u3002\u6bcf\u4e00\u6bb5\u4efb\u671f\u4ece\u4e00\u6b21**\u9009\u4e3e**\u5f00\u59cb\uff0c\u5c31\u50cf\u7ae0\u8282 5.2 \u63cf\u8ff0\u7684\u4e00\u6837\uff0c\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5019\u9009\u4eba\u5c1d\u8bd5\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u7136\u540e\u4ed6\u5c31\u5728\u63a5\u4e0b\u6765\u7684\u4efb\u671f\u5185\u5145\u5f53\u9886\u5bfc\u4eba\u7684\u804c\u8d23\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u6b21\u9009\u4e3e\u8fc7\u7a0b\u4f1a\u9020\u6210\u9009\u7968\u7684\u74dc\u5206\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e00\u4efb\u671f\u4f1a\u4ee5\u6ca1\u6709\u9886\u5bfc\u4eba\u7ed3\u675f\uff1b\u4e00\u4e2a\u65b0\u7684\u4efb\u671f\uff08\u548c\u4e00\u6b21\u65b0\u7684\u9009\u4e3e\uff09\u4f1a\u5f88\u5feb\u91cd\u65b0\u5f00\u59cb\u3002Raft \u4fdd\u8bc1\u4e86\u5728\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4efb\u671f\u5185\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u9886\u5bfc\u4eba\u3002 \u4e0d\u540c\u7684\u670d\u52a1\u5668\u8282\u70b9\u53ef\u80fd\u591a\u6b21\u89c2\u5bdf\u5230\u4efb\u671f\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u8282\u70b9\u4e5f\u53ef\u80fd\u89c2\u5bdf\u4e0d\u5230\u4efb\u4f55\u4e00\u6b21\u9009\u4e3e\u6216\u8005\u6574\u4e2a\u4efb\u671f\u5168\u7a0b\u3002\u4efb\u671f\u5728 Raft \u7b97\u6cd5\u4e2d\u5145\u5f53\u903b\u8f91\u65f6\u949f\u7684\u4f5c\u7528\uff0c\u4efb\u671f\u4f7f\u5f97\u670d\u52a1\u5668\u53ef\u4ee5\u68c0\u6d4b\u4e00\u4e9b\u8fc7\u671f\u7684\u4fe1\u606f\uff1a\u6bd4\u5982\u8fc7\u671f\u7684\u9886\u5bfc\u4eba\u3002\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u4e00\u4e2a\u5f53\u524d\u4efb\u671f\u53f7\uff0c\u8fd9\u4e00\u7f16\u53f7\u5728\u6574\u4e2a\u65f6\u671f\u5185\u5355\u8c03\u9012\u589e\u3002\u6bcf\u5f53\u670d\u52a1\u5668\u4e4b\u95f4\u901a\u4fe1\u7684\u65f6\u5019\u90fd\u4f1a\u4ea4\u6362\u5f53\u524d\u4efb\u671f\u53f7\uff1b\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u5f53\u524d\u4efb\u671f\u53f7\u6bd4\u5176\u4ed6\u4eba\u5c0f\uff0c\u90a3\u4e48\u4ed6\u4f1a\u66f4\u65b0\u81ea\u5df1\u7684\u7f16\u53f7\u5230\u8f83\u5927\u7684\u7f16\u53f7\u503c\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u6216\u8005\u9886\u5bfc\u4eba\u53d1\u73b0\u81ea\u5df1\u7684\u4efb\u671f\u53f7\u8fc7\u671f\u4e86\uff0c\u90a3\u4e48\u4ed6\u4f1a\u7acb\u5373\u6062\u590d\u6210\u8ddf\u968f\u8005\u72b6\u6001\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u63a5\u6536\u5230\u4e00\u4e2a\u5305\u542b\u8fc7\u671f\u7684\u4efb\u671f\u53f7\u7684\u8bf7\u6c42\uff0c\u90a3\u4e48\u4ed6\u4f1a\u76f4\u63a5\u62d2\u7edd\u8fd9\u4e2a\u8bf7\u6c42\u3002 Raft \u7b97\u6cd5\u4e2d\u670d\u52a1\u5668\u8282\u70b9\u4e4b\u95f4\u901a\u4fe1\u4f7f\u7528\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff08RPCs\uff09\uff0c\u5e76\u4e14\u57fa\u672c\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u53ea\u9700\u8981\u4e24\u79cd\u7c7b\u578b\u7684 RPCs\u3002\u8bf7\u6c42\u6295\u7968\uff08RequestVote\uff09 RPCs \u7531\u5019\u9009\u4eba\u5728\u9009\u4e3e\u671f\u95f4\u53d1\u8d77\uff08\u7ae0\u8282 5.2\uff09\uff0c\u7136\u540e\u9644\u52a0\u6761\u76ee\uff08AppendEntries\uff09RPCs \u7531\u9886\u5bfc\u4eba\u53d1\u8d77\uff0c\u7528\u6765\u590d\u5236\u65e5\u5fd7\u548c\u63d0\u4f9b\u4e00\u79cd\u5fc3\u8df3\u673a\u5236\uff08\u7ae0\u8282 5.3\uff09\u3002\u7b2c 7 \u8282\u4e3a\u4e86\u5728\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u8f93\u5feb\u7167\u589e\u52a0\u4e86\u7b2c\u4e09\u79cd RPC\u3002\u5f53\u670d\u52a1\u5668\u6ca1\u6709\u53ca\u65f6\u7684\u6536\u5230 RPC \u7684\u54cd\u5e94\u65f6\uff0c\u4f1a\u8fdb\u884c\u91cd\u8bd5\uff0c \u5e76\u4e14\u4ed6\u4eec\u80fd\u591f\u5e76\u884c\u7684\u53d1\u8d77 RPCs \u6765\u83b7\u5f97\u6700\u4f73\u7684\u6027\u80fd\u3002","title":"5.1 Raft \u57fa\u7840"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#52-\u9886\u5bfc\u4eba\u9009\u4e3e","text":"Raft \u4f7f\u7528\u4e00\u79cd\u5fc3\u8df3\u673a\u5236\u6765\u89e6\u53d1\u9886\u5bfc\u4eba\u9009\u4e3e\u3002\u5f53\u670d\u52a1\u5668\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u4ed6\u4eec\u90fd\u662f\u8ddf\u968f\u8005\u8eab\u4efd\u3002\u4e00\u4e2a\u670d\u52a1\u5668\u8282\u70b9\u7ee7\u7eed\u4fdd\u6301\u7740\u8ddf\u968f\u8005\u72b6\u6001\u53ea\u8981\u4ed6\u4ece\u9886\u5bfc\u4eba\u6216\u8005\u5019\u9009\u4eba\u5904\u63a5\u6536\u5230\u6709\u6548\u7684 RPCs\u3002\u9886\u5bfc\u4eba\u5468\u671f\u6027\u7684\u5411\u6240\u6709\u8ddf\u968f\u8005\u53d1\u9001\u5fc3\u8df3\u5305\uff08\u5373\u4e0d\u5305\u542b\u65e5\u5fd7\u9879\u5185\u5bb9\u7684\u9644\u52a0\u6761\u76ee\uff08AppendEntries\uff09 RPCs\uff09\u6765\u7ef4\u6301\u81ea\u5df1\u7684\u6743\u5a01\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u5728\u4e00\u6bb5\u65f6\u95f4\u91cc\u6ca1\u6709\u63a5\u6536\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u4e5f\u5c31\u662f**\u9009\u4e3e\u8d85\u65f6**\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u8ba4\u4e3a\u7cfb\u7edf\u4e2d\u6ca1\u6709\u53ef\u7528\u7684\u9886\u5bfc\u4eba,\u5e76\u4e14\u53d1\u8d77\u9009\u4e3e\u4ee5\u9009\u51fa\u65b0\u7684\u9886\u5bfc\u4eba\u3002 \u8981\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u8fc7\u7a0b\uff0c\u8ddf\u968f\u8005\u5148\u8981\u589e\u52a0\u81ea\u5df1\u7684\u5f53\u524d\u4efb\u671f\u53f7\u5e76\u4e14\u8f6c\u6362\u5230\u5019\u9009\u4eba\u72b6\u6001\u3002\u7136\u540e\u4ed6\u4f1a\u5e76\u884c\u5730\u5411\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u8282\u70b9\u53d1\u9001\u8bf7\u6c42\u6295\u7968\u7684 RPCs \u6765\u7ed9\u81ea\u5df1\u6295\u7968\u3002\u5019\u9009\u4eba\u4f1a\u7ee7\u7eed\u4fdd\u6301\u7740\u5f53\u524d\u72b6\u6001\u76f4\u5230\u4ee5\u4e0b\u4e09\u4ef6\u4e8b\u60c5\u4e4b\u4e00\u53d1\u751f\uff1a(a) \u4ed6\u81ea\u5df1\u8d62\u5f97\u4e86\u8fd9\u6b21\u7684\u9009\u4e3e\uff0c(b) \u5176\u4ed6\u7684\u670d\u52a1\u5668\u6210\u4e3a\u9886\u5bfc\u4eba\uff0c\u00a9 \u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u83b7\u80dc\u7684\u4eba\u3002\u8fd9\u4e9b\u7ed3\u679c\u4f1a\u5206\u522b\u7684\u5728\u4e0b\u9762\u7684\u6bb5\u843d\u91cc\u8fdb\u884c\u8ba8\u8bba\u3002 \u5f53\u4e00\u4e2a\u5019\u9009\u4eba\u4ece\u6574\u4e2a\u96c6\u7fa4\u7684\u5927\u591a\u6570\u670d\u52a1\u5668\u8282\u70b9\u83b7\u5f97\u4e86\u9488\u5bf9\u540c\u4e00\u4e2a\u4efb\u671f\u53f7\u7684\u9009\u7968\uff0c\u90a3\u4e48\u4ed6\u5c31\u8d62\u5f97\u4e86\u8fd9\u6b21\u9009\u4e3e\u5e76\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u6bcf\u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u4f1a\u5bf9\u4e00\u4e2a\u4efb\u671f\u53f7\u6295\u51fa\u4e00\u5f20\u9009\u7968\uff0c\u6309\u7167\u5148\u6765\u5148\u670d\u52a1\u7684\u539f\u5219\uff08\u6ce8\u610f\uff1a5.4 \u8282\u5728\u6295\u7968\u4e0a\u589e\u52a0\u4e86\u4e00\u70b9\u989d\u5916\u7684\u9650\u5236\uff09\u3002\u8981\u6c42\u5927\u591a\u6570\u9009\u7968\u7684\u89c4\u5219\u786e\u4fdd\u4e86\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u6b64\u6b21\u9009\u4e3e\uff08\u56fe 3 \u4e2d\u7684\u9009\u4e3e\u5b89\u5168\u6027\uff09\u3002\u4e00\u65e6\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u4ed6\u5c31\u7acb\u5373\u6210\u4e3a\u9886\u5bfc\u4eba\u3002\u7136\u540e\u4ed6\u4f1a\u5411\u5176\u4ed6\u7684\u670d\u52a1\u5668\u53d1\u9001\u5fc3\u8df3\u6d88\u606f\u6765\u5efa\u7acb\u81ea\u5df1\u7684\u6743\u5a01\u5e76\u4e14\u963b\u6b62\u53d1\u8d77\u65b0\u7684\u9009\u4e3e\u3002 \u5728\u7b49\u5f85\u6295\u7968\u7684\u65f6\u5019\uff0c\u5019\u9009\u4eba\u53ef\u80fd\u4f1a\u4ece\u5176\u4ed6\u7684\u670d\u52a1\u5668\u63a5\u6536\u5230\u58f0\u660e\u5b83\u662f\u9886\u5bfc\u4eba\u7684\u9644\u52a0\u6761\u76ee\uff08AppendEntries\uff09RPC\u3002\u5982\u679c\u8fd9\u4e2a\u9886\u5bfc\u4eba\u7684\u4efb\u671f\u53f7\uff08\u5305\u542b\u5728\u6b64\u6b21\u7684 RPC\u4e2d\uff09\u4e0d\u5c0f\u4e8e\u5019\u9009\u4eba\u5f53\u524d\u7684\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u4f1a\u627f\u8ba4\u9886\u5bfc\u4eba\u5408\u6cd5\u5e76\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\u3002 \u5982\u679c\u6b64\u6b21 RPC \u4e2d\u7684\u4efb\u671f\u53f7\u6bd4\u81ea\u5df1\u5c0f\uff0c\u90a3\u4e48\u5019\u9009\u4eba\u5c31\u4f1a\u62d2\u7edd\u8fd9\u6b21\u7684 RPC \u5e76\u4e14\u7ee7\u7eed\u4fdd\u6301\u5019\u9009\u4eba\u72b6\u6001\u3002 \u7b2c\u4e09\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\u662f\u5019\u9009\u4eba\u65e2\u6ca1\u6709\u8d62\u5f97\u9009\u4e3e\u4e5f\u6ca1\u6709\u8f93\uff1a\u5982\u679c\u6709\u591a\u4e2a\u8ddf\u968f\u8005\u540c\u65f6\u6210\u4e3a\u5019\u9009\u4eba\uff0c\u90a3\u4e48\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u74dc\u5206\u4ee5\u81f3\u4e8e\u6ca1\u6709\u5019\u9009\u4eba\u53ef\u4ee5\u8d62\u5f97\u5927\u591a\u6570\u4eba\u7684\u652f\u6301\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u4f1a\u8d85\u65f6\uff0c\u7136\u540e\u901a\u8fc7\u589e\u52a0\u5f53\u524d\u4efb\u671f\u53f7\u6765\u5f00\u59cb\u4e00\u8f6e\u65b0\u7684\u9009\u4e3e\u3002\u7136\u800c\uff0c\u6ca1\u6709\u5176\u4ed6\u673a\u5236\u7684\u8bdd\uff0c\u9009\u7968\u53ef\u80fd\u4f1a\u88ab\u65e0\u9650\u7684\u91cd\u590d\u74dc\u5206\u3002 Raft \u7b97\u6cd5\u4f7f\u7528\u968f\u673a\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\u6765\u786e\u4fdd\u5f88\u5c11\u4f1a\u53d1\u751f\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\uff0c\u5c31\u7b97\u53d1\u751f\u4e5f\u80fd\u5f88\u5feb\u7684\u89e3\u51b3\u3002\u4e3a\u4e86\u963b\u6b62\u9009\u7968\u8d77\u521d\u5c31\u88ab\u74dc\u5206\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u4ece\u4e00\u4e2a\u56fa\u5b9a\u7684\u533a\u95f4\uff08\u4f8b\u5982 150-300 \u6beb\u79d2\uff09\u968f\u673a\u9009\u62e9\u3002\u8fd9\u6837\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u90fd\u5206\u6563\u5f00\u4ee5\u81f3\u4e8e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u6709\u4e00\u4e2a\u670d\u52a1\u5668\u4f1a\u9009\u4e3e\u8d85\u65f6\uff1b\u7136\u540e\u4ed6\u8d62\u5f97\u9009\u4e3e\u5e76\u5728\u5176\u4ed6\u670d\u52a1\u5668\u8d85\u65f6\u4e4b\u524d\u53d1\u9001\u5fc3\u8df3\u5305\u3002\u540c\u6837\u7684\u673a\u5236\u88ab\u7528\u5728\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u4e0b\u3002\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u5728\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u7684\u65f6\u5019\u4f1a\u91cd\u7f6e\u4e00\u4e2a\u968f\u673a\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff0c\u7136\u540e\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u7b49\u5f85\u6295\u7968\u7684\u7ed3\u679c\uff1b\u8fd9\u6837\u51cf\u5c11\u4e86\u5728\u65b0\u7684\u9009\u4e3e\u4e2d\u53e6\u5916\u7684\u9009\u7968\u74dc\u5206\u7684\u53ef\u80fd\u6027\u30029.3 \u8282\u5c55\u793a\u4e86\u8fd9\u79cd\u65b9\u6848\u80fd\u591f\u5feb\u901f\u7684\u9009\u51fa\u4e00\u4e2a\u9886\u5bfc\u4eba\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4f53\u73b0\u4e86\u53ef\u7406\u89e3\u6027\u539f\u5219\u662f\u5982\u4f55\u6307\u5bfc\u6211\u4eec\u8fdb\u884c\u65b9\u6848\u8bbe\u8ba1\u7684\u3002\u8d77\u521d\u6211\u4eec\u8ba1\u5212\u4f7f\u7528\u4e00\u79cd\u6392\u540d\u7cfb\u7edf\uff1a\u6bcf\u4e00\u4e2a\u5019\u9009\u4eba\u90fd\u88ab\u8d4b\u4e88\u4e00\u4e2a\u552f\u4e00\u7684\u6392\u540d\uff0c\u4f9b\u5019\u9009\u4eba\u4e4b\u95f4\u7ade\u4e89\u65f6\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u4e00\u4e2a\u5019\u9009\u4eba\u53d1\u73b0\u53e6\u4e00\u4e2a\u5019\u9009\u4eba\u62e5\u6709\u66f4\u9ad8\u7684\u6392\u540d\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\uff0c\u8fd9\u6837\u9ad8\u6392\u540d\u7684\u5019\u9009\u4eba\u80fd\u591f\u66f4\u52a0\u5bb9\u6613\u7684\u8d62\u5f97\u4e0b\u4e00\u6b21\u9009\u4e3e\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u5728\u53ef\u7528\u6027\u65b9\u9762\u4f1a\u6709\u4e00\u70b9\u95ee\u9898\uff08\u5982\u679c\u9ad8\u6392\u540d\u7684\u670d\u52a1\u5668\u5b95\u673a\u4e86\uff0c\u90a3\u4e48\u4f4e\u6392\u540d\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u8d85\u65f6\u5e76\u518d\u6b21\u8fdb\u5165\u5019\u9009\u4eba\u72b6\u6001\u3002\u800c\u4e14\u5982\u679c\u8fd9\u4e2a\u884c\u4e3a\u53d1\u751f\u5f97\u8db3\u591f\u5feb\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6574\u4e2a\u9009\u4e3e\u8fc7\u7a0b\u90fd\u88ab\u91cd\u7f6e\u6389\uff09\u3002\u6211\u4eec\u9488\u5bf9\u7b97\u6cd5\u8fdb\u884c\u4e86\u591a\u6b21\u8c03\u6574\uff0c\u4f46\u662f\u6bcf\u6b21\u8c03\u6574\u4e4b\u540e\u90fd\u4f1a\u6709\u65b0\u7684\u95ee\u9898\u3002\u6700\u7ec8\u6211\u4eec\u8ba4\u4e3a\u968f\u673a\u91cd\u8bd5\u7684\u65b9\u6cd5\u662f\u66f4\u52a0\u660e\u663e\u548c\u6613\u4e8e\u7406\u89e3\u7684\u3002","title":"5.2 \u9886\u5bfc\u4eba\u9009\u4e3e"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#53-\u65e5\u5fd7\u590d\u5236","text":"\u4e00\u65e6\u4e00\u4e2a\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff0c\u4ed6\u5c31\u5f00\u59cb\u4e3a\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\u3002\u5ba2\u6237\u7aef\u7684\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u5305\u542b\u4e00\u6761\u88ab\u590d\u5236\u72b6\u6001\u673a\u6267\u884c\u7684\u6307\u4ee4\u3002\u9886\u5bfc\u4eba\u628a\u8fd9\u6761\u6307\u4ee4\u4f5c\u4e3a\u4e00\u6761\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u9644\u52a0\u5230\u65e5\u5fd7\u4e2d\u53bb\uff0c\u7136\u540e\u5e76\u884c\u5730\u53d1\u8d77\u9644\u52a0\u6761\u76ee RPCs \u7ed9\u5176\u4ed6\u7684\u670d\u52a1\u5668\uff0c\u8ba9\u4ed6\u4eec\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u3002\u5f53\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u88ab\u5b89\u5168\u5730\u590d\u5236\uff08\u4e0b\u9762\u4f1a\u4ecb\u7ecd\uff09\uff0c\u9886\u5bfc\u4eba\u4f1a\u5e94\u7528\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u5230\u5b83\u7684\u72b6\u6001\u673a\u4e2d\u7136\u540e\u628a\u6267\u884c\u7684\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u5982\u679c\u8ddf\u968f\u8005\u5d29\u6e83\u6216\u8005\u8fd0\u884c\u7f13\u6162\uff0c\u518d\u6216\u8005\u7f51\u7edc\u4e22\u5305\uff0c\u9886\u5bfc\u4eba\u4f1a\u4e0d\u65ad\u7684\u91cd\u590d\u5c1d\u8bd5\u9644\u52a0\u65e5\u5fd7\u6761\u76ee RPCs \uff08\u5c3d\u7ba1\u5df2\u7ecf\u56de\u590d\u4e86\u5ba2\u6237\u7aef\uff09\u76f4\u5230\u6240\u6709\u7684\u8ddf\u968f\u8005\u90fd\u6700\u7ec8\u5b58\u50a8\u4e86\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\u3002 \u56fe 6\uff1a\u65e5\u5fd7\u7531\u6709\u5e8f\u5e8f\u53f7\u6807\u8bb0\u7684\u6761\u76ee\u7ec4\u6210\u3002\u6bcf\u4e2a\u6761\u76ee\u90fd\u5305\u542b\u521b\u5efa\u65f6\u7684\u4efb\u671f\u53f7\uff08\u56fe\u4e2d\u6846\u4e2d\u7684\u6570\u5b57\uff09\uff0c\u548c\u4e00\u4e2a\u72b6\u6001\u673a\u9700\u8981\u6267\u884c\u7684\u6307\u4ee4\u3002\u4e00\u4e2a\u6761\u76ee\u5f53\u53ef\u4ee5\u5b89\u5168\u5730\u88ab\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u53bb\u7684\u65f6\u5019\uff0c\u5c31\u8ba4\u4e3a\u662f\u53ef\u4ee5\u63d0\u4ea4\u4e86\u3002 \u65e5\u5fd7\u4ee5\u56fe 6 \u5c55\u793a\u7684\u65b9\u5f0f\u7ec4\u7ec7\u3002\u6bcf\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\u5b58\u50a8\u4e00\u6761\u72b6\u6001\u673a\u6307\u4ee4\u548c\u4ece\u9886\u5bfc\u4eba\u6536\u5230\u8fd9\u6761\u6307\u4ee4\u65f6\u7684\u4efb\u671f\u53f7\u3002\u65e5\u5fd7\u4e2d\u7684\u4efb\u671f\u53f7\u7528\u6765\u68c0\u67e5\u662f\u5426\u51fa\u73b0\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u4e5f\u7528\u6765\u4fdd\u8bc1\u56fe 3 \u4e2d\u7684\u67d0\u4e9b\u6027\u8d28\u3002\u6bcf\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u540c\u65f6\u4e5f\u90fd\u6709\u4e00\u4e2a\u6574\u6570\u7d22\u5f15\u503c\u6765\u8868\u660e\u5b83\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u3002 \u9886\u5bfc\u4eba\u6765\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u628a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u72b6\u6001\u673a\u4e2d\u662f\u5b89\u5168\u7684\uff1b\u8fd9\u79cd\u65e5\u5fd7\u6761\u76ee\u88ab\u79f0\u4e3a**\u5df2\u63d0\u4ea4**\u3002Raft \u7b97\u6cd5\u4fdd\u8bc1\u6240\u6709\u5df2\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u90fd\u662f\u6301\u4e45\u5316\u7684\u5e76\u4e14\u6700\u7ec8\u4f1a\u88ab\u6240\u6709\u53ef\u7528\u7684\u72b6\u6001\u673a\u6267\u884c\u3002\u5728\u9886\u5bfc\u4eba\u5c06\u521b\u5efa\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\u5728\u56fe 6 \u4e2d\u7684\u6761\u76ee 7\uff09\u3002\u540c\u65f6\uff0c\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u4e2d\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u63d0\u4ea4\uff0c\u5305\u62ec\u7531\u5176\u4ed6\u9886\u5bfc\u4eba\u521b\u5efa\u7684\u6761\u76ee\u30025.4 \u8282\u4f1a\u8ba8\u8bba\u67d0\u4e9b\u5f53\u5728\u9886\u5bfc\u4eba\u6539\u53d8\u4e4b\u540e\u5e94\u7528\u8fd9\u6761\u89c4\u5219\u7684\u9690\u6666\u5185\u5bb9\uff0c\u540c\u65f6\u4ed6\u4e5f\u5c55\u793a\u4e86\u8fd9\u79cd\u63d0\u4ea4\u7684\u5b9a\u4e49\u662f\u5b89\u5168\u7684\u3002\u9886\u5bfc\u4eba\u8ddf\u8e2a\u4e86\u6700\u5927\u7684\u5c06\u4f1a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u9879\u7684\u7d22\u5f15\uff0c\u5e76\u4e14\u7d22\u5f15\u503c\u4f1a\u88ab\u5305\u542b\u5728\u672a\u6765\u7684\u6240\u6709\u9644\u52a0\u65e5\u5fd7 RPCs \uff08\u5305\u62ec\u5fc3\u8df3\u5305\uff09\uff0c\u8fd9\u6837\u5176\u4ed6\u7684\u670d\u52a1\u5668\u624d\u80fd\u6700\u7ec8\u77e5\u9053\u9886\u5bfc\u4eba\u7684\u63d0\u4ea4\u4f4d\u7f6e\u3002\u4e00\u65e6\u8ddf\u968f\u8005\u77e5\u9053\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u4ed6\u4e5f\u4f1a\u5c06\u8fd9\u4e2a\u65e5\u5fd7\u6761\u76ee\u5e94\u7528\u5230\u672c\u5730\u7684\u72b6\u6001\u673a\u4e2d\uff08\u6309\u7167\u65e5\u5fd7\u7684\u987a\u5e8f\uff09\u3002 \u6211\u4eec\u8bbe\u8ba1\u4e86 Raft \u7684\u65e5\u5fd7\u673a\u5236\u6765\u7ef4\u62a4\u4e0d\u540c\u670d\u52a1\u5668\u65e5\u5fd7\u4e4b\u95f4\u7684\u9ad8\u5c42\u6b21\u7684\u4e00\u81f4\u6027\u3002\u8fd9\u4e48\u505a\u4e0d\u4ec5\u7b80\u5316\u4e86\u7cfb\u7edf\u7684\u884c\u4e3a\u4e5f\u4f7f\u5176\u66f4\u5177\u6709\u53ef\u9884\u6d4b\u6027\uff0c\u540c\u65f6\u5b83\u4e5f\u662f\u5b89\u5168\u6027\u4fdd\u8bc1\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u4ef6\u3002Raft \u7ef4\u62a4\u7740\u4ee5\u4e0b\u7684\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u5171\u540c\u7ec4\u6210\u4e86\u56fe 3 \u4e2d\u7684**\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff08Log Matching Property\uff09**\uff1a \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u5b58\u50a8\u4e86\u76f8\u540c\u7684\u6307\u4ee4\u3002 \u5982\u679c\u5728\u4e0d\u540c\u7684\u65e5\u5fd7\u4e2d\u7684\u4e24\u4e2a\u6761\u76ee\u62e5\u6709\u76f8\u540c\u7684\u7d22\u5f15\u548c\u4efb\u671f\u53f7\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\u4e5f\u5168\u90e8\u76f8\u540c\u3002 \u7b2c\u4e00\u4e2a\u7279\u6027\u6765\u81ea\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u9886\u5bfc\u4eba\u6700\u591a\u5728\u4e00\u4e2a\u4efb\u671f\u91cc\u5728\u6307\u5b9a\u7684\u4e00\u4e2a\u65e5\u5fd7\u7d22\u5f15\u4f4d\u7f6e\u521b\u5efa\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u540c\u65f6\u65e5\u5fd7\u6761\u76ee\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\u4e5f\u4ece\u6765\u4e0d\u4f1a\u6539\u53d8\u3002\u7b2c\u4e8c\u4e2a\u7279\u6027\u7531\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u4e2a\u7b80\u5355\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u6240\u4fdd\u8bc1\u3002\u5728\u53d1\u9001\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u65f6\u5019\uff0c\u9886\u5bfc\u4eba\u4f1a\u628a\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u524d\u7d27\u6328\u7740\u7684\u6761\u76ee\u7684\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u5305\u542b\u5728\u65e5\u5fd7\u5185\u3002\u5982\u679c\u8ddf\u968f\u8005\u5728\u5b83\u7684\u65e5\u5fd7\u4e2d\u627e\u4e0d\u5230\u5305\u542b\u76f8\u540c\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u7684\u6761\u76ee\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u62d2\u7edd\u63a5\u6536\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u50cf\u4e00\u4e2a\u5f52\u7eb3\u6b65\u9aa4\uff1a\u4e00\u5f00\u59cb\u7a7a\u7684\u65e5\u5fd7\u72b6\u6001\u80af\u5b9a\u662f\u6ee1\u8db3\u65e5\u5fd7\u5339\u914d\u7279\u6027\u7684\uff0c\u7136\u540e\u4e00\u81f4\u6027\u68c0\u67e5\u5728\u65e5\u5fd7\u6269\u5c55\u7684\u65f6\u5019\u4fdd\u62a4\u4e86\u65e5\u5fd7\u5339\u914d\u7279\u6027\u3002\u56e0\u6b64\uff0c\u6bcf\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u8fd4\u56de\u6210\u529f\u65f6\uff0c\u9886\u5bfc\u4eba\u5c31\u77e5\u9053\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4e00\u5b9a\u662f\u548c\u81ea\u5df1\u76f8\u540c\u7684\u4e86\u3002 \u5728\u6b63\u5e38\u7684\u64cd\u4f5c\u4e2d\uff0c\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u6240\u4ee5\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u4ece\u6765\u4e0d\u4f1a\u5931\u8d25\u3002\u7136\u800c\uff0c\u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u4f1a\u4f7f\u5f97\u65e5\u5fd7\u5904\u4e8e\u4e0d\u4e00\u81f4\u7684\u72b6\u6001\uff08\u8001\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u8fd8\u6ca1\u6709\u5b8c\u5168\u590d\u5236\u6240\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff09\u3002\u8fd9\u79cd\u4e0d\u4e00\u81f4\u95ee\u9898\u4f1a\u5728\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u4e00\u7cfb\u5217\u5d29\u6e83\u4e0b\u52a0\u5267\u3002\u56fe 7 \u5c55\u793a\u4e86\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u53ef\u80fd\u548c\u65b0\u7684\u9886\u5bfc\u4eba\u4e0d\u540c\u3002\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u4e22\u5931\u4e00\u4e9b\u5728\u65b0\u7684\u9886\u5bfc\u4eba\u4e2d\u5b58\u5728\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4ed6\u4e5f\u53ef\u80fd\u62e5\u6709\u4e00\u4e9b\u9886\u5bfc\u4eba\u6ca1\u6709\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u6216\u8005\u4e24\u8005\u90fd\u53d1\u751f\u3002\u4e22\u5931\u6216\u8005\u591a\u51fa\u65e5\u5fd7\u6761\u76ee\u53ef\u80fd\u4f1a\u6301\u7eed\u591a\u4e2a\u4efb\u671f\u3002 \u56fe 7\uff1a\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u6210\u529f\u5f53\u9009\u65f6\uff0c\u8ddf\u968f\u8005\u53ef\u80fd\u662f\u4efb\u4f55\u60c5\u51b5\uff08a-f\uff09\u3002\u6bcf\u4e00\u4e2a\u76d2\u5b50\u8868\u793a\u662f\u4e00\u4e2a\u65e5\u5fd7\u6761\u76ee\uff1b\u91cc\u9762\u7684\u6570\u5b57\u8868\u793a\u4efb\u671f\u53f7\u3002\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u7f3a\u5c11\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\uff08a-b\uff09\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u672a\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08c-d\uff09\uff0c\u6216\u8005\u4e24\u79cd\u60c5\u51b5\u90fd\u5b58\u5728\uff08e-f\uff09\u3002\u4f8b\u5982\uff0c\u573a\u666f f \u53ef\u80fd\u4f1a\u8fd9\u6837\u53d1\u751f\uff0c\u67d0\u670d\u52a1\u5668\u5728\u4efb\u671f 2 \u7684\u65f6\u5019\u662f\u9886\u5bfc\u4eba\uff0c\u5df2\u9644\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff0c\u4f46\u5728\u63d0\u4ea4\u4e4b\u524d\u5c31\u5d29\u6e83\u4e86\uff1b\u5f88\u5feb\u8fd9\u4e2a\u673a\u5668\u5c31\u88ab\u91cd\u542f\u4e86\uff0c\u5728\u4efb\u671f 3 \u91cd\u65b0\u88ab\u9009\u4e3a\u9886\u5bfc\u4eba\uff0c\u5e76\u4e14\u53c8\u589e\u52a0\u4e86\u4e00\u4e9b\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff1b\u5728\u4efb\u671f 2 \u548c\u4efb\u671f 3 \u7684\u65e5\u5fd7\u88ab\u63d0\u4ea4\u4e4b\u524d\uff0c\u8fd9\u4e2a\u670d\u52a1\u5668\u53c8\u5b95\u673a\u4e86\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u4efb\u671f\u91cc\u4e00\u76f4\u5904\u4e8e\u5b95\u673a\u72b6\u6001\u3002 \u5728 Raft \u7b97\u6cd5\u4e2d\uff0c\u9886\u5bfc\u4eba\u662f\u901a\u8fc7\u5f3a\u5236\u8ddf\u968f\u8005\u76f4\u63a5\u590d\u5236\u81ea\u5df1\u7684\u65e5\u5fd7\u6765\u5904\u7406\u4e0d\u4e00\u81f4\u95ee\u9898\u7684\u3002\u8fd9\u610f\u5473\u7740\u5728\u8ddf\u968f\u8005\u4e2d\u7684\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u4f1a\u88ab\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u8986\u76d6\u30025.4 \u8282\u4f1a\u9610\u8ff0\u5982\u4f55\u901a\u8fc7\u589e\u52a0\u4e00\u4e9b\u9650\u5236\u6765\u4f7f\u5f97\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u5b89\u5168\u7684\u3002 \u8981\u4f7f\u5f97\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fdb\u5165\u548c\u81ea\u5df1\u4e00\u81f4\u7684\u72b6\u6001\uff0c\u9886\u5bfc\u4eba\u5fc5\u987b\u627e\u5230\u6700\u540e\u4e24\u8005\u8fbe\u6210\u4e00\u81f4\u7684\u5730\u65b9\uff0c\u7136\u540e\u5220\u9664\u8ddf\u968f\u8005\u4ece\u90a3\u4e2a\u70b9\u4e4b\u540e\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff0c\u5e76\u53d1\u9001\u81ea\u5df1\u5728\u90a3\u4e2a\u70b9\u4e4b\u540e\u7684\u65e5\u5fd7\u7ed9\u8ddf\u968f\u8005\u3002\u6240\u6709\u7684\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u5728\u8fdb\u884c\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u65f6\u5b8c\u6210\u3002\u9886\u5bfc\u4eba\u9488\u5bf9\u6bcf\u4e00\u4e2a\u8ddf\u968f\u8005\u7ef4\u62a4\u4e86\u4e00\u4e2a nextIndex \uff0c\u8fd9\u8868\u793a\u4e0b\u4e00\u4e2a\u9700\u8981\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u5730\u5740\u3002\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u521a\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\uff0c\u4ed6\u521d\u59cb\u5316\u6240\u6709\u7684 nextIndex \u503c\u4e3a\u81ea\u5df1\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684 index \u52a0 1\uff08\u56fe 7 \u4e2d\u7684 11\uff09\u3002\u5982\u679c\u4e00\u4e2a\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u548c\u9886\u5bfc\u4eba\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u5728\u4e0b\u4e00\u6b21\u7684\u9644\u52a0\u65e5\u5fd7 RPC \u65f6\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5c31\u4f1a\u5931\u8d25\u3002\u5728\u88ab\u8ddf\u968f\u8005\u62d2\u7edd\u4e4b\u540e\uff0c\u9886\u5bfc\u4eba\u5c31\u4f1a\u51cf\u5c0f nextIndex \u503c\u5e76\u8fdb\u884c\u91cd\u8bd5\u3002\u6700\u7ec8 nextIndex \u4f1a\u5728\u67d0\u4e2a\u4f4d\u7f6e\u4f7f\u5f97\u9886\u5bfc\u4eba\u548c\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u8fbe\u6210\u4e00\u81f4\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u9644\u52a0\u65e5\u5fd7 RPC \u5c31\u4f1a\u6210\u529f\uff0c\u8fd9\u65f6\u5c31\u4f1a\u628a\u8ddf\u968f\u8005\u51b2\u7a81\u7684\u65e5\u5fd7\u6761\u76ee\u5168\u90e8\u5220\u9664\u5e76\u4e14\u52a0\u4e0a\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u3002\u4e00\u65e6\u9644\u52a0\u65e5\u5fd7 RPC \u6210\u529f\uff0c\u90a3\u4e48\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u5c31\u4f1a\u548c\u9886\u5bfc\u4eba\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4e14\u5728\u63a5\u4e0b\u6765\u7684\u4efb\u671f\u91cc\u4e00\u76f4\u7ee7\u7eed\u4fdd\u6301\u3002 \u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\u51cf\u5c11\u88ab\u62d2\u7edd\u7684\u9644\u52a0\u65e5\u5fd7 RPCs \u7684\u6b21\u6570\u6765\u4f18\u5316\u3002\u4f8b\u5982\uff0c\u5f53\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u8bf7\u6c42\u88ab\u62d2\u7edd\u7684\u65f6\u5019\uff0c\u8ddf\u968f\u8005\u53ef\u4ee5(\u8fd4\u56de)\u51b2\u7a81\u6761\u76ee\u7684\u4efb\u671f\u53f7\u548c\u8be5\u4efb\u671f\u53f7\u5bf9\u5e94\u7684\u6700\u5c0f\u7d22\u5f15\u5730\u5740\u3002\u501f\u52a9\u8fd9\u4e9b\u4fe1\u606f\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u51cf\u5c0f nextIndex \u4e00\u6b21\u6027\u8d8a\u8fc7\u8be5\u51b2\u7a81\u4efb\u671f\u7684\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff1b\u8fd9\u6837\u5c31\u53d8\u6210\u6bcf\u4e2a\u4efb\u671f\u9700\u8981\u4e00\u6b21\u9644\u52a0\u6761\u76ee RPC \u800c\u4e0d\u662f\u6bcf\u4e2a\u6761\u76ee\u4e00\u6b21\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u5341\u5206\u6000\u7591\u8fd9\u79cd\u4f18\u5316\u662f\u5426\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5931\u8d25\u662f\u5f88\u5c11\u53d1\u751f\u7684\u5e76\u4e14\u4e5f\u4e0d\u5927\u53ef\u80fd\u4f1a\u6709\u8fd9\u4e48\u591a\u4e0d\u4e00\u81f4\u7684\u65e5\u5fd7\u3002 \u901a\u8fc7\u8fd9\u79cd\u673a\u5236\uff0c\u9886\u5bfc\u4eba\u5728\u83b7\u5f97\u6743\u529b\u7684\u65f6\u5019\u5c31\u4e0d\u9700\u8981\u4efb\u4f55\u7279\u6b8a\u7684\u64cd\u4f5c\u6765\u6062\u590d\u4e00\u81f4\u6027\u3002\u4ed6\u53ea\u9700\u8981\u8fdb\u884c\u6b63\u5e38\u7684\u64cd\u4f5c\uff0c\u7136\u540e\u65e5\u5fd7\u5c31\u80fd\u5728\u56de\u590d\u9644\u52a0\u65e5\u5fd7 RPC \u7684\u4e00\u81f4\u6027\u68c0\u67e5\u5931\u8d25\u7684\u65f6\u5019\u81ea\u52a8\u8d8b\u4e8e\u4e00\u81f4\u3002\u9886\u5bfc\u4eba\u4ece\u6765\u4e0d\u4f1a\u8986\u76d6\u6216\u8005\u5220\u9664\u81ea\u5df1\u7684\u65e5\u5fd7\uff08\u56fe 3 \u7684\u9886\u5bfc\u4eba\u53ea\u9644\u52a0\u7279\u6027\uff09\u3002 \u65e5\u5fd7\u590d\u5236\u673a\u5236\u5c55\u793a\u51fa\u4e86\u7b2c 2 \u8282\u4e2d\u5f62\u5bb9\u7684\u4e00\u81f4\u6027\u7279\u6027\uff1aRaft \u80fd\u591f\u63a5\u53d7\uff0c\u590d\u5236\u5e76\u5e94\u7528\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ea\u8981\u5927\u90e8\u5206\u7684\u673a\u5668\u662f\u5de5\u4f5c\u7684\uff1b\u5728\u901a\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53ef\u4ee5\u5728\u4e00\u6b21 RPC \u4e2d\u88ab\u590d\u5236\u7ed9\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\uff1b\u5e76\u4e14\u5355\u4e2a\u7684\u7f13\u6162\u7684\u8ddf\u968f\u8005\u4e0d\u4f1a\u5f71\u54cd\u6574\u4f53\u7684\u6027\u80fd\u3002","title":"5.3 \u65e5\u5fd7\u590d\u5236"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#54-\u5b89\u5168\u6027","text":"\u524d\u9762\u7684\u7ae0\u8282\u91cc\u63cf\u8ff0\u4e86 Raft \u7b97\u6cd5\u662f\u5982\u4f55\u9009\u4e3e\u548c\u590d\u5236\u65e5\u5fd7\u7684\u3002\u7136\u800c\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u63cf\u8ff0\u7684\u673a\u5236\u5e76\u4e0d\u80fd\u5145\u5206\u7684\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u72b6\u6001\u673a\u4f1a\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u6267\u884c\u76f8\u540c\u7684\u6307\u4ee4\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u8fdb\u5165\u4e0d\u53ef\u7528\u72b6\u6001\u540c\u65f6\u9886\u5bfc\u4eba\u5df2\u7ecf\u63d0\u4ea4\u4e86\u82e5\u5e72\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u7136\u540e\u8fd9\u4e2a\u8ddf\u968f\u8005\u53ef\u80fd\u4f1a\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\u5e76\u4e14\u8986\u76d6\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\uff1b\u56e0\u6b64\uff0c\u4e0d\u540c\u7684\u72b6\u6001\u673a\u53ef\u80fd\u4f1a\u6267\u884c\u4e0d\u540c\u7684\u6307\u4ee4\u5e8f\u5217\u3002 \u8fd9\u4e00\u8282\u901a\u8fc7\u5728\u9886\u5bfc\u9009\u4e3e\u7684\u65f6\u5019\u589e\u52a0\u4e00\u4e9b\u9650\u5236\u6765\u5b8c\u5584 Raft \u7b97\u6cd5\u3002\u8fd9\u4e00\u9650\u5236\u4fdd\u8bc1\u4e86\u4efb\u4f55\u7684\u9886\u5bfc\u4eba\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4efb\u671f\u53f7\uff0c\u90fd\u62e5\u6709\u4e86\u4e4b\u524d\u4efb\u671f\u7684\u6240\u6709\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u56fe 3 \u4e2d\u7684\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\uff09\u3002\u589e\u52a0\u8fd9\u4e00\u9009\u4e3e\u65f6\u7684\u9650\u5236\uff0c\u6211\u4eec\u5bf9\u4e8e\u63d0\u4ea4\u65f6\u7684\u89c4\u5219\u4e5f\u66f4\u52a0\u6e05\u6670\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u5c55\u793a\u5bf9\u4e8e**\u9886\u5bfc\u4eba\u5b8c\u6574\u7279\u6027\uff08Leader Completeness Property\uff09** \u7684\u7b80\u8981\u8bc1\u660e\uff0c\u5e76\u4e14\u8bf4\u660e\u8be5\u7279\u6027\u662f\u5982\u4f55\u5f15\u5bfc\u590d\u5236\u72b6\u6001\u673a\u505a\u51fa\u6b63\u786e\u884c\u4e3a\u7684\u3002","title":"5.4 \u5b89\u5168\u6027"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#541-\u9009\u4e3e\u9650\u5236","text":"\u5728\u4efb\u4f55\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u9886\u5bfc\u4eba\u90fd\u5fc5\u987b\u5b58\u50a8\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5728\u67d0\u4e9b\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u4f8b\u5982 Viewstamped Replication\uff0c\u67d0\u4e2a\u8282\u70b9\u5373\u4f7f\u662f\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u5305\u542b\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u5b83\u4e5f\u80fd\u88ab\u9009\u4e3a\u9886\u5bfc\u4eba\u3002\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u5305\u542b\u4e00\u4e9b\u989d\u5916\u7684\u673a\u5236\u6765\u8bc6\u522b\u4e22\u5931\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u628a\u4ed6\u4eec\u4f20\u9001\u7ed9\u65b0\u7684\u9886\u5bfc\u4eba\uff0c\u8981\u4e48\u662f\u5728\u9009\u4e3e\u9636\u6bb5\u8981\u4e48\u5728\u4e4b\u540e\u5f88\u5feb\u8fdb\u884c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u76f8\u5f53\u5927\u7684\u989d\u5916\u7684\u673a\u5236\u548c\u590d\u6742\u6027\u3002Raft \u4f7f\u7528\u4e86\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u5728\u9009\u4e3e\u7684\u65f6\u5019\u65b0\u7684\u9886\u5bfc\u4eba\u62e5\u6709\u6240\u6709\u4e4b\u524d\u4efb\u671f\u4e2d\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u800c\u4e0d\u9700\u8981\u4f20\u9001\u8fd9\u4e9b\u65e5\u5fd7\u6761\u76ee\u7ed9\u9886\u5bfc\u4eba\u3002\u8fd9\u610f\u5473\u7740\u65e5\u5fd7\u6761\u76ee\u7684\u4f20\u9001\u662f\u5355\u5411\u7684\uff0c\u53ea\u4ece\u9886\u5bfc\u4eba\u4f20\u7ed9\u8ddf\u968f\u8005\uff0c\u5e76\u4e14\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u8986\u76d6\u81ea\u8eab\u672c\u5730\u65e5\u5fd7\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u6761\u76ee\u3002 Raft \u4f7f\u7528\u6295\u7968\u7684\u65b9\u5f0f\u6765\u963b\u6b62\u4e00\u4e2a\u5019\u9009\u4eba\u8d62\u5f97\u9009\u4e3e\uff0c\u9664\u975e\u8fd9\u4e2a\u5019\u9009\u4eba\u5305\u542b\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5019\u9009\u4eba\u4e3a\u4e86\u8d62\u5f97\u9009\u4e3e\u5fc5\u987b\u8054\u7cfb\u96c6\u7fa4\u4e2d\u7684\u5927\u90e8\u5206\u8282\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e00\u4e2a\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u5728\u8fd9\u4e9b\u670d\u52a1\u5668\u8282\u70b9\u4e2d\u80af\u5b9a\u5b58\u5728\u4e8e\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002\u5982\u679c\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u8282\u70b9\u4e00\u6837\u65b0\uff08\u8fd9\u4e2a\u65b0\u7684\u5b9a\u4e49\u4f1a\u5728\u4e0b\u9762\u8ba8\u8bba\uff09\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u6301\u6709\u4e86\u6240\u6709\u5df2\u7ecf\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u8bf7\u6c42\u6295\u7968\uff08RequestVote\uff09 RPC \u5b9e\u73b0\u4e86\u8fd9\u6837\u7684\u9650\u5236\uff1aRPC \u4e2d\u5305\u542b\u4e86\u5019\u9009\u4eba\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u7136\u540e\u6295\u7968\u4eba\u4f1a\u62d2\u7edd\u6389\u90a3\u4e9b\u65e5\u5fd7\u6ca1\u6709\u81ea\u5df1\u65b0\u7684\u6295\u7968\u8bf7\u6c42\u3002 Raft \u901a\u8fc7\u6bd4\u8f83\u4e24\u4efd\u65e5\u5fd7\u4e2d\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\u5b9a\u4e49\u8c01\u7684\u65e5\u5fd7\u6bd4\u8f83\u65b0\u3002\u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u7684\u4efb\u671f\u53f7\u4e0d\u540c\uff0c\u90a3\u4e48\u4efb\u671f\u53f7\u5927\u7684\u65e5\u5fd7\u66f4\u52a0\u65b0\u3002\u5982\u679c\u4e24\u4efd\u65e5\u5fd7\u6700\u540e\u7684\u6761\u76ee\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u65e5\u5fd7\u6bd4\u8f83\u957f\u7684\u90a3\u4e2a\u5c31\u66f4\u52a0\u65b0\u3002","title":"5.4.1 \u9009\u4e3e\u9650\u5236"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#542-\u63d0\u4ea4\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee","text":"\u5982\u540c 5.3 \u8282\u4ecb\u7ecd\u7684\u90a3\u6837\uff0c\u9886\u5bfc\u4eba\u77e5\u9053\u4e00\u6761\u5f53\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u8bb0\u5f55\u662f\u53ef\u4ee5\u88ab\u63d0\u4ea4\u7684\uff0c\u53ea\u8981\u5b83\u88ab\u5b58\u50a8\u5230\u4e86\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u4e0a\u3002\u5982\u679c\u4e00\u4e2a\u9886\u5bfc\u4eba\u5728\u63d0\u4ea4\u65e5\u5fd7\u6761\u76ee\u4e4b\u524d\u5d29\u6e83\u4e86\uff0c\u672a\u6765\u540e\u7eed\u7684\u9886\u5bfc\u4eba\u4f1a\u7ee7\u7eed\u5c1d\u8bd5\u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u8bb0\u5f55\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u9886\u5bfc\u4eba\u4e0d\u80fd\u65ad\u5b9a\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u88ab\u4fdd\u5b58\u5230\u5927\u591a\u6570\u670d\u52a1\u5668\u4e0a\u7684\u65f6\u5019\u5c31\u4e00\u5b9a\u5df2\u7ecf\u63d0\u4ea4\u4e86\u3002\u56fe 8 \u5c55\u793a\u4e86\u4e00\u79cd\u60c5\u51b5\uff0c\u4e00\u6761\u5df2\u7ecf\u88ab\u5b58\u50a8\u5230\u5927\u591a\u6570\u8282\u70b9\u4e0a\u7684\u8001\u65e5\u5fd7\u6761\u76ee\uff0c\u4e5f\u4f9d\u7136\u6709\u53ef\u80fd\u4f1a\u88ab\u672a\u6765\u7684\u9886\u5bfc\u4eba\u8986\u76d6\u6389\u3002 \u56fe 8\uff1a\u5982\u56fe\u7684\u65f6\u95f4\u5e8f\u5217\u5c55\u793a\u4e86\u4e3a\u4ec0\u4e48\u9886\u5bfc\u4eba\u65e0\u6cd5\u51b3\u5b9a\u5bf9\u8001\u4efb\u671f\u53f7\u7684\u65e5\u5fd7\u6761\u76ee\u8fdb\u884c\u63d0\u4ea4\u3002\u5728 (a) \u4e2d\uff0cS1 \u662f\u9886\u5bfc\u4eba\uff0c\u90e8\u5206\u7684(\u8ddf\u968f\u8005)\u590d\u5236\u4e86\u7d22\u5f15\u4f4d\u7f6e 2 \u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5728 (b) \u4e2d\uff0cS1 \u5d29\u6e83\u4e86\uff0c\u7136\u540e S5 \u5728\u4efb\u671f 3 \u91cc\u901a\u8fc7 S3\u3001S4 \u548c\u81ea\u5df1\u7684\u9009\u7968\u8d62\u5f97\u9009\u4e3e\uff0c\u7136\u540e\u4ece\u5ba2\u6237\u7aef\u63a5\u6536\u4e86\u4e00\u6761\u4e0d\u4e00\u6837\u7684\u65e5\u5fd7\u6761\u76ee\u653e\u5728\u4e86\u7d22\u5f15 2 \u5904\u3002\u7136\u540e\u5230 \u00a9\uff0cS5 \u53c8\u5d29\u6e83\u4e86\uff1bS1 \u91cd\u65b0\u542f\u52a8\uff0c\u9009\u4e3e\u6210\u529f\uff0c\u5f00\u59cb\u590d\u5236\u65e5\u5fd7\u3002\u5728\u8fd9\u65f6\uff0c\u6765\u81ea\u4efb\u671f 2 \u7684\u90a3\u6761\u65e5\u5fd7\u5df2\u7ecf\u88ab\u590d\u5236\u5230\u4e86\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u673a\u5668\u4e0a\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u3002\u5982\u679c S1 \u5728 (d) \u4e2d\u53c8\u5d29\u6e83\u4e86\uff0cS5 \u53ef\u4ee5\u91cd\u65b0\u88ab\u9009\u4e3e\u6210\u529f\uff08\u901a\u8fc7\u6765\u81ea S2\uff0cS3 \u548c S4 \u7684\u9009\u7968\uff09\uff0c\u7136\u540e\u8986\u76d6\u4e86\u4ed6\u4eec\u5728\u7d22\u5f15 2 \u5904\u7684\u65e5\u5fd7\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u5728\u5d29\u6e83\u4e4b\u524d\uff0cS1 \u628a\u81ea\u5df1\u4e3b\u5bfc\u7684\u65b0\u4efb\u671f\u91cc\u4ea7\u751f\u7684\u65e5\u5fd7\u6761\u76ee\u590d\u5236\u5230\u4e86\u5927\u591a\u6570\u673a\u5668\u4e0a\uff0c\u5c31\u5982 (e) \u4e2d\u90a3\u6837\uff0c\u90a3\u4e48\u5728\u540e\u9762\u4efb\u671f\u91cc\u9762\u8fd9\u4e9b\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\uff08\u56e0\u4e3a S5 \u5c31\u4e0d\u53ef\u80fd\u9009\u4e3e\u6210\u529f\uff09\u3002 \u8fd9\u6837\u5728\u540c\u4e00\u65f6\u523b\u5c31\u540c\u65f6\u4fdd\u8bc1\u4e86\uff0c\u4e4b\u524d\u7684\u6240\u6709\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u5c31\u4f1a\u88ab\u63d0\u4ea4\u3002 \u4e3a\u4e86\u6d88\u9664\u56fe 8 \u91cc\u63cf\u8ff0\u7684\u60c5\u51b5\uff0cRaft \u6c38\u8fdc\u4e0d\u4f1a\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u7684\u65b9\u5f0f\u53bb\u63d0\u4ea4\u4e00\u4e2a\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u53ea\u6709\u9886\u5bfc\u4eba\u5f53\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u6761\u76ee\u901a\u8fc7\u8ba1\u7b97\u526f\u672c\u6570\u76ee\u53ef\u4ee5\u88ab\u63d0\u4ea4\uff1b\u4e00\u65e6\u5f53\u524d\u4efb\u671f\u7684\u65e5\u5fd7\u6761\u76ee\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u7531\u4e8e\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff0c\u4e4b\u524d\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u90fd\u4f1a\u88ab\u95f4\u63a5\u7684\u63d0\u4ea4\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u5b89\u5168\u7684\u77e5\u9053\u4e00\u4e2a\u8001\u7684\u65e5\u5fd7\u6761\u76ee\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff08\u4f8b\u5982\uff0c\u8be5\u6761\u76ee\u662f\u5426\u5b58\u50a8\u5230\u6240\u6709\u670d\u52a1\u5668\u4e0a\uff09\uff0c\u4f46\u662f Raft \u4e3a\u4e86\u7b80\u5316\u95ee\u9898\u4f7f\u7528\u4e00\u79cd\u66f4\u52a0\u4fdd\u5b88\u7684\u65b9\u6cd5\u3002 \u5f53\u9886\u5bfc\u4eba\u590d\u5236\u4e4b\u524d\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0cRaft \u4f1a\u4e3a\u6240\u6709\u65e5\u5fd7\u4fdd\u7559\u539f\u59cb\u7684\u4efb\u671f\u53f7, \u8fd9\u5728\u63d0\u4ea4\u89c4\u5219\u4e0a\u4ea7\u751f\u4e86\u989d\u5916\u7684\u590d\u6742\u6027\u3002\u5728\u5176\u4ed6\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\u8981\u91cd\u65b0\u590d\u5236\u4e4b\u524d\u7684\u4efb\u671f\u91cc\u7684\u65e5\u5fd7\u65f6\uff0c\u5b83\u5fc5\u987b\u4f7f\u7528\u5f53\u524d\u65b0\u7684\u4efb\u671f\u53f7\u3002Raft \u4f7f\u7528\u7684\u65b9\u6cd5\u66f4\u52a0\u5bb9\u6613\u8fa8\u522b\u51fa\u65e5\u5fd7\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u548c\u65e5\u5fd7\u7684\u53d8\u5316\u5bf9\u65e5\u5fd7\u7ef4\u62a4\u7740\u540c\u4e00\u4e2a\u4efb\u671f\u7f16\u53f7\u3002\u53e6\u5916\uff0c\u548c\u5176\u4ed6\u7684\u7b97\u6cd5\u76f8\u6bd4\uff0cRaft \u4e2d\u7684\u65b0\u9886\u5bfc\u4eba\u53ea\u9700\u8981\u53d1\u9001\u66f4\u5c11\u65e5\u5fd7\u6761\u76ee\uff08\u5176\u4ed6\u7b97\u6cd5\u4e2d\u5fc5\u987b\u5728\u4ed6\u4eec\u88ab\u63d0\u4ea4\u4e4b\u524d\u53d1\u9001\u66f4\u591a\u7684\u5197\u4f59\u65e5\u5fd7\u6761\u76ee\u6765\u4e3a\u4ed6\u4eec\u91cd\u65b0\u7f16\u53f7\uff09\u3002","title":"5.4.2 \u63d0\u4ea4\u4e4b\u524d\u4efb\u671f\u5185\u7684\u65e5\u5fd7\u6761\u76ee"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#543-\u5b89\u5168\u6027\u8bba\u8bc1","text":"\u5728\u7ed9\u5b9a\u4e86\u5b8c\u6574\u7684 Raft \u7b97\u6cd5\u4e4b\u540e\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u66f4\u52a0\u7cbe\u786e\u7684\u8ba8\u8bba\u9886\u5bfc\u4eba\u5b8c\u6574\u6027\u7279\u6027\uff08\u8fd9\u4e00\u8ba8\u8bba\u57fa\u4e8e 9.2 \u8282\u7684\u5b89\u5168\u6027\u8bc1\u660e\uff09\u3002\u6211\u4eec\u5047\u8bbe\u9886\u5bfc\u4eba\u5b8c\u5168\u6027\u7279\u6027\u662f\u4e0d\u5b58\u5728\u7684\uff0c\u7136\u540e\u6211\u4eec\u63a8\u51fa\u77db\u76fe\u6765\u3002\u5047\u8bbe\u4efb\u671f T \u7684\u9886\u5bfc\u4eba\uff08\u9886\u5bfc\u4eba T\uff09\u5728\u4efb\u671f\u5185\u63d0\u4ea4\u4e86\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u4f46\u662f\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u6ca1\u6709\u88ab\u5b58\u50a8\u5230\u672a\u6765\u67d0\u4e2a\u4efb\u671f\u7684\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\u4e2d\u3002\u8bbe\u5927\u4e8e T \u7684\u6700\u5c0f\u4efb\u671f U \u7684\u9886\u5bfc\u4eba U \u6ca1\u6709\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u3002 \u56fe 9\uff1a\u5982\u679c S1 \uff08\u4efb\u671f T \u7684\u9886\u5bfc\u4eba\uff09\u5728\u5b83\u7684\u4efb\u671f\u91cc\u63d0\u4ea4\u4e86\u4e00\u6761\u65b0\u7684\u65e5\u5fd7\uff0c\u7136\u540e S5 \u5728\u4e4b\u540e\u7684\u4efb\u671f U \u91cc\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\uff0c\u90a3\u4e48\u81f3\u5c11\u4f1a\u6709\u4e00\u4e2a\u673a\u5668\uff0c\u5982 S3\uff0c\u65e2\u62e5\u6709\u6765\u81ea S1 \u7684\u65e5\u5fd7\uff0c\u4e5f\u7ed9 S5 \u6295\u7968\u4e86\u3002 \u5728\u9886\u5bfc\u4eba U \u9009\u4e3e\u7684\u65f6\u5019\u4e00\u5b9a\u6ca1\u6709\u90a3\u6761\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff08\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u5220\u9664\u6216\u8005\u8986\u76d6\u4efb\u4f55\u6761\u76ee\uff09\u3002 \u9886\u5bfc\u4eba T \u590d\u5236\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\u7ed9\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u8282\u70b9\uff0c\u540c\u65f6\uff0c\u9886\u5bfc\u4eba U \u4ece\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u8282\u70b9\u8d62\u5f97\u4e86\u9009\u7968\u3002\u56e0\u6b64\uff0c\u81f3\u5c11\u6709\u4e00\u4e2a\u8282\u70b9\uff08\u6295\u7968\u8005\u3001\u9009\u6c11\uff09\u540c\u65f6\u63a5\u53d7\u4e86\u6765\u81ea\u9886\u5bfc\u4eba T \u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u5e76\u4e14\u7ed9\u9886\u5bfc\u4eba U \u6295\u7968\u4e86\uff0c\u5982\u56fe 9\u3002\u8fd9\u4e2a\u6295\u7968\u8005\u662f\u4ea7\u751f\u8fd9\u4e2a\u77db\u76fe\u7684\u5173\u952e\u3002 \u8fd9\u4e2a\u6295\u7968\u8005\u5fc5\u987b\u5728\u7ed9\u9886\u5bfc\u4eba U \u6295\u7968\u4e4b\u524d\u5148\u63a5\u53d7\u4e86\u4ece\u9886\u5bfc\u4eba T \u53d1\u6765\u7684\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff1b\u5426\u5219\u4ed6\u5c31\u4f1a\u62d2\u7edd\u6765\u81ea\u9886\u5bfc\u4eba T \u7684\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\uff08\u56e0\u4e3a\u6b64\u65f6\u4ed6\u7684\u4efb\u671f\u53f7\u4f1a\u6bd4 T \u5927\uff09\u3002 \u6295\u7968\u8005\u5728\u7ed9\u9886\u5bfc\u4eba U \u6295\u7968\u65f6\u4f9d\u7136\u4fdd\u5b58\u6709\u8fd9\u6761\u65e5\u5fd7\u6761\u76ee\uff0c\u56e0\u4e3a\u4efb\u4f55\u4e2d\u95f4\u7684\u9886\u5bfc\u4eba\u90fd\u5305\u542b\u8be5\u65e5\u5fd7\u6761\u76ee\uff08\u6839\u636e\u4e0a\u8ff0\u7684\u5047\u8bbe\uff09\uff0c\u9886\u5bfc\u4eba\u4ece\u4e0d\u4f1a\u5220\u9664\u6761\u76ee\uff0c\u5e76\u4e14\u8ddf\u968f\u8005\u53ea\u6709\u5728\u548c\u9886\u5bfc\u4eba\u51b2\u7a81\u7684\u65f6\u5019\u624d\u4f1a\u5220\u9664\u6761\u76ee\u3002 \u6295\u7968\u8005\u628a\u81ea\u5df1\u9009\u7968\u6295\u7ed9\u9886\u5bfc\u4eba U \u65f6\uff0c\u9886\u5bfc\u4eba U \u7684\u65e5\u5fd7\u5fc5\u987b\u548c\u6295\u7968\u8005\u81ea\u5df1\u4e00\u6837\u65b0\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u4e24\u8005\u77db\u76fe\u4e4b\u4e00\u3002 \u9996\u5148\uff0c\u5982\u679c\u6295\u7968\u8005\u548c\u9886\u5bfc\u4eba U \u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u9886\u5bfc\u4eba U \u7684\u65e5\u5fd7\u81f3\u5c11\u548c\u6295\u7968\u8005\u4e00\u6837\u957f\uff0c\u6240\u4ee5\u9886\u5bfc\u4eba U \u7684\u65e5\u5fd7\u4e00\u5b9a\u5305\u542b\u6240\u6709\u6295\u7968\u8005\u7684\u65e5\u5fd7\u3002\u8fd9\u662f\u53e6\u4e00\u5904\u77db\u76fe\uff0c\u56e0\u4e3a\u6295\u7968\u8005\u5305\u542b\u4e86\u90a3\u6761\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4f46\u662f\u5728\u4e0a\u8ff0\u7684\u5047\u8bbe\u91cc\uff0c\u9886\u5bfc\u4eba U \u662f\u4e0d\u5305\u542b\u7684\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u9886\u5bfc\u4eba U \u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\u5c31\u5fc5\u987b\u6bd4\u6295\u7968\u4eba\u5927\u4e86\u3002\u6b64\u5916\uff0c\u4ed6\u4e5f\u6bd4 T \u5927\uff0c\u56e0\u4e3a\u6295\u7968\u4eba\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\u81f3\u5c11\u548c T \u4e00\u6837\u5927\uff08\u4ed6\u5305\u542b\u4e86\u6765\u81ea\u4efb\u671f T \u7684\u5df2\u63d0\u4ea4\u7684\u65e5\u5fd7\uff09\u3002\u521b\u5efa\u4e86\u9886\u5bfc\u4eba U \u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4e4b\u524d\u9886\u5bfc\u4eba\u4e00\u5b9a\u5df2\u7ecf\u5305\u542b\u4e86\u90a3\u6761\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\uff08\u6839\u636e\u4e0a\u8ff0\u5047\u8bbe\uff0c\u9886\u5bfc\u4eba U \u662f\u7b2c\u4e00\u4e2a\u4e0d\u5305\u542b\u8be5\u65e5\u5fd7\u6761\u76ee\u7684\u9886\u5bfc\u4eba\uff09\u3002\u6240\u4ee5\uff0c\u6839\u636e\u65e5\u5fd7\u5339\u914d\u7279\u6027\uff0c\u9886\u5bfc\u4eba U \u4e00\u5b9a\u4e5f\u5305\u542b\u90a3\u6761\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\uff0c\u8fd9\u91cc\u4ea7\u751f\u77db\u76fe\u3002 \u8fd9\u91cc\u5b8c\u6210\u4e86\u77db\u76fe\u3002\u56e0\u6b64\uff0c\u6240\u6709\u6bd4 T \u5927\u7684\u9886\u5bfc\u4eba\u4e00\u5b9a\u5305\u542b\u4e86\u6240\u6709\u6765\u81ea T \u7684\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u3002 \u65e5\u5fd7\u5339\u914d\u539f\u5219\u4fdd\u8bc1\u4e86\u672a\u6765\u7684\u9886\u5bfc\u4eba\u4e5f\u540c\u65f6\u4f1a\u5305\u542b\u88ab\u95f4\u63a5\u63d0\u4ea4\u7684\u6761\u76ee\uff0c\u4f8b\u5982\u56fe 8 (e) \u4e2d\u7684\u7d22\u5f15 2\u3002 \u901a\u8fc7\u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027\uff0c\u6211\u4eec\u5c31\u80fd\u8bc1\u660e\u56fe 3 \u4e2d\u7684\u72b6\u6001\u673a\u5b89\u5168\u7279\u6027\uff0c\u5373\u5982\u679c\u670d\u52a1\u5668\u5df2\u7ecf\u5728\u67d0\u4e2a\u7ed9\u5b9a\u7684\u7d22\u5f15\u503c\u5e94\u7528\u4e86\u65e5\u5fd7\u6761\u76ee\u5230\u81ea\u5df1\u7684\u72b6\u6001\u673a\u91cc\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u670d\u52a1\u5668\u4e0d\u4f1a\u5e94\u7528\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u65e5\u5fd7\u5230\u540c\u4e00\u4e2a\u7d22\u5f15\u503c\u4e0a\u3002\u5728\u4e00\u4e2a\u670d\u52a1\u5668\u5e94\u7528\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u5230\u4ed6\u81ea\u5df1\u7684\u72b6\u6001\u673a\u4e2d\u65f6\uff0c\u4ed6\u7684\u65e5\u5fd7\u5fc5\u987b\u548c\u9886\u5bfc\u4eba\u7684\u65e5\u5fd7\uff0c\u5728\u8be5\u6761\u76ee\u548c\u4e4b\u524d\u7684\u6761\u76ee\u4e0a\u76f8\u540c\uff0c\u5e76\u4e14\u5df2\u7ecf\u88ab\u63d0\u4ea4\u3002\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651\u5728\u4efb\u4f55\u4e00\u4e2a\u670d\u52a1\u5668\u5e94\u7528\u4e00\u4e2a\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u7684\u65e5\u5fd7\u7684\u6700\u5c0f\u4efb\u671f\uff1b\u65e5\u5fd7\u5b8c\u5168\u7279\u6027\u4fdd\u8bc1\u62e5\u6709\u66f4\u9ad8\u4efb\u671f\u53f7\u7684\u9886\u5bfc\u4eba\u4f1a\u5b58\u50a8\u76f8\u540c\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u6240\u4ee5\u4e4b\u540e\u7684\u4efb\u671f\u91cc\u5e94\u7528\u67d0\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u4f1a\u662f\u76f8\u540c\u7684\u503c\u3002\u56e0\u6b64\uff0c\u72b6\u6001\u673a\u5b89\u5168\u7279\u6027\u662f\u6210\u7acb\u7684\u3002 \u6700\u540e\uff0cRaft \u8981\u6c42\u670d\u52a1\u5668\u6309\u7167\u65e5\u5fd7\u4e2d\u7d22\u5f15\u4f4d\u7f6e\u987a\u5e8f\u5e94\u7528\u65e5\u5fd7\u6761\u76ee\u3002\u548c\u72b6\u6001\u673a\u5b89\u5168\u7279\u6027\u7ed3\u5408\u8d77\u6765\u770b\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u6240\u6709\u7684\u670d\u52a1\u5668\u4f1a\u5e94\u7528\u76f8\u540c\u7684\u65e5\u5fd7\u5e8f\u5217\u96c6\u5230\u81ea\u5df1\u7684\u72b6\u6001\u673a\u4e2d\uff0c\u5e76\u4e14\u662f\u6309\u7167\u76f8\u540c\u7684\u987a\u5e8f\u3002","title":"5.4.3 \u5b89\u5168\u6027\u8bba\u8bc1"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#55-\u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u53ea\u5173\u6ce8\u4e86\u9886\u5bfc\u4eba\u5d29\u6e83\u7684\u60c5\u51b5\u3002\u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83\u540e\u7684\u5904\u7406\u65b9\u5f0f\u6bd4\u9886\u5bfc\u4eba\u8981\u7b80\u5355\u7684\u591a\uff0c\u5e76\u4e14\u4ed6\u4eec\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u8ddf\u968f\u8005\u6216\u8005\u5019\u9009\u4eba\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u540e\u7eed\u53d1\u9001\u7ed9\u4ed6\u4eec\u7684 RPCs \u90fd\u4f1a\u5931\u8d25\u3002Raft \u4e2d\u5904\u7406\u8fd9\u79cd\u5931\u8d25\u5c31\u662f\u7b80\u5355\u5730\u901a\u8fc7\u65e0\u9650\u7684\u91cd\u8bd5\uff1b\u5982\u679c\u5d29\u6e83\u7684\u673a\u5668\u91cd\u542f\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e9b RPC \u5c31\u4f1a\u5b8c\u6574\u7684\u6210\u529f\u3002\u5982\u679c\u4e00\u4e2a\u670d\u52a1\u5668\u5728\u5b8c\u6210\u4e86\u4e00\u4e2a RPC\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u54cd\u5e94\u7684\u65f6\u5019\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5728\u4ed6\u91cd\u65b0\u542f\u52a8\u4e4b\u540e\u5c31\u4f1a\u518d\u6b21\u6536\u5230\u540c\u6837\u7684\u8bf7\u6c42\u3002Raft \u7684 RPCs \u90fd\u662f\u5e42\u7b49\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u91cd\u8bd5\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u95ee\u9898\u3002\u4f8b\u5982\u4e00\u4e2a\u8ddf\u968f\u8005\u5982\u679c\u6536\u5230\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\u4f46\u662f\u4ed6\u5df2\u7ecf\u5305\u542b\u4e86\u8fd9\u4e00\u65e5\u5fd7\uff0c\u90a3\u4e48\u4ed6\u5c31\u4f1a\u76f4\u63a5\u5ffd\u7565\u8fd9\u4e2a\u65b0\u7684\u8bf7\u6c42\u3002","title":"5.5 \u8ddf\u968f\u8005\u548c\u5019\u9009\u4eba\u5d29\u6e83"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#56-\u65f6\u95f4\u548c\u53ef\u7528\u6027","text":"Raft \u7684\u8981\u6c42\u4e4b\u4e00\u5c31\u662f\u5b89\u5168\u6027\u4e0d\u80fd\u4f9d\u8d56\u65f6\u95f4\uff1a\u6574\u4e2a\u7cfb\u7edf\u4e0d\u80fd\u56e0\u4e3a\u67d0\u4e9b\u4e8b\u4ef6\u8fd0\u884c\u7684\u6bd4\u9884\u671f\u5feb\u4e00\u70b9\u6216\u8005\u6162\u4e00\u70b9\u5c31\u4ea7\u751f\u4e86\u9519\u8bef\u7684\u7ed3\u679c\u3002\u4f46\u662f\uff0c\u53ef\u7528\u6027\uff08\u7cfb\u7edf\u53ef\u4ee5\u53ca\u65f6\u7684\u54cd\u5e94\u5ba2\u6237\u7aef\uff09\u4e0d\u53ef\u907f\u514d\u7684\u8981\u4f9d\u8d56\u4e8e\u65f6\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6d88\u606f\u4ea4\u6362\u6bd4\u670d\u52a1\u5668\u6545\u969c\u95f4\u9694\u65f6\u95f4\u957f\uff0c\u5019\u9009\u4eba\u5c06\u6ca1\u6709\u8db3\u591f\u957f\u7684\u65f6\u95f4\u6765\u8d62\u5f97\u9009\u4e3e\uff1b\u6ca1\u6709\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba\uff0cRaft \u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \u9886\u5bfc\u4eba\u9009\u4e3e\u662f Raft \u4e2d\u5bf9\u65f6\u95f4\u8981\u6c42\u6700\u4e3a\u5173\u952e\u7684\u65b9\u9762\u3002Raft \u53ef\u4ee5\u9009\u4e3e\u5e76\u7ef4\u6301\u4e00\u4e2a\u7a33\u5b9a\u7684\u9886\u5bfc\u4eba,\u53ea\u8981\u7cfb\u7edf\u6ee1\u8db3\u4e0b\u9762\u7684\u65f6\u95f4\u8981\u6c42\uff1a \u5e7f\u64ad\u65f6\u95f4\uff08broadcastTime\uff09 << \u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff08electionTimeout\uff09 << \u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\uff08MTBF\uff09 \u5728\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e2d\uff0c\u5e7f\u64ad\u65f6\u95f4\u6307\u7684\u662f\u4ece\u4e00\u4e2a\u670d\u52a1\u5668\u5e76\u884c\u7684\u53d1\u9001 RPCs \u7ed9\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u670d\u52a1\u5668\u5e76\u63a5\u6536\u54cd\u5e94\u7684\u5e73\u5747\u65f6\u95f4\uff1b\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5c31\u662f\u5728 5.2 \u8282\u4e2d\u4ecb\u7ecd\u7684\u9009\u4e3e\u7684\u8d85\u65f6\u65f6\u95f4\u9650\u5236\uff1b\u7136\u540e\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5c31\u662f\u5bf9\u4e8e\u4e00\u53f0\u670d\u52a1\u5668\u800c\u8a00\uff0c\u4e24\u6b21\u6545\u969c\u4e4b\u95f4\u7684\u5e73\u5747\u65f6\u95f4\u3002\u5e7f\u64ad\u65f6\u95f4\u5fc5\u987b\u6bd4\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5c0f\u4e00\u4e2a\u91cf\u7ea7\uff0c\u8fd9\u6837\u9886\u5bfc\u4eba\u624d\u80fd\u591f\u53d1\u9001\u7a33\u5b9a\u7684\u5fc3\u8df3\u6d88\u606f\u6765\u963b\u6b62\u8ddf\u968f\u8005\u5f00\u59cb\u8fdb\u5165\u9009\u4e3e\u72b6\u6001\uff1b\u901a\u8fc7\u968f\u673a\u5316\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e5f\u4f7f\u5f97\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u53d8\u5f97\u4e0d\u53ef\u80fd\u3002\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5e94\u8be5\u8981\u6bd4\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u5c0f\u4e0a\u51e0\u4e2a\u6570\u91cf\u7ea7\uff0c\u8fd9\u6837\u6574\u4e2a\u7cfb\u7edf\u624d\u80fd\u7a33\u5b9a\u7684\u8fd0\u884c\u3002\u5f53\u9886\u5bfc\u4eba\u5d29\u6e83\u540e\uff0c\u6574\u4e2a\u7cfb\u7edf\u4f1a\u5927\u7ea6\u76f8\u5f53\u4e8e\u9009\u4e3e\u8d85\u65f6\u7684\u65f6\u95f4\u91cc\u4e0d\u53ef\u7528\uff1b\u6211\u4eec\u5e0c\u671b\u8fd9\u79cd\u60c5\u51b5\u5728\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u884c\u4e2d\u5f88\u5c11\u51fa\u73b0\u3002 \u5e7f\u64ad\u65f6\u95f4\u548c\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u662f\u7531\u7cfb\u7edf\u51b3\u5b9a\u7684\uff0c\u4f46\u662f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u662f\u6211\u4eec\u81ea\u5df1\u9009\u62e9\u7684\u3002Raft \u7684 RPCs \u9700\u8981\u63a5\u6536\u65b9\u5c06\u4fe1\u606f\u6301\u4e45\u5316\u7684\u4fdd\u5b58\u5230\u7a33\u5b9a\u5b58\u50a8\u4e2d\u53bb\uff0c\u6240\u4ee5\u5e7f\u64ad\u65f6\u95f4\u5927\u7ea6\u662f 0.5 \u6beb\u79d2\u5230 20 \u6beb\u79d2\uff0c\u53d6\u51b3\u4e8e\u5b58\u50a8\u7684\u6280\u672f\u3002\u56e0\u6b64\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u53ef\u80fd\u9700\u8981\u5728 10 \u6beb\u79d2\u5230 500 \u6beb\u79d2\u4e4b\u95f4\u3002\u5927\u591a\u6570\u7684\u670d\u52a1\u5668\u7684\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4\u90fd\u5728\u51e0\u4e2a\u6708\u751a\u81f3\u66f4\u957f\uff0c\u5f88\u5bb9\u6613\u6ee1\u8db3\u65f6\u95f4\u7684\u9700\u6c42\u3002","title":"5.6 \u65f6\u95f4\u548c\u53ef\u7528\u6027"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#6-\u96c6\u7fa4\u6210\u5458\u53d8\u5316","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u90fd\u5047\u8bbe\u96c6\u7fa4\u7684\u914d\u7f6e\uff08\u52a0\u5165\u5230\u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u670d\u52a1\u5668\u96c6\u5408\uff09\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\u3002\u4f46\u662f\u5728\u5b9e\u8df5\u4e2d\uff0c\u5076\u5c14\u662f\u4f1a\u6539\u53d8\u96c6\u7fa4\u7684\u914d\u7f6e\u7684\uff0c\u4f8b\u5982\u66ff\u6362\u90a3\u4e9b\u5b95\u673a\u7684\u673a\u5668\u6216\u8005\u6539\u53d8\u590d\u5236\u7ea7\u522b\u3002\u5c3d\u7ba1\u53ef\u4ee5\u901a\u8fc7\u6682\u505c\u6574\u4e2a\u96c6\u7fa4\uff0c\u66f4\u65b0\u6240\u6709\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u6574\u4e2a\u96c6\u7fa4\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u4f46\u662f\u5728\u66f4\u6539\u7684\u65f6\u5019\u96c6\u7fa4\u4f1a\u4e0d\u53ef\u7528\u3002\u53e6\u5916\uff0c\u5982\u679c\u5b58\u5728\u624b\u5de5\u64cd\u4f5c\u6b65\u9aa4\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u64cd\u4f5c\u5931\u8bef\u7684\u98ce\u9669\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6211\u4eec\u51b3\u5b9a\u81ea\u52a8\u5316\u914d\u7f6e\u6539\u53d8\u5e76\u4e14\u5c06\u5176\u7eb3\u5165\u5230 Raft \u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\u6765\u3002 \u4e3a\u4e86\u8ba9\u914d\u7f6e\u4fee\u6539\u673a\u5236\u80fd\u591f\u5b89\u5168\uff0c\u90a3\u4e48\u5728\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u591f\u5b58\u5728\u4efb\u4f55\u65f6\u95f4\u70b9\u4f7f\u5f97\u4e24\u4e2a\u9886\u5bfc\u4eba\u5728\u540c\u4e00\u4e2a\u4efb\u671f\u91cc\u540c\u65f6\u88ab\u9009\u4e3e\u6210\u529f\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4efb\u4f55\u670d\u52a1\u5668\u76f4\u63a5\u4ece\u65e7\u7684\u914d\u7f6e\u76f4\u63a5\u8f6c\u6362\u5230\u65b0\u7684\u914d\u7f6e\u7684\u65b9\u6848\u90fd\u662f\u4e0d\u5b89\u5168\u7684\u3002\u4e00\u6b21\u6027\u539f\u5b50\u5730\u8f6c\u6362\u6240\u6709\u670d\u52a1\u5668\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u671f\u95f4\u6574\u4e2a\u96c6\u7fa4\u5b58\u5728\u5212\u5206\u6210\u4e24\u4e2a\u72ec\u7acb\u7684\u5927\u591a\u6570\u7fa4\u4f53\u7684\u53ef\u80fd\u6027\uff08\u89c1\u56fe 10\uff09\u3002 \u56fe 10\uff1a\u76f4\u63a5\u4ece\u4e00\u79cd\u914d\u7f6e\u8f6c\u5230\u65b0\u7684\u914d\u7f6e\u662f\u5341\u5206\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5404\u4e2a\u673a\u5668\u53ef\u80fd\u5728\u4efb\u4f55\u7684\u65f6\u5019\u8fdb\u884c\u8f6c\u6362\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u96c6\u7fa4\u914d\u989d\u4ece 3 \u53f0\u673a\u5668\u53d8\u6210\u4e86 5 \u53f0\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5b58\u5728\u8fd9\u6837\u7684\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e24\u4e2a\u4e0d\u540c\u7684\u9886\u5bfc\u4eba\u5728\u540c\u4e00\u4e2a\u4efb\u671f\u91cc\u90fd\u53ef\u4ee5\u88ab\u9009\u4e3e\u6210\u529f\u3002\u4e00\u4e2a\u662f\u901a\u8fc7\u65e7\u7684\u914d\u7f6e\uff0c\u4e00\u4e2a\u901a\u8fc7\u65b0\u7684\u914d\u7f6e\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\u6027\uff0c\u914d\u7f6e\u66f4\u6539\u5fc5\u987b\u4f7f\u7528\u4e24\u9636\u6bb5\u65b9\u6cd5\u3002\u76ee\u524d\u6709\u5f88\u591a\u79cd\u4e24\u9636\u6bb5\u7684\u5b9e\u73b0\u3002\u4f8b\u5982\uff0c\u6709\u4e9b\u7cfb\u7edf\u5728\u7b2c\u4e00\u9636\u6bb5\u505c\u6389\u65e7\u7684\u914d\u7f6e\u6240\u4ee5\u96c6\u7fa4\u5c31\u4e0d\u80fd\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff1b\u7136\u540e\u5728\u7b2c\u4e8c\u9636\u6bb5\u5728\u542f\u7528\u65b0\u7684\u914d\u7f6e\u3002\u5728 Raft \u4e2d\uff0c\u96c6\u7fa4\u5148\u5207\u6362\u5230\u4e00\u4e2a\u8fc7\u6e21\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5171\u540c\u4e00\u81f4\uff08 joint consensus )\uff1b\u4e00\u65e6\u5171\u540c\u4e00\u81f4\u5df2\u7ecf\u88ab\u63d0\u4ea4\u4e86\uff0c\u90a3\u4e48\u7cfb\u7edf\u5c31\u5207\u6362\u5230\u65b0\u7684\u914d\u7f6e\u4e0a\u3002\u5171\u540c\u4e00\u81f4\u662f\u8001\u914d\u7f6e\u548c\u65b0\u914d\u7f6e\u7684\u7ed3\u5408\uff1a \u65e5\u5fd7\u6761\u76ee\u88ab\u590d\u5236\u7ed9\u96c6\u7fa4\u4e2d\u65b0\u3001\u8001\u914d\u7f6e\u7684\u6240\u6709\u670d\u52a1\u5668\u3002 \u65b0\u3001\u65e7\u914d\u7f6e\u7684\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u6210\u4e3a\u9886\u5bfc\u4eba\u3002 \u8fbe\u6210\u4e00\u81f4\uff08\u9488\u5bf9\u9009\u4e3e\u548c\u63d0\u4ea4\uff09\u9700\u8981\u5206\u522b\u5728\u4e24\u79cd\u914d\u7f6e\u4e0a\u83b7\u5f97\u5927\u591a\u6570\u7684\u652f\u6301\u3002 \u5171\u540c\u4e00\u81f4\u5141\u8bb8\u72ec\u7acb\u7684\u670d\u52a1\u5668\u5728\u4e0d\u5f71\u54cd\u5b89\u5168\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u8fdb\u884c\u914d\u7f6e\u8f6c\u6362\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u5171\u540c\u4e00\u81f4\u53ef\u4ee5\u8ba9\u96c6\u7fa4\u5728\u914d\u7f6e\u8f6c\u6362\u7684\u8fc7\u7a0b\u4e2d\u4f9d\u7136\u54cd\u5e94\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002 \u96c6\u7fa4\u914d\u7f6e\u5728\u590d\u5236\u65e5\u5fd7\u4e2d\u4ee5\u7279\u6b8a\u7684\u65e5\u5fd7\u6761\u76ee\u6765\u5b58\u50a8\u548c\u901a\u4fe1\uff1b\u56fe 11 \u5c55\u793a\u4e86\u914d\u7f6e\u8f6c\u6362\u7684\u8fc7\u7a0b\u3002\u5f53\u4e00\u4e2a\u9886\u5bfc\u4eba\u63a5\u6536\u5230\u4e00\u4e2a\u6539\u53d8\u914d\u7f6e\u4ece C-old \u5230 C-new \u7684\u8bf7\u6c42\uff0c\u4ed6\u4f1a\u4e3a\u4e86\u5171\u540c\u4e00\u81f4\u5b58\u50a8\u914d\u7f6e\uff08\u56fe\u4e2d\u7684 C-old,new\uff09\uff0c\u4ee5\u524d\u9762\u63cf\u8ff0\u7684\u65e5\u5fd7\u6761\u76ee\u548c\u526f\u672c\u7684\u5f62\u5f0f\u3002\u4e00\u65e6\u4e00\u4e2a\u670d\u52a1\u5668\u5c06\u65b0\u7684\u914d\u7f6e\u65e5\u5fd7\u6761\u76ee\u589e\u52a0\u5230\u5b83\u7684\u65e5\u5fd7\u4e2d\uff0c\u4ed6\u5c31\u4f1a\u7528\u8fd9\u4e2a\u914d\u7f6e\u6765\u505a\u51fa\u672a\u6765\u6240\u6709\u7684\u51b3\u5b9a\uff08\u670d\u52a1\u5668\u603b\u662f\u4f7f\u7528\u6700\u65b0\u7684\u914d\u7f6e\uff0c\u65e0\u8bba\u4ed6\u662f\u5426\u5df2\u7ecf\u88ab\u63d0\u4ea4\uff09\u3002\u8fd9\u610f\u5473\u7740\u9886\u5bfc\u4eba\u8981\u4f7f\u7528 C-old,new \u7684\u89c4\u5219\u6765\u51b3\u5b9a\u65e5\u5fd7\u6761\u76ee C-old,new \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u88ab\u63d0\u4ea4\u3002\u5982\u679c\u9886\u5bfc\u4eba\u5d29\u6e83\u4e86\uff0c\u88ab\u9009\u51fa\u6765\u7684\u65b0\u9886\u5bfc\u4eba\u53ef\u80fd\u662f\u4f7f\u7528 C-old \u914d\u7f6e\u4e5f\u53ef\u80fd\u662f C-old,new \u914d\u7f6e\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8d62\u5f97\u9009\u4e3e\u7684\u5019\u9009\u4eba\u662f\u5426\u5df2\u7ecf\u63a5\u6536\u5230\u4e86 C-old,new \u914d\u7f6e\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c C-new \u914d\u7f6e\u5728\u8fd9\u4e00\u65f6\u671f\u90fd\u4e0d\u4f1a\u5355\u65b9\u9762\u7684\u505a\u51fa\u51b3\u5b9a\u3002 \u4e00\u65e6 C-old,new \u88ab\u63d0\u4ea4\uff0c\u90a3\u4e48\u65e0\u8bba\u662f C-old \u8fd8\u662f C-new\uff0c\u5982\u679c\u4e0d\u7ecf\u8fc7\u53e6\u4e00\u4e2a\u914d\u7f6e\u7684\u5141\u8bb8\u90fd\u4e0d\u80fd\u5355\u72ec\u505a\u51fa\u51b3\u5b9a\uff0c\u5e76\u4e14\u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027\u4fdd\u8bc1\u4e86\u53ea\u6709\u62e5\u6709 C-old,new \u65e5\u5fd7\u6761\u76ee\u7684\u670d\u52a1\u5668\u624d\u6709\u53ef\u80fd\u88ab\u9009\u4e3e\u4e3a\u9886\u5bfc\u4eba\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u9886\u5bfc\u4eba\u521b\u5efa\u4e00\u6761\u5173\u4e8e C-new \u914d\u7f6e\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u590d\u5236\u7ed9\u96c6\u7fa4\u5c31\u662f\u5b89\u5168\u7684\u4e86\u3002\u518d\u8005\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u5728\u89c1\u5230\u65b0\u7684\u914d\u7f6e\u7684\u65f6\u5019\u5c31\u4f1a\u7acb\u5373\u751f\u6548\u3002\u5f53\u65b0\u7684\u914d\u7f6e\u5728 C-new \u7684\u89c4\u5219\u4e0b\u88ab\u63d0\u4ea4\uff0c\u65e7\u7684\u914d\u7f6e\u5c31\u53d8\u5f97\u65e0\u5173\u7d27\u8981\uff0c\u540c\u65f6\u4e0d\u4f7f\u7528\u65b0\u7684\u914d\u7f6e\u7684\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u88ab\u5173\u95ed\u4e86\u3002\u5982\u56fe 11\uff0cC-old \u548c C-new \u6ca1\u6709\u4efb\u4f55\u673a\u4f1a\u540c\u65f6\u505a\u51fa\u5355\u65b9\u9762\u7684\u51b3\u5b9a\uff1b\u8fd9\u4fdd\u8bc1\u4e86\u5b89\u5168\u6027\u3002 \u56fe 11\uff1a\u4e00\u4e2a\u914d\u7f6e\u5207\u6362\u7684\u65f6\u95f4\u7ebf\u3002\u865a\u7ebf\u8868\u793a\u5df2\u7ecf\u88ab\u521b\u5efa\u4f46\u662f\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u7684\u914d\u7f6e\u65e5\u5fd7\u6761\u76ee\uff0c\u5b9e\u7ebf\u8868\u793a\u6700\u540e\u88ab\u63d0\u4ea4\u7684\u914d\u7f6e\u65e5\u5fd7\u6761\u76ee\u3002\u9886\u5bfc\u4eba\u9996\u5148\u521b\u5efa\u4e86 C-old,new \u7684\u914d\u7f6e\u6761\u76ee\u5728\u81ea\u5df1\u7684\u65e5\u5fd7\u4e2d\uff0c\u5e76\u63d0\u4ea4\u5230 C-old,new \u4e2d\uff08C-old \u7684\u5927\u591a\u6570\u548c C-new \u7684\u5927\u591a\u6570\uff09\u3002\u7136\u540e\u4ed6\u521b\u5efa C-new \u6761\u76ee\u5e76\u63d0\u4ea4\u5230 C-new \u4e2d\u7684\u5927\u591a\u6570\u3002\u8fd9\u6837\u5c31\u4e0d\u5b58\u5728 C-new \u548c C-old \u53ef\u4ee5\u540c\u65f6\u505a\u51fa\u51b3\u5b9a\u7684\u65f6\u95f4\u70b9\u3002 \u5728\u5173\u4e8e\u91cd\u65b0\u914d\u7f6e\u8fd8\u6709\u4e09\u4e2a\u95ee\u9898\u9700\u8981\u63d0\u51fa\u3002\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u65b0\u7684\u670d\u52a1\u5668\u53ef\u80fd\u521d\u59cb\u5316\u6ca1\u6709\u5b58\u50a8\u4efb\u4f55\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u5f53\u8fd9\u4e9b\u670d\u52a1\u5668\u4ee5\u8fd9\u79cd\u72b6\u6001\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\uff0c\u90a3\u4e48\u4ed6\u4eec\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u6765\u66f4\u65b0\u8ffd\u8d76\uff0c\u8fd9\u65f6\u8fd8\u4e0d\u80fd\u63d0\u4ea4\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u53ef\u7528\u6027\u7684\u95f4\u9694\u65f6\u95f4\uff0cRaft \u5728\u914d\u7f6e\u66f4\u65b0\u4e4b\u524d\u4f7f\u7528\u4e86\u4e00\u79cd\u989d\u5916\u7684\u9636\u6bb5\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u65b0\u7684\u670d\u52a1\u5668\u4ee5\u6ca1\u6709\u6295\u7968\u6743\u8eab\u4efd\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\u6765\uff08\u9886\u5bfc\u4eba\u590d\u5236\u65e5\u5fd7\u7ed9\u4ed6\u4eec\uff0c\u4f46\u662f\u4e0d\u8003\u8651\u4ed6\u4eec\u662f\u5927\u591a\u6570\uff09\u3002\u4e00\u65e6\u65b0\u7684\u670d\u52a1\u5668\u8ffd\u8d76\u4e0a\u4e86\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6\u673a\u5668\uff0c\u91cd\u65b0\u914d\u7f6e\u53ef\u4ee5\u50cf\u4e0a\u9762\u63cf\u8ff0\u7684\u4e00\u6837\u5904\u7406\u3002 \u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u96c6\u7fa4\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u4e0d\u662f\u65b0\u914d\u7f6e\u7684\u4e00\u5458\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9886\u5bfc\u4eba\u5c31\u4f1a\u5728\u63d0\u4ea4\u4e86 C-new \u65e5\u5fd7\u4e4b\u540e\u9000\u4f4d\uff08\u56de\u5230\u8ddf\u968f\u8005\u72b6\u6001\uff09\u3002\u8fd9\u610f\u5473\u7740\u6709\u8fd9\u6837\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u9886\u5bfc\u4eba\u7ba1\u7406\u7740\u96c6\u7fa4\uff0c\u4f46\u662f\u4e0d\u5305\u62ec\u4ed6\u81ea\u5df1\uff1b\u4ed6\u590d\u5236\u65e5\u5fd7\u4f46\u662f\u4e0d\u628a\u4ed6\u81ea\u5df1\u7b97\u4f5c\u662f\u5927\u591a\u6570\u4e4b\u4e00\u3002\u5f53 C-new \u88ab\u63d0\u4ea4\u65f6\uff0c\u4f1a\u53d1\u751f\u9886\u5bfc\u4eba\u8fc7\u6e21\uff0c\u56e0\u4e3a\u8fd9\u65f6\u662f\u6700\u65e9\u65b0\u7684\u914d\u7f6e\u53ef\u4ee5\u72ec\u7acb\u5de5\u4f5c\u7684\u65f6\u95f4\u70b9\uff08\u5c06\u603b\u662f\u80fd\u591f\u5728 C-new \u914d\u7f6e\u4e0b\u9009\u51fa\u65b0\u7684\u9886\u5bfc\u4eba\uff09\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u53ef\u80fd\u53ea\u80fd\u4ece C-old \u4e2d\u9009\u51fa\u9886\u5bfc\u4eba\u3002 \u7b2c\u4e09\u4e2a\u95ee\u9898\u662f\uff0c\u79fb\u9664\u4e0d\u5728 C-new \u4e2d\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u6270\u4e71\u96c6\u7fa4\u3002\u8fd9\u4e9b\u670d\u52a1\u5668\u5c06\u4e0d\u4f1a\u518d\u63a5\u6536\u5230\u5fc3\u8df3\uff0c\u6240\u4ee5\u5f53\u9009\u4e3e\u8d85\u65f6\uff0c\u4ed6\u4eec\u5c31\u4f1a\u8fdb\u884c\u65b0\u7684\u9009\u4e3e\u8fc7\u7a0b\u3002\u4ed6\u4eec\u4f1a\u53d1\u9001\u62e5\u6709\u65b0\u7684\u4efb\u671f\u53f7\u7684\u8bf7\u6c42\u6295\u7968 RPCs\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5f53\u524d\u7684\u9886\u5bfc\u4eba\u56de\u9000\u6210\u8ddf\u968f\u8005\u72b6\u6001\u3002\u65b0\u7684\u9886\u5bfc\u4eba\u6700\u7ec8\u4f1a\u88ab\u9009\u51fa\u6765\uff0c\u4f46\u662f\u88ab\u79fb\u9664\u7684\u670d\u52a1\u5668\u5c06\u4f1a\u518d\u6b21\u8d85\u65f6\uff0c\u7136\u540e\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u518d\u6b21\u91cd\u590d\uff0c\u5bfc\u81f4\u6574\u4f53\u53ef\u7528\u6027\u5927\u5e45\u964d\u4f4e\u3002 \u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f53\u670d\u52a1\u5668\u786e\u8ba4\u5f53\u524d\u9886\u5bfc\u4eba\u5b58\u5728\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u5ffd\u7565\u8bf7\u6c42\u6295\u7968 RPCs\u3002\u7279\u522b\u7684\uff0c\u5f53\u670d\u52a1\u5668\u5728\u5f53\u524d\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u5185\u6536\u5230\u4e00\u4e2a\u8bf7\u6c42\u6295\u7968 RPC\uff0c\u4ed6\u4e0d\u4f1a\u66f4\u65b0\u5f53\u524d\u7684\u4efb\u671f\u53f7\u6216\u8005\u6295\u51fa\u9009\u7968\u3002\u8fd9\u4e0d\u4f1a\u5f71\u54cd\u6b63\u5e38\u7684\u9009\u4e3e\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u5728\u5f00\u59cb\u4e00\u6b21\u9009\u4e3e\u4e4b\u524d\uff0c\u81f3\u5c11\u7b49\u5f85\u4e00\u4e2a\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u3002\u7136\u800c\uff0c\u8fd9\u6709\u5229\u4e8e\u907f\u514d\u88ab\u79fb\u9664\u7684\u670d\u52a1\u5668\u6270\u4e71\uff1a\u5982\u679c\u9886\u5bfc\u4eba\u80fd\u591f\u53d1\u9001\u5fc3\u8df3\u7ed9\u96c6\u7fa4\uff0c\u90a3\u4e48\u4ed6\u5c31\u4e0d\u4f1a\u88ab\u66f4\u5927\u7684\u4efb\u671f\u53f7\u5e9f\u9edc\u3002","title":"6 \u96c6\u7fa4\u6210\u5458\u53d8\u5316"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#7-\u65e5\u5fd7\u538b\u7f29","text":"Raft \u7684\u65e5\u5fd7\u5728\u6b63\u5e38\u64cd\u4f5c\u4e2d\u4e0d\u65ad\u5730\u589e\u957f\uff0c\u4f46\u662f\u5728\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\uff0c\u65e5\u5fd7\u4e0d\u80fd\u65e0\u9650\u5236\u5730\u589e\u957f\u3002\u968f\u7740\u65e5\u5fd7\u4e0d\u65ad\u589e\u957f\uff0c\u4ed6\u4f1a\u5360\u7528\u8d8a\u6765\u8d8a\u591a\u7684\u7a7a\u95f4\uff0c\u82b1\u8d39\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u95f4\u6765\u91cd\u7f6e\u3002\u5982\u679c\u6ca1\u6709\u4e00\u5b9a\u7684\u673a\u5236\u53bb\u6e05\u9664\u65e5\u5fd7\u91cc\u79ef\u7d2f\u7684\u9648\u65e7\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u4f1a\u5e26\u6765\u53ef\u7528\u6027\u95ee\u9898\u3002 \u5feb\u7167\u662f\u6700\u7b80\u5355\u7684\u538b\u7f29\u65b9\u6cd5\u3002\u5728\u5feb\u7167\u7cfb\u7edf\u4e2d\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u72b6\u6001\u90fd\u4ee5\u5feb\u7167\u7684\u5f62\u5f0f\u5199\u5165\u5230\u7a33\u5b9a\u7684\u6301\u4e45\u5316\u5b58\u50a8\u4e2d\uff0c\u7136\u540e\u5230\u90a3\u4e2a\u65f6\u95f4\u70b9\u4e4b\u524d\u7684\u65e5\u5fd7\u5168\u90e8\u4e22\u5f03\u3002\u5feb\u7167\u6280\u672f\u88ab\u4f7f\u7528\u5728 Chubby \u548c ZooKeeper \u4e2d\uff0c\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4f1a\u4ecb\u7ecd Raft \u4e2d\u7684\u5feb\u7167\u6280\u672f\u3002 \u589e\u91cf\u538b\u7f29\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u65e5\u5fd7\u6e05\u7406\u6216\u8005\u65e5\u5fd7\u7ed3\u6784\u5408\u5e76\u6811\uff0c\u90fd\u662f\u53ef\u884c\u7684\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6bcf\u6b21\u53ea\u5bf9\u4e00\u5c0f\u90e8\u5206\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u5206\u6563\u4e86\u538b\u7f29\u7684\u8d1f\u8f7d\u538b\u529b\u3002\u9996\u5148\uff0c\u4ed6\u4eec\u5148\u9009\u62e9\u4e00\u4e2a\u5df2\u7ecf\u79ef\u7d2f\u7684\u5927\u91cf\u5df2\u7ecf\u88ab\u5220\u9664\u6216\u8005\u88ab\u8986\u76d6\u5bf9\u8c61\u7684\u533a\u57df\uff0c\u7136\u540e\u91cd\u5199\u90a3\u4e2a\u533a\u57df\u8fd8\u6d3b\u8dc3\u7684\u5bf9\u8c61\uff0c\u4e4b\u540e\u91ca\u653e\u90a3\u4e2a\u533a\u57df\u3002\u548c\u7b80\u5355\u64cd\u4f5c\u6574\u4e2a\u6570\u636e\u96c6\u5408\u7684\u5feb\u7167\u76f8\u6bd4\uff0c\u9700\u8981\u589e\u52a0\u590d\u6742\u7684\u673a\u5236\u6765\u5b9e\u73b0\u3002\u72b6\u6001\u673a\u53ef\u4ee5\u5b9e\u73b0 LSM tree \u4f7f\u7528\u548c\u5feb\u7167\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u4f46\u662f\u65e5\u5fd7\u6e05\u9664\u65b9\u6cd5\u5c31\u9700\u8981\u4fee\u6539 Raft \u4e86\u3002 \u56fe 12\uff1a\u4e00\u4e2a\u670d\u52a1\u5668\u7528\u65b0\u7684\u5feb\u7167\u66ff\u6362\u4e86\u4ece 1 \u5230 5 \u7684\u6761\u76ee\uff0c\u5feb\u7167\u503c\u5b58\u50a8\u4e86\u5f53\u524d\u7684\u72b6\u6001\u3002\u5feb\u7167\u4e2d\u5305\u542b\u4e86\u6700\u540e\u7684\u7d22\u5f15\u4f4d\u7f6e\u548c\u4efb\u671f\u53f7\u3002 \u56fe 12 \u5c55\u793a\u4e86 Raft \u4e2d\u5feb\u7167\u7684\u57fa\u7840\u601d\u60f3\u3002\u6bcf\u4e2a\u670d\u52a1\u5668\u72ec\u7acb\u5730\u521b\u5efa\u5feb\u7167\uff0c\u53ea\u5305\u62ec\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u3002\u4e3b\u8981\u7684\u5de5\u4f5c\u5305\u62ec\u5c06\u72b6\u6001\u673a\u7684\u72b6\u6001\u5199\u5165\u5230\u5feb\u7167\u4e2d\u3002Raft \u4e5f\u5305\u542b\u4e00\u4e9b\u5c11\u91cf\u7684\u5143\u6570\u636e\u5230\u5feb\u7167\u4e2d\uff1a**\u6700\u540e\u88ab\u5305\u542b\u7d22\u5f15**\u6307\u7684\u662f\u88ab\u5feb\u7167\u53d6\u4ee3\u7684\u6700\u540e\u7684\u6761\u76ee\u5728\u65e5\u5fd7\u4e2d\u7684\u7d22\u5f15\u503c\uff08\u72b6\u6001\u673a\u6700\u540e\u5e94\u7528\u7684\u65e5\u5fd7\uff09\uff0c**\u6700\u540e\u88ab\u5305\u542b\u7684\u4efb\u671f**\u6307\u7684\u662f\u8be5\u6761\u76ee\u7684\u4efb\u671f\u53f7\u3002\u4fdd\u7559\u8fd9\u4e9b\u6570\u636e\u662f\u4e3a\u4e86\u652f\u6301\u5feb\u7167\u540e\u7d27\u63a5\u7740\u7684\u7b2c\u4e00\u4e2a\u6761\u76ee\u7684\u9644\u52a0\u65e5\u5fd7\u8bf7\u6c42\u65f6\u7684\u4e00\u81f4\u6027\u68c0\u67e5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6761\u76ee\u9700\u8981\u524d\u4e00\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\u3002\u4e3a\u4e86\u652f\u6301\u96c6\u7fa4\u6210\u5458\u66f4\u65b0\uff08\u7b2c 6 \u8282\uff09\uff0c\u5feb\u7167\u4e2d\u4e5f\u5c06\u6700\u540e\u7684\u4e00\u6b21\u914d\u7f6e\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u6761\u76ee\u5b58\u4e0b\u6765\u3002\u4e00\u65e6\u670d\u52a1\u5668\u5b8c\u6210\u4e00\u6b21\u5feb\u7167\uff0c\u4ed6\u5c31\u53ef\u4ee5\u5220\u9664\u6700\u540e\u7d22\u5f15\u4f4d\u7f6e\u4e4b\u524d\u7684\u6240\u6709\u65e5\u5fd7\u548c\u5feb\u7167\u4e86\u3002 \u5c3d\u7ba1\u901a\u5e38\u670d\u52a1\u5668\u90fd\u662f\u72ec\u7acb\u5730\u521b\u5efa\u5feb\u7167\uff0c\u4f46\u662f\u9886\u5bfc\u4eba\u5fc5\u987b\u5076\u5c14\u7684\u53d1\u9001\u5feb\u7167\u7ed9\u4e00\u4e9b\u843d\u540e\u7684\u8ddf\u968f\u8005\u3002\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u5f53\u9886\u5bfc\u4eba\u5df2\u7ecf\u4e22\u5f03\u4e86\u4e0b\u4e00\u6761\u9700\u8981\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u7684\u65e5\u5fd7\u6761\u76ee\u7684\u65f6\u5019\u3002\u5e78\u8fd0\u7684\u662f\u8fd9\u79cd\u60c5\u51b5\u4e0d\u662f\u5e38\u89c4\u64cd\u4f5c\uff1a\u4e00\u4e2a\u4e0e\u9886\u5bfc\u4eba\u4fdd\u6301\u540c\u6b65\u7684\u8ddf\u968f\u8005\u901a\u5e38\u90fd\u4f1a\u6709\u8fd9\u4e2a\u6761\u76ee\u3002\u7136\u800c\u4e00\u4e2a\u8fd0\u884c\u975e\u5e38\u7f13\u6162\u7684\u8ddf\u968f\u8005\u6216\u8005\u65b0\u52a0\u5165\u96c6\u7fa4\u7684\u670d\u52a1\u5668\uff08\u7b2c 6 \u8282\uff09\u5c06\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u6761\u76ee\u3002\u8fd9\u65f6\u8ba9\u8fd9\u4e2a\u8ddf\u968f\u8005\u66f4\u65b0\u5230\u6700\u65b0\u7684\u72b6\u6001\u7684\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7\u7f51\u7edc\u628a\u5feb\u7167\u53d1\u9001\u7ed9\u4ed6\u4eec\u3002 \u5b89\u88c5\u5feb\u7167 RPC \uff1a \u7531\u9886\u5bfc\u4eba\u8c03\u7528\u4ee5\u5c06\u5feb\u7167\u7684\u5206\u5757\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\u3002\u9886\u5bfc\u4eba\u603b\u662f\u6309\u987a\u5e8f\u53d1\u9001\u5206\u5757\u3002 \u53c2\u6570 \u89e3\u91ca term \u9886\u5bfc\u4eba\u7684\u4efb\u671f\u53f7 leaderId \u9886\u5bfc\u4eba\u7684 ID\uff0c\u4ee5\u4fbf\u4e8e\u8ddf\u968f\u8005\u91cd\u5b9a\u5411\u8bf7\u6c42 lastIncludedIndex \u5feb\u7167\u4e2d\u5305\u542b\u7684\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u7d22\u5f15\u503c lastIncludedTerm \u5feb\u7167\u4e2d\u5305\u542b\u7684\u6700\u540e\u65e5\u5fd7\u6761\u76ee\u7684\u4efb\u671f\u53f7 offset \u5206\u5757\u5728\u5feb\u7167\u4e2d\u7684\u5b57\u8282\u504f\u79fb\u91cf data[] \u4ece\u504f\u79fb\u91cf\u5f00\u59cb\u7684\u5feb\u7167\u5206\u5757\u7684\u539f\u59cb\u5b57\u8282 done \u5982\u679c\u8fd9\u662f\u6700\u540e\u4e00\u4e2a\u5206\u5757\u5219\u4e3a true \u7ed3\u679c \u89e3\u91ca term \u5f53\u524d\u4efb\u671f\u53f7\uff08currentTerm\uff09\uff0c\u4fbf\u4e8e\u9886\u5bfc\u4eba\u66f4\u65b0\u81ea\u5df1 \u63a5\u6536\u8005\u5b9e\u73b0 \uff1a \u5982\u679c term < currentTerm \u5c31\u7acb\u5373\u56de\u590d \u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u5206\u5757\uff08offset \u4e3a 0\uff09\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5feb\u7167 \u5728\u6307\u5b9a\u504f\u79fb\u91cf\u5199\u5165\u6570\u636e \u5982\u679c done \u662f false\uff0c\u5219\u7ee7\u7eed\u7b49\u5f85\u66f4\u591a\u7684\u6570\u636e \u4fdd\u5b58\u5feb\u7167\u6587\u4ef6\uff0c\u4e22\u5f03\u5177\u6709\u8f83\u5c0f\u7d22\u5f15\u7684\u4efb\u4f55\u73b0\u6709\u6216\u90e8\u5206\u5feb\u7167 \u5982\u679c\u73b0\u5b58\u7684\u65e5\u5fd7\u6761\u76ee\u4e0e\u5feb\u7167\u4e2d\u6700\u540e\u5305\u542b\u7684\u65e5\u5fd7\u6761\u76ee\u5177\u6709\u76f8\u540c\u7684\u7d22\u5f15\u503c\u548c\u4efb\u671f\u53f7\uff0c\u5219\u4fdd\u7559\u5176\u540e\u7684\u65e5\u5fd7\u6761\u76ee\u5e76\u8fdb\u884c\u56de\u590d \u4e22\u5f03\u6574\u4e2a\u65e5\u5fd7 \u4f7f\u7528\u5feb\u7167\u91cd\u7f6e\u72b6\u6001\u673a\uff08\u5e76\u52a0\u8f7d\u5feb\u7167\u7684\u96c6\u7fa4\u914d\u7f6e\uff09 \u56fe 13\uff1a\u4e00\u4e2a\u5173\u4e8e\u5b89\u88c5\u5feb\u7167\u7684\u7b80\u8981\u6982\u8ff0\u3002\u4e3a\u4e86\u4fbf\u4e8e\u4f20\u8f93\uff0c\u5feb\u7167\u90fd\u662f\u88ab\u5206\u6210\u5206\u5757\u7684\uff1b\u6bcf\u4e2a\u5206\u5757\u90fd\u7ed9\u4e86\u8ddf\u968f\u8005\u751f\u547d\u7684\u8ff9\u8c61\uff0c\u6240\u4ee5\u8ddf\u968f\u8005\u53ef\u4ee5\u91cd\u7f6e\u9009\u4e3e\u8d85\u65f6\u8ba1\u65f6\u5668\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9886\u5bfc\u4eba\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u5b89\u88c5\u5feb\u7167\u7684\u65b0\u7684 RPC \u6765\u53d1\u9001\u5feb\u7167\u7ed9\u592a\u843d\u540e\u7684\u8ddf\u968f\u8005\uff1b\u89c1\u56fe 13\u3002\u5f53\u8ddf\u968f\u8005\u901a\u8fc7\u8fd9\u79cd RPC \u63a5\u6536\u5230\u5feb\u7167\u65f6\uff0c\u4ed6\u5fc5\u987b\u81ea\u5df1\u51b3\u5b9a\u5bf9\u4e8e\u5df2\u7ecf\u5b58\u5728\u7684\u65e5\u5fd7\u8be5\u5982\u4f55\u5904\u7406\u3002\u901a\u5e38\u5feb\u7167\u4f1a\u5305\u542b\u6ca1\u6709\u5728\u63a5\u6536\u8005\u65e5\u5fd7\u4e2d\u5b58\u5728\u7684\u4fe1\u606f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8ddf\u968f\u8005\u4e22\u5f03\u5176\u6574\u4e2a\u65e5\u5fd7\uff1b\u5b83\u5168\u90e8\u88ab\u5feb\u7167\u53d6\u4ee3\uff0c\u5e76\u4e14\u53ef\u80fd\u5305\u542b\u4e0e\u5feb\u7167\u51b2\u7a81\u7684\u672a\u63d0\u4ea4\u6761\u76ee\u3002\u5982\u679c\u63a5\u6536\u5230\u7684\u5feb\u7167\u662f\u81ea\u5df1\u65e5\u5fd7\u7684\u524d\u9762\u90e8\u5206\uff08\u7531\u4e8e\u7f51\u7edc\u91cd\u4f20\u6216\u8005\u9519\u8bef\uff09\uff0c\u90a3\u4e48\u88ab\u5feb\u7167\u5305\u542b\u7684\u6761\u76ee\u5c06\u4f1a\u88ab\u5168\u90e8\u5220\u9664\uff0c\u4f46\u662f\u5feb\u7167\u540e\u9762\u7684\u6761\u76ee\u4ecd\u7136\u6709\u6548\uff0c\u5fc5\u987b\u4fdd\u7559\u3002 \u8fd9\u79cd\u5feb\u7167\u7684\u65b9\u5f0f\u80cc\u79bb\u4e86 Raft \u7684\u5f3a\u9886\u5bfc\u4eba\u539f\u5219\uff0c\u56e0\u4e3a\u8ddf\u968f\u8005\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053\u9886\u5bfc\u4eba\u60c5\u51b5\u4e0b\u521b\u5efa\u5feb\u7167\u3002\u4f46\u662f\u6211\u4eec\u8ba4\u4e3a\u8fd9\u79cd\u80cc\u79bb\u662f\u503c\u5f97\u7684\u3002\u9886\u5bfc\u4eba\u7684\u5b58\u5728\uff0c\u662f\u4e3a\u4e86\u89e3\u51b3\u5728\u8fbe\u6210\u4e00\u81f4\u6027\u7684\u65f6\u5019\u7684\u51b2\u7a81\uff0c\u4f46\u662f\u5728\u521b\u5efa\u5feb\u7167\u7684\u65f6\u5019\uff0c\u4e00\u81f4\u6027\u5df2\u7ecf\u8fbe\u6210\uff0c\u8fd9\u65f6\u4e0d\u5b58\u5728\u51b2\u7a81\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u9886\u5bfc\u4eba\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u6570\u636e\u4f9d\u7136\u662f\u4ece\u9886\u5bfc\u4eba\u4f20\u7ed9\u8ddf\u968f\u8005\uff0c\u53ea\u662f\u8ddf\u968f\u8005\u53ef\u4ee5\u91cd\u65b0\u7ec4\u7ec7\u4ed6\u4eec\u7684\u6570\u636e\u4e86\u3002 \u6211\u4eec\u8003\u8651\u8fc7\u4e00\u79cd\u66ff\u4ee3\u7684\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u5feb\u7167\u65b9\u6848\uff0c\u5373\u53ea\u6709\u9886\u5bfc\u4eba\u521b\u5efa\u5feb\u7167\uff0c\u7136\u540e\u53d1\u9001\u7ed9\u6240\u6709\u7684\u8ddf\u968f\u8005\u3002\u4f46\u662f\u8fd9\u6837\u505a\u6709\u4e24\u4e2a\u7f3a\u70b9\u3002\u7b2c\u4e00\uff0c\u53d1\u9001\u5feb\u7167\u4f1a\u6d6a\u8d39\u7f51\u7edc\u5e26\u5bbd\u5e76\u4e14\u5ef6\u7f13\u4e86\u5feb\u7167\u5904\u7406\u7684\u65f6\u95f4\u3002\u6bcf\u4e2a\u8ddf\u968f\u8005\u90fd\u5df2\u7ecf\u62e5\u6709\u4e86\u6240\u6709\u4ea7\u751f\u5feb\u7167\u9700\u8981\u7684\u4fe1\u606f\uff0c\u800c\u4e14\u5f88\u663e\u7136\uff0c\u81ea\u5df1\u4ece\u672c\u5730\u7684\u72b6\u6001\u4e2d\u521b\u5efa\u5feb\u7167\u6bd4\u901a\u8fc7\u7f51\u7edc\u63a5\u6536\u522b\u4eba\u53d1\u6765\u7684\u8981\u7ecf\u6d4e\u3002\u7b2c\u4e8c\uff0c\u9886\u5bfc\u4eba\u7684\u5b9e\u73b0\u4f1a\u66f4\u52a0\u590d\u6742\u3002\u4f8b\u5982\uff0c\u9886\u5bfc\u4eba\u9700\u8981\u53d1\u9001\u5feb\u7167\u7684\u540c\u65f6\u5e76\u884c\u7684\u5c06\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u53d1\u9001\u7ed9\u8ddf\u968f\u8005\uff0c\u8fd9\u6837\u624d\u4e0d\u4f1a\u963b\u585e\u65b0\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002 \u8fd8\u6709\u4e24\u4e2a\u95ee\u9898\u5f71\u54cd\u4e86\u5feb\u7167\u7684\u6027\u80fd\u3002\u9996\u5148\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u5e94\u8be5\u521b\u5efa\u5feb\u7167\u3002\u5982\u679c\u5feb\u7167\u521b\u5efa\u7684\u8fc7\u4e8e\u9891\u7e41\uff0c\u90a3\u4e48\u5c31\u4f1a\u6d6a\u8d39\u5927\u91cf\u7684\u78c1\u76d8\u5e26\u5bbd\u548c\u5176\u4ed6\u8d44\u6e90\uff1b\u5982\u679c\u521b\u5efa\u5feb\u7167\u9891\u7387\u592a\u4f4e\uff0c\u4ed6\u5c31\u8981\u627f\u53d7\u8017\u5c3d\u5b58\u50a8\u5bb9\u91cf\u7684\u98ce\u9669\uff0c\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u4ece\u65e5\u5fd7\u91cd\u5efa\u7684\u65f6\u95f4\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u7b56\u7565\u5c31\u662f\u5f53\u65e5\u5fd7\u5927\u5c0f\u8fbe\u5230\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u65f6\u5019\u5c31\u521b\u5efa\u4e00\u6b21\u5feb\u7167\u3002\u5982\u679c\u8fd9\u4e2a\u9608\u503c\u8bbe\u7f6e\u7684\u663e\u8457\u5927\u4e8e\u671f\u671b\u7684\u5feb\u7167\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u5feb\u7167\u5bf9\u78c1\u76d8\u538b\u529b\u7684\u5f71\u54cd\u5c31\u4f1a\u5f88\u5c0f\u4e86\u3002 \u7b2c\u4e8c\u4e2a\u5f71\u54cd\u6027\u80fd\u7684\u95ee\u9898\u5c31\u662f\u5199\u5165\u5feb\u7167\u9700\u8981\u82b1\u8d39\u663e\u8457\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u5e76\u4e14\u6211\u4eec\u8fd8\u4e0d\u5e0c\u671b\u5f71\u54cd\u5230\u6b63\u5e38\u64cd\u4f5c\u3002\u89e3\u51b3\u65b9\u6848\u662f\u901a\u8fc7\u5199\u65f6\u590d\u5236\u7684\u6280\u672f\uff0c\u8fd9\u6837\u65b0\u7684\u66f4\u65b0\u5c31\u53ef\u4ee5\u88ab\u63a5\u6536\u800c\u4e0d\u5f71\u54cd\u5230\u5feb\u7167\u3002\u4f8b\u5982\uff0c\u5177\u6709\u51fd\u6570\u5f0f\u6570\u636e\u7ed3\u6784\u7684\u72b6\u6001\u673a\u5929\u7136\u652f\u6301\u8fd9\u6837\u7684\u529f\u80fd\u3002\u53e6\u5916\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5199\u65f6\u590d\u5236\u6280\u672f\u7684\u652f\u6301\uff08\u5982 Linux \u4e0a\u7684 fork\uff09\u53ef\u4ee5\u88ab\u7528\u6765\u521b\u5efa\u5b8c\u6574\u7684\u72b6\u6001\u673a\u7684\u5185\u5b58\u5feb\u7167\uff08\u6211\u4eec\u7684\u5b9e\u73b0\u5c31\u662f\u8fd9\u6837\u7684\uff09\u3002","title":"7 \u65e5\u5fd7\u538b\u7f29"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#8-\u5ba2\u6237\u7aef\u4ea4\u4e92","text":"\u8fd9\u4e00\u8282\u5c06\u4ecb\u7ecd\u5ba2\u6237\u7aef\u662f\u5982\u4f55\u548c Raft \u8fdb\u884c\u4ea4\u4e92\u7684\uff0c\u5305\u62ec\u5ba2\u6237\u7aef\u5982\u4f55\u53d1\u73b0\u9886\u5bfc\u4eba\u548c Raft \u662f\u5982\u4f55\u652f\u6301\u7ebf\u6027\u5316\u8bed\u4e49\u7684\u3002\u8fd9\u4e9b\u95ee\u9898\u5bf9\u4e8e\u6240\u6709\u57fa\u4e8e\u4e00\u81f4\u6027\u7684\u7cfb\u7edf\u90fd\u5b58\u5728\uff0c\u5e76\u4e14 Raft \u7684\u89e3\u51b3\u65b9\u6848\u548c\u5176\u4ed6\u7684\u4e5f\u5dee\u4e0d\u591a\u3002 Raft \u4e2d\u7684\u5ba2\u6237\u7aef\u53d1\u9001\u6240\u6709\u8bf7\u6c42\u7ed9\u9886\u5bfc\u4eba\u3002\u5f53\u5ba2\u6237\u7aef\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4ed6\u4f1a\u968f\u673a\u6311\u9009\u4e00\u4e2a\u670d\u52a1\u5668\u8fdb\u884c\u901a\u4fe1\u3002\u5982\u679c\u5ba2\u6237\u7aef\u7b2c\u4e00\u6b21\u6311\u9009\u7684\u670d\u52a1\u5668\u4e0d\u662f\u9886\u5bfc\u4eba\uff0c\u90a3\u4e48\u90a3\u4e2a\u670d\u52a1\u5668\u4f1a\u62d2\u7edd\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5e76\u4e14\u63d0\u4f9b\u4ed6\u6700\u8fd1\u63a5\u6536\u5230\u7684\u9886\u5bfc\u4eba\u7684\u4fe1\u606f\uff08\u9644\u52a0\u6761\u76ee\u8bf7\u6c42\u5305\u542b\u4e86\u9886\u5bfc\u4eba\u7684\u7f51\u7edc\u5730\u5740\uff09\u3002\u5982\u679c\u9886\u5bfc\u4eba\u5df2\u7ecf\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u5c31\u4f1a\u8d85\u65f6\uff1b\u5ba2\u6237\u7aef\u4e4b\u540e\u4f1a\u518d\u6b21\u91cd\u8bd5\u968f\u673a\u6311\u9009\u670d\u52a1\u5668\u7684\u8fc7\u7a0b\u3002 \u6211\u4eec Raft \u7684\u76ee\u6807\u662f\u8981\u5b9e\u73b0\u7ebf\u6027\u5316\u8bed\u4e49\uff08\u6bcf\u4e00\u6b21\u64cd\u4f5c\u7acb\u5373\u6267\u884c\uff0c\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u5728\u4ed6\u8c03\u7528\u548c\u6536\u5230\u56de\u590d\u4e4b\u95f4\uff09\u3002\u4f46\u662f\uff0c\u5982\u4e0a\u8ff0\uff0cRaft \u662f\u53ef\u80fd\u6267\u884c\u540c\u4e00\u6761\u547d\u4ee4\u591a\u6b21\u7684\uff1a\u4f8b\u5982\uff0c\u5982\u679c\u9886\u5bfc\u4eba\u5728\u63d0\u4ea4\u4e86\u8fd9\u6761\u65e5\u5fd7\u4e4b\u540e\uff0c\u4f46\u662f\u5728\u54cd\u5e94\u5ba2\u6237\u7aef\u4e4b\u524d\u5d29\u6e83\u4e86\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u4f1a\u548c\u65b0\u7684\u9886\u5bfc\u4eba\u91cd\u8bd5\u8fd9\u6761\u6307\u4ee4\uff0c\u5bfc\u81f4\u8fd9\u6761\u547d\u4ee4\u5c31\u88ab\u518d\u6b21\u6267\u884c\u4e86\u3002\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5ba2\u6237\u7aef\u5bf9\u4e8e\u6bcf\u4e00\u6761\u6307\u4ee4\u90fd\u8d4b\u4e88\u4e00\u4e2a\u552f\u4e00\u7684\u5e8f\u5217\u53f7\u3002\u7136\u540e\uff0c\u72b6\u6001\u673a\u8ddf\u8e2a\u6bcf\u6761\u6307\u4ee4\u6700\u65b0\u7684\u5e8f\u5217\u53f7\u548c\u76f8\u5e94\u7684\u54cd\u5e94\u3002\u5982\u679c\u63a5\u6536\u5230\u4e00\u6761\u6307\u4ee4\uff0c\u5b83\u7684\u5e8f\u5217\u53f7\u5df2\u7ecf\u88ab\u6267\u884c\u4e86\uff0c\u90a3\u4e48\u5c31\u7acb\u5373\u8fd4\u56de\u7ed3\u679c\uff0c\u800c\u4e0d\u91cd\u65b0\u6267\u884c\u6307\u4ee4\u3002 \u53ea\u8bfb\u7684\u64cd\u4f5c\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u800c\u4e0d\u9700\u8981\u8bb0\u5f55\u65e5\u5fd7\u3002\u4f46\u662f\uff0c\u5728\u4e0d\u589e\u52a0\u4efb\u4f55\u9650\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e48\u505a\u53ef\u80fd\u4f1a\u5192\u7740\u8fd4\u56de\u810f\u6570\u636e\u7684\u98ce\u9669\uff0c\u56e0\u4e3a\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u9886\u5bfc\u4eba\u53ef\u80fd\u5728\u4ed6\u4e0d\u77e5\u9053\u7684\u65f6\u5019\u5df2\u7ecf\u88ab\u65b0\u7684\u9886\u5bfc\u4eba\u53d6\u4ee3\u4e86\u3002\u7ebf\u6027\u5316\u7684\u8bfb\u64cd\u4f5c\u5fc5\u987b\u4e0d\u80fd\u8fd4\u56de\u810f\u6570\u636e\uff0cRaft \u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u989d\u5916\u7684\u63aa\u65bd\u5728\u4e0d\u4f7f\u7528\u65e5\u5fd7\u7684\u60c5\u51b5\u4e0b\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u3002\u9996\u5148\uff0c\u9886\u5bfc\u4eba\u5fc5\u987b\u6709\u5173\u4e8e\u88ab\u63d0\u4ea4\u65e5\u5fd7\u7684\u6700\u65b0\u4fe1\u606f\u3002\u9886\u5bfc\u4eba\u5b8c\u5168\u7279\u6027\u4fdd\u8bc1\u4e86\u9886\u5bfc\u4eba\u4e00\u5b9a\u62e5\u6709\u6240\u6709\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\uff0c\u4f46\u662f\u5728\u4ed6\u4efb\u671f\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u4ed6\u53ef\u80fd\u4e0d\u77e5\u9053\u54ea\u4e9b\u662f\u5df2\u7ecf\u88ab\u63d0\u4ea4\u7684\u3002\u4e3a\u4e86\u77e5\u9053\u8fd9\u4e9b\u4fe1\u606f\uff0c\u4ed6\u9700\u8981\u5728\u4ed6\u7684\u4efb\u671f\u91cc\u63d0\u4ea4\u4e00\u6761\u65e5\u5fd7\u6761\u76ee\u3002Raft \u4e2d\u901a\u8fc7\u9886\u5bfc\u4eba\u5728\u4efb\u671f\u5f00\u59cb\u7684\u65f6\u5019\u63d0\u4ea4\u4e00\u4e2a\u7a7a\u767d\u7684\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u7684\u65e5\u5fd7\u6761\u76ee\u5230\u65e5\u5fd7\u4e2d\u53bb\u6765\u5b9e\u73b0\u3002\u7b2c\u4e8c\uff0c\u9886\u5bfc\u4eba\u5728\u5904\u7406\u53ea\u8bfb\u7684\u8bf7\u6c42\u4e4b\u524d\u5fc5\u987b\u68c0\u67e5\u81ea\u5df1\u662f\u5426\u5df2\u7ecf\u88ab\u5e9f\u9edc\u4e86\uff08\u4ed6\u81ea\u5df1\u7684\u4fe1\u606f\u5df2\u7ecf\u53d8\u810f\u4e86\u5982\u679c\u4e00\u4e2a\u66f4\u65b0\u7684\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u51fa\u6765\uff09\u3002Raft \u4e2d\u901a\u8fc7\u8ba9\u9886\u5bfc\u4eba\u5728\u54cd\u5e94\u53ea\u8bfb\u8bf7\u6c42\u4e4b\u524d\uff0c\u5148\u548c\u96c6\u7fa4\u4e2d\u7684\u5927\u591a\u6570\u8282\u70b9\u4ea4\u6362\u4e00\u6b21\u5fc3\u8df3\u4fe1\u606f\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u53ef\u9009\u7684\uff0c\u9886\u5bfc\u4eba\u53ef\u4ee5\u4f9d\u8d56\u5fc3\u8df3\u673a\u5236\u6765\u5b9e\u73b0\u4e00\u79cd\u79df\u7ea6\u7684\u673a\u5236\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4f9d\u8d56\u65f6\u95f4\u6765\u4fdd\u8bc1\u5b89\u5168\u6027\uff08\u5047\u8bbe\u65f6\u95f4\u8bef\u5dee\u662f\u6709\u754c\u7684\uff09\u3002","title":"8 \u5ba2\u6237\u7aef\u4ea4\u4e92"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#9-\u7b97\u6cd5\u5b9e\u73b0\u548c\u8bc4\u4f30","text":"\u6211\u4eec\u5df2\u7ecf\u4e3a RAMCloud \u5b9e\u73b0\u4e86 Raft \u7b97\u6cd5\u4f5c\u4e3a\u5b58\u50a8\u914d\u7f6e\u4fe1\u606f\u7684\u590d\u5236\u72b6\u6001\u673a\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u5e2e\u52a9 RAMCloud \u534f\u8c03\u6545\u969c\u8f6c\u79fb\u3002\u8fd9\u4e2a Raft \u5b9e\u73b0\u5305\u542b\u5927\u7ea6 2000 \u884c C++ \u4ee3\u7801\uff0c\u5176\u4e2d\u4e0d\u5305\u62ec\u6d4b\u8bd5\u3001\u6ce8\u91ca\u548c\u7a7a\u884c\u3002\u8fd9\u4e9b\u4ee3\u7801\u662f\u5f00\u6e90\u7684\u3002\u540c\u65f6\u4e5f\u6709\u5927\u7ea6 25 \u4e2a\u5176\u4ed6\u72ec\u7acb\u7684\u7b2c\u4e09\u65b9\u7684\u57fa\u4e8e\u8fd9\u7bc7\u8bba\u6587\u8349\u7a3f\u7684\u5f00\u6e90\u5b9e\u73b0\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u5f00\u53d1\u573a\u666f\u3002\u540c\u65f6\uff0c\u5f88\u591a\u516c\u53f8\u5df2\u7ecf\u90e8\u7f72\u4e86\u57fa\u4e8e Raft \u7684\u7cfb\u7edf\u3002 \u8fd9\u4e00\u8282\u4f1a\u4ece\u4e09\u4e2a\u65b9\u9762\u6765\u8bc4\u4f30 Raft \u7b97\u6cd5\uff1a\u53ef\u7406\u89e3\u6027\u3001\u6b63\u786e\u6027\u548c\u6027\u80fd\u3002","title":"9 \u7b97\u6cd5\u5b9e\u73b0\u548c\u8bc4\u4f30"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#91-\u53ef\u7406\u89e3\u6027","text":"\u4e3a\u4e86\u548c Paxos \u6bd4\u8f83 Raft \u7b97\u6cd5\u7684\u53ef\u7406\u89e3\u80fd\u529b\uff0c\u6211\u4eec\u9488\u5bf9\u9ad8\u5c42\u6b21\u7684\u672c\u79d1\u751f\u548c\u7814\u7a76\u751f\uff0c\u5728\u65af\u5766\u798f\u5927\u5b66\u7684\u9ad8\u7ea7\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u548c\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u8bfe\u7a0b\u4e0a\uff0c\u8fdb\u884c\u4e86\u4e00\u6b21\u5b66\u4e60\u7684\u5b9e\u9a8c\u3002\u6211\u4eec\u5206\u522b\u62cd\u4e86\u9488\u5bf9 Raft \u548c Paxos \u7684\u89c6\u9891\u8bfe\u7a0b\uff0c\u5e76\u51c6\u5907\u4e86\u76f8\u5e94\u7684\u5c0f\u6d4b\u9a8c\u3002Raft \u7684\u89c6\u9891\u8bb2\u8bfe\u8986\u76d6\u4e86\u8fd9\u7bc7\u8bba\u6587\u7684\u6240\u6709\u5185\u5bb9\u9664\u4e86\u65e5\u5fd7\u538b\u7f29\uff1bPaxos \u8bb2\u8bfe\u5305\u542b\u4e86\u8db3\u591f\u7684\u8d44\u6599\u6765\u521b\u5efa\u4e00\u4e2a\u7b49\u4ef7\u7684\u590d\u5236\u72b6\u6001\u673a\uff0c\u5305\u62ec\u5355\u51b3\u7b56 Paxos\uff0c\u591a\u51b3\u7b56 Paxos\uff0c\u91cd\u65b0\u914d\u7f6e\u548c\u4e00\u4e9b\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u7684\u6027\u80fd\u4f18\u5316\uff08\u4f8b\u5982\u9886\u5bfc\u4eba\u9009\u4e3e\uff09\u3002\u5c0f\u6d4b\u9a8c\u6d4b\u8bd5\u4e00\u4e9b\u5bf9\u7b97\u6cd5\u7684\u57fa\u672c\u7406\u89e3\u548c\u89e3\u91ca\u4e00\u4e9b\u8fb9\u89d2\u7684\u793a\u4f8b\u3002\u6bcf\u4e2a\u5b66\u751f\u90fd\u662f\u770b\u5b8c\u7b2c\u4e00\u4e2a\u89c6\u9891\uff0c\u56de\u7b54\u76f8\u5e94\u7684\u6d4b\u8bd5\uff0c\u518d\u770b\u7b2c\u4e8c\u4e2a\u89c6\u9891\uff0c\u56de\u7b54\u76f8\u5e94\u7684\u6d4b\u8bd5\u3002\u5927\u7ea6\u6709\u4e00\u534a\u7684\u5b66\u751f\u5148\u8fdb\u884c Paxos \u90e8\u5206\uff0c\u7136\u540e\u53e6\u4e00\u534a\u5148\u8fdb\u884c Raft \u90e8\u5206\uff0c\u8fd9\u662f\u4e3a\u4e86\u8bf4\u660e\u4e24\u8005\u4ece\u7b2c\u4e00\u90e8\u5206\u7684\u7b97\u6cd5\u5b66\u4e60\u4e2d\u83b7\u5f97\u7684\u8868\u73b0\u548c\u7ecf\u9a8c\u7684\u5dee\u5f02\u3002\u6211\u4eec\u8ba1\u7b97\u53c2\u52a0\u4eba\u5458\u7684\u6bcf\u4e00\u4e2a\u5c0f\u6d4b\u9a8c\u7684\u5f97\u5206\u6765\u770b\u53c2\u4e0e\u8005\u662f\u5426\u5728 Raft \u7b97\u6cd5\u4e0a\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u3002 \u6211\u4eec\u5c3d\u53ef\u80fd\u7684\u4f7f\u5f97 Paxos \u548c Raft \u7684\u6bd4\u8f83\u66f4\u52a0\u516c\u5e73\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u504f\u7231 Paxos \u8868\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff1a43 \u4e2a\u53c2\u52a0\u8005\u4e2d\u6709 15 \u4e2a\u4eba\u5728\u4e4b\u524d\u6709\u4e00\u4e9b Paxos \u7684\u7ecf\u9a8c\uff0c\u5e76\u4e14 Paxos \u7684\u89c6\u9891\u8981\u957f 14%\u3002\u5982\u8868\u683c 1 \u603b\u7ed3\u7684\u90a3\u6837\uff0c\u6211\u4eec\u91c7\u53d6\u4e86\u4e00\u4e9b\u63aa\u65bd\u6765\u51cf\u8f7b\u8fd9\u79cd\u6f5c\u5728\u7684\u504f\u89c1\u3002\u6211\u4eec\u6240\u6709\u7684\u6750\u6599\u90fd\u53ef\u4f9b\u5ba1\u67e5\u3002 \u5173\u5fc3 \u7f13\u548c\u504f\u89c1\u91c7\u53d6\u7684\u624b\u6bb5 \u53ef\u4f9b\u67e5\u770b\u7684\u6750\u6599 \u76f8\u540c\u7684\u8bb2\u8bfe\u8d28\u91cf \u4e24\u8005\u4f7f\u7528\u540c\u4e00\u4e2a\u8bb2\u5e08\u3002Paxos \u4f7f\u7528\u7684\u662f\u73b0\u5728\u5f88\u591a\u5927\u5b66\u91cc\u7ecf\u5e38\u4f7f\u7528\u7684\u3002Paxos \u4f1a\u957f 14%\u3002 \u89c6\u9891 \u76f8\u540c\u7684\u6d4b\u9a8c\u96be\u5ea6 \u95ee\u9898\u4ee5\u96be\u5ea6\u5206\u7ec4\uff0c\u5728\u4e24\u4e2a\u6d4b\u9a8c\u91cc\u6210\u5bf9\u51fa\u73b0\u3002 \u5c0f\u6d4b\u9a8c \u516c\u5e73\u8bc4\u5206 \u4f7f\u7528\u8bc4\u4ef7\u91cf\u89c4\u3002\u968f\u673a\u987a\u5e8f\u6253\u5206\uff0c\u4e24\u4e2a\u6d4b\u9a8c\u4ea4\u66ff\u8fdb\u884c\u3002 \u8bc4\u4ef7\u91cf\u89c4\uff08rubric\uff09 \u8868 1\uff1a\u8003\u8651\u5230\u53ef\u80fd\u4f1a\u5b58\u5728\u7684\u504f\u89c1\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u548c\u76f8\u5e94\u7684\u6750\u6599\u3002 \u53c2\u52a0\u8005\u5e73\u5747\u5728 Raft \u7684\u6d4b\u9a8c\u4e2d\u6bd4 Paxos \u9ad8 4.9 \u5206\uff08\u603b\u5206 60\uff0c\u90a3\u4e48 Raft \u7684\u5e73\u5747\u5f97\u5206\u662f 25.7\uff0c\u800c Paxos \u662f 20.8\uff09\uff1b\u56fe 14 \u5c55\u793a\u4e86\u6bcf\u4e2a\u53c2\u4e0e\u8005\u7684\u5f97\u5206\u3002\u914d\u7f6et-\u68c0\u9a8c\uff08\u53c8\u79f0student\u2018s t-test\uff09\u8868\u660e\uff0c\u5728 95% \u7684\u53ef\u4fe1\u5ea6\u4e0b\uff0c\u771f\u5b9e\u7684 Raft \u5206\u6570\u5206\u5e03\u81f3\u5c11\u6bd4 Paxos \u9ad8 2.5 \u5206\u3002 \u56fe 14\uff1a\u4e00\u4e2a\u6563\u70b9\u56fe\u8868\u793a\u4e86 43 \u4e2a\u5b66\u751f\u5728 Paxos \u548c Raft \u7684\u5c0f\u6d4b\u9a8c\u4e2d\u7684\u6210\u7ee9\u3002\u5728\u5bf9\u89d2\u7ebf\u4e4b\u4e0a\u7684\u70b9\u8868\u793a\u5728 Raft \u83b7\u5f97\u4e86\u66f4\u9ad8\u5206\u6570\u7684\u5b66\u751f\u3002 \u6211\u4eec\u4e5f\u5efa\u7acb\u4e86\u4e00\u4e2a\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6765\u9884\u6d4b\u4e00\u4e2a\u65b0\u7684\u5b66\u751f\u7684\u6d4b\u9a8c\u6210\u7ee9\uff0c\u57fa\u4e8e\u4ee5\u4e0b\u4e09\u4e2a\u56e0\u7d20\uff1a\u4ed6\u4eec\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u5c0f\u6d4b\u9a8c\uff0c\u4e4b\u524d\u5bf9 Paxos \u7684\u7ecf\u9a8c\uff0c\u548c\u5b66\u4e60\u7b97\u6cd5\u7684\u987a\u5e8f\u3002\u6a21\u578b\u9884\u6d4b\uff0c\u5bf9\u5c0f\u6d4b\u9a8c\u7684\u9009\u62e9\u4f1a\u4ea7\u751f 12.5 \u5206\u7684\u5dee\u522b\u3002\u8fd9\u663e\u8457\u7684\u9ad8\u4e8e\u4e4b\u524d\u7684 4.9 \u5206\uff0c\u56e0\u4e3a\u5f88\u591a\u5b66\u751f\u5728\u4e4b\u524d\u90fd\u5df2\u7ecf\u6709\u4e86\u5bf9\u4e8e Paxos \u7684\u7ecf\u9a8c\uff0c\u8fd9\u76f8\u5f53\u660e\u663e\u7684\u5e2e\u52a9 Paxos\uff0c\u5bf9 Raft \u5c31\u6ca1\u4ec0\u4e48\u592a\u5927\u5f71\u54cd\u4e86\u3002\u4f46\u662f\u5947\u602a\u7684\u662f\uff0c\u6a21\u578b\u9884\u6d4b\u5bf9\u4e8e\u5148\u8fdb\u884c Paxos \u5c0f\u6d4b\u9a8c\u7684\u4eba\u800c\u8a00\uff0cRaft\u7684\u5f97\u5206\u4f4e\u4e866.3\u5206; \u867d\u7136\u6211\u4eec\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u4f3c\u4e4e\u5728\u7edf\u8ba1\u4e0a\u662f\u6709\u610f\u4e49\u7684\u3002 \u6211\u4eec\u540c\u65f6\u4e5f\u5728\u6d4b\u9a8c\u4e4b\u540e\u8c03\u67e5\u4e86\u53c2\u4e0e\u8005\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u54ea\u4e2a\u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u5b9e\u73b0\u548c\u89e3\u91ca\uff1b\u8fd9\u4e2a\u7684\u7ed3\u679c\u5728\u56fe 15 \u4e0a\u3002\u538b\u5012\u6027\u7684\u7ed3\u679c\u8868\u660e Raft \u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u5b9e\u73b0\u548c\u89e3\u91ca\uff0841 \u4eba\u4e2d\u7684 33\u4e2a\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u81ea\u5df1\u62a5\u544a\u7684\u7ed3\u679c\u4e0d\u5982\u53c2\u4e0e\u8005\u7684\u6210\u7ee9\u66f4\u52a0\u53ef\u4fe1\uff0c\u5e76\u4e14\u53c2\u4e0e\u8005\u53ef\u80fd\u56e0\u4e3a\u6211\u4eec\u7684 Raft \u66f4\u52a0\u6613\u4e8e\u7406\u89e3\u7684\u5047\u8bf4\u800c\u4ea7\u751f\u504f\u89c1\u3002 \u56fe 15\uff1a\u901a\u8fc7\u4e00\u4e2a 5 \u5206\u5236\u7684\u95ee\u9898\uff0c\u53c2\u4e0e\u8005\uff08\u5de6\u8fb9\uff09\u88ab\u95ee\u54ea\u4e2a\u7b97\u6cd5\u4ed6\u4eec\u89c9\u5f97\u5728\u4e00\u4e2a\u9ad8\u6548\u6b63\u786e\u7684\u7cfb\u7edf\u91cc\u66f4\u5bb9\u6613\u5b9e\u73b0\uff0c\u53f3\u8fb9\u88ab\u95ee\u54ea\u4e2a\u66f4\u5bb9\u6613\u5411\u5b66\u751f\u89e3\u91ca\u3002 \u5173\u4e8e Raft \u7528\u6237\u5b66\u4e60\u6709\u4e00\u4e2a\u66f4\u52a0\u8be6\u7ec6\u7684\u8ba8\u8bba\u3002","title":"9.1 \u53ef\u7406\u89e3\u6027"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#92-\u6b63\u786e\u6027","text":"\u5728\u7b2c 5 \u8282\uff0c\u6211\u4eec\u5df2\u7ecf\u5236\u5b9a\u4e86\u6b63\u5f0f\u7684\u89c4\u8303\uff0c\u548c\u5bf9\u4e00\u81f4\u6027\u673a\u5236\u7684\u5b89\u5168\u6027\u8bc1\u660e\u3002\u8fd9\u4e2a\u6b63\u5f0f\u89c4\u8303\u4f7f\u7528 TLA+ \u89c4\u8303\u8bed\u8a00\u4f7f\u56fe 2 \u4e2d\u603b\u7ed3\u7684\u4fe1\u606f\u975e\u5e38\u6e05\u6670\u3002\u5b83\u957f\u7ea6400\u884c\uff0c\u5e76\u4f5c\u4e3a\u8bc1\u660e\u7684\u4e3b\u9898\u3002\u540c\u65f6\u5bf9\u4e8e\u4efb\u4f55\u60f3\u5b9e\u73b0 Raft \u7684\u4eba\u4e5f\u662f\u5341\u5206\u6709\u7528\u7684\u3002\u6211\u4eec\u901a\u8fc7 TLA \u8bc1\u660e\u7cfb\u7edf\u975e\u5e38\u673a\u68b0\u7684\u8bc1\u660e\u4e86\u65e5\u5fd7\u5b8c\u5168\u7279\u6027\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u8bc1\u660e\u4f9d\u8d56\u7684\u7ea6\u675f\u524d\u63d0\u8fd8\u6ca1\u6709\u88ab\u673a\u68b0\u8bc1\u660e\uff08\u4f8b\u5982\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u8bc1\u660e\u89c4\u8303\u7684\u7c7b\u578b\u5b89\u5168\uff09\u3002\u800c\u4e14\uff0c\u6211\u4eec\u5df2\u7ecf\u5199\u4e86\u4e00\u4e2a\u975e\u6b63\u5f0f\u7684\u8bc1\u660e\u5173\u4e8e\u72b6\u6001\u673a\u5b89\u5168\u6027\u662f\u5b8c\u5907\u7684\uff0c\u5e76\u4e14\u662f\u76f8\u5f53\u6e05\u6670\u7684\uff08\u5927\u7ea6 3500 \u4e2a\u8bcd\uff09\u3002","title":"9.2 \u6b63\u786e\u6027"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#93-\u6027\u80fd","text":"Raft \u548c\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u4f8b\u5982 Paxos \u6709\u7740\u5dee\u4e0d\u591a\u7684\u6027\u80fd\u3002\u5728\u6027\u80fd\u65b9\u9762\uff0c\u6700\u91cd\u8981\u7684\u5173\u6ce8\u70b9\u662f\uff0c\u5f53\u9886\u5bfc\u4eba\u88ab\u9009\u4e3e\u6210\u529f\u65f6\uff0c\u4ec0\u4e48\u65f6\u5019\u590d\u5236\u65b0\u7684\u65e5\u5fd7\u6761\u76ee\u3002Raft \u901a\u8fc7\u5f88\u5c11\u6570\u91cf\u7684\u6d88\u606f\u5305\uff08\u4e00\u8f6e\u4ece\u9886\u5bfc\u4eba\u5230\u96c6\u7fa4\u5927\u591a\u6570\u673a\u5668\u7684\u6d88\u606f\uff09\u5c31\u8fbe\u6210\u4e86\u8fd9\u4e2a\u76ee\u7684\u3002\u540c\u65f6\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347 Raft \u7684\u6027\u80fd\u4e5f\u662f\u53ef\u884c\u7684\u3002\u4f8b\u5982\uff0c\u5f88\u5bb9\u6613\u901a\u8fc7\u652f\u6301\u6279\u91cf\u64cd\u4f5c\u548c\u7ba1\u9053\u64cd\u4f5c\u6765\u63d0\u9ad8\u541e\u5410\u91cf\u548c\u964d\u4f4e\u5ef6\u8fdf\u3002\u5bf9\u4e8e\u5176\u4ed6\u4e00\u81f4\u6027\u7b97\u6cd5\u5df2\u7ecf\u63d0\u51fa\u8fc7\u5f88\u591a\u6027\u80fd\u4f18\u5316\u65b9\u6848\uff1b\u5176\u4e2d\u6709\u5f88\u591a\u4e5f\u53ef\u4ee5\u5e94\u7528\u5230 Raft \u4e2d\u6765\uff0c\u4f46\u662f\u6211\u4eec\u6682\u65f6\u628a\u8fd9\u4e2a\u95ee\u9898\u653e\u5230\u672a\u6765\u7684\u5de5\u4f5c\u4e2d\u53bb\u3002 \u6211\u4eec\u4f7f\u7528\u6211\u4eec\u81ea\u5df1\u7684 Raft \u5b9e\u73b0\u6765\u8861\u91cf Raft \u9886\u5bfc\u4eba\u9009\u4e3e\u7684\u6027\u80fd\u5e76\u4e14\u56de\u7b54\u4e24\u4e2a\u95ee\u9898\u3002\u9996\u5148\uff0c\u9886\u5bfc\u4eba\u9009\u4e3e\u7684\u8fc7\u7a0b\u6536\u655b\u662f\u5426\u5feb\u901f\uff1f\u7b2c\u4e8c\uff0c\u5728\u9886\u5bfc\u4eba\u5b95\u673a\u4e4b\u540e\uff0c\u6700\u5c0f\u7684\u7cfb\u7edf\u5b95\u673a\u65f6\u95f4\u662f\u591a\u4e45\uff1f \u56fe 16\uff1a\u53d1\u73b0\u5e76\u66ff\u6362\u4e00\u4e2a\u5df2\u7ecf\u5d29\u6e83\u7684\u9886\u5bfc\u4eba\u7684\u65f6\u95f4\u3002\u4e0a\u9762\u7684\u56fe\u8003\u5bdf\u4e86\u5728\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e0a\u7684\u968f\u673a\u5316\u7a0b\u5ea6\uff0c\u4e0b\u9762\u7684\u56fe\u8003\u5bdf\u4e86\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u3002\u6bcf\u6761\u7ebf\u4ee3\u8868\u4e86 1000 \u6b21\u5b9e\u9a8c\uff08\u9664\u4e86 150-150 \u6beb\u79d2\u53ea\u8bd5\u4e86 100 \u6b21\uff09\uff0c\u548c\u76f8\u5e94\u7684\u786e\u5b9a\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u3002\u4f8b\u5982\uff0c150-155 \u6beb\u79d2\u610f\u601d\u662f\uff0c\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4ece\u8fd9\u4e2a\u533a\u95f4\u8303\u56f4\u5185\u968f\u673a\u9009\u62e9\u5e76\u786e\u5b9a\u4e0b\u6765\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u5728\u4e00\u4e2a\u62e5\u6709 5 \u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\u4e0a\u8fdb\u884c\uff0c\u5176\u5e7f\u64ad\u65f6\u5ef6\u5927\u7ea6\u662f 15 \u6beb\u79d2\u3002\u5bf9\u4e8e 9 \u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\uff0c\u7ed3\u679c\u4e5f\u5dee\u4e0d\u591a\u3002 \u4e3a\u4e86\u8861\u91cf\u9886\u5bfc\u4eba\u9009\u4e3e\uff0c\u6211\u4eec\u53cd\u590d\u7684\u4f7f\u4e00\u4e2a\u62e5\u6709\u4e94\u4e2a\u8282\u70b9\u7684\u670d\u52a1\u5668\u96c6\u7fa4\u7684\u9886\u5bfc\u4eba\u5b95\u673a\uff0c\u5e76\u8ba1\u7b97\u9700\u8981\u591a\u4e45\u624d\u80fd\u53d1\u73b0\u9886\u5bfc\u4eba\u5df2\u7ecf\u5b95\u673a\u5e76\u9009\u51fa\u4e00\u4e2a\u65b0\u7684\u9886\u5bfc\u4eba\uff08\u89c1\u56fe 16\uff09\u3002\u4e3a\u4e86\u6784\u5efa\u4e00\u4e2a\u6700\u574f\u7684\u573a\u666f\uff0c\u5728\u6bcf\u4e00\u7684\u5c1d\u8bd5\u91cc\uff0c\u670d\u52a1\u5668\u90fd\u6709\u4e0d\u540c\u957f\u5ea6\u7684\u65e5\u5fd7\uff0c\u610f\u5473\u7740\u6709\u4e9b\u5019\u9009\u4eba\u662f\u6ca1\u6709\u6210\u4e3a\u9886\u5bfc\u4eba\u7684\u8d44\u683c\u7684\u3002\u53e6\u5916\uff0c\u4e3a\u4e86\u4fc3\u6210\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u7684\u6d4b\u8bd5\u811a\u672c\u5728\u7ec8\u6b62\u9886\u5bfc\u4eba\u4e4b\u524d\u540c\u6b65\u7684\u53d1\u9001\u4e86\u4e00\u6b21\u5fc3\u8df3\u5e7f\u64ad\uff08\u8fd9\u5927\u7ea6\u548c\u9886\u5bfc\u4eba\u5728\u5d29\u6e83\u524d\u590d\u5236\u4e00\u4e2a\u65b0\u7684\u65e5\u5fd7\u7ed9\u5176\u4ed6\u673a\u5668\u5f88\u50cf\uff09\u3002\u9886\u5bfc\u4eba\u5747\u5300\u7684\u968f\u673a\u7684\u5728\u5fc3\u8df3\u95f4\u9694\u91cc\u5b95\u673a\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u4e00\u534a\u3002\u56e0\u6b64\uff0c\u6700\u5c0f\u5b95\u673a\u65f6\u95f4\u5927\u7ea6\u5c31\u662f\u6700\u5c0f\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u4e00\u534a\u3002 \u56fe 16 \u4e2d\u4e0a\u9762\u7684\u56fe\u8868\u660e\uff0c\u53ea\u9700\u8981\u5728\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e0a\u4f7f\u7528\u5f88\u5c11\u7684\u968f\u673a\u5316\u5c31\u53ef\u4ee5\u5927\u5927\u907f\u514d\u9009\u7968\u88ab\u74dc\u5206\u7684\u60c5\u51b5\u3002\u5728\u6ca1\u6709\u968f\u673a\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u91cc\uff0c\u9009\u4e3e\u8fc7\u7a0b\u5f80\u5f80\u90fd\u9700\u8981\u82b1\u8d39\u8d85\u8fc7 10 \u79d2\u949f\u7531\u4e8e\u592a\u591a\u7684\u9009\u7968\u74dc\u5206\u7684\u60c5\u51b5\u3002\u4ec5\u4ec5\u589e\u52a0 5 \u6beb\u79d2\u7684\u968f\u673a\u5316\u65f6\u95f4\uff0c\u5c31\u5927\u5927\u7684\u6539\u5584\u4e86\u9009\u4e3e\u8fc7\u7a0b\uff0c\u73b0\u5728\u5e73\u5747\u7684\u5b95\u673a\u65f6\u95f4\u53ea\u6709 287 \u6beb\u79d2\u3002\u589e\u52a0\u66f4\u591a\u7684\u968f\u673a\u5316\u65f6\u95f4\u53ef\u4ee5\u5927\u5927\u6539\u5584\u6700\u574f\u60c5\u51b5\uff1a\u901a\u8fc7\u589e\u52a0 50 \u6beb\u79d2\u7684\u968f\u673a\u5316\u65f6\u95f4\uff0c\u6700\u574f\u7684\u5b8c\u6210\u60c5\u51b5\uff081000 \u6b21\u5c1d\u8bd5\uff09\u53ea\u8981 513 \u6beb\u79d2\u3002 \u56fe 16 \u4e2d\u4e0b\u9762\u7684\u56fe\u663e\u793a\uff0c\u901a\u8fc7\u51cf\u5c11\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u53ef\u4ee5\u51cf\u5c11\u7cfb\u7edf\u7684\u5b95\u673a\u65f6\u95f4\u3002\u5728\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u4e3a 12-24 \u6beb\u79d2\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u8981\u5e73\u5747 35 \u6beb\u79d2\u5c31\u53ef\u4ee5\u9009\u4e3e\u51fa\u65b0\u7684\u9886\u5bfc\u4eba\uff08\u6700\u957f\u7684\u4e00\u6b21\u82b1\u8d39\u4e86 152 \u6beb\u79d2\uff09\u3002\u7136\u800c\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\u7684\u8bdd\u5c31\u4f1a\u8fdd\u53cd Raft \u7684\u65f6\u95f4\u4e0d\u7b49\u5f0f\u9700\u6c42\uff1a\u5728\u9009\u4e3e\u65b0\u9886\u5bfc\u4eba\u4e4b\u524d\uff0c\u9886\u5bfc\u4eba\u5c31\u5f88\u96be\u53d1\u9001\u5b8c\u5fc3\u8df3\u5305\u3002\u8fd9\u4f1a\u5bfc\u81f4\u6ca1\u6709\u610f\u4e49\u7684\u9886\u5bfc\u4eba\u6539\u53d8\u5e76\u964d\u4f4e\u4e86\u7cfb\u7edf\u6574\u4f53\u7684\u53ef\u7528\u6027\u3002\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u66f4\u4e3a\u4fdd\u5b88\u7684\u9009\u4e3e\u8d85\u65f6\u65f6\u95f4\uff0c\u6bd4\u5982 150-300 \u6beb\u79d2\uff1b\u8fd9\u6837\u7684\u65f6\u95f4\u4e0d\u5927\u53ef\u80fd\u5bfc\u81f4\u6ca1\u6709\u610f\u4e49\u7684\u9886\u5bfc\u4eba\u6539\u53d8\uff0c\u800c\u4e14\u4f9d\u7136\u63d0\u4f9b\u4e0d\u9519\u7684\u53ef\u7528\u6027\u3002","title":"9.3 \u6027\u80fd"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#10-\u76f8\u5173\u5de5\u4f5c","text":"\u5df2\u7ecf\u6709\u5f88\u591a\u5173\u4e8e\u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u5de5\u4f5c\u88ab\u53d1\u8868\u51fa\u6765\uff0c\u5176\u4e2d\u5f88\u591a\u90fd\u53ef\u4ee5\u5f52\u5230\u4e0b\u9762\u7684\u7c7b\u522b\u4e2d\uff1a Lamport \u5173\u4e8e Paxos \u7684\u539f\u59cb\u63cf\u8ff0\uff0c\u548c\u5c1d\u8bd5\u63cf\u8ff0\u7684\u66f4\u6e05\u6670\u3002 \u5173\u4e8e Paxos \u7684\u66f4\u8be6\u5c3d\u7684\u63cf\u8ff0\uff0c\u8865\u5145\u9057\u6f0f\u7684\u7ec6\u8282\u5e76\u4fee\u6539\u7b97\u6cd5\uff0c\u4f7f\u5f97\u53ef\u4ee5\u63d0\u4f9b\u66f4\u52a0\u5bb9\u6613\u7684\u5b9e\u73b0\u57fa\u7840\u3002 \u5b9e\u73b0\u4e00\u81f4\u6027\u7b97\u6cd5\u7684\u7cfb\u7edf\uff0c\u4f8b\u5982 Chubby\uff0cZooKeeper \u548c Spanner\u3002\u5bf9\u4e8e Chubby \u548c Spanner \u7684\u7b97\u6cd5\u5e76\u6ca1\u6709\u516c\u5f00\u53d1\u8868\u5176\u6280\u672f\u7ec6\u8282\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u90fd\u58f0\u79f0\u662f\u57fa\u4e8e Paxos \u7684\u3002ZooKeeper \u7684\u7b97\u6cd5\u7ec6\u8282\u5df2\u7ecf\u53d1\u8868\uff0c\u4f46\u662f\u548c Paxos \u7740\u5b9e\u6709\u7740\u5f88\u5927\u7684\u5dee\u522b\u3002 Paxos \u53ef\u4ee5\u5e94\u7528\u7684\u6027\u80fd\u4f18\u5316\u3002 Oki \u548c Liskov \u7684 Viewstamped Replication\uff08VR\uff09\uff0c\u4e00\u79cd\u548c Paxos \u5dee\u4e0d\u591a\u7684\u66ff\u4ee3\u7b97\u6cd5\u3002\u539f\u59cb\u7684\u7b97\u6cd5\u63cf\u8ff0\u548c\u5206\u5e03\u5f0f\u4f20\u8f93\u534f\u8bae\u8026\u5408\u5728\u4e86\u4e00\u8d77\uff0c\u4f46\u662f\u6838\u5fc3\u7684\u4e00\u81f4\u6027\u7b97\u6cd5\u5728\u6700\u8fd1\u7684\u66f4\u65b0\u91cc\u88ab\u5206\u79bb\u4e86\u51fa\u6765\u3002VR \u4f7f\u7528\u4e86\u4e00\u79cd\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\u65b9\u6cd5\uff0c\u548c Raft \u6709\u5f88\u591a\u76f8\u4f3c\u4e4b\u5904\u3002 Raft \u548c Paxos \u6700\u5927\u7684\u4e0d\u540c\u4e4b\u5904\u5c31\u5728\u4e8e Raft \u7684\u5f3a\u9886\u5bfc\u7279\u6027\uff1aRaft \u4f7f\u7528\u9886\u5bfc\u4eba\u9009\u4e3e\u4f5c\u4e3a\u4e00\u81f4\u6027\u534f\u8bae\u91cc\u5fc5\u4e0d\u53ef\u5c11\u7684\u90e8\u5206\uff0c\u5e76\u4e14\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u529f\u80fd\u96c6\u4e2d\u5230\u4e86\u9886\u5bfc\u4eba\u8eab\u4e0a\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u5f97\u7b97\u6cd5\u66f4\u52a0\u5bb9\u6613\u7406\u89e3\u3002\u4f8b\u5982\uff0c\u5728 Paxos \u4e2d\uff0c\u9886\u5bfc\u4eba\u9009\u4e3e\u548c\u57fa\u672c\u7684\u4e00\u81f4\u6027\u534f\u8bae\u662f\u6b63\u4ea4\u7684\uff1a\u9886\u5bfc\u4eba\u9009\u4e3e\u4ec5\u4ec5\u662f\u6027\u80fd\u4f18\u5316\u7684\u624b\u6bb5\uff0c\u800c\u4e14\u4e0d\u662f\u4e00\u81f4\u6027\u6240\u5fc5\u987b\u8981\u6c42\u7684\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u5c31\u589e\u52a0\u4e86\u591a\u4f59\u7684\u673a\u5236\uff1aPaxos \u540c\u65f6\u5305\u542b\u4e86\u9488\u5bf9\u57fa\u672c\u4e00\u81f4\u6027\u8981\u6c42\u7684\u4e24\u9636\u6bb5\u63d0\u4ea4\u534f\u8bae\u548c\u9488\u5bf9\u9886\u5bfc\u4eba\u9009\u4e3e\u7684\u72ec\u7acb\u7684\u673a\u5236\u3002\u76f8\u6bd4\u8f83\u800c\u8a00\uff0cRaft \u5c31\u76f4\u63a5\u5c06\u9886\u5bfc\u4eba\u9009\u4e3e\u7eb3\u5165\u5230\u4e00\u81f4\u6027\u7b97\u6cd5\u4e2d\uff0c\u5e76\u4f5c\u4e3a\u4e24\u9636\u6bb5\u4e00\u81f4\u6027\u7684\u7b2c\u4e00\u6b65\u3002\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u673a\u5236\u3002 \u50cf Raft \u4e00\u6837\uff0cVR \u548c ZooKeeper \u4e5f\u662f\u57fa\u4e8e\u9886\u5bfc\u4eba\u7684\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e5f\u62e5\u6709\u4e00\u4e9b Raft \u7684\u4f18\u70b9\u3002\u4f46\u662f\uff0cRaft \u6bd4 VR \u548c ZooKeeper \u62e5\u6709\u66f4\u5c11\u7684\u673a\u5236\u56e0\u4e3a Raft \u5c3d\u53ef\u80fd\u7684\u51cf\u5c11\u4e86\u975e\u9886\u5bfc\u4eba\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0cRaft \u4e2d\u65e5\u5fd7\u6761\u76ee\u90fd\u9075\u5faa\u7740\u4ece\u9886\u5bfc\u4eba\u53d1\u9001\u7ed9\u5176\u4ed6\u4eba\u8fd9\u4e00\u4e2a\u65b9\u5411\uff1a\u9644\u52a0\u6761\u76ee RPC \u662f\u5411\u5916\u53d1\u9001\u7684\u3002\u5728 VR \u4e2d\uff0c\u65e5\u5fd7\u6761\u76ee\u7684\u6d41\u52a8\u662f\u53cc\u5411\u7684\uff08\u9886\u5bfc\u4eba\u53ef\u4ee5\u5728\u9009\u4e3e\u8fc7\u7a0b\u4e2d\u63a5\u6536\u65e5\u5fd7\uff09\uff1b\u8fd9\u5c31\u5bfc\u81f4\u4e86\u989d\u5916\u7684\u673a\u5236\u548c\u590d\u6742\u6027\u3002\u6839\u636e ZooKeeper \u516c\u5f00\u7684\u8d44\u6599\u770b\uff0c\u5b83\u7684\u65e5\u5fd7\u6761\u76ee\u4e5f\u662f\u53cc\u5411\u4f20\u8f93\u7684\uff0c\u4f46\u662f\u5b83\u7684\u5b9e\u73b0\u66f4\u50cf Raft\u3002 \u548c\u4e0a\u8ff0\u6211\u4eec\u63d0\u53ca\u7684\u5176\u4ed6\u57fa\u4e8e\u4e00\u81f4\u6027\u7684\u65e5\u5fd7\u590d\u5236\u7b97\u6cd5\u4e2d\uff0cRaft \u7684\u6d88\u606f\u7c7b\u578b\u66f4\u5c11\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u6570\u4e86\u4e00\u4e0b VR \u548c ZooKeeper \u4f7f\u7528\u7684\u7528\u6765\u57fa\u672c\u4e00\u81f4\u6027\u9700\u8981\u548c\u6210\u5458\u6539\u53d8\u7684\u6d88\u606f\u6570\uff08\u6392\u9664\u4e86\u65e5\u5fd7\u538b\u7f29\u548c\u5ba2\u6237\u7aef\u4ea4\u4e92\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u90fd\u6bd4\u8f83\u72ec\u7acb\u4e14\u548c\u7b97\u6cd5\u5173\u7cfb\u4e0d\u5927\uff09\u3002VR \u548c ZooKeeper \u90fd\u5206\u522b\u5b9a\u4e49\u4e86 10 \u79cd\u4e0d\u540c\u7684\u6d88\u606f\u7c7b\u578b\uff0c\u76f8\u5bf9\u7684\uff0cRaft \u53ea\u6709 4 \u79cd\u6d88\u606f\u7c7b\u578b\uff08\u4e24\u79cd RPC \u8bf7\u6c42\u548c\u5bf9\u5e94\u7684\u54cd\u5e94\uff09\u3002Raft \u7684\u6d88\u606f\u90fd\u7a0d\u5fae\u6bd4\u5176\u4ed6\u7b97\u6cd5\u7684\u8981\u4fe1\u606f\u91cf\u5927\uff0c\u4f46\u662f\u90fd\u5f88\u7b80\u5355\u3002\u53e6\u5916\uff0cVR \u548c ZooKeeper \u90fd\u5728\u9886\u5bfc\u4eba\u6539\u53d8\u65f6\u4f20\u8f93\u4e86\u6574\u4e2a\u65e5\u5fd7\uff1b\u6240\u4ee5\u4e3a\u4e86\u80fd\u591f\u5b9e\u8df5\u4e2d\u4f7f\u7528\uff0c\u989d\u5916\u7684\u6d88\u606f\u7c7b\u578b\u5c31\u5f88\u5fc5\u8981\u4e86\u3002 Raft \u7684\u5f3a\u9886\u5bfc\u4eba\u6a21\u578b\u7b80\u5316\u4e86\u6574\u4e2a\u7b97\u6cd5\uff0c\u4f46\u662f\u540c\u65f6\u4e5f\u6392\u65a5\u4e86\u4e00\u4e9b\u6027\u80fd\u4f18\u5316\u7684\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5e73\u7b49\u4e3b\u4e49 Paxos \uff08EPaxos\uff09\u5728\u67d0\u4e9b\u6ca1\u6709\u9886\u5bfc\u4eba\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fbe\u5230\u5f88\u9ad8\u7684\u6027\u80fd\u3002\u5e73\u7b49\u4e3b\u4e49 Paxos \u5145\u5206\u53d1\u6325\u4e86\u5728\u72b6\u6001\u673a\u6307\u4ee4\u4e2d\u7684\u4ea4\u6362\u6027\u3002\u4efb\u4f55\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u5728\u4e00\u8f6e\u901a\u4fe1\u4e0b\u5c31\u63d0\u4ea4\u6307\u4ee4\uff0c\u9664\u975e\u5176\u4ed6\u6307\u4ee4\u540c\u65f6\u88ab\u63d0\u51fa\u4e86\u3002\u7136\u800c\uff0c\u5982\u679c\u6307\u4ee4\u90fd\u662f\u5e76\u53d1\u7684\u88ab\u63d0\u51fa\uff0c\u5e76\u4e14\u4e92\u76f8\u4e4b\u95f4\u4e0d\u901a\u4fe1\u6c9f\u901a\uff0c\u90a3\u4e48 EPaxos \u5c31\u9700\u8981\u989d\u5916\u7684\u4e00\u8f6e\u901a\u4fe1\u3002\u56e0\u4e3a\u4efb\u4f55\u670d\u52a1\u5668\u90fd\u53ef\u4ee5\u63d0\u4ea4\u6307\u4ee4\uff0c\u6240\u4ee5 EPaxos \u5728\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8d1f\u8f7d\u5747\u8861\u505a\u7684\u5f88\u597d\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u5728 WAN \u7f51\u7edc\u73af\u5883\u4e0b\u83b7\u5f97\u5f88\u4f4e\u7684\u5ef6\u8fdf\u3002\u4f46\u662f\uff0c\u4ed6\u5728 Paxos \u4e0a\u589e\u52a0\u4e86\u975e\u5e38\u660e\u663e\u7684\u590d\u6742\u6027\u3002 \u4e00\u4e9b\u96c6\u7fa4\u6210\u5458\u53d8\u6362\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u63d0\u51fa\u6216\u8005\u5728\u5176\u4ed6\u7684\u5de5\u4f5c\u4e2d\u88ab\u5b9e\u73b0\uff0c\u5305\u62ec Lamport \u7684\u539f\u59cb\u7684\u8ba8\u8bba\uff0cVR \u548c SMART\u3002\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u5171\u540c\u4e00\u81f4\u7684\u65b9\u6cd5\u56e0\u4e3a\u4ed6\u5bf9\u4e00\u81f4\u6027\u534f\u8bae\u7684\u5176\u4ed6\u90e8\u5206\u5f71\u54cd\u5f88\u5c0f\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5f88\u5c11\u7684\u4e00\u4e9b\u673a\u5236\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6210\u5458\u53d8\u6362\u3002Lamport \u7684\u57fa\u4e8e \u03b1 \u7684\u65b9\u6cd5\u4e4b\u6240\u4ee5\u6ca1\u6709\u88ab Raft \u9009\u62e9\u662f\u56e0\u4e3a\u5b83\u5047\u8bbe\u5728\u6ca1\u6709\u9886\u5bfc\u4eba\u7684\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u8fbe\u5230\u4e00\u81f4\u6027\u3002\u548c VR \u548c SMART \u76f8\u6bd4\u8f83\uff0cRaft \u7684\u91cd\u65b0\u914d\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u4e0d\u9650\u5236\u6b63\u5e38\u8bf7\u6c42\u5904\u7406\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\uff1b\u76f8\u6bd4\u8f83\u7684\uff0cVR \u9700\u8981\u505c\u6b62\u6240\u6709\u7684\u5904\u7406\u8fc7\u7a0b\uff0cSMART \u5f15\u5165\u4e86\u4e00\u4e2a\u548c \u03b1 \u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u9650\u5236\u4e86\u8bf7\u6c42\u5904\u7406\u7684\u6570\u91cf\u3002Raft \u7684\u65b9\u6cd5\u540c\u65f6\u4e5f\u9700\u8981\u66f4\u5c11\u7684\u989d\u5916\u673a\u5236\u6765\u5b9e\u73b0\uff0c\u548c VR\u3001SMART \u6bd4\u8f83\u800c\u8a00\u3002","title":"10 \u76f8\u5173\u5de5\u4f5c"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#11-\u7ed3\u8bba","text":"\u7b97\u6cd5\u7684\u8bbe\u8ba1\u901a\u5e38\u4f1a\u628a\u6b63\u786e\u6027\uff0c\u6548\u7387\u6216\u8005\u7b80\u6d01\u4f5c\u4e3a\u4e3b\u8981\u7684\u76ee\u6807\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u90fd\u662f\u5f88\u6709\u610f\u4e49\u7684\u76ee\u6807\uff0c\u4f46\u662f\u6211\u4eec\u76f8\u4fe1\uff0c\u53ef\u7406\u89e3\u6027\u4e5f\u662f\u4e00\u6837\u7684\u91cd\u8981\u3002\u5728\u5f00\u53d1\u8005\u628a\u7b97\u6cd5\u5e94\u7528\u5230\u5b9e\u9645\u7684\u7cfb\u7edf\u4e2d\u4e4b\u524d\uff0c\u8fd9\u4e9b\u76ee\u6807\u6ca1\u6709\u4e00\u4e2a\u4f1a\u88ab\u5b9e\u73b0\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5fc5\u7136\u7684\u504f\u79bb\u53d1\u8868\u65f6\u7684\u5f62\u5f0f\u3002\u9664\u975e\u5f00\u53d1\u4eba\u5458\u5bf9\u8fd9\u4e2a\u7b97\u6cd5\u6709\u7740\u5f88\u6df1\u7684\u7406\u89e3\u5e76\u4e14\u6709\u7740\u76f4\u89c2\u7684\u611f\u89c9\uff0c\u5426\u5219\u5c06\u4f1a\u5bf9\u4ed6\u4eec\u800c\u8a00\u5f88\u96be\u5728\u5b9e\u73b0\u7684\u65f6\u5019\u4fdd\u6301\u539f\u6709\u671f\u671b\u7684\u7279\u6027\u3002 \u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u6211\u4eec\u5c1d\u8bd5\u89e3\u51b3\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u4f46\u662f\u4e00\u4e2a\u5e7f\u4e3a\u63a5\u53d7\u4f46\u662f\u5341\u5206\u4ee4\u4eba\u8d39\u89e3\u7684\u7b97\u6cd5 Paxos \u5df2\u7ecf\u56f0\u6270\u4e86\u65e0\u6570\u5b66\u751f\u548c\u5f00\u53d1\u8005\u5f88\u591a\u5e74\u4e86\u3002\u6211\u4eec\u521b\u9020\u4e86\u4e00\u79cd\u65b0\u7684\u7b97\u6cd5 Raft\uff0c\u663e\u800c\u6613\u89c1\u7684\u6bd4 Paxos \u8981\u5bb9\u6613\u7406\u89e3\u3002\u6211\u4eec\u540c\u65f6\u4e5f\u76f8\u4fe1\uff0cRaft \u4e5f\u53ef\u4ee5\u4e3a\u5b9e\u9645\u7684\u5b9e\u73b0\u63d0\u4f9b\u575a\u5b9e\u7684\u57fa\u7840\u3002\u628a\u53ef\u7406\u89e3\u6027\u4f5c\u4e3a\u8bbe\u8ba1\u7684\u76ee\u6807\u6539\u53d8\u4e86\u6211\u4eec\u8bbe\u8ba1 Raft \u7684\u65b9\u5f0f\uff1b\u968f\u7740\u8bbe\u8ba1\u7684\u8fdb\u5c55\uff0c\u6211\u4eec\u53d1\u73b0\u81ea\u5df1\u91cd\u590d\u4f7f\u7528\u4e86\u4e00\u4e9b\u6280\u672f\uff0c\u6bd4\u5982\u5206\u89e3\u95ee\u9898\u548c\u7b80\u5316\u72b6\u6001\u7a7a\u95f4\u3002\u8fd9\u4e9b\u6280\u672f\u4e0d\u4ec5\u63d0\u5347\u4e86 Raft \u7684\u53ef\u7406\u89e3\u6027\uff0c\u540c\u65f6\u4e5f\u4f7f\u6211\u4eec\u575a\u4fe1\u5176\u6b63\u786e\u6027\u3002","title":"11 \u7ed3\u8bba"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#12-\u611f\u8c22","text":"\u8fd9\u9879\u7814\u7a76\u5fc5\u987b\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u7684\u652f\u6301\uff1aAli Ghodsi\uff0cDavid Mazie`res\uff0c\u548c\u4f2f\u514b\u5229 CS 294-91 \u8bfe\u7a0b\u3001\u65af\u5766\u798f CS 240 \u8bfe\u7a0b\u7684\u5b66\u751f\u3002Scott Klemmer \u5e2e\u6211\u4eec\u8bbe\u8ba1\u4e86\u7528\u6237\u8c03\u67e5\uff0cNelson Ray \u5efa\u8bae\u6211\u4eec\u8fdb\u884c\u7edf\u8ba1\u5b66\u7684\u5206\u6790\u3002\u5728\u7528\u6237\u8c03\u67e5\u65f6\u4f7f\u7528\u7684\u5173\u4e8e Paxos \u7684\u5e7b\u706f\u7247\u5f88\u5927\u4e00\u90e8\u5206\u662f\u4ece Lorenzo Alvisi \u7684\u5e7b\u706f\u7247\u4e0a\u501f\u9274\u8fc7\u6765\u7684\u3002\u7279\u522b\u7684\uff0c\u975e\u5e38\u611f\u8c22 DavidMazieres \u548c Ezra Hoch\uff0c\u4ed6\u4eec\u627e\u5230\u4e86 Raft \u4e2d\u4e00\u4e9b\u96be\u4ee5\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\u8bb8\u591a\u4eba\u63d0\u4f9b\u4e86\u5173\u4e8e\u8fd9\u7bc7\u8bba\u6587\u5341\u5206\u6709\u7528\u7684\u53cd\u9988\u548c\u7528\u6237\u8c03\u67e5\u6750\u6599\uff0c\u5305\u62ec Ed Bugnion\uff0cMichael Chan\uff0cHugues Evrard\uff0cDaniel Giffin\uff0cArjun Gopalan\uff0cJon Howell\uff0cVimalkumar Jeyakumar\uff0cAnkita Kejriwal\uff0cAleksandar Kracun\uff0cAmit Levy\uff0cJoel Martin\uff0cSatoshi Matsushita\uff0cOleg Pesok\uff0cDavid Ramos\uff0cRobbert van Renesse\uff0cMendel Rosenblum\uff0cNicolas Schiper\uff0cDeian Stefan\uff0cAndrew Stone\uff0cRyan Stutsman\uff0cDavid Terei\uff0cStephen Yang\uff0cMatei Zaharia \u4ee5\u53ca 24 \u4f4d\u533f\u540d\u7684\u4f1a\u8bae\u5ba1\u67e5\u4eba\u5458\uff08\u53ef\u80fd\u6709\u91cd\u590d\uff09\uff0c\u5e76\u4e14\u7279\u522b\u611f\u8c22\u6211\u4eec\u7684\u9886\u5bfc\u4eba Eddie Kohler\u3002Werner Vogels \u53d1\u4e86\u4e00\u6761\u65e9\u671f\u8349\u7a3f\u94fe\u63a5\u7684\u63a8\u7279\uff0c\u7ed9 Raft \u5e26\u6765\u4e86\u6781\u5927\u7684\u5173\u6ce8\u3002\u6211\u4eec\u7684\u5de5\u4f5c\u7531 Gigascale \u7cfb\u7edf\u7814\u7a76\u4e2d\u5fc3\u548c Multiscale \u7cfb\u7edf\u7814\u7a76\u4e2d\u5fc3\u7ed9\u4e88\u652f\u6301\uff0c\u8fd9\u4e24\u4e2a\u7814\u7a76\u4e2d\u5fc3\u7531\u5173\u6ce8\u4e2d\u5fc3\u7814\u7a76\u7a0b\u5e8f\u8d44\u91d1\u652f\u6301\uff0c\u4e00\u4e2a\u662f\u534a\u5bfc\u4f53\u7814\u7a76\u516c\u53f8\u7684\u7a0b\u5e8f\uff0c\u7531 STARnet \u652f\u6301\uff0c\u4e00\u4e2a\u534a\u5bfc\u4f53\u7814\u7a76\u516c\u53f8\u7684\u7a0b\u5e8f\u7531 MARCO \u548c DARPA \u652f\u6301\uff0c\u5728\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u7684 0963859 \u53f7\u6279\u51c6\uff0c\u5e76\u4e14\u83b7\u5f97\u4e86\u6765\u81ea Facebook\uff0cGoogle\uff0cMellanox\uff0cNEC\uff0cNetApp\uff0cSAP \u548c Samsung \u7684\u652f\u6301\u3002Diego Ongaro \u7531 Junglee \u516c\u53f8\uff0c\u65af\u5766\u798f\u7684\u6bd5\u4e1a\u56e2\u4f53\u652f\u6301\u3002","title":"12 \u611f\u8c22"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/Raft%20%26%20ETCD/Raft%20%E8%AE%BA%E6%96%87%E4%B8%AD%E6%96%87%E7%89%88%E6%9C%AC/#\u53c2\u8003","text":"\u7565","title":"\u53c2\u8003"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/","text":"created: 2022-06-13T08:57:44 tags: [\u5206\u5e03\u5f0f\u8303\u578b\u7b80\u4ecb\u4e0e\u4e86\u89e3] source: \u539f\u6587\u5730\u5740 author: Hadoop\u5927\u6570\u636e\u5904\u7406\u6846\u67b6\u7b80\u4ecb \u00b6 Hadoop \u662f\u4e00\u4e2a\u5904\u7406\u3001\u5b58\u50a8\u548c\u5206\u6790\u6d77\u91cf\u7684\u5206\u5e03\u5f0f\u3001\u975e\u7ed3\u6784\u5316\u6570\u636e\u7684\u5f00\u6e90\u6846\u67b6\u3002\u6700\u521d\u7531 Yahoo \u7684\u5de5\u7a0b\u5e08 Doug Cutting \u548c Mike Cafarella \u5728 2005 \u5e74\u5408\u4f5c\u5f00\u53d1\u3002\u540e\u6765\uff0cHadoop \u88ab\u8d21\u732e\u7ed9\u4e86 Apache \u57fa\u91d1\u4f1a\uff0c\u6210\u4e3a Apache \u57fa\u91d1\u4f1a\u7684\u5f00\u6e90\u9879\u76ee\u3002 Hadoop \u7cfb\u7edf\u7b80\u4ecb \u00b6 Hadoop \u662f\u4e00\u79cd\u5206\u6790\u548c\u5904\u7406 \u5927\u6570\u636e \u7684\u8f6f\u4ef6\u5e73\u53f0\uff0c\u662f\u4e00\u4e2a\u7528 Java \u8bed\u8a00\u5b9e\u73b0\u7684 Apache \u7684\u5f00\u6e90\u8f6f\u4ef6\u6846\u67b6\uff0c\u5728\u5927\u91cf\u8ba1\u7b97\u673a\u7ec4\u6210\u7684\u96c6\u7fa4\u4e2d\u5b9e\u73b0\u4e86\u5bf9\u6d77\u91cf\u6570\u636e\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u3002 Hadoop \u91c7\u7528 MapReduce \u5206\u5e03\u5f0f\u8ba1\u7b97\u6846\u67b6\uff0c \u6839\u636e GFS \u539f\u7406\u5f00\u53d1\u4e86 HDFS\uff08\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff09 \uff0c \u5e76\u6839\u636e BigTable \u539f\u7406\u5f00\u53d1\u4e86 HBase \u6570\u636e\u5b58\u50a8\u7cfb\u7edf\u3002 Hadoop \u548c Google \u5185\u90e8\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u539f\u7406\u76f8\u540c\uff0c\u5176\u5f00\u6e90\u7279\u6027\u4f7f\u5176\u6210\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u7684\u4e8b\u5b9e\u4e0a\u7684\u56fd\u9645\u6807\u51c6\u3002 Yahoo\u3001Facebook\u3001Amazon\uff0c\u4ee5\u53ca\u56fd\u5185\u7684\u767e\u5ea6\u3001\u963f\u91cc\u5df4\u5df4\u7b49\u4f17\u591a\u4e92\u8054\u7f51\u516c\u53f8\u90fd\u4ee5 Hadoop \u4e3a\u57fa\u7840\u642d\u5efa\u4e86\u81ea\u5df1\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u3002 Hadoop \u662f\u4e00\u4e2a\u57fa\u7840\u6846\u67b6\uff0c\u5141\u8bb8\u7528\u7b80\u5355\u7684\u7f16\u7a0b\u6a21\u578b\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e0a\u5bf9\u5927\u578b\u6570\u636e\u96c6\u8fdb\u884c\u5206\u5e03\u5f0f\u5904\u7406\u3002 \u5b83\u7684\u8bbe\u8ba1\u89c4\u6a21\u4ece\u5355\u4e00\u670d\u52a1\u5668\u5230\u6570\u5343\u53f0\u673a\u5668\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u90fd\u80fd\u63d0\u4f9b\u672c\u5730\u8ba1\u7b97\u548c\u5b58\u50a8\u529f\u80fd\uff0c\u6846\u67b6\u672c\u8eab\u63d0\u4f9b\u7684\u662f\u8ba1\u7b97\u673a\u96c6\u7fa4\u9ad8\u53ef\u7528\u7684\u670d\u52a1\uff0c\u4e0d\u4f9d\u9760\u786c\u4ef6\u6765\u63d0\u4f9b\u9ad8\u53ef\u7528\u6027\u3002 \u7528\u6237\u53ef\u4ee5\u5728\u4e0d\u4e86\u89e3\u5206\u5e03\u5f0f\u5e95\u5c42\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u8f7b\u677e\u5730\u5728 Hadoop \u4e0a\u5f00\u53d1\u548c\u8fd0\u884c\u5904\u7406\u6d77\u91cf\u6570\u636e\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f4e\u6210\u672c\u3001\u9ad8\u53ef\u9760\u3001\u9ad8\u6269\u5c55\u3001\u9ad8\u6709\u6548\u3001\u9ad8\u5bb9\u9519\u7b49\u7279\u6027\u8ba9 hadoop \u6210\u4e3a\u6700\u6d41\u884c\u7684\u5927\u6570\u636e\u5206\u6790\u7cfb\u7edf\u3002 Hadoop \u751f\u6001\u5708 \u00b6 Hadoop \u662f\u4e00\u4e2a\u7531 Apache \u57fa\u91d1\u4f1a\u5f00\u53d1\u7684\u5927\u6570\u636e\u5206\u5e03\u5f0f\u7cfb\u7edf\u57fa\u7840\u67b6\u6784\u3002\u7528\u6237\u53ef\u4ee5\u5728\u4e0d\u4e86\u89e3\u5206\u5e03\u5f0f\u5e95\u5c42\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u8f7b\u677e\u5730\u5728 Hadoop \u4e0a\u5f00\u53d1\u548c\u8fd0\u884c\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u7684\u5206\u5e03\u5f0f\u7a0b\u5e8f\uff0c\u5145\u5206\u5229\u7528\u96c6\u7fa4\u7684\u5a01\u529b\u9ad8\u901f\u8fd0\u7b97\u548c\u5b58\u50a8\u3002 Hadoop \u662f\u4e00\u4e2a\u6570\u636e\u7ba1\u7406\u7cfb\u7edf \uff0c\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u7684\u6838\u5fc3\uff0c\u6c47\u96c6\u4e86\u7ed3\u6784\u5316\u548c\u975e\u7ed3\u6784\u5316\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5206\u5e03\u5728\u4f20\u7edf\u7684\u4f01\u4e1a\u6570\u636e\u6808\u7684\u6bcf\u4e00\u5c42\u3002 Hadoop \u4e5f\u662f\u4e00\u4e2a\u5927\u89c4\u6a21\u5e76\u884c\u5904\u7406\u6846\u67b6 \uff0c\u62e5\u6709\u8d85\u7ea7\u8ba1\u7b97\u80fd\u529b\uff0c\u5b9a\u4f4d\u4e8e\u63a8\u52a8\u4f01\u4e1a\u7ea7\u5e94\u7528\u7684\u6267\u884c\u3002 Hadoop \u53c8\u662f\u4e00\u4e2a\u5e75\u6e90\u793e\u533a\uff0c\u4e3b\u8981\u4e3a\u89e3\u51b3\u5927\u6570\u636e\u7684\u95ee\u9898\u63d0\u4f9b\u5de5\u5177\u548c\u8f6f\u4ef6\u3002 \u867d\u7136 Hadoop \u63d0\u4f9b\u4e86\u5f88\u591a\u529f\u80fd\uff0c\u4f46\u4ecd\u7136\u5e94\u8be5\u628a\u5b83\u5f52\u7c7b\u4e3a\u7531\u591a\u4e2a\u7ec4\u4ef6\u7ec4\u6210\u7684 Hadoop \u751f\u6001\u5708\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u5305\u62ec\u6570\u636e\u5b58\u50a8\u3001\u6570\u636e\u96c6\u6210\u3001\u6570\u64d4\u5904\u7406\u548c\u5176\u4ed6\u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u4e13\u95e8\u5de5\u5177\u3002 \u56fe 1 \u5c55\u793a\u4e86 Hadoop \u7684\u751f\u6001\u7cfb\u7edf\uff0c\u4e3b\u8981\u7531 HDFS\u3001MapReduce\uff0c HBase\uff0c Zookeeper\uff0c Pig\u3001 Hive \u7b49\u6838\u5fc3\u7ec4\u4ef6\u6784\u6210\uff0c\u53e6\u5916\u8fd8\u5305\u62ec Sqoop\u3001Flume \u7b49\u6846\u67b6\uff0c\u7528\u6765\u4e0e\u5176\u4ed6\u4f01\u4e1a\u7cfb\u7edf\u878d\u5408\u3002\u540c\u65f6\uff0c Hadoop \u751f\u6001\u7cfb\u7edf\u4e5f\u5728\u4e0d\u65ad\u589e\u957f\uff0c\u5b83\u65b0\u589e\u4e86 Mdhout\u3001Ambari \u7b49\u5185\u5bb9\uff0c\u4ee5\u63d0\u4f9b\u66f4\u65b0\u529f\u80fd\u3002 \\ \u56fe 1 Hadoop\u7684\u751f\u6001\u7cfb\u7edf Hadoop \u751f\u6001\u5708\u5305\u62ec\u4ee5\u4e0b\u4e3b\u8981\u7ec4\u4ef6\u3002 1\uff09HDFS \u00b6 \u4e00\u4e2a\u63d0\u4f9b\u9ad8\u53ef\u7528\u7684\u83b7\u53d6\u5e94\u7528\u6570\u636e\u7684\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002 2\uff09MapReduce \u00b6 \u4e00\u4e2a\u5e76\u884c\u5904\u7406\u5927\u6570\u636e\u96c6\u7684\u7f16\u7a0b\u6a21\u578b\u3002 3\uff09HBase \u00b6 \u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u652f\u6301\u5927\u8868\u7684\u7ed3\u6784\u5316\u6570\u636e\u5b58\u50a8\u3002 \u662f\u4e00\u4e2a\u5efa\u7acb\u5728 HDFS \u4e4b\u4e0a\u7684\uff0c\u9762\u5411\u5217\u7684 NoSQL \u6570\u636e\u5e93\uff0c\u7528\u4e8e\u5feb\u901f\u8bfb/\u5199\u5927\u91cf\u6570\u636e\u3002 4\uff09Hive \u00b6 \u4e00\u4e2a\u5efa\u7acb\u5728 Hadoop \u4e0a\u7684 \u6570\u636e\u4ed3\u5e93\u57fa\u7840\u6784\u67b6 \u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u5de5\u5177\uff1b\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u6570\u636e\u63d0\u53d6\u8f6c\u5316\u52a0\u8f7d\uff08ETL\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u4ee5\u5b58\u50a8\u3001\u67e5\u8be2\u548c\u5206\u6790\u5b58\u50a8\u5728 Hadoop \u4e2d\u7684\u5927\u89c4\u6a21\u6570\u636e\u7684\u673a\u5236\u3002 Hive \u5b9a\u4e49\u4e86\u7b80\u5355\u7684\u7c7b SQL \u67e5\u8be2\u8bed\u8a00\uff0c\u79f0\u4e3a HQL\uff0c\u5b83\u5141\u8bb8\u4e0d\u719f\u6089 MapReduce \u7684\u5f00\u53d1\u4eba\u5458\u4e5f\u80fd\u7f16\u5199\u6570\u636e\u67e5\u8be2\u8bed\u53e5\uff0c\u7136\u540e\u8fd9\u4e9b\u8bed\u53e5\u88ab\u7ffb\u8bd1\u4e3a Hadoop \u4e0a\u9762\u7684 MapReduce \u4efb\u52a1\u3002 5\uff09Mahout \u00b6 \u53ef\u6269\u5c55\u7684\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u6316\u6398\u5e93\u3002\u5b83\u63d0\u4f9b\u7684 MapReduce \u5305\u542b\u5f88\u591a\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5305\u62ec\u805a\u7c7b\u7b97\u6cd5\u3001\u56de\u5f52\u6d4b\u8bd5\u3001\u7edf\u8ba1\u5efa\u6a21\u3002 6\uff09Pig \u00b6 \u4e00\u4e2a\u652f\u6301\u5e76\u884c\u8ba1\u7b97\u7684\u9ad8\u7ea7\u7684\u6570\u636e\u6d41\u8bed\u8a00\u548c\u6267\u884c\u6846\u67b6\u3002\u5b83\u662f MapReduce \u7f16\u7a0b\u7684\u590d\u6742\u6027\u7684\u62bd\u8c61\u3002Pig \u5e73\u53f0\u5305\u62ec\u8fd0\u884c\u73af\u5883\u548c\u7528\u4e8e\u5206\u6790 Hadoop \u6570\u636e\u96c6\u7684\u811a\u672c\u8bed\u8a00\uff08PigLatin\uff09\u3002\u5176\u7f16\u8bd1\u5668\u5c06 PigLatin \u7ffb\u8bd1\u6210 MapReduce \u7a0b\u5e8f\u5e8f\u5217\u3002 7\uff09Zookeeper \u00b6 \u2014\u4e2a\u5e94\u7528\u4e8e\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u9ad8\u6027\u80fd\u7684\u534f\u8c03\u670d\u52a1\u3002\u5b83\u662f\u4e00\u4e2a\u4e3a\u5206\u5e03\u5f0f\u5e94\u7528\u63d0\u4f9b\u4e00\u81f4\u6027\u670d\u52a1\u7684\u8f6f\u4ef6\uff0c \u63d0\u4f9b\u7684\u529f\u80fd\u5305\u62ec\u914d\u7f6e\u7ef4\u62a4\u3001\u57df\u540d\u670d\u52a1\u3001\u5206\u5e03\u5f0f\u540c\u6b65\u3001\u7ec4\u670d\u52a1\u7b49 \u3002 8\uff09Amban \u00b6 \u4e00\u4e2a\u57fa\u4e8e Web \u7684\u5de5\u5177\uff0c\u7528\u6765\u4f9b\u5e94\u3001\u7ba1\u7406\u548c\u76d1\u6d4b Hadoop \u96c6\u7fa4\uff0c\u5305\u62ec\u652f\u6301 HDFS\u3001MapReduceAHive\u3001HCatalog\u3001HBase\u3001ZooKeeperAOozie\u3001Pig \u548c Sqoop \u3002 Ambari \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u89c6\u7684\u4eea\u8868\u76d8\u6765\u67e5\u770b\u96c6\u7fa4\u7684\u5065\u5eb7\u72b6\u6001\uff0c\u5e76\u4e14\u80fd\u591f\u4f7f\u7528\u6237\u53ef\u89c6\u5316\u5730\u67e5\u770b MapReduce\u3001Pig \u548c Hive \u5e94\u7528\u6765\u8bca\u65ad\u5176\u6027\u80fd\u7279\u5f81\u3002 Hadoop \u7684\u751f\u6001\u5708\u8fd8\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6846\u67b6\uff0c\u7528\u6765\u4e0e\u5176\u4ed6\u4f01\u4e1a\u878d\u5408\u3002 1\uff09Sqoop \u00b6 \u4e00\u4e2a\u8fde\u63a5\u5de5\u5177\uff0c\u7528\u4e8e\u5728\u5173\u7cfb\u6570\u636e\u5e93\u3001\u6570\u636e\u4ed3\u5e93\u548c Hadoop \u4e4b\u95f4\u8f6c\u79fb\u6570\u636e\u3002Sqoop \u5229\u7528\u6570\u636e\u5e93\u6280\u672f\u63cf\u8ff0\u67b6\u6784\uff0c\u8fdb\u884c\u6570\u636e\u7684\u5bfc\u5165/\u5bfc\u51fa\uff1b\u5229\u7528 MapReduce \u5b9e\u73b0\u5e76\u884c\u5316\u8fd0\u884c\u548c\u5bb9\u9519\u6280\u672f\u3002 2\uff09Flume \u00b6 \u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u3001\u53ef\u9760\u3001\u9ad8\u6548\u7684\u670d\u52a1\uff0c\u7528\u4e8e\u6536\u96c6\u3001\u6c47\u603b\u5927\u6570\u636e\uff0c\u5e76\u5c06\u5355\u53f0\u8ba1\u7b97\u673a\u7684\u5927\u91cf\u6570\u636e\u8f6c\u79fb\u5230 HDFS\u3002\u5b83\u57fa\u4e8e\u4e00\u4e2a\u7b80\u5355\u800c\u7075\u6d3b\u7684\u67b6\u6784\uff0c\u5e76\u63d0\u4f9b\u4e86\u6570\u636e\u6d41\u7684\u6d41\u3002\u5b83\u5229\u7528\u7b80\u5355\u7684\u53ef\u6269\u5c55\u7684\u6570\u636e\u6a21\u578b\uff0c\u5c06\u4f01\u4e1a\u4e2d\u591a\u53f0\u8ba1\u7b97\u673a\u4e0a\u7684\u6570\u636e\u8f6c\u79fb\u5230 Hadoop\u3002 Hadoop\u7248\u672c\u6f14\u8fdb \u00b6 \u5f53\u524d Hadoop \u6709\u4e24\u5927\u7248\u672c\uff1aHadoop 1.0 \u548c Hadoop 2.0\uff0c\u5982\u56fe 2 \u6240\u793a\u3002Hadoop 1.0 \u88ab\u79f0\u4e3a\u7b2c\u4e00\u4ee3 Hadoop\uff0c\u7531 HDFS \u548c MapReduce \u7ec4\u6210\u3002 HDFS \u7531\u4e00\u4e2a NameNode \u548c\u591a\u4e2a DataNode \u7ec4\u6210\uff0cMapReduce \u7531\u4e00\u4e2a JobTracker \u548c\u591a\u4e2a TaskTracker \u7ec4\u6210\u3002 Hadoop 1.0 \u5bf9\u5e94\u7684 Hadoop \u7248\u672c\u4e3a0.20.x\u30010.21.x\u3001 0.22.x \u548c Hadoop 1.x\u3002\u5176\u4e2d\uff0c0.20.x \u662f\u6bd4\u8f83\u7a33\u5b9a\u7684\u7248\u672c\uff0c\u5b83\u6700\u540e\u6f14\u5316\u4e3a 1.x\uff0c\u53d8\u6210\u7a33\u5b9a\u7248\u672c\u30020.21.x \u548c 0.22.x \u5219\u589e\u52a0\u4e86 NameNode HA \u7b49\u65b0\u7279\u6027\u3002 \\ \u56fe 2 Hadoop \u7248\u672c\u6f14\u8fdb\u56fe Hadoop 2.0 \u88ab\u79f0\u4e3a\u7b2c\u4e8c\u4ee3 Hadoop\uff0c\u662f\u4e3a\u514b\u670d Hadoop 1.0 \u4e2d HDFS \u548c MapReduce \u5b58\u5728\u7684\u5404\u79cd\u95ee\u9898\u800c\u63d0\u51fa\u7684\uff0c\u5bf9\u5e94\u7684 Hadoop \u7248\u672c\u4e3a 0.23.x \u548c 2.x\u3002 \u9488\u5bf9 Hadoop 1.0 \u4e2d NameNode HA \u4e0d\u652f\u6301\u81ea\u52a8\u5207\u6362\u4e14\u5207\u6362\u65f6\u95f4\u8fc7\u957f\u7684\u98ce\u9669\uff0cHadoop2.0 \u63d0\u51fa\u4e86\u57fa\u4e8e\u5171\u4eab\u5b58\u50a8\u7684 HA \u65b9\u5f0f\uff0c\u8be5\u65b9\u5f0f\u652f\u6301\u5931\u8d25\u81ea\u52a8\u5207\u6362\u5207\u56de\u3002 \u9488\u5bf9 Hadoop 1.0 \u4e2d\u7684\u5355 NameNode \u5236\u7ea6 HDFS \u6269\u5c55\u6027\u7684\u95ee\u9898\uff0cHadoop 2.0 \u63d0\u51fa\u4e86 HDFS Federation \u673a\u5236\uff0c\u5b83\u5141\u8bb8\u591a\u4e2a NameNode \u5404\u81ea\u5206\u7ba1\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fdb\u800c\u5b9e\u73b0\u6570\u636e\u8bbf\u95ee\u9694\u79bb\u548c\u96c6\u7fa4\u6a2a\u5411\u6269\u5c55\u3002 \u9488\u5bf9 Hadoop 1.0 \u4e2d\u7684 MapReduce \u5728\u6269\u5c55\u6027\u548c\u591a\u6846\u67b6\u652f\u6301\u65b9\u9762\u7684\u4e0d\u8db3\uff0cHadoop 2.0 \u63d0\u51fa\u4e86\u5168\u65b0\u7684\u8d44\u6e90\u7ba1\u7406\u6846\u67b6 YARN\uff0c\u5b83\u5c06 JobTracker \u4e2d\u7684\u8d44\u6e90\u7ba1\u7406\u548c\u4f5c\u4e1a\u63a7\u5236\u529f\u80fd\u5206\u5f00\uff0c\u5206\u522b\u7531\u7ec4\u4ef6 ResourceManager \u548c ApplicationMaster \u5b9e\u73b0\u3002 \u5176\u4e2d\uff0cResourceManager \u8d1f\u8d23\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\u5206\u914d\uff0c\u800c ApplicationMaster \u4ec5\u8d1f\u8d23\u7ba1\u7406\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u76f8\u6bd4\u4e8e Hadoop 1.0\uff0cHadoop 2.0 \u6846\u67b6\u5177\u6709\u66f4\u597d\u7684\u6269\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u53ef\u9760\u6027\u3001\u5411\u540e\u517c\u5bb9\u6027\u548c\u66f4\u9ad8\u7684\u8d44\u6e90\u5229\u7528\u7387\uff0cHadoop 2.0 \u8fd8\u80fd\u652f\u6301\u9664 MapReduce \u8ba1\u7b97\u6846\u67b6\u4ee5\u5916\u7684\u66f4\u591a\u7684\u8ba1\u7b97\u6846\u67b6\uff0cHadoop2.0 \u662f\u76ee\u524d\u4e1a\u754c\u4e3b\u6d41\u4f7f\u7528\u7684 Hadoop \u7248\u672c\u3002 Hadoop \u53d1\u884c\u7248\u672c \u00b6 \u867d\u7136 Hadoop \u662f\u5f00\u6e90\u7684 Apache \u9879\u76ee\uff0c\u4f46\u662f\u5728 Hadoop \u884c\u4e1a\uff0c\u4ecd\u7136\u51fa\u73b0\u4e86\u5927\u91cf\u7684\u65b0\u5174\u516c\u53f8\uff0c\u5b83\u4eec\u4ee5\u5e2e\u52a9\u4eba\u4eec\u66f4\u65b9\u4fbf\u5730\u4f7f\u7528 Hadoop \u4e3a\u76ee\u6807\u3002\u8fd9\u4e9b\u4f01\u4e1a\u5927\u591a\u5c06 Hadoop \u53d1\u884c\u7248\u8fdb\u884c\u6253\u5305\u3001\u6539\u8fdb\uff0c\u4ee5\u786e\u4fdd\u6240\u6709\u7684\u8f6f\u4ef6\u4e00\u8d77\u5de5\u4f5c\u3002 Hadoop \u7684\u53d1\u884c\u7248\u9664\u4e86\u793e\u533a\u7684 Apache Hadoop \u5916\uff0cCloudera\u3001Hortonworks\u3001MapR\u3001EMC\u3001IBM\u3001INTEL\u3001\u534e\u4e3a\u7b49\u90fd\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u5546\u4e1a\u7248\u672c\u3002\u5546\u4e1a\u7248\u672c\u4e3b\u8981\u662f\u63d0\u4f9b\u4e13\u4e1a\u7684\u6280\u672f\u652f\u6301\uff0c\u8fd9\u5bf9\u4e00\u4e9b\u5927\u578b\u4f01\u4e1a\u5c24\u5176\u91cd\u8981\u3002\u6bcf\u4e2a\u53d1\u884c\u7248\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u4e9b\u7279\u70b9\uff0c\u672c\u8282\u5c31 3 \u4e2a\u4e3b\u8981\u7684\u53d1\u884c\u7248\u672c\u505a\u7b80\u5355\u4ecb\u7ecd\u3002 2008 \u5e74\u6210\u7acb\u7684 Cloudera \u662f\u6700\u65e9\u5c06 Hadoop \u5546\u7528\u7684\u516c\u53f8\uff0c\u5b83\u4e3a\u5408\u4f5c\u4f19\u4f34\u63d0\u4f9b Hadoop \u7684\u5546\u7528\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u5305\u62ec\u652f\u6301\u3001\u54a8\u8be2\u670d\u52a1\u548c\u57f9\u8bad\u3002Cloudera \u7684\u4ea7\u54c1\u4e3b\u8981\u4e3a CDH\u3001Cloudera Manager \u548c Cloudera Support\u3002CDH \u662f Cloudem \u7684 Hadoop \u53d1\u884c\u7248\u672c\uff0c\u5b8c\u5168\u5f00\u6e90\uff0c\u6bd4 Hadoop \u5728\u517c\u5bb9\u6027\u3001\u5b89\u5168\u6027\u3001\u7a33\u5b9a\u6027\u4e0a\u6709\u6240\u589e\u5f3a\u3002 Cloudera Manager \u662f\u96c6\u7fa4\u7684\u8f6f\u4ef6\u5206\u53d1\u53ca\u7ba1\u7406\u76d1\u63a7\u5e73\u53f0\uff0c\u53ef\u4ee5\u5728\u51e0\u4e2a\u5c0f\u65f6\u5167\u90e8\u7f72\u597d\u4e00\u4e2a Hadoop \u96c6\u7fa4\uff0c\u5e76\u5bf9\u96c6\u7fa4\u7684\u7ed3\u70b9\u53ca\u670d\u52a1\u8fdb\u884c\u5b9e\u65f6\u76d1\u63a7\u3002Cloudera Support \u5373\u662f\u5bf9 Hadoop \u7684\u6280\u672f\u652f\u6301\u3002 2011 \u5e74\u6210\u7acb\u7684 Hortonworks \u662f Yahoo \u4e0e\u7845\u8c37\u98ce\u6295\u516c\u53f8 Benchmark Capital \u5408\u8d44\u7ec4\u5efa\u7684\u516c\u53f8\u3002\u516c\u53f8\u6210\u7acb\u4e4b\u521d\u5438\u7eb3\u4e86\u5927\u7ea6 25 \u540d\u81f3 30 \u540d\u4e13\u95e8\u7814\u7a76 Hadoop \u7684 Yahoo \u5de5\u7a0b\u5e08\uff0c\u4e0a\u8ff0\u5de5\u7a0b\u5e08\u5747\u5728 2005 \u5e74\u5f00\u59cb\u534f\u52a9 Yahoo \u5f00\u53d1 Hadoop\uff0c\u8fd9\u4e9b\u5de5\u7a0b\u5e08\u8d21\u732e\u4e86 Hadoop 80% \u7684\u4ee3\u7801\u3002 Hortonworks\u7684\u4e3b\u6253\u4ea7\u54c1\u662fHortonworks DataPlatform\uff08HDP\uff09\uff0c\u4e5f\u540c\u6837\u662f 100% \u5f00\u6e90\u7684\u4ea7\u54c1\u3002HDP \u9664\u4e86\u5e38\u89c1\u7684\u9879\u76ee\u5916\uff0c\u8fd8\u5305\u542b\u4e86\u4e00\u6b3e\u5f00\u6e90\u7684\u5b89\u88c5\u548c\u7ba1\u7406\u7cfb\u7edf\uff08Amban\uff09\u3002 Cloudera \u548c Hortonworks \u5747\u662f\u901a\u8fc7\u4e0d\u65ad\u63d0\u4ea4\u4ee3\u7801\u6765\u5b8c\u5584 Hadoop \u7684\uff0c\u800c 2009 \u5e74\u6210\u7acb\u7684 MapR \u516c\u53f8\u5728 Hadoop \u9886\u57df\u663e\u5f97\u6709\u4e9b\u7279\u7acb\u72ec\u884c\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u6b3e\u72ec\u7279\u7684\u53d1\u884c\u7248\u672c\u3002 MapR \u8ba4\u4e3a Hadoop \u7684\u4ee3\u7801\u53ea\u662f\u53c2\u8003\uff0c\u53ef\u4ee5\u57fa\u4e8e Hadoop \u63d0\u4f9b\u7684 API \u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u9700\u6c42\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u5f97 MapR \u505a\u51fa\u4e86\u5f88\u5927\u7684\u521b\u65b0\uff0c\u7279\u522b\u662f\u5728 HDFS \u548c HBase \u65b9\u9762\uff0cMapR \u8ba9\u8fd9\u4e24\u4e2a\u57fa\u672c\u7684 Hadoop \u7684\u5b58\u50a8\u673a\u5236\u66f4\u52a0\u53ef\u9760\u3001\u66f4\u52a0\u9ad8\u6027\u80fd\u3002 MapR \u8fd8\u63a8\u51fa\u4e86\u9ad8\u901f\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff08NFS\uff09\u6765\u8bbf\u95ee HDFS\uff0c\u4ece\u800c\u5927\u5927\u7b80\u5316\u4e86\u4e00\u4e9b\u4f01\u4e1a\u7ea7\u5e94\u7528\u7684\u96c6\u6210\u3002 MapR \u7528\u65b0\u67b6\u6784\u91cd\u5199 HDFS\uff0c\u540c\u65f6\u5728 API \u7ea7\u522b\uff0c\u548c\u76ee\u524d\u7684 Hadoop \u53d1\u884c\u7248\u672c\u4fdd\u6301\u517c\u5bb9\u3002MapR \u6784\u5efa\u4e86\u4e00\u4e2a HDFS \u7684\u79c1\u6709\u66ff\u4ee3\u54c1\uff0c\u6bd4\u5f00\u6e90\u7248\u672c\u5feb 3 \u500d\uff0c\u81ea\u5e26\u5feb\u7167\u529f\u80fd\uff0c\u800c\u4e14\u652f\u6301\u65e0 NameNode \u5355\u70b9\u6545\u969c\u3002 MapR \u7248\u672c\u4e0d\u518d\u9700\u8981\u5355\u72ec\u7684 NameNode \u673a\u5668\uff0c\u5143\u6570\u636e\u5206\u6563\u5728\u96c6\u7fa4\u4e2d\uff0c\u7c7b\u4f3c\u6570\u636e\u9ed8\u8ba4\u5b58\u50a8 3 \u4efd\uff0c\u4e0d\u518d\u9700\u8981\u7528 NAS \u6765\u534f\u52a9 NameNode \u505a\u5143\u6570\u636e\u5907\u4efd\uff0c\u63d0\u9ad8\u4e86\u673a\u5668\u4f7f\u7528\u7387\u3002 MapR \u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u4f7f\u7528 NFS \u76f4\u63a5\u8bbf\u95ee HDFS\uff0c\u63d0\u4f9b\u4e86\u4e0e\u539f\u6709\u5e94\u7528\u7684\u517c\u5bb9\u6027\u3002MapR \u7684\u955c\u50cf\u529f\u80fd\u5f88\u9002\u5408\u505a\u6570\u636e\u5907\u4efd\uff0c\u800c\u4e14\u652f\u6301\u8de8\u6570\u636e\u4e2d\u5fc3\u7684\u955c\u50cf\u3002","title":"Hadoop\u5927\u6570\u636e\u5904\u7406\u6846\u67b6\u7b80\u4ecb"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#hadoop\u5927\u6570\u636e\u5904\u7406\u6846\u67b6\u7b80\u4ecb","text":"Hadoop \u662f\u4e00\u4e2a\u5904\u7406\u3001\u5b58\u50a8\u548c\u5206\u6790\u6d77\u91cf\u7684\u5206\u5e03\u5f0f\u3001\u975e\u7ed3\u6784\u5316\u6570\u636e\u7684\u5f00\u6e90\u6846\u67b6\u3002\u6700\u521d\u7531 Yahoo \u7684\u5de5\u7a0b\u5e08 Doug Cutting \u548c Mike Cafarella \u5728 2005 \u5e74\u5408\u4f5c\u5f00\u53d1\u3002\u540e\u6765\uff0cHadoop \u88ab\u8d21\u732e\u7ed9\u4e86 Apache \u57fa\u91d1\u4f1a\uff0c\u6210\u4e3a Apache \u57fa\u91d1\u4f1a\u7684\u5f00\u6e90\u9879\u76ee\u3002","title":"Hadoop\u5927\u6570\u636e\u5904\u7406\u6846\u67b6\u7b80\u4ecb"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#hadoop-\u7cfb\u7edf\u7b80\u4ecb","text":"Hadoop \u662f\u4e00\u79cd\u5206\u6790\u548c\u5904\u7406 \u5927\u6570\u636e \u7684\u8f6f\u4ef6\u5e73\u53f0\uff0c\u662f\u4e00\u4e2a\u7528 Java \u8bed\u8a00\u5b9e\u73b0\u7684 Apache \u7684\u5f00\u6e90\u8f6f\u4ef6\u6846\u67b6\uff0c\u5728\u5927\u91cf\u8ba1\u7b97\u673a\u7ec4\u6210\u7684\u96c6\u7fa4\u4e2d\u5b9e\u73b0\u4e86\u5bf9\u6d77\u91cf\u6570\u636e\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u3002 Hadoop \u91c7\u7528 MapReduce \u5206\u5e03\u5f0f\u8ba1\u7b97\u6846\u67b6\uff0c \u6839\u636e GFS \u539f\u7406\u5f00\u53d1\u4e86 HDFS\uff08\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff09 \uff0c \u5e76\u6839\u636e BigTable \u539f\u7406\u5f00\u53d1\u4e86 HBase \u6570\u636e\u5b58\u50a8\u7cfb\u7edf\u3002 Hadoop \u548c Google \u5185\u90e8\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u539f\u7406\u76f8\u540c\uff0c\u5176\u5f00\u6e90\u7279\u6027\u4f7f\u5176\u6210\u4e3a\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u7684\u4e8b\u5b9e\u4e0a\u7684\u56fd\u9645\u6807\u51c6\u3002 Yahoo\u3001Facebook\u3001Amazon\uff0c\u4ee5\u53ca\u56fd\u5185\u7684\u767e\u5ea6\u3001\u963f\u91cc\u5df4\u5df4\u7b49\u4f17\u591a\u4e92\u8054\u7f51\u516c\u53f8\u90fd\u4ee5 Hadoop \u4e3a\u57fa\u7840\u642d\u5efa\u4e86\u81ea\u5df1\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u7cfb\u7edf\u3002 Hadoop \u662f\u4e00\u4e2a\u57fa\u7840\u6846\u67b6\uff0c\u5141\u8bb8\u7528\u7b80\u5355\u7684\u7f16\u7a0b\u6a21\u578b\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e0a\u5bf9\u5927\u578b\u6570\u636e\u96c6\u8fdb\u884c\u5206\u5e03\u5f0f\u5904\u7406\u3002 \u5b83\u7684\u8bbe\u8ba1\u89c4\u6a21\u4ece\u5355\u4e00\u670d\u52a1\u5668\u5230\u6570\u5343\u53f0\u673a\u5668\uff0c\u6bcf\u4e2a\u670d\u52a1\u5668\u90fd\u80fd\u63d0\u4f9b\u672c\u5730\u8ba1\u7b97\u548c\u5b58\u50a8\u529f\u80fd\uff0c\u6846\u67b6\u672c\u8eab\u63d0\u4f9b\u7684\u662f\u8ba1\u7b97\u673a\u96c6\u7fa4\u9ad8\u53ef\u7528\u7684\u670d\u52a1\uff0c\u4e0d\u4f9d\u9760\u786c\u4ef6\u6765\u63d0\u4f9b\u9ad8\u53ef\u7528\u6027\u3002 \u7528\u6237\u53ef\u4ee5\u5728\u4e0d\u4e86\u89e3\u5206\u5e03\u5f0f\u5e95\u5c42\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u8f7b\u677e\u5730\u5728 Hadoop \u4e0a\u5f00\u53d1\u548c\u8fd0\u884c\u5904\u7406\u6d77\u91cf\u6570\u636e\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f4e\u6210\u672c\u3001\u9ad8\u53ef\u9760\u3001\u9ad8\u6269\u5c55\u3001\u9ad8\u6709\u6548\u3001\u9ad8\u5bb9\u9519\u7b49\u7279\u6027\u8ba9 hadoop \u6210\u4e3a\u6700\u6d41\u884c\u7684\u5927\u6570\u636e\u5206\u6790\u7cfb\u7edf\u3002","title":"Hadoop \u7cfb\u7edf\u7b80\u4ecb"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#hadoop-\u751f\u6001\u5708","text":"Hadoop \u662f\u4e00\u4e2a\u7531 Apache \u57fa\u91d1\u4f1a\u5f00\u53d1\u7684\u5927\u6570\u636e\u5206\u5e03\u5f0f\u7cfb\u7edf\u57fa\u7840\u67b6\u6784\u3002\u7528\u6237\u53ef\u4ee5\u5728\u4e0d\u4e86\u89e3\u5206\u5e03\u5f0f\u5e95\u5c42\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u8f7b\u677e\u5730\u5728 Hadoop \u4e0a\u5f00\u53d1\u548c\u8fd0\u884c\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u7684\u5206\u5e03\u5f0f\u7a0b\u5e8f\uff0c\u5145\u5206\u5229\u7528\u96c6\u7fa4\u7684\u5a01\u529b\u9ad8\u901f\u8fd0\u7b97\u548c\u5b58\u50a8\u3002 Hadoop \u662f\u4e00\u4e2a\u6570\u636e\u7ba1\u7406\u7cfb\u7edf \uff0c\u4f5c\u4e3a\u6570\u636e\u5206\u6790\u7684\u6838\u5fc3\uff0c\u6c47\u96c6\u4e86\u7ed3\u6784\u5316\u548c\u975e\u7ed3\u6784\u5316\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5206\u5e03\u5728\u4f20\u7edf\u7684\u4f01\u4e1a\u6570\u636e\u6808\u7684\u6bcf\u4e00\u5c42\u3002 Hadoop \u4e5f\u662f\u4e00\u4e2a\u5927\u89c4\u6a21\u5e76\u884c\u5904\u7406\u6846\u67b6 \uff0c\u62e5\u6709\u8d85\u7ea7\u8ba1\u7b97\u80fd\u529b\uff0c\u5b9a\u4f4d\u4e8e\u63a8\u52a8\u4f01\u4e1a\u7ea7\u5e94\u7528\u7684\u6267\u884c\u3002 Hadoop \u53c8\u662f\u4e00\u4e2a\u5e75\u6e90\u793e\u533a\uff0c\u4e3b\u8981\u4e3a\u89e3\u51b3\u5927\u6570\u636e\u7684\u95ee\u9898\u63d0\u4f9b\u5de5\u5177\u548c\u8f6f\u4ef6\u3002 \u867d\u7136 Hadoop \u63d0\u4f9b\u4e86\u5f88\u591a\u529f\u80fd\uff0c\u4f46\u4ecd\u7136\u5e94\u8be5\u628a\u5b83\u5f52\u7c7b\u4e3a\u7531\u591a\u4e2a\u7ec4\u4ef6\u7ec4\u6210\u7684 Hadoop \u751f\u6001\u5708\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u5305\u62ec\u6570\u636e\u5b58\u50a8\u3001\u6570\u636e\u96c6\u6210\u3001\u6570\u64d4\u5904\u7406\u548c\u5176\u4ed6\u8fdb\u884c\u6570\u636e\u5206\u6790\u7684\u4e13\u95e8\u5de5\u5177\u3002 \u56fe 1 \u5c55\u793a\u4e86 Hadoop \u7684\u751f\u6001\u7cfb\u7edf\uff0c\u4e3b\u8981\u7531 HDFS\u3001MapReduce\uff0c HBase\uff0c Zookeeper\uff0c Pig\u3001 Hive \u7b49\u6838\u5fc3\u7ec4\u4ef6\u6784\u6210\uff0c\u53e6\u5916\u8fd8\u5305\u62ec Sqoop\u3001Flume \u7b49\u6846\u67b6\uff0c\u7528\u6765\u4e0e\u5176\u4ed6\u4f01\u4e1a\u7cfb\u7edf\u878d\u5408\u3002\u540c\u65f6\uff0c Hadoop \u751f\u6001\u7cfb\u7edf\u4e5f\u5728\u4e0d\u65ad\u589e\u957f\uff0c\u5b83\u65b0\u589e\u4e86 Mdhout\u3001Ambari \u7b49\u5185\u5bb9\uff0c\u4ee5\u63d0\u4f9b\u66f4\u65b0\u529f\u80fd\u3002 \\ \u56fe 1 Hadoop\u7684\u751f\u6001\u7cfb\u7edf Hadoop \u751f\u6001\u5708\u5305\u62ec\u4ee5\u4e0b\u4e3b\u8981\u7ec4\u4ef6\u3002","title":"Hadoop \u751f\u6001\u5708"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#1hdfs","text":"\u4e00\u4e2a\u63d0\u4f9b\u9ad8\u53ef\u7528\u7684\u83b7\u53d6\u5e94\u7528\u6570\u636e\u7684\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002","title":"1\uff09HDFS"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#2mapreduce","text":"\u4e00\u4e2a\u5e76\u884c\u5904\u7406\u5927\u6570\u636e\u96c6\u7684\u7f16\u7a0b\u6a21\u578b\u3002","title":"2\uff09MapReduce"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#3hbase","text":"\u4e00\u4e2a\u53ef\u6269\u5c55\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u652f\u6301\u5927\u8868\u7684\u7ed3\u6784\u5316\u6570\u636e\u5b58\u50a8\u3002 \u662f\u4e00\u4e2a\u5efa\u7acb\u5728 HDFS \u4e4b\u4e0a\u7684\uff0c\u9762\u5411\u5217\u7684 NoSQL \u6570\u636e\u5e93\uff0c\u7528\u4e8e\u5feb\u901f\u8bfb/\u5199\u5927\u91cf\u6570\u636e\u3002","title":"3\uff09HBase"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#4hive","text":"\u4e00\u4e2a\u5efa\u7acb\u5728 Hadoop \u4e0a\u7684 \u6570\u636e\u4ed3\u5e93\u57fa\u7840\u6784\u67b6 \u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u5de5\u5177\uff1b\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u6570\u636e\u63d0\u53d6\u8f6c\u5316\u52a0\u8f7d\uff08ETL\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u4ee5\u5b58\u50a8\u3001\u67e5\u8be2\u548c\u5206\u6790\u5b58\u50a8\u5728 Hadoop \u4e2d\u7684\u5927\u89c4\u6a21\u6570\u636e\u7684\u673a\u5236\u3002 Hive \u5b9a\u4e49\u4e86\u7b80\u5355\u7684\u7c7b SQL \u67e5\u8be2\u8bed\u8a00\uff0c\u79f0\u4e3a HQL\uff0c\u5b83\u5141\u8bb8\u4e0d\u719f\u6089 MapReduce \u7684\u5f00\u53d1\u4eba\u5458\u4e5f\u80fd\u7f16\u5199\u6570\u636e\u67e5\u8be2\u8bed\u53e5\uff0c\u7136\u540e\u8fd9\u4e9b\u8bed\u53e5\u88ab\u7ffb\u8bd1\u4e3a Hadoop \u4e0a\u9762\u7684 MapReduce \u4efb\u52a1\u3002","title":"4\uff09Hive"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#5mahout","text":"\u53ef\u6269\u5c55\u7684\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u6316\u6398\u5e93\u3002\u5b83\u63d0\u4f9b\u7684 MapReduce \u5305\u542b\u5f88\u591a\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5305\u62ec\u805a\u7c7b\u7b97\u6cd5\u3001\u56de\u5f52\u6d4b\u8bd5\u3001\u7edf\u8ba1\u5efa\u6a21\u3002","title":"5\uff09Mahout"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#6pig","text":"\u4e00\u4e2a\u652f\u6301\u5e76\u884c\u8ba1\u7b97\u7684\u9ad8\u7ea7\u7684\u6570\u636e\u6d41\u8bed\u8a00\u548c\u6267\u884c\u6846\u67b6\u3002\u5b83\u662f MapReduce \u7f16\u7a0b\u7684\u590d\u6742\u6027\u7684\u62bd\u8c61\u3002Pig \u5e73\u53f0\u5305\u62ec\u8fd0\u884c\u73af\u5883\u548c\u7528\u4e8e\u5206\u6790 Hadoop \u6570\u636e\u96c6\u7684\u811a\u672c\u8bed\u8a00\uff08PigLatin\uff09\u3002\u5176\u7f16\u8bd1\u5668\u5c06 PigLatin \u7ffb\u8bd1\u6210 MapReduce \u7a0b\u5e8f\u5e8f\u5217\u3002","title":"6\uff09Pig"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#7zookeeper","text":"\u2014\u4e2a\u5e94\u7528\u4e8e\u5206\u5e03\u5f0f\u5e94\u7528\u7684\u9ad8\u6027\u80fd\u7684\u534f\u8c03\u670d\u52a1\u3002\u5b83\u662f\u4e00\u4e2a\u4e3a\u5206\u5e03\u5f0f\u5e94\u7528\u63d0\u4f9b\u4e00\u81f4\u6027\u670d\u52a1\u7684\u8f6f\u4ef6\uff0c \u63d0\u4f9b\u7684\u529f\u80fd\u5305\u62ec\u914d\u7f6e\u7ef4\u62a4\u3001\u57df\u540d\u670d\u52a1\u3001\u5206\u5e03\u5f0f\u540c\u6b65\u3001\u7ec4\u670d\u52a1\u7b49 \u3002","title":"7\uff09Zookeeper"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#8amban","text":"\u4e00\u4e2a\u57fa\u4e8e Web \u7684\u5de5\u5177\uff0c\u7528\u6765\u4f9b\u5e94\u3001\u7ba1\u7406\u548c\u76d1\u6d4b Hadoop \u96c6\u7fa4\uff0c\u5305\u62ec\u652f\u6301 HDFS\u3001MapReduceAHive\u3001HCatalog\u3001HBase\u3001ZooKeeperAOozie\u3001Pig \u548c Sqoop \u3002 Ambari \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u89c6\u7684\u4eea\u8868\u76d8\u6765\u67e5\u770b\u96c6\u7fa4\u7684\u5065\u5eb7\u72b6\u6001\uff0c\u5e76\u4e14\u80fd\u591f\u4f7f\u7528\u6237\u53ef\u89c6\u5316\u5730\u67e5\u770b MapReduce\u3001Pig \u548c Hive \u5e94\u7528\u6765\u8bca\u65ad\u5176\u6027\u80fd\u7279\u5f81\u3002 Hadoop \u7684\u751f\u6001\u5708\u8fd8\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u6846\u67b6\uff0c\u7528\u6765\u4e0e\u5176\u4ed6\u4f01\u4e1a\u878d\u5408\u3002","title":"8\uff09Amban"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#1sqoop","text":"\u4e00\u4e2a\u8fde\u63a5\u5de5\u5177\uff0c\u7528\u4e8e\u5728\u5173\u7cfb\u6570\u636e\u5e93\u3001\u6570\u636e\u4ed3\u5e93\u548c Hadoop \u4e4b\u95f4\u8f6c\u79fb\u6570\u636e\u3002Sqoop \u5229\u7528\u6570\u636e\u5e93\u6280\u672f\u63cf\u8ff0\u67b6\u6784\uff0c\u8fdb\u884c\u6570\u636e\u7684\u5bfc\u5165/\u5bfc\u51fa\uff1b\u5229\u7528 MapReduce \u5b9e\u73b0\u5e76\u884c\u5316\u8fd0\u884c\u548c\u5bb9\u9519\u6280\u672f\u3002","title":"1\uff09Sqoop"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#2flume","text":"\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u3001\u53ef\u9760\u3001\u9ad8\u6548\u7684\u670d\u52a1\uff0c\u7528\u4e8e\u6536\u96c6\u3001\u6c47\u603b\u5927\u6570\u636e\uff0c\u5e76\u5c06\u5355\u53f0\u8ba1\u7b97\u673a\u7684\u5927\u91cf\u6570\u636e\u8f6c\u79fb\u5230 HDFS\u3002\u5b83\u57fa\u4e8e\u4e00\u4e2a\u7b80\u5355\u800c\u7075\u6d3b\u7684\u67b6\u6784\uff0c\u5e76\u63d0\u4f9b\u4e86\u6570\u636e\u6d41\u7684\u6d41\u3002\u5b83\u5229\u7528\u7b80\u5355\u7684\u53ef\u6269\u5c55\u7684\u6570\u636e\u6a21\u578b\uff0c\u5c06\u4f01\u4e1a\u4e2d\u591a\u53f0\u8ba1\u7b97\u673a\u4e0a\u7684\u6570\u636e\u8f6c\u79fb\u5230 Hadoop\u3002","title":"2\uff09Flume"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#hadoop\u7248\u672c\u6f14\u8fdb","text":"\u5f53\u524d Hadoop \u6709\u4e24\u5927\u7248\u672c\uff1aHadoop 1.0 \u548c Hadoop 2.0\uff0c\u5982\u56fe 2 \u6240\u793a\u3002Hadoop 1.0 \u88ab\u79f0\u4e3a\u7b2c\u4e00\u4ee3 Hadoop\uff0c\u7531 HDFS \u548c MapReduce \u7ec4\u6210\u3002 HDFS \u7531\u4e00\u4e2a NameNode \u548c\u591a\u4e2a DataNode \u7ec4\u6210\uff0cMapReduce \u7531\u4e00\u4e2a JobTracker \u548c\u591a\u4e2a TaskTracker \u7ec4\u6210\u3002 Hadoop 1.0 \u5bf9\u5e94\u7684 Hadoop \u7248\u672c\u4e3a0.20.x\u30010.21.x\u3001 0.22.x \u548c Hadoop 1.x\u3002\u5176\u4e2d\uff0c0.20.x \u662f\u6bd4\u8f83\u7a33\u5b9a\u7684\u7248\u672c\uff0c\u5b83\u6700\u540e\u6f14\u5316\u4e3a 1.x\uff0c\u53d8\u6210\u7a33\u5b9a\u7248\u672c\u30020.21.x \u548c 0.22.x \u5219\u589e\u52a0\u4e86 NameNode HA \u7b49\u65b0\u7279\u6027\u3002 \\ \u56fe 2 Hadoop \u7248\u672c\u6f14\u8fdb\u56fe Hadoop 2.0 \u88ab\u79f0\u4e3a\u7b2c\u4e8c\u4ee3 Hadoop\uff0c\u662f\u4e3a\u514b\u670d Hadoop 1.0 \u4e2d HDFS \u548c MapReduce \u5b58\u5728\u7684\u5404\u79cd\u95ee\u9898\u800c\u63d0\u51fa\u7684\uff0c\u5bf9\u5e94\u7684 Hadoop \u7248\u672c\u4e3a 0.23.x \u548c 2.x\u3002 \u9488\u5bf9 Hadoop 1.0 \u4e2d NameNode HA \u4e0d\u652f\u6301\u81ea\u52a8\u5207\u6362\u4e14\u5207\u6362\u65f6\u95f4\u8fc7\u957f\u7684\u98ce\u9669\uff0cHadoop2.0 \u63d0\u51fa\u4e86\u57fa\u4e8e\u5171\u4eab\u5b58\u50a8\u7684 HA \u65b9\u5f0f\uff0c\u8be5\u65b9\u5f0f\u652f\u6301\u5931\u8d25\u81ea\u52a8\u5207\u6362\u5207\u56de\u3002 \u9488\u5bf9 Hadoop 1.0 \u4e2d\u7684\u5355 NameNode \u5236\u7ea6 HDFS \u6269\u5c55\u6027\u7684\u95ee\u9898\uff0cHadoop 2.0 \u63d0\u51fa\u4e86 HDFS Federation \u673a\u5236\uff0c\u5b83\u5141\u8bb8\u591a\u4e2a NameNode \u5404\u81ea\u5206\u7ba1\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fdb\u800c\u5b9e\u73b0\u6570\u636e\u8bbf\u95ee\u9694\u79bb\u548c\u96c6\u7fa4\u6a2a\u5411\u6269\u5c55\u3002 \u9488\u5bf9 Hadoop 1.0 \u4e2d\u7684 MapReduce \u5728\u6269\u5c55\u6027\u548c\u591a\u6846\u67b6\u652f\u6301\u65b9\u9762\u7684\u4e0d\u8db3\uff0cHadoop 2.0 \u63d0\u51fa\u4e86\u5168\u65b0\u7684\u8d44\u6e90\u7ba1\u7406\u6846\u67b6 YARN\uff0c\u5b83\u5c06 JobTracker \u4e2d\u7684\u8d44\u6e90\u7ba1\u7406\u548c\u4f5c\u4e1a\u63a7\u5236\u529f\u80fd\u5206\u5f00\uff0c\u5206\u522b\u7531\u7ec4\u4ef6 ResourceManager \u548c ApplicationMaster \u5b9e\u73b0\u3002 \u5176\u4e2d\uff0cResourceManager \u8d1f\u8d23\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\u5206\u914d\uff0c\u800c ApplicationMaster \u4ec5\u8d1f\u8d23\u7ba1\u7406\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002\u76f8\u6bd4\u4e8e Hadoop 1.0\uff0cHadoop 2.0 \u6846\u67b6\u5177\u6709\u66f4\u597d\u7684\u6269\u5c55\u6027\u3001\u53ef\u7528\u6027\u3001\u53ef\u9760\u6027\u3001\u5411\u540e\u517c\u5bb9\u6027\u548c\u66f4\u9ad8\u7684\u8d44\u6e90\u5229\u7528\u7387\uff0cHadoop 2.0 \u8fd8\u80fd\u652f\u6301\u9664 MapReduce \u8ba1\u7b97\u6846\u67b6\u4ee5\u5916\u7684\u66f4\u591a\u7684\u8ba1\u7b97\u6846\u67b6\uff0cHadoop2.0 \u662f\u76ee\u524d\u4e1a\u754c\u4e3b\u6d41\u4f7f\u7528\u7684 Hadoop \u7248\u672c\u3002","title":"Hadoop\u7248\u672c\u6f14\u8fdb"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/Hadoop%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/#hadoop-\u53d1\u884c\u7248\u672c","text":"\u867d\u7136 Hadoop \u662f\u5f00\u6e90\u7684 Apache \u9879\u76ee\uff0c\u4f46\u662f\u5728 Hadoop \u884c\u4e1a\uff0c\u4ecd\u7136\u51fa\u73b0\u4e86\u5927\u91cf\u7684\u65b0\u5174\u516c\u53f8\uff0c\u5b83\u4eec\u4ee5\u5e2e\u52a9\u4eba\u4eec\u66f4\u65b9\u4fbf\u5730\u4f7f\u7528 Hadoop \u4e3a\u76ee\u6807\u3002\u8fd9\u4e9b\u4f01\u4e1a\u5927\u591a\u5c06 Hadoop \u53d1\u884c\u7248\u8fdb\u884c\u6253\u5305\u3001\u6539\u8fdb\uff0c\u4ee5\u786e\u4fdd\u6240\u6709\u7684\u8f6f\u4ef6\u4e00\u8d77\u5de5\u4f5c\u3002 Hadoop \u7684\u53d1\u884c\u7248\u9664\u4e86\u793e\u533a\u7684 Apache Hadoop \u5916\uff0cCloudera\u3001Hortonworks\u3001MapR\u3001EMC\u3001IBM\u3001INTEL\u3001\u534e\u4e3a\u7b49\u90fd\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u5546\u4e1a\u7248\u672c\u3002\u5546\u4e1a\u7248\u672c\u4e3b\u8981\u662f\u63d0\u4f9b\u4e13\u4e1a\u7684\u6280\u672f\u652f\u6301\uff0c\u8fd9\u5bf9\u4e00\u4e9b\u5927\u578b\u4f01\u4e1a\u5c24\u5176\u91cd\u8981\u3002\u6bcf\u4e2a\u53d1\u884c\u7248\u90fd\u6709\u81ea\u5df1\u7684\u4e00\u4e9b\u7279\u70b9\uff0c\u672c\u8282\u5c31 3 \u4e2a\u4e3b\u8981\u7684\u53d1\u884c\u7248\u672c\u505a\u7b80\u5355\u4ecb\u7ecd\u3002 2008 \u5e74\u6210\u7acb\u7684 Cloudera \u662f\u6700\u65e9\u5c06 Hadoop \u5546\u7528\u7684\u516c\u53f8\uff0c\u5b83\u4e3a\u5408\u4f5c\u4f19\u4f34\u63d0\u4f9b Hadoop \u7684\u5546\u7528\u89e3\u51b3\u65b9\u6848\uff0c\u4e3b\u8981\u5305\u62ec\u652f\u6301\u3001\u54a8\u8be2\u670d\u52a1\u548c\u57f9\u8bad\u3002Cloudera \u7684\u4ea7\u54c1\u4e3b\u8981\u4e3a CDH\u3001Cloudera Manager \u548c Cloudera Support\u3002CDH \u662f Cloudem \u7684 Hadoop \u53d1\u884c\u7248\u672c\uff0c\u5b8c\u5168\u5f00\u6e90\uff0c\u6bd4 Hadoop \u5728\u517c\u5bb9\u6027\u3001\u5b89\u5168\u6027\u3001\u7a33\u5b9a\u6027\u4e0a\u6709\u6240\u589e\u5f3a\u3002 Cloudera Manager \u662f\u96c6\u7fa4\u7684\u8f6f\u4ef6\u5206\u53d1\u53ca\u7ba1\u7406\u76d1\u63a7\u5e73\u53f0\uff0c\u53ef\u4ee5\u5728\u51e0\u4e2a\u5c0f\u65f6\u5167\u90e8\u7f72\u597d\u4e00\u4e2a Hadoop \u96c6\u7fa4\uff0c\u5e76\u5bf9\u96c6\u7fa4\u7684\u7ed3\u70b9\u53ca\u670d\u52a1\u8fdb\u884c\u5b9e\u65f6\u76d1\u63a7\u3002Cloudera Support \u5373\u662f\u5bf9 Hadoop \u7684\u6280\u672f\u652f\u6301\u3002 2011 \u5e74\u6210\u7acb\u7684 Hortonworks \u662f Yahoo \u4e0e\u7845\u8c37\u98ce\u6295\u516c\u53f8 Benchmark Capital \u5408\u8d44\u7ec4\u5efa\u7684\u516c\u53f8\u3002\u516c\u53f8\u6210\u7acb\u4e4b\u521d\u5438\u7eb3\u4e86\u5927\u7ea6 25 \u540d\u81f3 30 \u540d\u4e13\u95e8\u7814\u7a76 Hadoop \u7684 Yahoo \u5de5\u7a0b\u5e08\uff0c\u4e0a\u8ff0\u5de5\u7a0b\u5e08\u5747\u5728 2005 \u5e74\u5f00\u59cb\u534f\u52a9 Yahoo \u5f00\u53d1 Hadoop\uff0c\u8fd9\u4e9b\u5de5\u7a0b\u5e08\u8d21\u732e\u4e86 Hadoop 80% \u7684\u4ee3\u7801\u3002 Hortonworks\u7684\u4e3b\u6253\u4ea7\u54c1\u662fHortonworks DataPlatform\uff08HDP\uff09\uff0c\u4e5f\u540c\u6837\u662f 100% \u5f00\u6e90\u7684\u4ea7\u54c1\u3002HDP \u9664\u4e86\u5e38\u89c1\u7684\u9879\u76ee\u5916\uff0c\u8fd8\u5305\u542b\u4e86\u4e00\u6b3e\u5f00\u6e90\u7684\u5b89\u88c5\u548c\u7ba1\u7406\u7cfb\u7edf\uff08Amban\uff09\u3002 Cloudera \u548c Hortonworks \u5747\u662f\u901a\u8fc7\u4e0d\u65ad\u63d0\u4ea4\u4ee3\u7801\u6765\u5b8c\u5584 Hadoop \u7684\uff0c\u800c 2009 \u5e74\u6210\u7acb\u7684 MapR \u516c\u53f8\u5728 Hadoop \u9886\u57df\u663e\u5f97\u6709\u4e9b\u7279\u7acb\u72ec\u884c\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u6b3e\u72ec\u7279\u7684\u53d1\u884c\u7248\u672c\u3002 MapR \u8ba4\u4e3a Hadoop \u7684\u4ee3\u7801\u53ea\u662f\u53c2\u8003\uff0c\u53ef\u4ee5\u57fa\u4e8e Hadoop \u63d0\u4f9b\u7684 API \u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u9700\u6c42\u3002\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u5f97 MapR \u505a\u51fa\u4e86\u5f88\u5927\u7684\u521b\u65b0\uff0c\u7279\u522b\u662f\u5728 HDFS \u548c HBase \u65b9\u9762\uff0cMapR \u8ba9\u8fd9\u4e24\u4e2a\u57fa\u672c\u7684 Hadoop \u7684\u5b58\u50a8\u673a\u5236\u66f4\u52a0\u53ef\u9760\u3001\u66f4\u52a0\u9ad8\u6027\u80fd\u3002 MapR \u8fd8\u63a8\u51fa\u4e86\u9ad8\u901f\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff08NFS\uff09\u6765\u8bbf\u95ee HDFS\uff0c\u4ece\u800c\u5927\u5927\u7b80\u5316\u4e86\u4e00\u4e9b\u4f01\u4e1a\u7ea7\u5e94\u7528\u7684\u96c6\u6210\u3002 MapR \u7528\u65b0\u67b6\u6784\u91cd\u5199 HDFS\uff0c\u540c\u65f6\u5728 API \u7ea7\u522b\uff0c\u548c\u76ee\u524d\u7684 Hadoop \u53d1\u884c\u7248\u672c\u4fdd\u6301\u517c\u5bb9\u3002MapR \u6784\u5efa\u4e86\u4e00\u4e2a HDFS \u7684\u79c1\u6709\u66ff\u4ee3\u54c1\uff0c\u6bd4\u5f00\u6e90\u7248\u672c\u5feb 3 \u500d\uff0c\u81ea\u5e26\u5feb\u7167\u529f\u80fd\uff0c\u800c\u4e14\u652f\u6301\u65e0 NameNode \u5355\u70b9\u6545\u969c\u3002 MapR \u7248\u672c\u4e0d\u518d\u9700\u8981\u5355\u72ec\u7684 NameNode \u673a\u5668\uff0c\u5143\u6570\u636e\u5206\u6563\u5728\u96c6\u7fa4\u4e2d\uff0c\u7c7b\u4f3c\u6570\u636e\u9ed8\u8ba4\u5b58\u50a8 3 \u4efd\uff0c\u4e0d\u518d\u9700\u8981\u7528 NAS \u6765\u534f\u52a9 NameNode \u505a\u5143\u6570\u636e\u5907\u4efd\uff0c\u63d0\u9ad8\u4e86\u673a\u5668\u4f7f\u7528\u7387\u3002 MapR \u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u4f7f\u7528 NFS \u76f4\u63a5\u8bbf\u95ee HDFS\uff0c\u63d0\u4f9b\u4e86\u4e0e\u539f\u6709\u5e94\u7528\u7684\u517c\u5bb9\u6027\u3002MapR \u7684\u955c\u50cf\u529f\u80fd\u5f88\u9002\u5408\u505a\u6570\u636e\u5907\u4efd\uff0c\u800c\u4e14\u652f\u6301\u8de8\u6570\u636e\u4e2d\u5fc3\u7684\u955c\u50cf\u3002","title":"Hadoop \u53d1\u884c\u7248\u672c"},{"location":"2%20%E5%AD%A6%E4%B9%A0%E4%B8%AD/%E5%88%86%E5%B8%83%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E5%88%86%E5%B8%83%E5%BC%8F%E8%8C%83%E5%9E%8B%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BA%86%E8%A7%A3/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%90%88%E9%9B%86/","text":"http://c.biancheng.net/view/3570.html","title":"\u5927\u6570\u636e\u5408\u96c6"},{"location":"3%20%E9%98%85%E8%AF%BB/RSA%20%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E5%88%B0%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86/","text":"created: 2022-10-04T10:51:58 tags: [rsa \u52a0\u5bc6\u7b97\u6cd5\u5e94\u7528] source: \u539f\u6587\u5730\u5740 author: RSA \u5b9e\u9645\u5e94\u7528\u5230\u57fa\u7840\u539f\u7406(\u4e00) \u00b6 1. \u65e5\u5e38\u7684\u57fa\u7840\u5e94\u7528\uff0c\u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668 \u00b6 \u5728\u4f7f\u7528 ssh \u767b\u5f55\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u8f93\u5165\u5bc6\u7801\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u53d6\u4f7f\u7528 ssh-keygen \u547d\u4ee4\u5728\u672c\u5730\u751f\u6210\u516c\u94a5\u548c\u79c1\u94a5\u4e24\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u516c\u94a5\u6587\u4ef6\u7684\u5185\u5bb9\u8ffd\u52a0\u5230\u670d\u52a1\u5668\u5bb6\u76ee\u5f55\u7684./ssh \u6587\u4ef6\u5939\u4e2d\u7684 authorized_keys \u6587\u4ef6\u91cc\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u3002\u90a3\u4e48\uff0c\u5230\u5e95\u4ec0\u4e48\u662f\u516c\u94a5\uff0c\u4ec0\u4e48\u53c8\u662f\u79c1\u94a5\uff0c\u4e3a\u4f55\u8fd9\u4e00\u5bf9\"\u94a5\u5319\"\u53ef\u4ee5\u4ee3\u66ff\u5bc6\u7801\u6765\u8fdb\u884c\u9a8c\u8bc1\u5462\uff1f \u9996\u5148\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5728\u6211\u4eec\u8f93\u5165 ssh \u547d\u4ee4\u767b\u5f55\u670d\u52a1\u5668\u7684\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\uff1a 1. \u5ba2\u6237\u7aef\u4f7f\u7528 ssh usrname@hostname \u547d\u4ee4\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e86\u4e00\u4e2a\u8fde\u63a5\u8bf7\u6c42\uff1b 2. \u5728\u670d\u52a1\u5668\u63a5\u6536\u5230\u6211\u4eec\u7684\u4fe1\u606f\u540e\uff0c\u4f1a\u5728 authorized_keys \u6587\u4ef6\u91cc\u67e5\u627e\u662f\u5426\u6709\u5bf9\u5e94\u7684\u7528\u6237\u540d\u4fe1\u606f\uff0c\u5982\u679c\u6709\u7684\u8bdd\u5c31\u968f\u673a\u751f\u4ea7\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u8bb0\u4f5c String_A \uff1b 3. \u670d\u52a1\u5668\u4f7f\u7528\u7528\u6237\u540d\u5bf9\u5e94\u7684\u516c\u94a5\u8fdb\u884c\u52a0\u5bc6\uff0c\u7136\u540e\u53d1\u9001\u56de\u5ba2\u6237\u7aef\uff1b 4. \u5ba2\u6237\u7aef\u7528\u81ea\u5df1\u7535\u8111\u4e0a\u4fdd\u5b58\u7684\u548c\u516c\u94a5\u5bf9\u5e94\u7684\u79c1\u94a5\u5bf9\u6536\u5230\u7684\u52a0\u5bc6\u540e\u7684\u4fe1\u606f\u8fdb\u884c\u5904\u7406\uff0c\u5f97\u5230\u4e00\u4e32\u5b57\u7b26\u4e32 String_B ,\u7136\u540e\u53d1\u56de\u7ed9\u670d\u52a1\u5668\uff1b 5. \u670d\u52a1\u5668\u4f1a\u5bf9\u6bd4 String_A \u548c String_B ,\u5982\u679c\u76f8\u540c\uff0c\u5c31\u8ba4\u4e3a\u5ba2\u6237\u7aef\u662f\u53ef\u4fe1\u7684\uff0c\u514d\u9664\u5bc6\u7801\u8fdb\u884c\u767b\u5f55\u3002 \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u6574\u4e2a\u6d41\u7a0b\u4e2d\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u5957\u52a0\u5bc6\u548c\u89e3\u5bc6\u7684\u8fc7\u7a0b\uff0c\u516c\u94a5\u662f\u4e00\u79cd\u52a0\u5bc6\u65b9\u6cd5\uff0c\u79c1\u94a5\u662f\u4e00\u79cd\u89e3\u5bc6\u65b9\u6cd5\uff0c\u800c\u4e14\u8fd9\u662f\u4e00\u5957\u975e\u5bf9\u79f0\u7684\u52a0\u5bc6\u65b9\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u52a0\u5bc6\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u516c\u94a5\u662f\u516c\u5f00\u7684\uff0c\u8c01\u90fd\u53ef\u4ee5\u83b7\u53d6\uff0c\u7136\u540e\u7528\u6765\u5bf9\u8981\u4f20\u8f93\u7684\u4fe1\u606f\u8fdb\u884c\u52a0\u5bc6\uff0c\u4f46\u662f\u79c1\u94a5\u662f\u4e0d\u516c\u5f00\u7684\uff0c\u53ea\u6709\u521b\u5efa\u516c\u79c1\u94a5\u7684\u4eba\u624d\u6709\u3002\u90a3\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u52a0\u5bc6\u65b9\u6cd5\u90fd\u516c\u5f00\u4e86\uff0c\u4e5f\u4e0d\u6015\u522b\u4eba\u901a\u8fc7\u7814\u7a76\u65b9\u6cd5\u5012\u63a8\u51fa\u89e3\u5bc6\u65b9\u6cd5\u5462\uff0c\u5c31\u8ba9\u6211\u4eec\u6765\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u8fd9\u4e00\u5bf9\u516c\u79c1\u94a5\u548c \u52a0\u5bc6\u7b97\u6cd5 \u3002 2. \u516c\u79c1\u94a5\u6587\u4ef6 \u00b6 \u9996\u5148\u67e5\u770b\u6211\u4eec\u751f\u6210\u7684\u516c\u94a5 id_rsa.pub \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a ssh- rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3cPGQnTrUfzBbmfLUAfFrpfeu4s54xFcUTul+aFUiVg2fcVNJBIDaRjUpAJ03ZMJaz1N6bqe52Jg0Bd7FI/H72IZ3mqrSAedGaljV+vj/uVAZqaclJK541lBT4oAW3PO8lgwBd4vYj6PvyIb+9M5/Ro/HgwGqKfh1co/LWeRPGthuj3ZYbSJF0+JFiOuKi6Gdryj0xODGrtEjMVHdu9/YzDTUod9Wx5gOmzwk9Pyy5dc4PQk4rdf7ek8guFMw7LJjevT2HWdwqqQ8E5AjhdbDFo7QH9erI8w93u9bCE3X+fRvER4ykxb0MJ1UPQBPpcL7a7jGWQfyx1cYXSWNzw+n XXXXXX@XXXXXX \u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u884c\u5199\u660e\u4e86\u6211\u4eec\u7684\u52a0\u5bc6\u7b97\u6cd5->\u5927\u540d\u9f0e\u9f0e\u7684 RSA \u52a0\u5bc6\u7b97\u6cd5\uff0c\u540e\u9762\u7684\u662f\u6b63\u5f0f\u7684\u79d8\u94a5\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 base64 -d \u547d\u4ee4\u89e3\u7801\uff0c\u7136\u540e hexdump -C \u547d\u4ee4\u6807\u51c6\u5341\u516d\u8fdb\u5236\u548c ascii \u7801\uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a id_rsa \u6765\u9010\u884c\u89e3\u8bfb\u8fd9\u6bb5\u6587\u4ef6\uff1a - \u524d 4 \u4e2a\u5b57\u8282 \"00 00 00 07\" \u8bf4\u660e\u4e86\u63a5\u4e0b\u6765\u7684\u6570\u636e\u5757\u662f 7 \u4e2a\u5b57\u8282\u957f\uff0c\u63a5\u4e0b\u6765\u7684 7 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\"73 73 68 2d 72 73 61\", \u6bcf\u4e2a\u5b57\u8282\u7528\u4e00\u4e2a 16 \u8fdb\u5236\u6570\u5b57\u8868\u793a\uff0c\u67e5 ASCII \u8868\uff0c\u6b63\u597d\u5bf9\u5e94\u4e86\u5b57\u7b26\u4e32 \"ssh-rsa\"\uff1b - \u968f\u540e\u7684 4 \u4e2a\u5b57\u8282\"00 00 00 03\"\u8bf4\u660e\u4e86\u63a5\u4e0b\u6765\u7684\u6570\u636e\u5757\u662f 3 \u4e2a\u5b57\u8282\u957f\uff0c\u63a5\u4e0b\u6765\u7684 3 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u5c31\u662f\"01 00 01\"\uff0c\u4f7f\u7528 int('010001',16) \u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f 65537,\u8fd9\u4e2a\u6570\u5b57\u6211\u4eec\u7528 e \u6765\u4ee3\u8868\uff0c\u5728\u4e4b\u540e\u7684\u539f\u7406\u4ecb\u7ecd\u4e2d\u4f1a\u7528\u5230\uff1b - \u5728\u63a5\u4e0b\u6765\u7684 4 \u4e2a\u5b57\u8282\"00 00 01 01\"\u8bf4\u660e\u4e86\u63a5\u4e0b\u6765\u7684\u6570\u636e\u5757\u662f 257 \u4e2a\u5b57\u8282\u957f\uff0c\u5176\u4e2d\uff0c\u5f00\u5934\u7684\"00\"\u4ee3\u8868\u8fd9\u662f\u4e00\u4e2a\u6b63\u6570\uff0c\u800c\u540e\u9762\u7684 256 \u4e2a\u5b57\u8282\uff0c\u4e5f\u5c31\u662f 2048 \u6bd4\u7279\u8bf4\u660e\u8fd9\u4ee3\u8868\u4e86\u4e00\u4e2a 2048 \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u5b57\u3002 \u79c1\u94a5\u6587\u4ef6\u662f\u79c1\u5bc6\u7684\uff0c\u4e0d\u80fd\u968f\u610f\u516c\u5f00\uff0c\u6211\u4eec\u901a\u8fc7 openssl \u547d\u4ee4\u67e5\u770b\u79c1\u94a5\u6587\u4ef6\"id_rsa\"\u7684\u5185\u5bb9\uff0c\u53d1\u73b0\u91cc\u9762\u6709\u51e0\u4e2a\u6a21\u5757\uff0c\u5206\u522b\u662f\uff1a - modulus - publicExponent - privateExponent - prime1 - prime2 - exponent1 - exponent2 - coefficient \u901a\u8fc7\u5bf9\u6bd4\u516c\u79c1\u94a5\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u79c1\u94a5\u7684 modulus \u6a21\u5757\u7684\u5185\u5bb9\u548c\u516c\u94a5\u91cc\u7684\u90a3\u4e2a 2048 \u4f4d\u7684\u6570\u5b57\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u4e00\u822c\u8bb0\u4f5c\"N\",\u800c publicExponent \u7684\u503c\u5c31\u662f\"0x10001\",\u548c\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u6570\u503c e \u662f\u4e00\u6837\u7684\uff0c\u540e\u9762\u7684 privateExponent\uff0cprime1 \u548c prime2 \u6211\u4eec\u5206\u522b\u7528\u5b57\u6bcd d\u3001p \u548c q \u4ee3\u8868\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u52a0\u89e3\u5bc6\u7528\u5230\u7684\u6240\u6709\u4fe1\u606f\uff0c\u53e6\u5916\u7684 exponent1 \u548c exponent2 \u4ee5\u53ca coefficient \u90fd\u662f\u7528\u6765\u6821\u9a8c\u7684\uff0c\u5e76\u4e0d\u5f71\u54cd\u6574\u4e2a\u52a0\u89e3\u5bc6\u7684\u8fc7\u7a0b\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86 5 \u4e2a\u6570\u5b57: N\uff0ce\uff0cd\uff0cp\uff0cq\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u52a0\u5bc6\u7684\u4fe1\u606f\u662f\u4e00\u4e2a\u5c0f\u4e8e N \u7684\u6570\u5b57 m(\u5c06\u4fe1\u606f\u4f7f\u7528 ASCII \u7f16\u7801\u6216 Unicode \u7f16\u7801\u8f6c\u5316\u4e3a\u4e00\u4e32\u6570\u5b57\uff0c\u7136\u540e\u5207\u5272\u6210\u77ed\u4e8e N \u7684\u4e00\u7cfb\u5217\u6570\u5b57)\uff0c\u52a0\u5bc6\u540e\u7684\u4fe1\u606f\u662f\u6570\u5b57 c\uff0c\u90a3\u4e48\u6211\u4eec\u7528\u5230\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5\u5c31\u5206\u522b\u662f\uff1a \u5728\u8fd9\u4e2a\u52a0\u5bc6\u548c\u89e3\u5bc6\u7684\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u6570\u5b66\u539f\u7406\u548c\u8ba1\u7b97\u65b9\u6cd5\u4ee5\u53ca\u4ee3\u7801\uff0c\u5c06\u5728\u540e\u7eed\u6587\u7ae0\u4e2d\u8fdb\u884c\u9010\u6b65\u7684\u8bb2\u89e3\u3002","title":"RSA \u5b9e\u9645\u5e94\u7528\u5230\u57fa\u7840\u539f\u7406"},{"location":"3%20%E9%98%85%E8%AF%BB/RSA%20%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E5%88%B0%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86/#rsa-\u5b9e\u9645\u5e94\u7528\u5230\u57fa\u7840\u539f\u7406\u4e00","text":"","title":"RSA \u5b9e\u9645\u5e94\u7528\u5230\u57fa\u7840\u539f\u7406(\u4e00)"},{"location":"3%20%E9%98%85%E8%AF%BB/RSA%20%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E5%88%B0%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86/#1-\u65e5\u5e38\u7684\u57fa\u7840\u5e94\u7528\u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668","text":"\u5728\u4f7f\u7528 ssh \u767b\u5f55\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u8f93\u5165\u5bc6\u7801\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u53d6\u4f7f\u7528 ssh-keygen \u547d\u4ee4\u5728\u672c\u5730\u751f\u6210\u516c\u94a5\u548c\u79c1\u94a5\u4e24\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u516c\u94a5\u6587\u4ef6\u7684\u5185\u5bb9\u8ffd\u52a0\u5230\u670d\u52a1\u5668\u5bb6\u76ee\u5f55\u7684./ssh \u6587\u4ef6\u5939\u4e2d\u7684 authorized_keys \u6587\u4ef6\u91cc\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u3002\u90a3\u4e48\uff0c\u5230\u5e95\u4ec0\u4e48\u662f\u516c\u94a5\uff0c\u4ec0\u4e48\u53c8\u662f\u79c1\u94a5\uff0c\u4e3a\u4f55\u8fd9\u4e00\u5bf9\"\u94a5\u5319\"\u53ef\u4ee5\u4ee3\u66ff\u5bc6\u7801\u6765\u8fdb\u884c\u9a8c\u8bc1\u5462\uff1f \u9996\u5148\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5728\u6211\u4eec\u8f93\u5165 ssh \u547d\u4ee4\u767b\u5f55\u670d\u52a1\u5668\u7684\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\uff1a 1. \u5ba2\u6237\u7aef\u4f7f\u7528 ssh usrname@hostname \u547d\u4ee4\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e86\u4e00\u4e2a\u8fde\u63a5\u8bf7\u6c42\uff1b 2. \u5728\u670d\u52a1\u5668\u63a5\u6536\u5230\u6211\u4eec\u7684\u4fe1\u606f\u540e\uff0c\u4f1a\u5728 authorized_keys \u6587\u4ef6\u91cc\u67e5\u627e\u662f\u5426\u6709\u5bf9\u5e94\u7684\u7528\u6237\u540d\u4fe1\u606f\uff0c\u5982\u679c\u6709\u7684\u8bdd\u5c31\u968f\u673a\u751f\u4ea7\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u8bb0\u4f5c String_A \uff1b 3. \u670d\u52a1\u5668\u4f7f\u7528\u7528\u6237\u540d\u5bf9\u5e94\u7684\u516c\u94a5\u8fdb\u884c\u52a0\u5bc6\uff0c\u7136\u540e\u53d1\u9001\u56de\u5ba2\u6237\u7aef\uff1b 4. \u5ba2\u6237\u7aef\u7528\u81ea\u5df1\u7535\u8111\u4e0a\u4fdd\u5b58\u7684\u548c\u516c\u94a5\u5bf9\u5e94\u7684\u79c1\u94a5\u5bf9\u6536\u5230\u7684\u52a0\u5bc6\u540e\u7684\u4fe1\u606f\u8fdb\u884c\u5904\u7406\uff0c\u5f97\u5230\u4e00\u4e32\u5b57\u7b26\u4e32 String_B ,\u7136\u540e\u53d1\u56de\u7ed9\u670d\u52a1\u5668\uff1b 5. \u670d\u52a1\u5668\u4f1a\u5bf9\u6bd4 String_A \u548c String_B ,\u5982\u679c\u76f8\u540c\uff0c\u5c31\u8ba4\u4e3a\u5ba2\u6237\u7aef\u662f\u53ef\u4fe1\u7684\uff0c\u514d\u9664\u5bc6\u7801\u8fdb\u884c\u767b\u5f55\u3002 \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u6574\u4e2a\u6d41\u7a0b\u4e2d\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u5957\u52a0\u5bc6\u548c\u89e3\u5bc6\u7684\u8fc7\u7a0b\uff0c\u516c\u94a5\u662f\u4e00\u79cd\u52a0\u5bc6\u65b9\u6cd5\uff0c\u79c1\u94a5\u662f\u4e00\u79cd\u89e3\u5bc6\u65b9\u6cd5\uff0c\u800c\u4e14\u8fd9\u662f\u4e00\u5957\u975e\u5bf9\u79f0\u7684\u52a0\u5bc6\u65b9\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u52a0\u5bc6\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u516c\u94a5\u662f\u516c\u5f00\u7684\uff0c\u8c01\u90fd\u53ef\u4ee5\u83b7\u53d6\uff0c\u7136\u540e\u7528\u6765\u5bf9\u8981\u4f20\u8f93\u7684\u4fe1\u606f\u8fdb\u884c\u52a0\u5bc6\uff0c\u4f46\u662f\u79c1\u94a5\u662f\u4e0d\u516c\u5f00\u7684\uff0c\u53ea\u6709\u521b\u5efa\u516c\u79c1\u94a5\u7684\u4eba\u624d\u6709\u3002\u90a3\u4e3a\u4ec0\u4e48\u6211\u4eec\u7684\u52a0\u5bc6\u65b9\u6cd5\u90fd\u516c\u5f00\u4e86\uff0c\u4e5f\u4e0d\u6015\u522b\u4eba\u901a\u8fc7\u7814\u7a76\u65b9\u6cd5\u5012\u63a8\u51fa\u89e3\u5bc6\u65b9\u6cd5\u5462\uff0c\u5c31\u8ba9\u6211\u4eec\u6765\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u8fd9\u4e00\u5bf9\u516c\u79c1\u94a5\u548c \u52a0\u5bc6\u7b97\u6cd5 \u3002","title":"1. \u65e5\u5e38\u7684\u57fa\u7840\u5e94\u7528\uff0c\u767b\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668"},{"location":"3%20%E9%98%85%E8%AF%BB/RSA%20%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E5%88%B0%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86/#2-\u516c\u79c1\u94a5\u6587\u4ef6","text":"\u9996\u5148\u67e5\u770b\u6211\u4eec\u751f\u6210\u7684\u516c\u94a5 id_rsa.pub \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a ssh- rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3cPGQnTrUfzBbmfLUAfFrpfeu4s54xFcUTul+aFUiVg2fcVNJBIDaRjUpAJ03ZMJaz1N6bqe52Jg0Bd7FI/H72IZ3mqrSAedGaljV+vj/uVAZqaclJK541lBT4oAW3PO8lgwBd4vYj6PvyIb+9M5/Ro/HgwGqKfh1co/LWeRPGthuj3ZYbSJF0+JFiOuKi6Gdryj0xODGrtEjMVHdu9/YzDTUod9Wx5gOmzwk9Pyy5dc4PQk4rdf7ek8guFMw7LJjevT2HWdwqqQ8E5AjhdbDFo7QH9erI8w93u9bCE3X+fRvER4ykxb0MJ1UPQBPpcL7a7jGWQfyx1cYXSWNzw+n XXXXXX@XXXXXX \u53ef\u4ee5\u770b\u5230\u7b2c\u4e00\u884c\u5199\u660e\u4e86\u6211\u4eec\u7684\u52a0\u5bc6\u7b97\u6cd5->\u5927\u540d\u9f0e\u9f0e\u7684 RSA \u52a0\u5bc6\u7b97\u6cd5\uff0c\u540e\u9762\u7684\u662f\u6b63\u5f0f\u7684\u79d8\u94a5\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 base64 -d \u547d\u4ee4\u89e3\u7801\uff0c\u7136\u540e hexdump -C \u547d\u4ee4\u6807\u51c6\u5341\u516d\u8fdb\u5236\u548c ascii \u7801\uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a id_rsa \u6765\u9010\u884c\u89e3\u8bfb\u8fd9\u6bb5\u6587\u4ef6\uff1a - \u524d 4 \u4e2a\u5b57\u8282 \"00 00 00 07\" \u8bf4\u660e\u4e86\u63a5\u4e0b\u6765\u7684\u6570\u636e\u5757\u662f 7 \u4e2a\u5b57\u8282\u957f\uff0c\u63a5\u4e0b\u6765\u7684 7 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\"73 73 68 2d 72 73 61\", \u6bcf\u4e2a\u5b57\u8282\u7528\u4e00\u4e2a 16 \u8fdb\u5236\u6570\u5b57\u8868\u793a\uff0c\u67e5 ASCII \u8868\uff0c\u6b63\u597d\u5bf9\u5e94\u4e86\u5b57\u7b26\u4e32 \"ssh-rsa\"\uff1b - \u968f\u540e\u7684 4 \u4e2a\u5b57\u8282\"00 00 00 03\"\u8bf4\u660e\u4e86\u63a5\u4e0b\u6765\u7684\u6570\u636e\u5757\u662f 3 \u4e2a\u5b57\u8282\u957f\uff0c\u63a5\u4e0b\u6765\u7684 3 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u5c31\u662f\"01 00 01\"\uff0c\u4f7f\u7528 int('010001',16) \u6362\u7b97\u6210\u5341\u8fdb\u5236\u662f 65537,\u8fd9\u4e2a\u6570\u5b57\u6211\u4eec\u7528 e \u6765\u4ee3\u8868\uff0c\u5728\u4e4b\u540e\u7684\u539f\u7406\u4ecb\u7ecd\u4e2d\u4f1a\u7528\u5230\uff1b - \u5728\u63a5\u4e0b\u6765\u7684 4 \u4e2a\u5b57\u8282\"00 00 01 01\"\u8bf4\u660e\u4e86\u63a5\u4e0b\u6765\u7684\u6570\u636e\u5757\u662f 257 \u4e2a\u5b57\u8282\u957f\uff0c\u5176\u4e2d\uff0c\u5f00\u5934\u7684\"00\"\u4ee3\u8868\u8fd9\u662f\u4e00\u4e2a\u6b63\u6570\uff0c\u800c\u540e\u9762\u7684 256 \u4e2a\u5b57\u8282\uff0c\u4e5f\u5c31\u662f 2048 \u6bd4\u7279\u8bf4\u660e\u8fd9\u4ee3\u8868\u4e86\u4e00\u4e2a 2048 \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u5b57\u3002 \u79c1\u94a5\u6587\u4ef6\u662f\u79c1\u5bc6\u7684\uff0c\u4e0d\u80fd\u968f\u610f\u516c\u5f00\uff0c\u6211\u4eec\u901a\u8fc7 openssl \u547d\u4ee4\u67e5\u770b\u79c1\u94a5\u6587\u4ef6\"id_rsa\"\u7684\u5185\u5bb9\uff0c\u53d1\u73b0\u91cc\u9762\u6709\u51e0\u4e2a\u6a21\u5757\uff0c\u5206\u522b\u662f\uff1a - modulus - publicExponent - privateExponent - prime1 - prime2 - exponent1 - exponent2 - coefficient \u901a\u8fc7\u5bf9\u6bd4\u516c\u79c1\u94a5\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u79c1\u94a5\u7684 modulus \u6a21\u5757\u7684\u5185\u5bb9\u548c\u516c\u94a5\u91cc\u7684\u90a3\u4e2a 2048 \u4f4d\u7684\u6570\u5b57\u662f\u4e00\u6837\u7684\uff0c\u6211\u4eec\u4e00\u822c\u8bb0\u4f5c\"N\",\u800c publicExponent \u7684\u503c\u5c31\u662f\"0x10001\",\u548c\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u6570\u503c e \u662f\u4e00\u6837\u7684\uff0c\u540e\u9762\u7684 privateExponent\uff0cprime1 \u548c prime2 \u6211\u4eec\u5206\u522b\u7528\u5b57\u6bcd d\u3001p \u548c q \u4ee3\u8868\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u52a0\u89e3\u5bc6\u7528\u5230\u7684\u6240\u6709\u4fe1\u606f\uff0c\u53e6\u5916\u7684 exponent1 \u548c exponent2 \u4ee5\u53ca coefficient \u90fd\u662f\u7528\u6765\u6821\u9a8c\u7684\uff0c\u5e76\u4e0d\u5f71\u54cd\u6574\u4e2a\u52a0\u89e3\u5bc6\u7684\u8fc7\u7a0b\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86 5 \u4e2a\u6570\u5b57: N\uff0ce\uff0cd\uff0cp\uff0cq\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u52a0\u5bc6\u7684\u4fe1\u606f\u662f\u4e00\u4e2a\u5c0f\u4e8e N \u7684\u6570\u5b57 m(\u5c06\u4fe1\u606f\u4f7f\u7528 ASCII \u7f16\u7801\u6216 Unicode \u7f16\u7801\u8f6c\u5316\u4e3a\u4e00\u4e32\u6570\u5b57\uff0c\u7136\u540e\u5207\u5272\u6210\u77ed\u4e8e N \u7684\u4e00\u7cfb\u5217\u6570\u5b57)\uff0c\u52a0\u5bc6\u540e\u7684\u4fe1\u606f\u662f\u6570\u5b57 c\uff0c\u90a3\u4e48\u6211\u4eec\u7528\u5230\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u7b97\u6cd5\u5c31\u5206\u522b\u662f\uff1a \u5728\u8fd9\u4e2a\u52a0\u5bc6\u548c\u89e3\u5bc6\u7684\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u6570\u5b66\u539f\u7406\u548c\u8ba1\u7b97\u65b9\u6cd5\u4ee5\u53ca\u4ee3\u7801\uff0c\u5c06\u5728\u540e\u7eed\u6587\u7ae0\u4e2d\u8fdb\u884c\u9010\u6b65\u7684\u8bb2\u89e3\u3002","title":"2. \u516c\u79c1\u94a5\u6587\u4ef6"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/","text":"\u672c\u6587\u7531 \u7b80\u60a6 SimpRead \u8f6c\u7801\uff0c \u539f\u6587\u5730\u5740 zhuanlan.zhihu.com \u6839\u636e\u591a\u5e74\u548c\u8fd0\u7ef4\u6253\u4ea4\u9053\u7684\u7ecf\u5386\uff0c\u6211\u53d1\u73b0\uff0c\u8fd0\u7ef4\u5e38\u5e38\u8ba9\u76d1\u63a7\u53d8\u5f97\u65e0\u6548\u3002\u3002\u3002 1. \u6211\u7684\u76d1\u63a7\u6545\u4e8b \u00b6 \u6211\u505a\u8fc7\u4e24\u5e74\u591a\u7684\u8fd0\u7ef4\u5de5\u4f5c\uff0c\u540e\u9762\u5c31\u8f6c\u505a\u8fd0\u7ef4\u5e73\u53f0\u5f00\u53d1\u4e86\uff0c\u4e5f\u4e00\u6b65\u6b65\u770b\u7740\u76d1\u63a7\u7cfb\u7edf\u8d8a\u6765\u8d8a\u6ca1\u7528\u3002 1.1 \u6709\u7528\u7684\u76d1\u63a7 \u00b6 \u5f53\u6211\u505a\u8fd0\u7ef4\u8981\u8d1f\u8d23 oncall \u65f6\uff0c\u6211\u4e00\u76f4\u8ba4\u4e3a\u76d1\u63a7\u7cfb\u7edf\u505a\u7684\u8fd8\u53ef\u4ee5\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a\u505a\u4e86\u592a\u591a\u4e8b\u60c5\uff0c\u800c\u662f\u56e0\u4e3a\u8fd0\u7ef4\u7684\u4e1a\u52a1\u8fd8\u662f\u5355\u4f53\u5e94\u7528\uff0c\u4e5f\u6ca1\u6709\u592a\u591a\u7684\u76d1\u63a7\u9700\u8981\u52a0\u3002 \u8bb0\u5f97\u90a3\u4f1a\u516c\u53f8\u8fd8\u662f\u7528 Nagios(\u4f30\u8ba1\u65b0\u4eba\u5df2\u7ecf\u6ca1\u591a\u5c11\u4eba\u77e5\u9053\u4e86)\uff0c\u4e0d\u8fc7\u76d1\u63a7\u7684\u7ef4\u62a4\u5de5\u4f5c\u7740\u5b9e\u8d39\u52b2\u3002\u540e\u9762\u6211\u5c31\u5f00\u59cb\u7814\u7a76 zabbix \uff0c\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u5b83\u53ef\u4ee5 discovery & \u81ea\u52a8\u6dfb\u52a0\u76d1\u63a7 \u3002\u540e\u9762\u6211\u53c8\u642d\u4e86\u4e00\u5957 ELK \uff0c\u628a\u4e1a\u52a1\u65e5\u5fd7\u90fd\u6536\u96c6\u5230\u4e00\u8d77\uff0c\u76d1\u63a7\u5c31\u9f50\u6d3b\u4e86\u3002 \u7531\u4e8e\u6ca1\u6709\u6dfb\u52a0\u592a\u591a\u544a\u8b66\uff0c\u90a3\u4f1a\u7684\u6bcf\u4e2a\u544a\u8b66\u57fa\u672c\u90fd\u5f97\u5904\u7406\uff0c\u6700\u5e38\u89c1\u7684\u95ee\u9898\u5c31\u662f\u767e\u5ea6\u6765\u722c\u6570\u636e\uff0c\u6211\u6709\u4e00\u5957\u5c61\u8bd5\u4e0d\u723d\u7684\u5904\u7406\u6d41\u7a0b\uff1a 1. \u770b\u6307\u6807\uff1a\u5982\u679c\u662f xx \u4e1a\u52a1\u7684\u8d1f\u8f7d\u9ad8, \u6709 90% \u7684\u6982\u7387\u662f\u722c\u866b\u5bfc\u81f4\u7684 2. \u770b\u65e5\u5fd7\uff1a\u5728 kibana \u4e0a\u770b\u8bbf\u95ee\u8bb0\u5f55\uff0c\u627e\u51fa topx \u7684 IP \u6bb5 3. \u5c01\u8bbf\u95ee\uff1a\u7528 iptables \u5c01\u6389 \u8fd9\u5c31\u662f\u6211\u552f\u4e00\u4e00\u6bb5\u7684\u8fd0\u7ef4\u76d1\u63a7\u7ecf\u5386\u3002\u7531\u4e8e\u4e1a\u52a1\u7b80\u5355\u3001\u76d1\u63a7\u539f\u59cb\u53cd\u800c\u8ba9\u6211\u611f\u89c9\u544a\u8b66\u662f\u6709\u7528\u7684\u3002 1.2 \u65e0\u7528\u7684\u4eea\u8868\u76d8 \u00b6 1.2.1 \u75af\u72c2\u81ea\u52a8\u5316 \u00b6 \u5f53\u6211\u8f6c\u8fd0\u7ef4\u5f00\u53d1\u540e\uff0c\u6211\u53d1\u73b0\u8fd0\u7ef4\u5bf9\u76d1\u63a7\u7684\u9700\u6c42\u4e5f\u53d8\u4e86\u3002 \u56e0\u4e3a\u81ea\u52a8\u5316\u80fd\u529b\u7684\u63d0\u5347\uff0c\u5404\u79cd\u5f00\u6e90\u7684\u76d1\u63a7\u7cfb\u7edf\u9010\u6b65\u5b8c\u5584\uff0c\u8fd0\u7ef4\u5c31\u5f00\u59cb\u5728\u5e73\u53f0\u91cc\u9762\u62fc\u547d\u7684\u52a0\u5404\u79cd\u81ea\u52a8\u5316\u7684\u9700\u6c42\uff0c\u5bf9\u4e8e\u76d1\u63a7\u7cfb\u7edf\u5c31\u662f\u81ea\u52a8\u7684\u7ed9\u4e1a\u52a1\u7ed1\u5b9a\u5404\u79cd\u76d1\u63a7\u6a21\u677f\u3001\u544a\u8b66\u6a21\u677f\u3001grafana \u4eea\u8868\u76d8 \u7ed3\u679c\u4e5f\u53ef\u60f3\u800c\u77e5\uff0c\u7531\u4e8e\u544a\u8b66\u5b9e\u5728\u592a\u591a\uff0c\u8fd0\u7ef4\u76f4\u63a5\u5c4f\u853d\u4e86\u516c\u53f8\u7684\u544a\u8b66\u77ed\u4fe1\u3002 \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u90fd\u662f\u9760\u4e1a\u52a1\u4fa7\u53d1\u73b0\u95ee\u9898\uff0c\u8fd0\u7ef4\u518d\u4ecb\u5165\u6392\u67e5\u3002 1.2.2 \u597d\u770b\u800c\u6ca1\u7528\u7684\u4eea\u8868\u76d8 \u00b6 \u7531\u4e8e\u6536\u96c6\u7684\u6307\u6807\u6570\u636e\u5b9e\u5728\u592a\u591a\uff0c\u4e3a\u4e86\u53ef\u4ee5\u7ed9\u4e1a\u52a1\u4fa7\u8f93\u51fa\uff0c\u8fd0\u7ef4\u5c31\u641e\u8d77\u4e86 grafana \u4eea\u8868\u76d8\u3002\u4e0d\u8fc7\u7531\u4e8e grafana \u4eea\u8868\u76d8\u4e0a\u7684\u6307\u6807\u5b9e\u5728\u592a\u591a\uff0c\u9875\u9762\u8fd8\u4f1a\u7ecf\u5e38\u5361\u4f4f\uff0c\u4e1a\u52a1\u7814\u53d1\u770b\u7740\u4e00\u4e2a\u9875\u9762\u4e0a\u51e0\u5341\u4e2a\u6307\u6807\uff0c\u4e5f\u4e0d\u77e5\u9053\u54ea\u4e2a\u6709\u7528\uff0c\u6700\u7ec8\u8fd8\u662f\u5f97\u6765\u627e\u8fd0\u7ef4\u3002 \u4e3a\u4e86\u65b9\u4fbf\u7814\u53d1\u67e5\u770b\u65e5\u5fd7\uff0c\u8fd0\u7ef4\u4e5f\u641e\u4e86 ELK\uff0c\u5c06\u5404\u79cd\u65e5\u5fd7\u5168\u90e8\u6536\u96c6\u8fdb\u53bb\uff0c\u7136\u540e\u5c06 kibana \u4e22\u7ed9\u4e86\u4e1a\u52a1\u7814\u53d1\u3002\u7ed3\u679c\u4e5f\u53ef\u60f3\u800c\u77e5\uff0c\u9664\u4e86\u5c11\u6570\u51e0\u4e2a\u7231\u6298\u817e\u7684\uff0ckibana \u4e0a\u7684 dashboard \u4e5f\u6ca1\u6709\u592a\u591a\u4eba\u770b\u3002 \u6211\u4e00\u76f4\u76f8\u4fe1\u8fd0\u7ef4\u7684\u521d\u8877\u90fd\u662f\u597d\u7684\uff0c\u4f46\u4ece\u7ed3\u679c\u4e0a\u6765\u770b\uff0c\u55e8\u7684\u53ea\u6709\u8fd0\u7ef4\uff0c\u6bd5\u7adf\u8fd0\u7ef4\u5f88\u5c11\u770b\u81ea\u5df1\u505a\u7684\u4eea\u8868\u76d8\u3002\u3002 1.3 \u6ca1\u6709\u8d28\u53d8 \u00b6 \u968f\u7740 google sre \u6982\u5ff5\u7684\u5174\u8d77\uff0c\u8fd0\u7ef4\u4f3c\u4e4e\u662f\u627e\u5230\u4e86\u6700\u540e\u4e00\u6839\u7a3b\u8349\uff0c\u6bd5\u7adf\u8fd9\u662f google \u7684\u8fd0\u7ef4\u65b9\u6cd5\u8bba\u3002\u4e8e\u662f\uff0c\u8fd0\u7ef4\u53c8\u5f00\u59cb\u540c\u7814\u53d1\u5236\u5b9a\u5404\u79cd SLO\u3001SLI \u6307\u6807\uff0c\u4f9d\u636e 4 \u4e2a\u9ec4\u91d1\u6307\u6807 (\u5ef6\u8fdf\u3001\u6d41\u91cf\u3001\u9519\u8bef\u548c\u9971\u548c\u5ea6) \u6765\u7ee7\u7eed\u81ea\u4e30\u5bcc\u81ea\u5df1\u7684\u544a\u8b66\u5e93\uff0c\u5e76\u5236\u5b9a P0\u3001P1\u3001P2 \u7b49\u5404\u79cd\u544a\u8b66\u5206\u7ea7\uff0c\u8bd5\u56fe\u6539\u53d8\u5f53\u524d\u56f0\u5883\u3002 \u4f46\u662f\u7531\u4e8e\u4e1a\u52a1\u67b6\u6784\u5fae\u670d\u52a1\u5316\uff0c\u5e76\u4e14\u91c7\u7528\u654f\u6377\u5f00\u53d1\u7684\u6a21\u5f0f\uff0c\u5b9e\u9645\u4e0a\u4e1a\u52a1\u7684\u8fed\u4ee3\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5927\u90e8\u5206 sre \u672c\u8eab\u5e76\u4e0d\u662f\u505a\u5f00\u53d1\u51fa\u8eab\uff0c\u540c\u65f6\u4e25\u91cd\u7684\u914d\u6bd4\u4e0d\u8db3 (\u7814\u53d1\u548c\u8fd0\u7ef4\u6bd4\u4f8b)\uff0c \u5bfc\u81f4\u5404\u79cd\u6307\u6807\u968f\u7740\u65f6\u95f4\u5feb\u901f\u5931\u6548\u3002\u5176\u7ed3\u679c\u5c31\u662f\u544a\u8b66\u4f9d\u65e7\u6ca1\u7528\uff0c\u6bcf\u6b21\u590d\u76d8\u5c31\u662f\u518d\u52a0\u4e00\u6761\u544a\u8b66\uff0c\u5f53\u7136\u8fd9\u6761\u544a\u8b66\u4e5f\u51e0\u4e4e\u4e0d\u4f1a\u88ab\u89e6\u53d1\u3002 \u8fd9\u5c31\u662f\u6211\u7ecf\u5386\u7684\u76d1\u63a7\u6545\u4e8b\uff0c\u4f60\u6709\u54ea\u4e9b\u6545\u4e8b\u5462\uff1f 2. \u5bf9\u76d1\u63a7\u7684\u504f\u89c1 \u00b6 \u5728\u5bf9\u8fd9\u4e9b\u5931\u8d25\u7684\u76d1\u63a7\u7ecf\u9a8c\u7684\u603b\u7ed3\u8fc7\u7a0b\u4e2d\uff0c\u6211\u53d1\u73b0\u4e24\u4e2a\u672c\u8d28\u7684\u95ee\u9898\uff1a \u4e00\u76f4\u8bd5\u56fe\u901a\u8fc7\u5f52\u7eb3\u8fc7\u53bb\u53d1\u751f\u7684\u5355\u4e2a\u95ee\u9898\uff0c\u6765\u9884\u6d4b\u672a\u6765\u53ef\u80fd\u53d1\u751f\u7684\u666e\u904d\u95ee\u9898\uff0c\u5e76\u5ffd\u7565\u672a\u6765\u5728\u65f6\u7a7a\u4e0a\u590d\u6742\u7684\u53d8\u5316\u4e00\u76f4\u4e13\u6ce8\u4e8e\u4f18\u5316\u4f20\u7edf\u7684\u63a2\u9488\u6a21\u578b (\u4f7f\u7528\u811a\u672c\u6d4b\u8bd5, \u68c0\u67e5\u6062\u590d\u5e76\u4e14\u62a5\u8b66)\u3001\u56fe\u5f62\u5316\u8d8b\u52bf\u5c55\u793a\u3001\u62a5\u8b66\u6a21\u578b, \u5e76\u4e0d\u65ad\u63d0\u5347\u76f8\u5173\u6d41\u7a0b\u7684\u81ea\u52a8\u5316 \u4e0a\u8ff0\u95ee\u9898\u53ea\u4ee3\u8868\u6211\u5f53\u524d\u5bf9\u76d1\u63a7\u7684\u8ba4\u77e5\uff0c\u5e76\u4e0d\u77e5\u9053\u5bf9\u9519\uff0c\u4e5f\u6ca1\u6709\u7b54\u6848\u3002\u4e0b\u9762\u5219\u662f\u6211\u5bf9\u76d1\u63a7\u7cfb\u7edf\u5f53\u524d\u5efa\u8bbe\u7684\u4e00\u4e9b\u504f\u89c1\u3002 2.1 \u4eba\u5de5\u667a\u80fd\u8fd8\u662f\u4eba\u673a\u4ea4\u4e92 \u00b6 \u559d\u7740\u5496\u5561\u505a\u8fd0\u7ef4 \u524d\u540c\u4e8b\u4ee4\u6211\u5370\u8c61\u6700\u6df1\u523b\u7684\u5c31\u662f\u8fd9\u53e5\u8bdd\u4e86\u3002\u8bf4\u5b8c\u8fd9\u53e5\u8bdd\u7684\u534a\u5e74\u540e\uff0c\u4ed6\u5c31\u5f00\u59cb\u7814\u7a76 AIOPS \u4e86\uff0c\u53c8\u8fc7\u4e86\u534a\u5e74\u4ed6\u5c31\u79bb\u804c\u4e86\uff0c\u7ec4\u91cc\u4e5f\u518d\u6ca1\u4eba\u63d0 AIOPS \u4e86\u3002\u5927\u90e8\u5206\u8fd0\u7ef4\u5bf9 AIOPS \u6700\u5927\u7684\u9700\u6c42\u53ef\u80fd\u5c31\u662f\u6839\u56e0\u5206\u6790\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u5c31\u50cf\u662f\u4e00\u5ea7\u5927\u5c71\u7acb\u5728 AIOPS \u7684\u95e8\u5916\uff0c\u5927\u90e8\u5206\u8fd0\u7ef4\u56e2\u961f\u8fde\u722c\u7684\u52c7\u6c14\u4e5f\u6ca1\u6709\u3002 \u6211\u4e00\u76f4\u6ca1\u60f3\u660e\u767d\u4e00\u4e2a\u95ee\u9898\uff1a \u8fd0\u7ef4\u81ea\u5df1\u90fd\u4e0d\u4e00\u5b9a\u80fd\u6392\u67e5\u51fa\u95ee\u9898\u539f\u56e0\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6307\u671b\u673a\u5668\u80fd\u5b9e\u73b0\u8fd9\u4e2a\u4e8b\u60c5\u3002 \u4eba\u548c\u673a\u5668\u76f8\u6bd4\uff0c\u673a\u5668\u66f4\u64c5\u957f\u4e8e\u505a\u6d77\u91cf\u6570\u636e\u7684\u5206\u6790\uff0c\u800c\u4eba\u5219\u66f4\u64c5\u957f\u505a\u51b3\u7b56\u3002\u6240\u4ee5\u76f8\u6bd4 aiops \u6211\u8ba4\u4e3a\u4eba\u673a\u4ea4\u4e92\u53ef\u80fd\u66f4\u9760\u8c31\u4e00\u4e9b \uff1a \u673a\u5668\u5bf9\u6d77\u91cf\u6570\u636e\u8fdb\u884c\u5168\u9762\u5206\u6790\uff0c\u7531\u8fd0\u7ef4\u5bf9\u5206\u6790\u7ed3\u679c\u8fdb\u884c\u4eba\u8111\u51b3\u7b56 \u4e0d\u8fc7\u611f\u89c9\u8fd9\u4e8b\u4e5f\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u73b0\u5728\u7684 sre \u75f4\u8ff7\u5f00\u53d1\u7684\u7a0b\u5ea6\u5df2\u7ecf\u987e\u4e0d\u4e0a\u505a\u8fd9\u4e9b\u4e8b\u60c5\u4e86\u3002\u51b3\u7b56\u672c\u8eab\u4e5f\u9700\u8981\u5bf9\u6570\u636e\u6709\u4e00\u5b9a\u7684\u654f\u611f\u6027\u3002 2.2 \u76d1\u63a7\u8981\u4e13\u6ce8\u80fd\u529b\u5efa\u8bbe \u00b6 \u5728\u8fc7\u53bb\u7684\u76d1\u63a7\u7cfb\u7edf\u5efa\u8bbe\u4e2d\uff0c\u5927\u5bb6\u4e00\u822c\u559c\u6b22\u6309\u7167\u67b6\u6784\u505a\u5782\u76f4\u5207\u5206\uff0c\u53ef\u80fd\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a \u6211\u8ba4\u4e3a\u4ea7\u751f\u8fd9\u79cd\u5206\u5c42\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff1a\u7ec4\u7ec7\u67b6\u6784 (\u5eb7\u5a01\u5b9a\u5f8b) \u548c\u804c\u8d23\u5206\u79bb\u3002\u5728\u8fd9\u79cd\u5206\u5c42\u4e0b\uff0c\u8fd0\u7ef4\u901a\u5e38\u5c31\u53ea\u8d1f\u8d23\u4e0b\u9762\u4e24\u5c42\uff0c\u5bf9\u4e8e\u4e0a\u5c42\u95ee\u9898\u7684\u5904\u7406\uff0c\u53ef\u80fd\u5b9a\u4f4d\u5230\u67d0\u4e2a\u5177\u4f53\u7684 URL \u5c31\u7ed3\u675f\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7814\u53d1\u7684\u4e8b\u60c5\u4e86\u3002\\ \u5982\u679c\u8981\u89e3\u51b3\u5f53\u524d\u8fd9\u4e2a\u56f0\u5883\uff0c\u6211\u8ba4\u4e3a\u5e94\u8be5\u6452\u5f03\u8fc7\u53bb\u6309\u7167\u804c\u8d23\u8fdb\u884c\u7cfb\u7edf\u5efa\u8bbe\u7684\u65b9\u5f0f\uff0c\u6bd4\u5982\u505a\u4e2a\u57fa\u7840\u76d1\u63a7\u7cfb\u7edf\u3001\u7f51\u7edc\u76d1\u63a7\u7cfb\u7edf\u3001\u4e1a\u52a1\u76d1\u63a7\u7cfb\u7edf\uff0c\u800c\u662f\u8f6c\u5411\u56f4\u7ed5\u4e1a\u52a1\u4ef7\u503c\u5206\u9636\u6bb5\u8fdb\u884c\u80fd\u529b\u5efa\u8bbe\uff0c\u6bd4\u5982\u57fa\u7840\u7684\u6570\u636e\u91c7\u96c6\u3001\u4f20\u8f93\u3001\u5206\u6790\u3001\u5b58\u50a8\u3001\u5c55\u793a\u7b49\u80fd\u529b\u3002\u8f6c\u578b\u6210\u4e3a\u63d0\u4f9b\u6d77\u91cf\u6570\u636e\u6536\u96c6\u548c\u4e2d\u592e\u5316\u89c4\u5219\u8ba1\u7b97\u3001\u7edf\u4e00\u5206\u6790\u548c\u62a5\u8b66\u80fd\u529b\u7684\u73b0\u4ee3\u5316\u76d1\u63a7\u7cfb\u7edf\u3010google sre\u3011 \u5728\u80fd\u529b\u5efa\u8bbe\u8fc7\u7a0b\u4e2d\uff0c\u5e73\u53f0\u56e2\u961f\u5e94\u8be5\u4ee5\u771f\u5b9e\u9700\u6c42\u4e3a\u76ee\u6807\uff0c\u642d\u5efa\u6700\u5c0f\u53ef\u7528\u5e73\u53f0 (Thinnesr Viable Platform, TVP)\uff0c\u5e76\u5728\u56e2\u961f\u4e2d\u5206\u4eab\u6700\u4f73\u5b9e\u8df5\u548c\u4e3b\u52a8\u8d4b\u80fd\u7528\u6237\uff0c\u9010\u6b65\u6210\u5c31\u5353\u8d8a\u7528\u6237\u3002\u540c\u65f6\u8981\u907f\u514d\u5206\u4eab\u7684\u90fd\u662f\u6ca1\u843d\u5730\u7684\u65b9\u6cd5\u8bba\uff0c\u6bd5\u7adf\u5927\u5bb6\u90fd\u5f88\u5fd9\u3002 2.3 \u5c1d\u8bd5\u53d8\u7684\u6709\u6548 \u00b6 \u5f53\u5904\u7406\u95ee\u9898\u65f6\uff0c\u5c31\u4f1a\u53d1\u73b0\u516c\u53f8\u7684\u76d1\u63a7\u7cfb\u7edf\u6bd4\u77e5\u9053\u7684\u591a\uff0c\u8fd0\u7ef4\u3001\u7814\u53d1\u3001DBA\u3001redis \u7b49\u6bcf\u4e2a\u90e8\u95e8\u90fd\u6709\u81ea\u5df1\u7684\u76d1\u63a7\u7cfb\u7edf\u548c\u4eea\u8868\u76d8\uff0c\u51fa\u95ee\u9898\u65f6\uff0c\u6bcf\u4e2a\u4eba\u770b\u7684\u90fd\u662f\u81ea\u5df1\u90e8\u95e8\u641e\u7684\u76d1\u63a7\u3002\u4e3a\u4e86\u80fd\u591f\u5efa\u7acb\u7edf\u4e00\u7684\u89c6\u89d2\uff0c\u6709\u80fd\u529b\u7684\u516c\u53f8\u53c8\u4f1a\u5012\u817e\u51fa\u7edf\u4e00\u76d1\u63a7\u8fd9\u79cd\u4e1c\u897f\uff1a\u4ece\u4e0d\u540c\u7684\u7cfb\u7edf\u91cc\u9762\u83b7\u53d6\u5404\u79cd\u6570\u636e\uff0c\u7edf\u4e00\u8fdb\u884c\u6c47\u603b\u5206\u6790\u5b58\u50a8\uff0c\u6700\u7ec8\u7edf\u4e00\u76d1\u63a7\u53c8\u4f1a\u5e26\u6765\u6570\u636e\u5b9e\u65f6\u6027\u3001\u51c6\u786e\u6027\u3001\u5b58\u50a8\u6210\u672c\u3001\u6d77\u91cf\u6570\u636e\u5904\u7406\u7b49\u65b0\u7684\u95ee\u9898\uff0c\u800c\u4e14\u8fd9\u4e8b\u4e00\u65f6\u534a\u4f1a\u4e5f\u641e\u4e0d\u5b9a\u3002 \u4e0d\u8fc7\u8fd9\u4e8b\u771f\u7684\u6709\u610f\u4e49\u561b\uff1f\u5bf9\u4e8e\u8fd9\u79cd\u57fa\u7840\u7684\u6570\u636e\u7684\u91c7\u96c6\u3001\u5206\u6790\u548c\u5b58\u50a8\u5176\u5b9e\u5df2\u7ecf\u6709\u5f88\u591a\u5546\u4e1a\u5316\u7684\u65b9\u6848\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u89c9\u5f97\u81ea\u5df1\u51e0\u4e2a\u4eba\u7684\u5c0f\u56e2\u961f\uff0c\u914d\u5408\u4e00\u5806\u5f00\u6e90\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u505a\u7684\u6bd4\u4e00\u4e2a\u51e0\u5341\u4eba\u7684\u4e13\u4e1a\u56e2\u961f\u505a\u7684\u66f4\u597d\u5462\uff0c\u800c\u4e14\u8fd9\u4e8b\u79bb\u4e1a\u52a1\u90a3\u4e48\u8fdc\uff0c\u9664\u4e86\u80fd\u8ba9\u81ea\u5df1\u7684 kpi \u66f4\u597d\u770b\uff0c\u53ef\u80fd\u4e5f\u5e76\u6ca1\u6709\u5e26\u6765\u4ec0\u4e48\u522b\u7684\u6539\u53d8\u3002 \u968f\u7740\u9020\u7684\u8f6e\u5b50\u8d8a\u591a\uff0c\u4e5f\u6162\u6162\u53d1\u73b0\u81ea\u5df1\u53d8\u7684\u8d8a\u65e0\u6548\uff0c\u4e00\u76f4\u5728\u57fa\u7840\u95ee\u9898\u4e0a\u5f98\u5f8a\u3002\u901a\u5e38\u8d8a\u57fa\u7840\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6848\u4e5f\u8d8a\u901a\u7528\uff0c\u540c\u65f6\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684 ROI \u4e5f\u8d8a\u4f4e\uff0c\u6240\u505a\u7684\u5de5\u4f5c\u4e5f\u8d8a\u65e0\u6548\u3002\u4e5f\u4e0d\u8981\u8fc7\u5206\u5f3a\u8c03\u81ea\u5df1\u573a\u666f\u7684\u7279\u6b8a\u6027\uff0c\u9664\u975e\u53ea\u662f\u60f3\u641e\u4e00\u4e9b\u865a\u8363\u6307\u6807\uff0c\u800c\u4e0d\u89e3\u51b3\u672c\u8d28\u95ee\u9898\u3002 \u90a3\u4ec0\u4e48\u662f\u6709\u6548\u7684\u5462\uff1f\u6211\u8ba4\u4e3a\u6838\u5fc3\u5c31\u662f\uff1a \u5173\u6ce8\u7528\u6237\u3001\u5173\u6ce8\u4e1a\u52a1\uff0c\u653e\u5f03\u8fc7\u53bb\u901a\u8fc7\u7ecf\u9a8c\u7684\u5f52\u7eb3\u6765\u89e3\u51b3\u666e\u904d\u95ee\u9898\uff0c\u5c1d\u8bd5\u5229\u7528\u6570\u636e\u5206\u6790\u7684\u4eba\u673a\u4ea4\u4e92\u805a\u7126\u4e8e\u6838\u5fc3\u4e1a\u52a1\uff0c\u5e76\u901a\u8fc7 AI / \u81ea\u52a8\u5316\u5904\u7406\u652f\u6491\u4e1a\u52a1\u548c\u901a\u7528\u4e1a\u52a1 \u4e0d\u8fc7\u8fd9\u4e8b\u5f88\u96be\uff0c\u597d\u5728\u6211\u4e0d\u505a\u76d1\u63a7\u3002\u3002\u3002 Text Only 1 \u653e\u5f03\u9020\u8f6e\u5b50\uff0c\u4e86\u89e3\u76f8\u5173\u5f00\u6e90\u6a21\u578b\u548c\u65b9\u6848\uff0c\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u4e1a\u52a1\u4fa7 3. \u5c55\u671b \u00b6 \u53bb\u5e74\u6709\u4e00\u4e2a\u8ddf\u76d1\u63a7\u76f8\u5173\u7684\u5f88\u706b\u7684\u65b9\u5411\uff1a\u53ef\u89c2\u6d4b\u6027\u3002\u6211\u5bf9\u53ef\u89c2\u6d4b\u6027\u5e76\u6ca1\u6709\u592a\u591a\u7684\u5b9e\u8df5\uff0c \u4e0d\u8fc7\u5728\u8ddf\u670b\u53cb\u804a\u53ef\u89c2\u6d4b\u6027\u65f6\u53d1\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u91cc\u66f4\u591a\u7684\u662f\u60f3\u5199\u4e0b\u81ea\u5df1\u7684\u56f0\u60d1\uff1a \u53ef\u89c2\u6d4b\u6027\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898 \u6bcf\u5f53\u804a\u53ef\u89c2\u6d4b\u6027\u65f6\uff0c\u6211\u5c31\u53d1\u73b0\u5927\u5bb6\u4e00\u81f4\u8ba4\u4e3a\u53ef\u89c2\u6d4b\u6027\u53ef\u4ee5\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff0c\u5c31\u597d\u6bd4\u4e00\u628a\u5c60\u9f99\u5200\uff0c\u6240\u8fc7\u4e4b\u5904\u5bf8\u8349\u4e0d\u751f\u3002\u53ef\u4f60\u8981\u662f\u8be6\u7ec6\u95ee\u95ee\u7528\u53ef\u89c2\u6d4b\u6027\u505a\u4e86\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u6709\u70b9\u65f6\u5149\u5012\u6d41\u7684\u611f\u89c9\uff0c\u53c8\u56de\u5230\u5404\u79cd\u4eea\u8868\u76d8\uff0c\u6ee1\u5c4f\u6307\u6807\u7684\u65f6\u4ee3\u3002\u4f60\u6709\u53ef\u89c2\u6d4b\u6027\u7684\u6545\u4e8b\u561b\uff1f\u3001 Text Only 1 \u4f5c\u8005\u7ed3\u5408\u81ea\u5df1\u66fe\u7ecf \u6ee1\u5c4f\u76d1\u63a7->\u79bb\u4e1a\u52a1\u592a\u8fdc \u7684\u6298\u817e\u7ecf\u5386\u5bf9\u91cd\u590d\u65e0\u6548\u76d1\u63a7\u7684\u7ed3\u679c\u611f\u5230\u6050\u60e7 \u6570\u636e\u6536\u96c6\u5168\u9762\u5f00\u82b1 \u53ef\u89c2\u6d4b\u6027\u6280\u672f\u53d1\u5c55\u901f\u5ea6\u611f\u89c9\u975e\u5e38\u5feb\uff0c\u76f8\u5173\u5f00\u6e90\u9879\u76ee\u4e5f\u8d8a\u6765\u8d8a\u591a\uff0c\u4e0d\u8fc7\u5728\u6570\u636e\u6536\u96c6\u4e0a\u6709\u4e2a\u4ee4\u6211\u8be7\u5f02\u7684\u95ee\u9898\uff1a\u6709\u4e00\u5929\u522b\u4eba\u8ddf\u6211\u8bf4\uff0c\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u6536\u96c6 profiling \u505a\u53ef\u89c2\u6d4b\u6027\u5b9a\u4f4d\u4e1a\u52a1\u4ee3\u7801\u95ee\u9898\u3002 \u8be7\u5f02\u7684\u70b9\u5e76\u4e0d\u662f\u6280\u672f\u5b9e\u73b0\uff0c\u800c\u662f\u5728\u4e8e\u4ec0\u4e48\u6837\u7684\u4e1a\u52a1\u9700\u8981\u8fd9\u79cd\u7ea7\u522b\u7684\u53ef\u89c2\u6d4b\u6027\uff0c\u8fd9\u79cd\u53ef\u89c2\u6d4b\u6027\u9762\u5411\u7684\u7528\u6237\u53c8\u662f\u8c01\uff0c\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f \u4f60\u6709\u7b54\u6848\u561b? Text Only 1 \u4e4b\u524d\u9762\u8bd5\u89c2\u6d4b\u4e91\u9762\u8bd5\u5b98\u7ed9\u6211\u4e3e\u4e86\u4e00\u4e2a\u6570\u636e\u5e93\u67e5\u8be2\u7684\u4f8b\u5b50\uff0c\u7ec6\u8282\u5fd8\u8bb0\u4e86\uff0cexplain\u8bed\u53e5\u4e5f\u6ca1\u6cd5\u67e5\u5230\uff0c\u800c\u901a\u8fc7\u6253\u5370trace\u5bf9\u6bd4\u67e5\u627e\u5230\u95ee\u9898 \u65b0\u74f6\u88c5\u65e7\u9152 \u5982\u679c\u4f60\u8ddf\u540c\u4e8b\u4ecb\u7ecd\u53ef\u89c2\u6d4b\u6027\u7531 metric\u3001log\u3001tracing \u4e09\u90e8\u5206\u7ec4\u6210\u7684\u65f6\u5019\uff0c\u5f88\u5bb9\u6613\u88ab\u8001\u8fd0\u7ef4 diss\uff0c\u4ed6\u4f1a\u544a\u8bc9\u4f60\u6211\u4eec\u73b0\u5728\u90fd\u5df2\u7ecf\u6709\u4e86\uff0c\u53ea\u662f\u4e0d\u592a\u597d\u7528\uff0c\u4e30\u5bcc\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6ca1\u4ec0\u4e48\u65b0\u6280\u672f\uff0c\u4e0d\u8fc7\u662f\u65b0\u74f6\u88c5\u65e7\u9152\u800c\u5df2\u3002\u8fd9\u65f6\u5019\u6211\u901a\u5e38\u5c31\u4f1a\u63d0\u51fa google \u4e4b\u524d\u53d1\u7684\u5173\u4e8e <<\u6709\u610f\u4e49\u7684\u53ef\u7528\u6027>> \u91cc\u9762\u63d0\u5230\u7684\u95ee\u9898\uff0c\u5982\u4f55\u8861\u91cf \u7528\u6237\u7ea7\u522b \u7684\u6709\u610f\u4e49\u7684\u53ef\u7528\u6027\uff0c\u867d\u7136\u6211\u4e5f\u6ca1\u6709\u7b54\u6848\uff0c\u4e0d\u8fc7\u6211\u53ea\u60f3\u542f\u53d1\u4e0b\u5bf9\u95ee\u9898\u7684\u601d\u8003\u3002\u4f60\u662f\u600e\u4e48\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\u7684\u5462\uff1f \u4f20\u7edf\u76d1\u63a7\u5df2\u6b7b\uff0c\u53ef\u89c2\u6d4b\u6027\u5df2\u6765\u3002\u6211\u7684\u76d1\u63a7\u6545\u4e8b\u5c31\u5230\u8fd9\u91cc\uff0c\u53ef\u4ee5\u5728\u8bc4\u8bba\u91cc\u804a\u804a\u4f60\u7684\u6545\u4e8b\u3002 \u8001\u677f\u5e2e\u5fd9\u70b9\u4e2a\u8d5e\u5457\u3002 \u6765\u6e90\uff1a\u4e91\u539f\u751f\u6280\u672f\u5e94\u7528\uff08\u4fb5\u5220\uff09 maplestreet \uff1a - \u76d1\u63a7\u7b2c\u4e00\u70b9\uff0c\u6280\u672f\u548c\u5de5\u5177\u8fd8\u662f\u6b21\u8981\u7684\uff0c \u6700\u5173\u952e\u7684\u662f\u6709\u6ca1\u6709\u81ea\u9876\u5411\u4e0b\u6293\u4f4f\u5c11\u91cf\u6700\u6709\u4ef7\u503c\u7684\u6307\u6807\u2014\u2014\u901a\u5e38\u8fd9\u4e9b\u6307\u6807\u4e0d\u662f\u5de5\u5177\u76f4\u63a5\u63d0\u4f9b\u7684\uff0c\u4e00\u4e2a\u5355\u4e00\u76ee\u7684\u7cfb\u7edf\u8fd9\u6837\u7684\u5173\u952e\u6307\u6807\u4e0d\u5e94\u8be5\u8d85\u8fc7 5 \u4e2a\u3002 \u901a\u5e38\u5728\u8fd9\u65f6\u6211\u90fd\u4e0d\u4f1a\u7528\u76d1\u63a7\u8bf4\u4e8b\u4e86\uff0c\u56e0\u4e3a\u592a IT \u592a low \u4e86\u3002\u6211\u901a\u5e38\u4f1a\u8bf4\u5982\u4f55\u8861\u91cf\u4e00\u4e2a IT \u7cfb\u7edf\u7684\u4e1a\u52a1\u4ef7\u503c\u3002\u4f60\u6709\u6ca1\u6709\u4fe1\u5fc3\u53ea\u8981\u8fd9\u51e0\u4e2a\u6307\u6807\u662f\u597d\u7684\uff0c\u673a\u623f\u7206\u70b8\u6211\u90fd\u5f88\u81ea\u4fe1\u6ca1\u4e8b\uff1f - \u76d1\u63a7\u7b2c\u4e8c\u70b9\uff0c\u9664\u975e\u4f60\u77e5\u9053\u8fd9\u662f\u4e2a\u4f60\u4e00\u5b9a\u4f1a\u53bb\u4fee\u7684\u95ee\u9898\uff0c\u5426\u5219\u4e0d\u8981\u62a5\u8b66\uff0c\u4e0d\u8981\u62a5\u8b66\uff0c\u4e0d\u8981\u62a5\u8b66\uff01 call for action \u624d\u662f\u597d\u62a5\u8b66\uff0c\u5982\u679c\u4e00\u4ef6\u4e8b\u60c5\u53d1\u751f\u4e86\u4f60\u53ea\u662f\u60f3\u77e5\u9053\u90a3\u53eb\u901a\u77e5\u4e0d\u662f\u62a5\u8b66\u3002\u5982\u679c\u4f60\u62c5\u5fc3\u8fd9\u6837\u8bbe\u7f6e\u4f1a\u6f0f\u4e86\u4ec0\u4e48\u91cd\u8981\u7684\u95ee\u9898\uff0c\u53c2\u7167\u4e0a\u9762\u7b2c\u4e00\u70b9\u3002 \u4e4b\u6240\u4ee5\u8fd9\u6837\u63a8\u8350\u662f\u56e0\u4e3a\u5927\u591a\u6570\u7684\u62a5\u8b66\u90fd\u662f\u57fa\u4e8e\u5404\u79cd\u5df2\u77e5\u95ee\u9898\u7684\u6355\u6349\uff0c\u800c\u7cfb\u7edf\u95ee\u9898\u662f\u65e0\u6cd5\u5b8c\u5168\u679a\u4e3e\u7684\u3002 \u9ad8\u6548\u7684\u62a5\u8b66\u662f\u754c\u5b9a\u5c11\u6570\u5173\u952e\u6307\u6807\u7684\u6b63\u5e38\u8fb9\u754c\uff0c\u6240\u6709\u8d8a\u754c\u60c5\u51b5\u7686\u4e3a\u62a5\u8b66\u3002","title":"\u8fd0\u7ef4,\u653e\u8fc7\u76d1\u63a7 \u4e5f\u653e\u8fc7\u81ea\u5df1\u5427"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#1-\u6211\u7684\u76d1\u63a7\u6545\u4e8b","text":"\u6211\u505a\u8fc7\u4e24\u5e74\u591a\u7684\u8fd0\u7ef4\u5de5\u4f5c\uff0c\u540e\u9762\u5c31\u8f6c\u505a\u8fd0\u7ef4\u5e73\u53f0\u5f00\u53d1\u4e86\uff0c\u4e5f\u4e00\u6b65\u6b65\u770b\u7740\u76d1\u63a7\u7cfb\u7edf\u8d8a\u6765\u8d8a\u6ca1\u7528\u3002","title":"1. \u6211\u7684\u76d1\u63a7\u6545\u4e8b"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#11-\u6709\u7528\u7684\u76d1\u63a7","text":"\u5f53\u6211\u505a\u8fd0\u7ef4\u8981\u8d1f\u8d23 oncall \u65f6\uff0c\u6211\u4e00\u76f4\u8ba4\u4e3a\u76d1\u63a7\u7cfb\u7edf\u505a\u7684\u8fd8\u53ef\u4ee5\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a\u505a\u4e86\u592a\u591a\u4e8b\u60c5\uff0c\u800c\u662f\u56e0\u4e3a\u8fd0\u7ef4\u7684\u4e1a\u52a1\u8fd8\u662f\u5355\u4f53\u5e94\u7528\uff0c\u4e5f\u6ca1\u6709\u592a\u591a\u7684\u76d1\u63a7\u9700\u8981\u52a0\u3002 \u8bb0\u5f97\u90a3\u4f1a\u516c\u53f8\u8fd8\u662f\u7528 Nagios(\u4f30\u8ba1\u65b0\u4eba\u5df2\u7ecf\u6ca1\u591a\u5c11\u4eba\u77e5\u9053\u4e86)\uff0c\u4e0d\u8fc7\u76d1\u63a7\u7684\u7ef4\u62a4\u5de5\u4f5c\u7740\u5b9e\u8d39\u52b2\u3002\u540e\u9762\u6211\u5c31\u5f00\u59cb\u7814\u7a76 zabbix \uff0c\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u5b83\u53ef\u4ee5 discovery & \u81ea\u52a8\u6dfb\u52a0\u76d1\u63a7 \u3002\u540e\u9762\u6211\u53c8\u642d\u4e86\u4e00\u5957 ELK \uff0c\u628a\u4e1a\u52a1\u65e5\u5fd7\u90fd\u6536\u96c6\u5230\u4e00\u8d77\uff0c\u76d1\u63a7\u5c31\u9f50\u6d3b\u4e86\u3002 \u7531\u4e8e\u6ca1\u6709\u6dfb\u52a0\u592a\u591a\u544a\u8b66\uff0c\u90a3\u4f1a\u7684\u6bcf\u4e2a\u544a\u8b66\u57fa\u672c\u90fd\u5f97\u5904\u7406\uff0c\u6700\u5e38\u89c1\u7684\u95ee\u9898\u5c31\u662f\u767e\u5ea6\u6765\u722c\u6570\u636e\uff0c\u6211\u6709\u4e00\u5957\u5c61\u8bd5\u4e0d\u723d\u7684\u5904\u7406\u6d41\u7a0b\uff1a 1. \u770b\u6307\u6807\uff1a\u5982\u679c\u662f xx \u4e1a\u52a1\u7684\u8d1f\u8f7d\u9ad8, \u6709 90% \u7684\u6982\u7387\u662f\u722c\u866b\u5bfc\u81f4\u7684 2. \u770b\u65e5\u5fd7\uff1a\u5728 kibana \u4e0a\u770b\u8bbf\u95ee\u8bb0\u5f55\uff0c\u627e\u51fa topx \u7684 IP \u6bb5 3. \u5c01\u8bbf\u95ee\uff1a\u7528 iptables \u5c01\u6389 \u8fd9\u5c31\u662f\u6211\u552f\u4e00\u4e00\u6bb5\u7684\u8fd0\u7ef4\u76d1\u63a7\u7ecf\u5386\u3002\u7531\u4e8e\u4e1a\u52a1\u7b80\u5355\u3001\u76d1\u63a7\u539f\u59cb\u53cd\u800c\u8ba9\u6211\u611f\u89c9\u544a\u8b66\u662f\u6709\u7528\u7684\u3002","title":"1.1 \u6709\u7528\u7684\u76d1\u63a7"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#12-\u65e0\u7528\u7684\u4eea\u8868\u76d8","text":"","title":"1.2 \u65e0\u7528\u7684\u4eea\u8868\u76d8"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#121-\u75af\u72c2\u81ea\u52a8\u5316","text":"\u5f53\u6211\u8f6c\u8fd0\u7ef4\u5f00\u53d1\u540e\uff0c\u6211\u53d1\u73b0\u8fd0\u7ef4\u5bf9\u76d1\u63a7\u7684\u9700\u6c42\u4e5f\u53d8\u4e86\u3002 \u56e0\u4e3a\u81ea\u52a8\u5316\u80fd\u529b\u7684\u63d0\u5347\uff0c\u5404\u79cd\u5f00\u6e90\u7684\u76d1\u63a7\u7cfb\u7edf\u9010\u6b65\u5b8c\u5584\uff0c\u8fd0\u7ef4\u5c31\u5f00\u59cb\u5728\u5e73\u53f0\u91cc\u9762\u62fc\u547d\u7684\u52a0\u5404\u79cd\u81ea\u52a8\u5316\u7684\u9700\u6c42\uff0c\u5bf9\u4e8e\u76d1\u63a7\u7cfb\u7edf\u5c31\u662f\u81ea\u52a8\u7684\u7ed9\u4e1a\u52a1\u7ed1\u5b9a\u5404\u79cd\u76d1\u63a7\u6a21\u677f\u3001\u544a\u8b66\u6a21\u677f\u3001grafana \u4eea\u8868\u76d8 \u7ed3\u679c\u4e5f\u53ef\u60f3\u800c\u77e5\uff0c\u7531\u4e8e\u544a\u8b66\u5b9e\u5728\u592a\u591a\uff0c\u8fd0\u7ef4\u76f4\u63a5\u5c4f\u853d\u4e86\u516c\u53f8\u7684\u544a\u8b66\u77ed\u4fe1\u3002 \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u90fd\u662f\u9760\u4e1a\u52a1\u4fa7\u53d1\u73b0\u95ee\u9898\uff0c\u8fd0\u7ef4\u518d\u4ecb\u5165\u6392\u67e5\u3002","title":"1.2.1 \u75af\u72c2\u81ea\u52a8\u5316"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#122-\u597d\u770b\u800c\u6ca1\u7528\u7684\u4eea\u8868\u76d8","text":"\u7531\u4e8e\u6536\u96c6\u7684\u6307\u6807\u6570\u636e\u5b9e\u5728\u592a\u591a\uff0c\u4e3a\u4e86\u53ef\u4ee5\u7ed9\u4e1a\u52a1\u4fa7\u8f93\u51fa\uff0c\u8fd0\u7ef4\u5c31\u641e\u8d77\u4e86 grafana \u4eea\u8868\u76d8\u3002\u4e0d\u8fc7\u7531\u4e8e grafana \u4eea\u8868\u76d8\u4e0a\u7684\u6307\u6807\u5b9e\u5728\u592a\u591a\uff0c\u9875\u9762\u8fd8\u4f1a\u7ecf\u5e38\u5361\u4f4f\uff0c\u4e1a\u52a1\u7814\u53d1\u770b\u7740\u4e00\u4e2a\u9875\u9762\u4e0a\u51e0\u5341\u4e2a\u6307\u6807\uff0c\u4e5f\u4e0d\u77e5\u9053\u54ea\u4e2a\u6709\u7528\uff0c\u6700\u7ec8\u8fd8\u662f\u5f97\u6765\u627e\u8fd0\u7ef4\u3002 \u4e3a\u4e86\u65b9\u4fbf\u7814\u53d1\u67e5\u770b\u65e5\u5fd7\uff0c\u8fd0\u7ef4\u4e5f\u641e\u4e86 ELK\uff0c\u5c06\u5404\u79cd\u65e5\u5fd7\u5168\u90e8\u6536\u96c6\u8fdb\u53bb\uff0c\u7136\u540e\u5c06 kibana \u4e22\u7ed9\u4e86\u4e1a\u52a1\u7814\u53d1\u3002\u7ed3\u679c\u4e5f\u53ef\u60f3\u800c\u77e5\uff0c\u9664\u4e86\u5c11\u6570\u51e0\u4e2a\u7231\u6298\u817e\u7684\uff0ckibana \u4e0a\u7684 dashboard \u4e5f\u6ca1\u6709\u592a\u591a\u4eba\u770b\u3002 \u6211\u4e00\u76f4\u76f8\u4fe1\u8fd0\u7ef4\u7684\u521d\u8877\u90fd\u662f\u597d\u7684\uff0c\u4f46\u4ece\u7ed3\u679c\u4e0a\u6765\u770b\uff0c\u55e8\u7684\u53ea\u6709\u8fd0\u7ef4\uff0c\u6bd5\u7adf\u8fd0\u7ef4\u5f88\u5c11\u770b\u81ea\u5df1\u505a\u7684\u4eea\u8868\u76d8\u3002\u3002","title":"1.2.2 \u597d\u770b\u800c\u6ca1\u7528\u7684\u4eea\u8868\u76d8"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#13-\u6ca1\u6709\u8d28\u53d8","text":"\u968f\u7740 google sre \u6982\u5ff5\u7684\u5174\u8d77\uff0c\u8fd0\u7ef4\u4f3c\u4e4e\u662f\u627e\u5230\u4e86\u6700\u540e\u4e00\u6839\u7a3b\u8349\uff0c\u6bd5\u7adf\u8fd9\u662f google \u7684\u8fd0\u7ef4\u65b9\u6cd5\u8bba\u3002\u4e8e\u662f\uff0c\u8fd0\u7ef4\u53c8\u5f00\u59cb\u540c\u7814\u53d1\u5236\u5b9a\u5404\u79cd SLO\u3001SLI \u6307\u6807\uff0c\u4f9d\u636e 4 \u4e2a\u9ec4\u91d1\u6307\u6807 (\u5ef6\u8fdf\u3001\u6d41\u91cf\u3001\u9519\u8bef\u548c\u9971\u548c\u5ea6) \u6765\u7ee7\u7eed\u81ea\u4e30\u5bcc\u81ea\u5df1\u7684\u544a\u8b66\u5e93\uff0c\u5e76\u5236\u5b9a P0\u3001P1\u3001P2 \u7b49\u5404\u79cd\u544a\u8b66\u5206\u7ea7\uff0c\u8bd5\u56fe\u6539\u53d8\u5f53\u524d\u56f0\u5883\u3002 \u4f46\u662f\u7531\u4e8e\u4e1a\u52a1\u67b6\u6784\u5fae\u670d\u52a1\u5316\uff0c\u5e76\u4e14\u91c7\u7528\u654f\u6377\u5f00\u53d1\u7684\u6a21\u5f0f\uff0c\u5b9e\u9645\u4e0a\u4e1a\u52a1\u7684\u8fed\u4ee3\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5927\u90e8\u5206 sre \u672c\u8eab\u5e76\u4e0d\u662f\u505a\u5f00\u53d1\u51fa\u8eab\uff0c\u540c\u65f6\u4e25\u91cd\u7684\u914d\u6bd4\u4e0d\u8db3 (\u7814\u53d1\u548c\u8fd0\u7ef4\u6bd4\u4f8b)\uff0c \u5bfc\u81f4\u5404\u79cd\u6307\u6807\u968f\u7740\u65f6\u95f4\u5feb\u901f\u5931\u6548\u3002\u5176\u7ed3\u679c\u5c31\u662f\u544a\u8b66\u4f9d\u65e7\u6ca1\u7528\uff0c\u6bcf\u6b21\u590d\u76d8\u5c31\u662f\u518d\u52a0\u4e00\u6761\u544a\u8b66\uff0c\u5f53\u7136\u8fd9\u6761\u544a\u8b66\u4e5f\u51e0\u4e4e\u4e0d\u4f1a\u88ab\u89e6\u53d1\u3002 \u8fd9\u5c31\u662f\u6211\u7ecf\u5386\u7684\u76d1\u63a7\u6545\u4e8b\uff0c\u4f60\u6709\u54ea\u4e9b\u6545\u4e8b\u5462\uff1f","title":"1.3 \u6ca1\u6709\u8d28\u53d8"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#2-\u5bf9\u76d1\u63a7\u7684\u504f\u89c1","text":"\u5728\u5bf9\u8fd9\u4e9b\u5931\u8d25\u7684\u76d1\u63a7\u7ecf\u9a8c\u7684\u603b\u7ed3\u8fc7\u7a0b\u4e2d\uff0c\u6211\u53d1\u73b0\u4e24\u4e2a\u672c\u8d28\u7684\u95ee\u9898\uff1a \u4e00\u76f4\u8bd5\u56fe\u901a\u8fc7\u5f52\u7eb3\u8fc7\u53bb\u53d1\u751f\u7684\u5355\u4e2a\u95ee\u9898\uff0c\u6765\u9884\u6d4b\u672a\u6765\u53ef\u80fd\u53d1\u751f\u7684\u666e\u904d\u95ee\u9898\uff0c\u5e76\u5ffd\u7565\u672a\u6765\u5728\u65f6\u7a7a\u4e0a\u590d\u6742\u7684\u53d8\u5316\u4e00\u76f4\u4e13\u6ce8\u4e8e\u4f18\u5316\u4f20\u7edf\u7684\u63a2\u9488\u6a21\u578b (\u4f7f\u7528\u811a\u672c\u6d4b\u8bd5, \u68c0\u67e5\u6062\u590d\u5e76\u4e14\u62a5\u8b66)\u3001\u56fe\u5f62\u5316\u8d8b\u52bf\u5c55\u793a\u3001\u62a5\u8b66\u6a21\u578b, \u5e76\u4e0d\u65ad\u63d0\u5347\u76f8\u5173\u6d41\u7a0b\u7684\u81ea\u52a8\u5316 \u4e0a\u8ff0\u95ee\u9898\u53ea\u4ee3\u8868\u6211\u5f53\u524d\u5bf9\u76d1\u63a7\u7684\u8ba4\u77e5\uff0c\u5e76\u4e0d\u77e5\u9053\u5bf9\u9519\uff0c\u4e5f\u6ca1\u6709\u7b54\u6848\u3002\u4e0b\u9762\u5219\u662f\u6211\u5bf9\u76d1\u63a7\u7cfb\u7edf\u5f53\u524d\u5efa\u8bbe\u7684\u4e00\u4e9b\u504f\u89c1\u3002","title":"2. \u5bf9\u76d1\u63a7\u7684\u504f\u89c1"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#21-\u4eba\u5de5\u667a\u80fd\u8fd8\u662f\u4eba\u673a\u4ea4\u4e92","text":"\u559d\u7740\u5496\u5561\u505a\u8fd0\u7ef4 \u524d\u540c\u4e8b\u4ee4\u6211\u5370\u8c61\u6700\u6df1\u523b\u7684\u5c31\u662f\u8fd9\u53e5\u8bdd\u4e86\u3002\u8bf4\u5b8c\u8fd9\u53e5\u8bdd\u7684\u534a\u5e74\u540e\uff0c\u4ed6\u5c31\u5f00\u59cb\u7814\u7a76 AIOPS \u4e86\uff0c\u53c8\u8fc7\u4e86\u534a\u5e74\u4ed6\u5c31\u79bb\u804c\u4e86\uff0c\u7ec4\u91cc\u4e5f\u518d\u6ca1\u4eba\u63d0 AIOPS \u4e86\u3002\u5927\u90e8\u5206\u8fd0\u7ef4\u5bf9 AIOPS \u6700\u5927\u7684\u9700\u6c42\u53ef\u80fd\u5c31\u662f\u6839\u56e0\u5206\u6790\u4e86\uff0c\u4e0d\u8fc7\u8fd9\u5c31\u50cf\u662f\u4e00\u5ea7\u5927\u5c71\u7acb\u5728 AIOPS \u7684\u95e8\u5916\uff0c\u5927\u90e8\u5206\u8fd0\u7ef4\u56e2\u961f\u8fde\u722c\u7684\u52c7\u6c14\u4e5f\u6ca1\u6709\u3002 \u6211\u4e00\u76f4\u6ca1\u60f3\u660e\u767d\u4e00\u4e2a\u95ee\u9898\uff1a \u8fd0\u7ef4\u81ea\u5df1\u90fd\u4e0d\u4e00\u5b9a\u80fd\u6392\u67e5\u51fa\u95ee\u9898\u539f\u56e0\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6307\u671b\u673a\u5668\u80fd\u5b9e\u73b0\u8fd9\u4e2a\u4e8b\u60c5\u3002 \u4eba\u548c\u673a\u5668\u76f8\u6bd4\uff0c\u673a\u5668\u66f4\u64c5\u957f\u4e8e\u505a\u6d77\u91cf\u6570\u636e\u7684\u5206\u6790\uff0c\u800c\u4eba\u5219\u66f4\u64c5\u957f\u505a\u51b3\u7b56\u3002\u6240\u4ee5\u76f8\u6bd4 aiops \u6211\u8ba4\u4e3a\u4eba\u673a\u4ea4\u4e92\u53ef\u80fd\u66f4\u9760\u8c31\u4e00\u4e9b \uff1a \u673a\u5668\u5bf9\u6d77\u91cf\u6570\u636e\u8fdb\u884c\u5168\u9762\u5206\u6790\uff0c\u7531\u8fd0\u7ef4\u5bf9\u5206\u6790\u7ed3\u679c\u8fdb\u884c\u4eba\u8111\u51b3\u7b56 \u4e0d\u8fc7\u611f\u89c9\u8fd9\u4e8b\u4e5f\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u73b0\u5728\u7684 sre \u75f4\u8ff7\u5f00\u53d1\u7684\u7a0b\u5ea6\u5df2\u7ecf\u987e\u4e0d\u4e0a\u505a\u8fd9\u4e9b\u4e8b\u60c5\u4e86\u3002\u51b3\u7b56\u672c\u8eab\u4e5f\u9700\u8981\u5bf9\u6570\u636e\u6709\u4e00\u5b9a\u7684\u654f\u611f\u6027\u3002","title":"2.1 \u4eba\u5de5\u667a\u80fd\u8fd8\u662f\u4eba\u673a\u4ea4\u4e92"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#22-\u76d1\u63a7\u8981\u4e13\u6ce8\u80fd\u529b\u5efa\u8bbe","text":"\u5728\u8fc7\u53bb\u7684\u76d1\u63a7\u7cfb\u7edf\u5efa\u8bbe\u4e2d\uff0c\u5927\u5bb6\u4e00\u822c\u559c\u6b22\u6309\u7167\u67b6\u6784\u505a\u5782\u76f4\u5207\u5206\uff0c\u53ef\u80fd\u957f\u8fd9\u4e2a\u6837\u5b50\uff1a \u6211\u8ba4\u4e3a\u4ea7\u751f\u8fd9\u79cd\u5206\u5c42\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff1a\u7ec4\u7ec7\u67b6\u6784 (\u5eb7\u5a01\u5b9a\u5f8b) \u548c\u804c\u8d23\u5206\u79bb\u3002\u5728\u8fd9\u79cd\u5206\u5c42\u4e0b\uff0c\u8fd0\u7ef4\u901a\u5e38\u5c31\u53ea\u8d1f\u8d23\u4e0b\u9762\u4e24\u5c42\uff0c\u5bf9\u4e8e\u4e0a\u5c42\u95ee\u9898\u7684\u5904\u7406\uff0c\u53ef\u80fd\u5b9a\u4f4d\u5230\u67d0\u4e2a\u5177\u4f53\u7684 URL \u5c31\u7ed3\u675f\u4e86\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7814\u53d1\u7684\u4e8b\u60c5\u4e86\u3002\\ \u5982\u679c\u8981\u89e3\u51b3\u5f53\u524d\u8fd9\u4e2a\u56f0\u5883\uff0c\u6211\u8ba4\u4e3a\u5e94\u8be5\u6452\u5f03\u8fc7\u53bb\u6309\u7167\u804c\u8d23\u8fdb\u884c\u7cfb\u7edf\u5efa\u8bbe\u7684\u65b9\u5f0f\uff0c\u6bd4\u5982\u505a\u4e2a\u57fa\u7840\u76d1\u63a7\u7cfb\u7edf\u3001\u7f51\u7edc\u76d1\u63a7\u7cfb\u7edf\u3001\u4e1a\u52a1\u76d1\u63a7\u7cfb\u7edf\uff0c\u800c\u662f\u8f6c\u5411\u56f4\u7ed5\u4e1a\u52a1\u4ef7\u503c\u5206\u9636\u6bb5\u8fdb\u884c\u80fd\u529b\u5efa\u8bbe\uff0c\u6bd4\u5982\u57fa\u7840\u7684\u6570\u636e\u91c7\u96c6\u3001\u4f20\u8f93\u3001\u5206\u6790\u3001\u5b58\u50a8\u3001\u5c55\u793a\u7b49\u80fd\u529b\u3002\u8f6c\u578b\u6210\u4e3a\u63d0\u4f9b\u6d77\u91cf\u6570\u636e\u6536\u96c6\u548c\u4e2d\u592e\u5316\u89c4\u5219\u8ba1\u7b97\u3001\u7edf\u4e00\u5206\u6790\u548c\u62a5\u8b66\u80fd\u529b\u7684\u73b0\u4ee3\u5316\u76d1\u63a7\u7cfb\u7edf\u3010google sre\u3011 \u5728\u80fd\u529b\u5efa\u8bbe\u8fc7\u7a0b\u4e2d\uff0c\u5e73\u53f0\u56e2\u961f\u5e94\u8be5\u4ee5\u771f\u5b9e\u9700\u6c42\u4e3a\u76ee\u6807\uff0c\u642d\u5efa\u6700\u5c0f\u53ef\u7528\u5e73\u53f0 (Thinnesr Viable Platform, TVP)\uff0c\u5e76\u5728\u56e2\u961f\u4e2d\u5206\u4eab\u6700\u4f73\u5b9e\u8df5\u548c\u4e3b\u52a8\u8d4b\u80fd\u7528\u6237\uff0c\u9010\u6b65\u6210\u5c31\u5353\u8d8a\u7528\u6237\u3002\u540c\u65f6\u8981\u907f\u514d\u5206\u4eab\u7684\u90fd\u662f\u6ca1\u843d\u5730\u7684\u65b9\u6cd5\u8bba\uff0c\u6bd5\u7adf\u5927\u5bb6\u90fd\u5f88\u5fd9\u3002","title":"2.2 \u76d1\u63a7\u8981\u4e13\u6ce8\u80fd\u529b\u5efa\u8bbe"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#23-\u5c1d\u8bd5\u53d8\u7684\u6709\u6548","text":"\u5f53\u5904\u7406\u95ee\u9898\u65f6\uff0c\u5c31\u4f1a\u53d1\u73b0\u516c\u53f8\u7684\u76d1\u63a7\u7cfb\u7edf\u6bd4\u77e5\u9053\u7684\u591a\uff0c\u8fd0\u7ef4\u3001\u7814\u53d1\u3001DBA\u3001redis \u7b49\u6bcf\u4e2a\u90e8\u95e8\u90fd\u6709\u81ea\u5df1\u7684\u76d1\u63a7\u7cfb\u7edf\u548c\u4eea\u8868\u76d8\uff0c\u51fa\u95ee\u9898\u65f6\uff0c\u6bcf\u4e2a\u4eba\u770b\u7684\u90fd\u662f\u81ea\u5df1\u90e8\u95e8\u641e\u7684\u76d1\u63a7\u3002\u4e3a\u4e86\u80fd\u591f\u5efa\u7acb\u7edf\u4e00\u7684\u89c6\u89d2\uff0c\u6709\u80fd\u529b\u7684\u516c\u53f8\u53c8\u4f1a\u5012\u817e\u51fa\u7edf\u4e00\u76d1\u63a7\u8fd9\u79cd\u4e1c\u897f\uff1a\u4ece\u4e0d\u540c\u7684\u7cfb\u7edf\u91cc\u9762\u83b7\u53d6\u5404\u79cd\u6570\u636e\uff0c\u7edf\u4e00\u8fdb\u884c\u6c47\u603b\u5206\u6790\u5b58\u50a8\uff0c\u6700\u7ec8\u7edf\u4e00\u76d1\u63a7\u53c8\u4f1a\u5e26\u6765\u6570\u636e\u5b9e\u65f6\u6027\u3001\u51c6\u786e\u6027\u3001\u5b58\u50a8\u6210\u672c\u3001\u6d77\u91cf\u6570\u636e\u5904\u7406\u7b49\u65b0\u7684\u95ee\u9898\uff0c\u800c\u4e14\u8fd9\u4e8b\u4e00\u65f6\u534a\u4f1a\u4e5f\u641e\u4e0d\u5b9a\u3002 \u4e0d\u8fc7\u8fd9\u4e8b\u771f\u7684\u6709\u610f\u4e49\u561b\uff1f\u5bf9\u4e8e\u8fd9\u79cd\u57fa\u7840\u7684\u6570\u636e\u7684\u91c7\u96c6\u3001\u5206\u6790\u548c\u5b58\u50a8\u5176\u5b9e\u5df2\u7ecf\u6709\u5f88\u591a\u5546\u4e1a\u5316\u7684\u65b9\u6848\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u89c9\u5f97\u81ea\u5df1\u51e0\u4e2a\u4eba\u7684\u5c0f\u56e2\u961f\uff0c\u914d\u5408\u4e00\u5806\u5f00\u6e90\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u505a\u7684\u6bd4\u4e00\u4e2a\u51e0\u5341\u4eba\u7684\u4e13\u4e1a\u56e2\u961f\u505a\u7684\u66f4\u597d\u5462\uff0c\u800c\u4e14\u8fd9\u4e8b\u79bb\u4e1a\u52a1\u90a3\u4e48\u8fdc\uff0c\u9664\u4e86\u80fd\u8ba9\u81ea\u5df1\u7684 kpi \u66f4\u597d\u770b\uff0c\u53ef\u80fd\u4e5f\u5e76\u6ca1\u6709\u5e26\u6765\u4ec0\u4e48\u522b\u7684\u6539\u53d8\u3002 \u968f\u7740\u9020\u7684\u8f6e\u5b50\u8d8a\u591a\uff0c\u4e5f\u6162\u6162\u53d1\u73b0\u81ea\u5df1\u53d8\u7684\u8d8a\u65e0\u6548\uff0c\u4e00\u76f4\u5728\u57fa\u7840\u95ee\u9898\u4e0a\u5f98\u5f8a\u3002\u901a\u5e38\u8d8a\u57fa\u7840\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u65b9\u6848\u4e5f\u8d8a\u901a\u7528\uff0c\u540c\u65f6\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684 ROI \u4e5f\u8d8a\u4f4e\uff0c\u6240\u505a\u7684\u5de5\u4f5c\u4e5f\u8d8a\u65e0\u6548\u3002\u4e5f\u4e0d\u8981\u8fc7\u5206\u5f3a\u8c03\u81ea\u5df1\u573a\u666f\u7684\u7279\u6b8a\u6027\uff0c\u9664\u975e\u53ea\u662f\u60f3\u641e\u4e00\u4e9b\u865a\u8363\u6307\u6807\uff0c\u800c\u4e0d\u89e3\u51b3\u672c\u8d28\u95ee\u9898\u3002 \u90a3\u4ec0\u4e48\u662f\u6709\u6548\u7684\u5462\uff1f\u6211\u8ba4\u4e3a\u6838\u5fc3\u5c31\u662f\uff1a \u5173\u6ce8\u7528\u6237\u3001\u5173\u6ce8\u4e1a\u52a1\uff0c\u653e\u5f03\u8fc7\u53bb\u901a\u8fc7\u7ecf\u9a8c\u7684\u5f52\u7eb3\u6765\u89e3\u51b3\u666e\u904d\u95ee\u9898\uff0c\u5c1d\u8bd5\u5229\u7528\u6570\u636e\u5206\u6790\u7684\u4eba\u673a\u4ea4\u4e92\u805a\u7126\u4e8e\u6838\u5fc3\u4e1a\u52a1\uff0c\u5e76\u901a\u8fc7 AI / \u81ea\u52a8\u5316\u5904\u7406\u652f\u6491\u4e1a\u52a1\u548c\u901a\u7528\u4e1a\u52a1 \u4e0d\u8fc7\u8fd9\u4e8b\u5f88\u96be\uff0c\u597d\u5728\u6211\u4e0d\u505a\u76d1\u63a7\u3002\u3002\u3002 Text Only 1 \u653e\u5f03\u9020\u8f6e\u5b50\uff0c\u4e86\u89e3\u76f8\u5173\u5f00\u6e90\u6a21\u578b\u548c\u65b9\u6848\uff0c\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u4e1a\u52a1\u4fa7","title":"2.3 \u5c1d\u8bd5\u53d8\u7684\u6709\u6548"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%2C%E6%94%BE%E8%BF%87%E7%9B%91%E6%8E%A7-%E4%B9%9F%E6%94%BE%E8%BF%87%E8%87%AA%E5%B7%B1%E5%90%A7/#3-\u5c55\u671b","text":"\u53bb\u5e74\u6709\u4e00\u4e2a\u8ddf\u76d1\u63a7\u76f8\u5173\u7684\u5f88\u706b\u7684\u65b9\u5411\uff1a\u53ef\u89c2\u6d4b\u6027\u3002\u6211\u5bf9\u53ef\u89c2\u6d4b\u6027\u5e76\u6ca1\u6709\u592a\u591a\u7684\u5b9e\u8df5\uff0c \u4e0d\u8fc7\u5728\u8ddf\u670b\u53cb\u804a\u53ef\u89c2\u6d4b\u6027\u65f6\u53d1\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u91cc\u66f4\u591a\u7684\u662f\u60f3\u5199\u4e0b\u81ea\u5df1\u7684\u56f0\u60d1\uff1a \u53ef\u89c2\u6d4b\u6027\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898 \u6bcf\u5f53\u804a\u53ef\u89c2\u6d4b\u6027\u65f6\uff0c\u6211\u5c31\u53d1\u73b0\u5927\u5bb6\u4e00\u81f4\u8ba4\u4e3a\u53ef\u89c2\u6d4b\u6027\u53ef\u4ee5\u89e3\u51b3\u6240\u6709\u7684\u95ee\u9898\uff0c\u5c31\u597d\u6bd4\u4e00\u628a\u5c60\u9f99\u5200\uff0c\u6240\u8fc7\u4e4b\u5904\u5bf8\u8349\u4e0d\u751f\u3002\u53ef\u4f60\u8981\u662f\u8be6\u7ec6\u95ee\u95ee\u7528\u53ef\u89c2\u6d4b\u6027\u505a\u4e86\u4ec0\u4e48\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u6709\u70b9\u65f6\u5149\u5012\u6d41\u7684\u611f\u89c9\uff0c\u53c8\u56de\u5230\u5404\u79cd\u4eea\u8868\u76d8\uff0c\u6ee1\u5c4f\u6307\u6807\u7684\u65f6\u4ee3\u3002\u4f60\u6709\u53ef\u89c2\u6d4b\u6027\u7684\u6545\u4e8b\u561b\uff1f\u3001 Text Only 1 \u4f5c\u8005\u7ed3\u5408\u81ea\u5df1\u66fe\u7ecf \u6ee1\u5c4f\u76d1\u63a7->\u79bb\u4e1a\u52a1\u592a\u8fdc \u7684\u6298\u817e\u7ecf\u5386\u5bf9\u91cd\u590d\u65e0\u6548\u76d1\u63a7\u7684\u7ed3\u679c\u611f\u5230\u6050\u60e7 \u6570\u636e\u6536\u96c6\u5168\u9762\u5f00\u82b1 \u53ef\u89c2\u6d4b\u6027\u6280\u672f\u53d1\u5c55\u901f\u5ea6\u611f\u89c9\u975e\u5e38\u5feb\uff0c\u76f8\u5173\u5f00\u6e90\u9879\u76ee\u4e5f\u8d8a\u6765\u8d8a\u591a\uff0c\u4e0d\u8fc7\u5728\u6570\u636e\u6536\u96c6\u4e0a\u6709\u4e2a\u4ee4\u6211\u8be7\u5f02\u7684\u95ee\u9898\uff1a\u6709\u4e00\u5929\u522b\u4eba\u8ddf\u6211\u8bf4\uff0c\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u6536\u96c6 profiling \u505a\u53ef\u89c2\u6d4b\u6027\u5b9a\u4f4d\u4e1a\u52a1\u4ee3\u7801\u95ee\u9898\u3002 \u8be7\u5f02\u7684\u70b9\u5e76\u4e0d\u662f\u6280\u672f\u5b9e\u73b0\uff0c\u800c\u662f\u5728\u4e8e\u4ec0\u4e48\u6837\u7684\u4e1a\u52a1\u9700\u8981\u8fd9\u79cd\u7ea7\u522b\u7684\u53ef\u89c2\u6d4b\u6027\uff0c\u8fd9\u79cd\u53ef\u89c2\u6d4b\u6027\u9762\u5411\u7684\u7528\u6237\u53c8\u662f\u8c01\uff0c\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u4ec0\u4e48\uff1f \u4f60\u6709\u7b54\u6848\u561b? Text Only 1 \u4e4b\u524d\u9762\u8bd5\u89c2\u6d4b\u4e91\u9762\u8bd5\u5b98\u7ed9\u6211\u4e3e\u4e86\u4e00\u4e2a\u6570\u636e\u5e93\u67e5\u8be2\u7684\u4f8b\u5b50\uff0c\u7ec6\u8282\u5fd8\u8bb0\u4e86\uff0cexplain\u8bed\u53e5\u4e5f\u6ca1\u6cd5\u67e5\u5230\uff0c\u800c\u901a\u8fc7\u6253\u5370trace\u5bf9\u6bd4\u67e5\u627e\u5230\u95ee\u9898 \u65b0\u74f6\u88c5\u65e7\u9152 \u5982\u679c\u4f60\u8ddf\u540c\u4e8b\u4ecb\u7ecd\u53ef\u89c2\u6d4b\u6027\u7531 metric\u3001log\u3001tracing \u4e09\u90e8\u5206\u7ec4\u6210\u7684\u65f6\u5019\uff0c\u5f88\u5bb9\u6613\u88ab\u8001\u8fd0\u7ef4 diss\uff0c\u4ed6\u4f1a\u544a\u8bc9\u4f60\u6211\u4eec\u73b0\u5728\u90fd\u5df2\u7ecf\u6709\u4e86\uff0c\u53ea\u662f\u4e0d\u592a\u597d\u7528\uff0c\u4e30\u5bcc\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6ca1\u4ec0\u4e48\u65b0\u6280\u672f\uff0c\u4e0d\u8fc7\u662f\u65b0\u74f6\u88c5\u65e7\u9152\u800c\u5df2\u3002\u8fd9\u65f6\u5019\u6211\u901a\u5e38\u5c31\u4f1a\u63d0\u51fa google \u4e4b\u524d\u53d1\u7684\u5173\u4e8e <<\u6709\u610f\u4e49\u7684\u53ef\u7528\u6027>> \u91cc\u9762\u63d0\u5230\u7684\u95ee\u9898\uff0c\u5982\u4f55\u8861\u91cf \u7528\u6237\u7ea7\u522b \u7684\u6709\u610f\u4e49\u7684\u53ef\u7528\u6027\uff0c\u867d\u7136\u6211\u4e5f\u6ca1\u6709\u7b54\u6848\uff0c\u4e0d\u8fc7\u6211\u53ea\u60f3\u542f\u53d1\u4e0b\u5bf9\u95ee\u9898\u7684\u601d\u8003\u3002\u4f60\u662f\u600e\u4e48\u7406\u89e3\u8fd9\u4e2a\u95ee\u9898\u7684\u5462\uff1f \u4f20\u7edf\u76d1\u63a7\u5df2\u6b7b\uff0c\u53ef\u89c2\u6d4b\u6027\u5df2\u6765\u3002\u6211\u7684\u76d1\u63a7\u6545\u4e8b\u5c31\u5230\u8fd9\u91cc\uff0c\u53ef\u4ee5\u5728\u8bc4\u8bba\u91cc\u804a\u804a\u4f60\u7684\u6545\u4e8b\u3002 \u8001\u677f\u5e2e\u5fd9\u70b9\u4e2a\u8d5e\u5457\u3002 \u6765\u6e90\uff1a\u4e91\u539f\u751f\u6280\u672f\u5e94\u7528\uff08\u4fb5\u5220\uff09 maplestreet \uff1a - \u76d1\u63a7\u7b2c\u4e00\u70b9\uff0c\u6280\u672f\u548c\u5de5\u5177\u8fd8\u662f\u6b21\u8981\u7684\uff0c \u6700\u5173\u952e\u7684\u662f\u6709\u6ca1\u6709\u81ea\u9876\u5411\u4e0b\u6293\u4f4f\u5c11\u91cf\u6700\u6709\u4ef7\u503c\u7684\u6307\u6807\u2014\u2014\u901a\u5e38\u8fd9\u4e9b\u6307\u6807\u4e0d\u662f\u5de5\u5177\u76f4\u63a5\u63d0\u4f9b\u7684\uff0c\u4e00\u4e2a\u5355\u4e00\u76ee\u7684\u7cfb\u7edf\u8fd9\u6837\u7684\u5173\u952e\u6307\u6807\u4e0d\u5e94\u8be5\u8d85\u8fc7 5 \u4e2a\u3002 \u901a\u5e38\u5728\u8fd9\u65f6\u6211\u90fd\u4e0d\u4f1a\u7528\u76d1\u63a7\u8bf4\u4e8b\u4e86\uff0c\u56e0\u4e3a\u592a IT \u592a low \u4e86\u3002\u6211\u901a\u5e38\u4f1a\u8bf4\u5982\u4f55\u8861\u91cf\u4e00\u4e2a IT \u7cfb\u7edf\u7684\u4e1a\u52a1\u4ef7\u503c\u3002\u4f60\u6709\u6ca1\u6709\u4fe1\u5fc3\u53ea\u8981\u8fd9\u51e0\u4e2a\u6307\u6807\u662f\u597d\u7684\uff0c\u673a\u623f\u7206\u70b8\u6211\u90fd\u5f88\u81ea\u4fe1\u6ca1\u4e8b\uff1f - \u76d1\u63a7\u7b2c\u4e8c\u70b9\uff0c\u9664\u975e\u4f60\u77e5\u9053\u8fd9\u662f\u4e2a\u4f60\u4e00\u5b9a\u4f1a\u53bb\u4fee\u7684\u95ee\u9898\uff0c\u5426\u5219\u4e0d\u8981\u62a5\u8b66\uff0c\u4e0d\u8981\u62a5\u8b66\uff0c\u4e0d\u8981\u62a5\u8b66\uff01 call for action \u624d\u662f\u597d\u62a5\u8b66\uff0c\u5982\u679c\u4e00\u4ef6\u4e8b\u60c5\u53d1\u751f\u4e86\u4f60\u53ea\u662f\u60f3\u77e5\u9053\u90a3\u53eb\u901a\u77e5\u4e0d\u662f\u62a5\u8b66\u3002\u5982\u679c\u4f60\u62c5\u5fc3\u8fd9\u6837\u8bbe\u7f6e\u4f1a\u6f0f\u4e86\u4ec0\u4e48\u91cd\u8981\u7684\u95ee\u9898\uff0c\u53c2\u7167\u4e0a\u9762\u7b2c\u4e00\u70b9\u3002 \u4e4b\u6240\u4ee5\u8fd9\u6837\u63a8\u8350\u662f\u56e0\u4e3a\u5927\u591a\u6570\u7684\u62a5\u8b66\u90fd\u662f\u57fa\u4e8e\u5404\u79cd\u5df2\u77e5\u95ee\u9898\u7684\u6355\u6349\uff0c\u800c\u7cfb\u7edf\u95ee\u9898\u662f\u65e0\u6cd5\u5b8c\u5168\u679a\u4e3e\u7684\u3002 \u9ad8\u6548\u7684\u62a5\u8b66\u662f\u754c\u5b9a\u5c11\u6570\u5173\u952e\u6307\u6807\u7684\u6b63\u5e38\u8fb9\u754c\uff0c\u6240\u6709\u8d8a\u754c\u60c5\u51b5\u7686\u4e3a\u62a5\u8b66\u3002","title":"3. \u5c55\u671b"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/","text":"1. \u708e\u51f0\u5de5\u4f5c\u8981\u6c42 \u00b6 2. \u77e5\u4e4e-\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6709\u524d\u9014\u5417\uff1f \u00b6 \u540c\u6837 IT \u533a\u522b\u4e8e\u5f00\u53d1 \u8bf7\u5927\u4f6c\u8c08\u8c08\uff1f \u4e2a\u4eba\u8ba4\u4e3a\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u662f\u4e00\u4e2a\u9636\u6bb5\u6027\u7684\u804c\u4e1a\uff0c\u804c\u4e1a\u751f\u6daf\u524d\u671f\u53d1\u5c55\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u540e\u671f\u7684\u8bdd\u9700\u8981\u8d70\u5411\u6280\u672f\u4e13\u5bb6\u65b9\u5411\uff0c\u6216\u8005\u8f6c\u5411\u7ba1\u7406\u3002\u6211\u89c9\u5f97\u73b0\u5728\u8fd0\u7ef4\u5de5\u4f5c\u8d8b\u5411\u81ea\u52a8\u5316\u3002 \u6570\u636e\u5e93\u3001\u4e3b\u673a\u3001\u7f51\u7edc\u7b49\u5382\u5bb6\u63a8\u51fa\u66f4\u52a0\u667a\u80fd\u5316\u7684\u7248\u672c\uff0c\u4eba\u5de5\u5e72\u9884\u7a0b\u5ea6\u4f1a\u9010\u6b65\u51cf\u5c11\uff1b\u540c\u65f6\uff0c\u73b0\u5728\u5e94\u7528\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u589e\u52a0\uff0c\u5355\u4e2a\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u9700\u8d1f\u8d23\u9762\u5bf9\u6bd4\u8fc7\u53bb\u66f4\u591a\u7684\u8bbe\u5907\u548c\u7cfb\u7edf\u3002 \u73b0\u5728\u56fd\u5bb6\u63d0\u51fa\u5de5\u4e1a\u4e92\u8054\u7f51\uff0c\u667a\u6167\u57ce\u5e02\u7b49\u6982\u5ff5\uff0c\u9700\u8981\u5927\u91cf\u7684\u5e94\u7528\u8f6f\u4ef6\u652f\u6491\uff0c\u81ea\u7136\u9700\u8981\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6765\u4fdd\u969c\u65e5\u5e38\u7684\u8fd0\u4f5c\uff0c\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u662f\u6709\u524d\u9014\u7684\u3002 \u4f46\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u5de5\u4f5c\u90fd\u662f\u6709\u524d\u9014\u7684\u3002\u7ed3\u5408\u6211\u770b\u5230\u7684\u60c5\u51b5\uff0c \u5047\u8bbe\u4e2a\u6848\u4f8b\u3002A\uff0cB \u540c\u6821\u6bd5\u4e1a\uff0cA \u8fdb\u5165\u4e00\u5bb6\u975e IT \u884c\u4e1a\u56fd\u4f01\uff0c\u505a IT \u8fd0\u7ef4\uff0c\u5e73\u65f6\u5c31\u662f\u7ef4\u62a4\u7740\u51e0\u4e2a OA \u7cfb\u7edf\uff0c\u8f7b\u677e\u7a33\u5b9a\u3002B \u8fdb\u5165\u4e00\u5bb6 IT \u5916\u5305\u516c\u53f8\uff0c\u9700\u8981\u9762\u5bf9\u65e0\u6570\u96be\u5543\u7684\u7cfb\u7edf\u95ee\u9898\uff0c\u7d2f\u6210\u72d7\u3002 3 \u5e74\u540e\uff0cA \u548c B \u7684\u524d\u9014\u9898\u4e3b\u89c9\u5f97\u5982\u4f55\uff1f A \u7684\u60c5\u51b5\u770b\u5230\u6bd4\u8f83\u591a\uff0c\u57fa\u672c\u662f\u6d6a\u8d39\u4e86\uff0c\u4ee5\u4e3a\u53bb\u5230\u4e00\u4e2a\u7a33\u5b9a\u7684\u4f01\u4e1a\uff0c\u7ed3\u679c IT \u90e8\u95e8\u5728\u4f01\u4e1a\u7684\u5730\u4f4d\u4e0d\u9ad8\uff0c\u5347\u5c97\u673a\u4f1a\u8f6e\u4e0d\u5230\uff0c\u63a5\u89e6\u5230\u7684\u6280\u672f\u6781\u5176\u6709\u9650\uff0c\u5f85\u7740\u75db\u82e6\uff0c\u8df3\u51fa\u6765\u4e5f\u662f\u75db\u82e6\uff1b\u8fd8\u4e0d\u5982 B\uff0c3 \u5e74\u8f9b\u82e6\uff0c\u6280\u672f\u63d0\u5347\u5927\u3002\u6240\u4ee5\u8bf4\u8fd9\u79cd\u770b\u4f3c\u98ce\u5149\u7684\u8fd0\u7ef4\u5de5\u7a0b\u5e08\uff0c\u4e0d\u4e00\u5b9a\u662f\u597d\u4e8b\u3002\u5176\u5b9e\u6240\u6709\u5de5\u4f5c\u6211\u89c9\u5f97\u7686\u662f\u5982\u6b64\uff0c\u4f60\u5f53\u524d\u7684\u5de5\u4f5c\uff0c\u4e00\u4e2a\u6708\u5c31\u638c\u63e1\u4e86\uff0c\u90a3\u540c\u6837\u968f\u4fbf\u4e00\u4e2a\u65b0\u4eba\u4e5f\u4f1a\uff0c\u8fd9\u79cd\u5de5\u4f5c\u6709\u524d\u9014\u4e48\uff1f \u524d\u9014\u662f\u6709\u7684\uff0c\u9700\u8981\u8c28\u614e\u9009\u62e9\u3002 3. \u4e91\u539f\u751f\u8fd0\u7ef4 \u00b6 \u63a8\u8350 \u4e91\u539f\u751f\u8fd0\u7ef4 \u8fd9\u4e2a\u65b9\u5411\uff0c\u4f20\u7edf\u7684\u53ea\u505a Linux \u8fd0\u7ef4\u4f1a\u6e10\u88ab Kubernetes \u8fd0\u7ef4 \u7ed9\u53d6\u4ee3\u3002 \u4e91\u539f\u751f\u5df2\u7ecf\u662f\u4e91\u8ba1\u7b97\u884c\u4e1a\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u6539\u53d8\u4e86\u8f6f\u4ef6\u5f00\u53d1\u3001\u90e8\u7f72\u548c\u8fd0\u7ef4\u7684\u5de5\u4f5c\u3001\u601d\u7ef4\u65b9\u5f0f\uff0c\u4e5f\u8ba9\u8fd0\u7ef4\u4eba\u5458\u7684\u804c\u4e1a\u65b9\u5411\u53d1\u751f\u4e86\u6781\u5927\u7684\u8f6c\u53d8\uff0c\u8fd9\u4e5f\u8981\u6c42\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u76f8\u6bd4\u4f20\u7edf\u8fd0\u7ef4\u9700\u8981\u638c\u63e1\u4e0d\u540c\u7684\u6280\u672f\u4e0e\u65b9\u6cd5\u8bba\u3002 1\u3001\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u524d\u666f \u00b6 \u4e00\u4e2a\u804c\u4e1a\u65b9\u5411\u662f\u5426\u6709\u524d\u9014\uff0c\u5c97\u4f4d\u9700\u6c42\u91cf\u662f\u5426\u5927\uff0c\u53c8\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u6838\u5fc3\u6280\u80fd\uff0c\u6700\u9760\u8c31\u7684\u505a\u6cd5\u5f53\u7136\u662f\u53bb\u62db\u8058\u7f51\u7ad9\u4e0a\u641c\u7d22\u76f8\u5173\u5c97\u4f4d\uff0c\u6bd4\u5982\u5173\u4e8e\u4e91\u539f\u751f\u8fd0\u7ef4\uff0c\u53ef\u4ee5\u641c\u7d22 \u201c\u4e91\u539f\u751f\u8fd0\u7ef4\u201d\u3001\u201c DevOps \u5de5\u7a0b\u5e08\u201d\u3001\u201cSRE \u5de5\u7a0b\u5e08\u201d\u3001\u201c \u4e91\u539f\u751f\u67b6\u6784\u5e08 \u201d\u3001\u201cKubernetes \u8fd0\u7ef4\u201d \u7b49\u5173\u952e\u8bcd\uff0c\u5c31\u53ef\u4ee5\u4e86\u89e3\u5230\u5f53\u524d\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u5c97\u4f4d\u9700\u6c42\u91cf\u6bd4\u8f83\u5927\uff0c\u5f85\u9047\u524d\u666f\u4e5f\u8fdc\u975e\u4f20\u7edf\u8fd0\u7ef4\u53ef\u6bd4\u3002 \u800c\u540c\u65f6\u968f\u7740\u4e91\u8ba1\u7b97\u884c\u4e1a\u7684\u4e0d\u65ad\u6f14\u53d8\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u5de5\u4f5c\u5185\u5bb9\u548c\u804c\u8d23\u76f8\u6bd4\u4f20\u7edf\u8fd0\u7ef4\u6709\u4e86\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u5c24\u5176\u662f\u4ece\u4f20\u7edf Linux \u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u7ef4\u8f6c\u5411\u4e86\u4e91\u539f\u751f\u65f6\u4ee3\u7684\u64cd\u4f5c\u7cfb\u7edf Kubernetes \u7684\u8fd0\u7ef4\u4e0a\uff1a \u719f\u6089 DevOps\u3001CI/CD\uff0c\u8d1f\u8d23\u5e94\u7528\u4ea7\u54c1\u7684\u6301\u7eed\u4ea4\u4ed8\u548c\u6301\u7eed\u8fd0\u7ef4\u7684\u5de5\u5177\u4f53\u7cfb\u7684\u5efa\u8bbe\uff0c\u652f\u6491\u4e1a\u52a1\u7684\u5feb\u901f\u8fed\u4ee3\u4e0e\u7a33\u5b9a\u6027\u5de5\u5177\u5efa\u8bbe\uff1b \u5b8c\u5584 Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u4f53\u7cfb\u3001\u65e5\u5fd7\u5206\u6790\u548c\u5168\u65b9\u4f4d\u6570\u636e\u8fd0\u8425\uff08\u5305\u62ec\u53ef\u7528\u6027\u6307\u6807\u3001\u5386\u53f2\u4e8b\u6545\u3001\u8d44\u6e90\u5229\u7528\u7387\u7b49\uff09\uff0c\u63d0\u9ad8\u76d1\u63a7\u6709\u6548\u6027\u53ca\u65f6\u53d1\u73b0\u6545\u969c\uff0c\u4fdd\u969c\u4e1a\u52a1\u53ef\u7528\uff1b \u4f18\u5316 Kubernetes \u96c6\u7fa4\u8fd0\u7ef4\u4f53\u7cfb\uff0c\u5bf9\u5e95\u5c42\u57fa\u7840\u7ec4\u4ef6\u7684\u90e8\u7f72\u6301\u7eed\u8c03\u4f18\uff0c\u63d0\u5347\u5404\u7ebf\u7684\u8fd0\u7ef4\u80fd\u529b\u548c\u95ee\u9898\u5904\u7406\u6548\u7387 \u8d1f\u8d23 Kubernetes \u96c6\u7fa4\u8fd0\u7ef4\u5e73\u53f0\u7684\u5efa\u8bbe\uff0c\u6253\u9020\u81ea\u52a8\u5316\u8fd0\u7ef4\u548c\u7ba1\u63a7\u4f53\u7cfb\uff1b\u8d1f\u8d23 Kubernetes \u96c6\u7fa4\u7ba1\u7406\u3001\u90e8\u7f72\u53d1\u5e03\u3001\u53ef\u89c2\u6d4b\u4f53\u7cfb\u7b49\u7cfb\u7edf\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff1b \u53cd\u89c2\u4f20\u7edf\u7684 Linux \u8fd0\u7ef4\uff0c\u7531\u4e8e\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684 IaaS\u3001PaaS \u7684\u666e\u53ca\uff0c\u4ee5\u53ca\u8fd0\u7ef4\u81ea\u52a8\u5316\u7a0b\u5ea6\u8d8a\u6765\u8d8a\u9ad8\uff0c\u4f20\u7edf\u8fd0\u7ef4\u8bf8\u591a\u5de5\u4f5c\u5185\u5bb9\u4e5f\u6e10\u88ab\u53d6\u4ee3\u3002\u8ba1\u7b97\u673a\u57fa\u7840\u8bbe\u65bd\uff08\u5bb9\u5668\u5316\u3001\u516c\u6709\u4e91\u3001\u6df7\u5408\u4e91\u7b49\uff09\uff0c\u5e94\u7528\u67b6\u6784\uff08\u5fae\u670d\u52a1\u3001\u5206\u5e03\u5f0f\u3001\u5341\u4e8c\u8981\u7d20\u5e94\u7528\u7a0b\u5e8f\uff09\u4ee5\u53ca DevOps\u3001FinOps\u3001DevSecOps \u7b49\u5f00\u53d1\u6d41\u7a0b\u548c\u65b9\u6cd5\u8bba\u5bf9\u8fd0\u7ef4\u4eba\u5458\u6240\u9700\u8981\u638c\u63e1\u7684\u6280\u672f\u6280\u80fd\u63d0\u51fa\u4e86\u65b0\u7684\u8981\u6c42\u3002 2\u3001\u4e91\u539f\u751f\u8fd0\u7ef4\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u6280\u672f \u00b6 1\u3001\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00 \u00b6 \u901a\u5e38\uff0c\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u5bf9\u7f16\u7a0b\u8bed\u8a00\u7684\u8981\u6c42\u8fdc\u6ca1\u6709\u7a0b\u5e8f\u5458\u90a3\u4e48\u9ad8\uff0c\u4f20\u7edf\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u9700\u8981\u719f\u7ec3\u638c\u63e1\u4e00\u4e9b\u6bd4\u8f83\u6d41\u884c\u7684\u811a\u672c\u8bed\u8a00 Shell \u3001Python \u3002\u4e0d\u5c11\u516c\u53f8\u5e95\u5c42\u4f7f\u7528\u7684\u662f Java \uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3 Java\uff0c\u5c24\u5176\u662f\u80fd\u591f\u72ec\u7acb\u90e8\u7f72\u4e0a\u7ebf Java \u9879\u76ee\uff08\u5012\u4e0d\u9700\u8981\u4f1a\u5f00\u53d1\uff09\u5c31\u66f4\u597d\u4e86\u3002 \u800c\u7edd\u5927\u591a\u6570\u6d41\u884c\u7684\u4e91\u539f\u751f\u9879\u76ee\u90fd\u662f Golang \u5f00\u53d1\u7684\uff0c\u4f5c\u4e3a\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u66f4\u63a8\u8350\u53bb\u5b66\u4e60 Golang \u5e76\u628a Golang \u4f5c\u4e3a\u81ea\u5df1\u7684\u4e3b\u529b\u7f16\u7a0b\u8bed\u8a00\u3002 \u5b66\u4e60 Golang \uff0c\u6bd4\u8f83\u63a8\u8350 Golang \u5b98\u65b9\u5728 \u201cgo.dev/learn\u201d\uff08\u53ef\u5728\u6d4f\u89c8\u5668\u91cc\u8f93\u5165\u8fd9\u4e2a\u94fe\u63a5\uff09\u91cc\u63d0\u4f9b\u7684\u5b66\u4e60\u8d44\u6599\uff0c\u6bd4\u5982\u6280\u672f\u6587\u6863\u3001\u300aTour of Go\u300b\u3001Go \u7684 Web Dev\u3001CLIs\u3001\u300aGo by example\u300b\u7b49\u7b49\u3002 \u5982\u679c\u7f51\u7ad9\u8bbf\u95ee\u6162\u6216\u4e0d\u4e60\u60ef\u901a\u8fc7\u82f1\u6587\u6765\u5b66\u4e60\uff0c\u63a8\u8350\u88ab\u8a89\u4e3a \u201cGo \u8bed\u8a00\u5723\u7ecf\u201d \u7684\u300a Go \u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00 \u300b\uff08The Go Programming Language\uff09\u8fd9\u672c\u4e66\uff0cManning \u7684\u300aGo \u8bed\u8a00\u5b9e\u6218\u300b(Go in Action)\u3001O'reilly \u7684\u300aHead First Go \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300b(\u8fd9\u672c\u4e66\u975e\u5e38\u9002\u5408\u5165\u95e8)\u3002 2\u3001\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u4e0e\u547d\u4ee4\u884c \u00b6 Linux \u64cd\u4f5c\u7cfb\u7edf\u53ca\u5176\u547d\u4ee4\u884c\u53ef\u4ee5\u8bf4\u662f\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u638c\u63e1\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u66f4\u662f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u7684 \u201c\u4f20\u7edf\u827a\u80fd\u201d\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u4e5f\u4e0d\u4f8b\u5916\u3002 \u8fd9\u90e8\u5206\u7684\u77e5\u8bc6\u5b9e\u8df5\u6027\u662f\u975e\u5e38\u5f3a\u7684\uff0c\u5efa\u8bae\u5728\u7535\u8111\u672c\u5730\u6216\u901a\u8fc7\u865a\u62df\u673a\u5b89\u88c5\u4e00\u4e2a Ubuntu \uff0c\u6216\u5728\u817e\u8baf\u4e91\u4e0a\u8d2d\u4e70\u4e00\u4e2a\u4e91\u670d\u52a1\u5668 CVM\uff0c\u4e0d\u80fd\u53ea\u770b\u4e66\u6216\u89c6\u9891\u3002 \u6bd4\u8f83\u63a8\u8350\u7684\u662f\u300a Linux \u547d\u4ee4\u884c\u5927\u5168\u300b\u3001\u300a\u9e1f\u54e5\u7684 Linux \u79c1\u623f\u83dc\u300b\u3001\u300aLinux/UNIX \u7cfb\u7edf\u7f16\u7a0b\u624b\u518c\u300b 3\u3001\u8ba1\u7b97\u673a\u7f51\u7edc \u00b6 DevOps \u662f\u5f00\u53d1 Development \u548c\u8fd0\u7ef4 Operations \u7684\u5408\u79f0\uff0c\u56e0\u6b64\u4e91\u539f\u751f\u8fd0\u7ef4\u4e5f\u9700\u8981\u638c\u63e1\u5f00\u53d1\u4eba\u5458\u5fc5\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6838\u5fc3\u77e5\u8bc6\uff0c\u9664\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5916\uff0c\u8ba1\u7b97\u673a\u7f51\u7edc\u4e5f\u662f\u9700\u8981\u91cd\u70b9\u638c\u63e1\u7684\u5185\u5bb9\u3002 \u9664\u4e86\u9700\u8981\u4e86\u89e3 OSI \u4e03\u5c42\u7f51\u7edc\u6a21\u578b\u3001\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\u3001TCP/IP \u534f\u8bae\u3001HTTP/HTTPS\u3001\u6293\u5305\u3001iptables \u7b49\u4e00\u4e9b\u672c\u5730\u6216\u81ea\u5efa\u670d\u52a1\u5668\u8fd0\u7ef4\u6240\u9700\u8981\u638c\u63e1\u7684\u7f51\u7edc\u4e0e\u5b89\u5168\u77e5\u8bc6\uff1b \u8fd8\u5efa\u8bae\u901a\u8fc7\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u4ea7\u54c1\u670d\u52a1\u6765\u5b9e\u8df5\u5b66\u4e60 \uff0c\u6bd4\u5982\u817e\u8baf\u4e91\u7684\u4e91\u670d\u52a1\u5668 CVM\u3001\u5bf9\u8c61\u5b58\u50a8 COS\u3001\u4e91\u6570\u636e\u5e93 MySQL\u3001\u8d1f\u8f7d\u5747\u8861\u3001NAT \u7f51\u5173\u3001\u79c1\u6709\u7f51\u7edc CDN\u3001\u6d88\u606f\u961f\u5217\u7b49\u4ea7\u54c1\u7684\u4f7f\u7528\u6765\u6df1\u5165\u4e86\u89e3\u4e00\u4e9b\u4e91\u8ba1\u7b97\u76f8\u5173\u7684\u670d\u52a1\u4ee5\u53ca\u80cc\u540e\u6240\u6d89\u53ca\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u76f8\u5173\u7684\u77e5\u8bc6\u3002 4\u3001\u5f00\u53d1\u73af\u5883\u7f16\u8bd1\u4e0e\u90e8\u7f72 \u00b6 \u53ef\u4ee5\u4ece\u57fa\u7840\u7684 LAMP\u3001LNMP\u3001Wordpress \u4ee5\u53ca\u4e00\u4e9b\u6bd4\u8f83\u6d41\u884c\u7684\u5f00\u6e90\u9879\u76ee\u7684\u90e8\u7f72\u4e0a\u7ebf\u5230\u4e91\u670d\u52a1\u5165\u624b\uff0c\u638c\u63e1 Nginx\u3001Tomcat\u3001Apache \u7b49\u7f51\u9875\u670d\u52a1\u5668\u3001\u8d1f\u8f7d\u5747\u8861\uff0cMySQL\u3001Redis \u6570\u636e\u5e93\u548c\u7f13\u5b58\u3002 \u4ee5\u4e0a\u8fd9\u4e9b\u77e5\u8bc6\u57fa\u672c\u90fd\u662f\u4f20\u7edf\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u9700\u8981\u638c\u63e1\u7684\u5185\u5bb9\uff0c\u5f53\u7136\u4e5f\u662f\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u57fa\u7840\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\uff08 DevOps \u5de5\u7a0b\u5e08\u3001SRE \u5de5\u7a0b\u5e08\u7b49\uff09\u5219\u4e3b\u8981\u9700\u8981\u638c\u63e1\u4e91\u539f\u751f\u4ea7\u54c1\u751f\u6001\u4ee5\u53ca\u6587\u5316\uff1a 5\u3001\u4e91\u539f\u751f\u57fa\u7840 \u00b6 Docker \u5bb9\u5668\u5316\u548c Kubernetes \u96c6\u7fa4\u53ef\u4ee5\u8bf4\u662f\u4e91\u539f\u751f\u6700\u4e3a\u91cd\u8981\u7684\u57fa\u7840\uff0c\u5b66\u4e60\u65f6\u4e5f\u63a8\u8350\u5148\u4ece\u52a8\u624b\u5b9e\u8df5\u6765\u5165\u624b\u3002\u52a8\u624b\u5b9e\u6218\u65f6\uff0c\u5efa\u8bae\u5728\u672c\u5730\u5b89\u88c5\u90e8\u7f72\u597d Docker \u73af\u5883\u3001Kubernetes \u96c6\u7fa4\u4ee5\u53ca\u4f7f\u7528\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u7ebf\u4e0a\u6258\u7ba1 Kubernetes\uff08\u5982\u817e\u8baf\u4e91\u5bb9\u5668\u4ea7\u54c1 TKE\u3001EKS\uff09\u642d\u914d\u6765\u5b66\u4e60\uff0c\u8fd9\u624d\u8d34\u8fd1\u4f01\u4e1a\u5b9e\u9645\u751f\u4ea7\u65f6\u7684\u771f\u5b9e\u73af\u5883\u3002 \u5c3d\u7ba1 Docker \u548c Kubernetes \u5b98\u65b9\u6280\u672f\u6587\u6863\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u5165\u95e8\u6559\u7a0b\uff0c\u4f46\u662f\u4ecd\u7136\u5b58\u5728\u5f88\u591a\u65b0\u624b\u4e0d\u53ef\u907f\u514d\u7684\u4e00\u4e9b \u201c\u5751\u201d\u3002 6\u3001\u5fae\u670d\u52a1\u3001DevOps \u4e0e\u4e91\u539f\u751f\u76d1\u63a7 \u00b6 \u5fae\u670d\u52a1\u3001DevOps \u4ee5\u53ca\u4e91\u539f\u751f\u76d1\u63a7\u65b9\u9762\uff0c\u9664\u4e86\u638c\u63e1\u57fa\u7840\u7684\u6280\u672f\u4ea7\u54c1\u5916\uff0c\u6bd4\u5982 Jenkins\u3001Prometheus \u7b49\u4e4b\u5916\uff0c\u8fd8\u6d89\u53ca\u5230\u4e00\u4e9b\u4f01\u4e1a\u4e0a\u4e91\u4ee5\u53ca\u4e91\u539f\u751f\u843d\u5730\u7684\u6d41\u7a0b\u4e0e\u65b9\u6cd5\u8bba\uff0c\u63a8\u8350\u9605\u8bfb\u4e00\u4e0b\u300a \u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f DevOps \u300b\u3001\u300aKubernetes in Action\u300b\u3001\u300a \u4e91\u539f\u751f\u6a21\u5f0f \u300b\u3001\u300aKubernetes \u8bbe\u8ba1\u6a21\u5f0f\u300b(Kubernetes Patterns) \u7b49\u76f8\u5173\u7684\u4e66\u7c4d\u3002 7\u3001\u4e91\u539f\u751f\u4e0d\u540c\u65b9\u5411\u7684\u5b66\u4e60 \u00b6 \u4ee5\u4e0a\u5185\u5bb9\u90fd\u662f\u4e91\u539f\u751f\u8fd0\u7ef4\u9700\u8981\u638c\u63e1\u7684\u57fa\u7840\u5185\u5bb9\u4e86\uff0c\u5728\u4e0d\u540c\u7684\u4f01\u4e1a\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\u53ef\u80fd\u4f1a\u5206\u4e00\u4e9b\u65b9\u5411\uff0c\u6bd4\u5982 DevOps \u5de5\u7a0b\u5e08\u3001SRE \u5de5\u7a0b\u5e08\u3001 \u5e73\u53f0\u67b6\u6784\u5de5\u7a0b\u5e08 \u7b49\u7b49\uff0c\u4e0d\u540c\u7684\u65b9\u5411\u9700\u8981\u8fdb\u9636\u5b66\u4e60\u7684\u70b9\u90fd\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u662f Docker\u3001Kubernetes \u4ee5\u53ca\u4e91\u539f\u751f\u5728\u4f01\u4e1a\u7684\u843d\u5730\u662f\u8fd9\u4e9b\u65b9\u5411\u7684\u57fa\u77f3\u3002 \u4e0d\u540c\u65b9\u5411\u7684\u6df1\u5165\u5b66\u4e60\uff0c\u9700\u8981\u7ed3\u5408\u4f01\u4e1a\u81ea\u8eab\u4e1a\u52a1\u4ee5\u53ca\u53bb\u53c2\u8003\u4e00\u4e0b CNCF \u7684\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\u4e86\u3002 3\u3001\u5173\u4e8e\u8003\u8bc1\u4e0e\u8fdb\u9636 \u00b6 \u5bf9\u4e8e\u521d\u3001\u4e2d\u7ea7\u7684\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u60f3\u7ed9\u81ea\u5df1\u8bbe\u7acb\u4e00\u4e2a\u76ee\u6807\uff0c\u6216\u8005\u8003\u5bdf\u77e5\u8bc6\u638c\u63e1\u6c34\u5e73\uff0c\u6291\u6216\u662f\u6c42\u804c\u6765\u8bf4\uff0c\u4e0d\u59a8\u53bb\u8003\u4e00\u4e0b\u4e91\u539f\u751f\u76f8\u5173\u7684\u8bc1\u4e66\u3002\u4e91\u539f\u751f\u8ba1\u7b97\u57fa\u91d1\u4f1a CNCF\uff0c\u901a\u5e38\u6765\u8bf4\u6bd4\u5f88\u591a\u4e91\u5382\u5546\u63d0\u4f9b\u7684\u8ba4\u8bc1\u8bc1\u4e66\u542b\u91d1\u91cf\u66f4\u9ad8\uff0c\u4e0d\u5c11\u4f01\u4e1a\u5728\u62db\u8058\u65f6\u4e5f\u660e\u786e\u63d0\u51fa CKA \u548c CKAD \u662f\u52a0\u5206\u9879\u3002\u8fd9\u4e9b\u8003\u8bd5\u5927\u591a\u6570\u90fd\u662f\u5b9e\u64cd\u9898\uff0cKubernetes \u5b98\u65b9\u6280\u672f\u6587\u6863\u662f\u8003\u8bd5\u65f6\u552f\u4e00\u53ef\u80fd\u53c2\u8003\u7684\u8d44\u6599 Kubernetes \u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u8ba4\u8bc1 Certified Kubernetes Application Developer (CKAD)\uff1aCKAD \u8003\u8bd5\u8bc1\u660e\u7528\u6237\u53ef\u4ee5\u4e3a Kubernetes \u8bbe\u8ba1\u3001\u6784\u5efa\u3001\u914d\u7f6e\u548c\u53d1\u5e03\u4e91\u539f\u751f\u5e94\u7528\u3002\u901a\u8fc7 CKAD \u8ba4\u8bc1\u7684\u4eba\u5458\u80fd\u591f\u5728 Kubernetes \u4e2d\u5b9a\u4e49\u8f6f\u4ef6\u8d44\u6e90\u5e76\u4e14\u4f7f\u7528\u6838\u5fc3\u7ec4\u4ef6\u6765\u642d\u5efa\u3001\u76d1\u63a7\u3001\u68c0\u67e5\u53ef\u4f38\u7f29\u5e94\u7528\uff1b Kubernetes \u7ba1\u7406\u5458\u8ba4\u8bc1 Certified Kubernetes Administrator (CKA)\uff1aCKA \u8ba4\u8bc1\u786e\u4fdd CKA \u8ba4\u8bc1\u4eba\u5458\u5177\u6709\u5c65\u884c Kubernetes \u7ba1\u7406\u5458\u804c\u8d23\u7684\u6280\u80fd\u3001\u77e5\u8bc6\u548c\u80fd\u529b\u3002\u901a\u8fc7\u8ba4\u8bc1\u7684 Kubernetes \u7ba1\u7406\u5458\u5c55\u793a\u4e86\u5305\u62ec\u57fa\u7840\u5b89\u88c5\u548c\u914d\u7f6e\u3001\u7ba1\u7406\u4ea7\u54c1\u7ea7\u522b\u7684 Kubernetes \u96c6\u7fa4\u65b9\u9762\u7684\u80fd\u529b\u3002 Kubernetes \u8ba4\u8bc1\u5b89\u5168\u4e13\u5bb6 (CKS)\uff1aKubernetes \u8ba4\u8bc1\u5b89\u5168\u4e13\u5bb6\u9879\u76ee\u786e\u4fdd\u8bc1\u4e66\u6301\u6709\u4eba\u5458\u5bb9\u6613\u80dc\u4efb\u5404\u79cd\u6700\u4f73\u5b9e\u8df5\u3002CKS \u8ba4\u8bc1\u5305\u62ec\u5728\u6784\u5efa\u3001\u90e8\u7f72\u548c\u8fd0\u884c\u65f6\u786e\u4fdd\u57fa\u4e8e\u5bb9\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\u548c Kubernetes \u5e73\u53f0\u5b89\u5168\u7684\u6280\u80fd\u3002\u53c2\u52a0 CKS \u7684\u5019\u9009\u4eba\u5fc5\u987b\u6301\u6709\u73b0\u884c\u7684 CKA \u8bc1\u4e66\uff0c\u4ee5\u8bc1\u660e\u4ed6\u4eec\u5177\u6709\u8db3\u591f\u7684 Kubernetes \u4e13\u4e1a\u77e5\u8bc6\u3002","title":"\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6709\u524d\u9014\u4e48\uff1f"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#1-\u708e\u51f0\u5de5\u4f5c\u8981\u6c42","text":"","title":"1. \u708e\u51f0\u5de5\u4f5c\u8981\u6c42"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#2-\u77e5\u4e4e-\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6709\u524d\u9014\u5417","text":"\u540c\u6837 IT \u533a\u522b\u4e8e\u5f00\u53d1 \u8bf7\u5927\u4f6c\u8c08\u8c08\uff1f \u4e2a\u4eba\u8ba4\u4e3a\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u662f\u4e00\u4e2a\u9636\u6bb5\u6027\u7684\u804c\u4e1a\uff0c\u804c\u4e1a\u751f\u6daf\u524d\u671f\u53d1\u5c55\u8fd8\u662f\u4e0d\u9519\u7684\uff0c\u540e\u671f\u7684\u8bdd\u9700\u8981\u8d70\u5411\u6280\u672f\u4e13\u5bb6\u65b9\u5411\uff0c\u6216\u8005\u8f6c\u5411\u7ba1\u7406\u3002\u6211\u89c9\u5f97\u73b0\u5728\u8fd0\u7ef4\u5de5\u4f5c\u8d8b\u5411\u81ea\u52a8\u5316\u3002 \u6570\u636e\u5e93\u3001\u4e3b\u673a\u3001\u7f51\u7edc\u7b49\u5382\u5bb6\u63a8\u51fa\u66f4\u52a0\u667a\u80fd\u5316\u7684\u7248\u672c\uff0c\u4eba\u5de5\u5e72\u9884\u7a0b\u5ea6\u4f1a\u9010\u6b65\u51cf\u5c11\uff1b\u540c\u65f6\uff0c\u73b0\u5728\u5e94\u7528\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\u589e\u52a0\uff0c\u5355\u4e2a\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u9700\u8d1f\u8d23\u9762\u5bf9\u6bd4\u8fc7\u53bb\u66f4\u591a\u7684\u8bbe\u5907\u548c\u7cfb\u7edf\u3002 \u73b0\u5728\u56fd\u5bb6\u63d0\u51fa\u5de5\u4e1a\u4e92\u8054\u7f51\uff0c\u667a\u6167\u57ce\u5e02\u7b49\u6982\u5ff5\uff0c\u9700\u8981\u5927\u91cf\u7684\u5e94\u7528\u8f6f\u4ef6\u652f\u6491\uff0c\u81ea\u7136\u9700\u8981\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6765\u4fdd\u969c\u65e5\u5e38\u7684\u8fd0\u4f5c\uff0c\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u662f\u6709\u524d\u9014\u7684\u3002 \u4f46\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u5de5\u4f5c\u90fd\u662f\u6709\u524d\u9014\u7684\u3002\u7ed3\u5408\u6211\u770b\u5230\u7684\u60c5\u51b5\uff0c \u5047\u8bbe\u4e2a\u6848\u4f8b\u3002A\uff0cB \u540c\u6821\u6bd5\u4e1a\uff0cA \u8fdb\u5165\u4e00\u5bb6\u975e IT \u884c\u4e1a\u56fd\u4f01\uff0c\u505a IT \u8fd0\u7ef4\uff0c\u5e73\u65f6\u5c31\u662f\u7ef4\u62a4\u7740\u51e0\u4e2a OA \u7cfb\u7edf\uff0c\u8f7b\u677e\u7a33\u5b9a\u3002B \u8fdb\u5165\u4e00\u5bb6 IT \u5916\u5305\u516c\u53f8\uff0c\u9700\u8981\u9762\u5bf9\u65e0\u6570\u96be\u5543\u7684\u7cfb\u7edf\u95ee\u9898\uff0c\u7d2f\u6210\u72d7\u3002 3 \u5e74\u540e\uff0cA \u548c B \u7684\u524d\u9014\u9898\u4e3b\u89c9\u5f97\u5982\u4f55\uff1f A \u7684\u60c5\u51b5\u770b\u5230\u6bd4\u8f83\u591a\uff0c\u57fa\u672c\u662f\u6d6a\u8d39\u4e86\uff0c\u4ee5\u4e3a\u53bb\u5230\u4e00\u4e2a\u7a33\u5b9a\u7684\u4f01\u4e1a\uff0c\u7ed3\u679c IT \u90e8\u95e8\u5728\u4f01\u4e1a\u7684\u5730\u4f4d\u4e0d\u9ad8\uff0c\u5347\u5c97\u673a\u4f1a\u8f6e\u4e0d\u5230\uff0c\u63a5\u89e6\u5230\u7684\u6280\u672f\u6781\u5176\u6709\u9650\uff0c\u5f85\u7740\u75db\u82e6\uff0c\u8df3\u51fa\u6765\u4e5f\u662f\u75db\u82e6\uff1b\u8fd8\u4e0d\u5982 B\uff0c3 \u5e74\u8f9b\u82e6\uff0c\u6280\u672f\u63d0\u5347\u5927\u3002\u6240\u4ee5\u8bf4\u8fd9\u79cd\u770b\u4f3c\u98ce\u5149\u7684\u8fd0\u7ef4\u5de5\u7a0b\u5e08\uff0c\u4e0d\u4e00\u5b9a\u662f\u597d\u4e8b\u3002\u5176\u5b9e\u6240\u6709\u5de5\u4f5c\u6211\u89c9\u5f97\u7686\u662f\u5982\u6b64\uff0c\u4f60\u5f53\u524d\u7684\u5de5\u4f5c\uff0c\u4e00\u4e2a\u6708\u5c31\u638c\u63e1\u4e86\uff0c\u90a3\u540c\u6837\u968f\u4fbf\u4e00\u4e2a\u65b0\u4eba\u4e5f\u4f1a\uff0c\u8fd9\u79cd\u5de5\u4f5c\u6709\u524d\u9014\u4e48\uff1f \u524d\u9014\u662f\u6709\u7684\uff0c\u9700\u8981\u8c28\u614e\u9009\u62e9\u3002","title":"2. \u77e5\u4e4e-\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6709\u524d\u9014\u5417\uff1f"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#3-\u4e91\u539f\u751f\u8fd0\u7ef4","text":"\u63a8\u8350 \u4e91\u539f\u751f\u8fd0\u7ef4 \u8fd9\u4e2a\u65b9\u5411\uff0c\u4f20\u7edf\u7684\u53ea\u505a Linux \u8fd0\u7ef4\u4f1a\u6e10\u88ab Kubernetes \u8fd0\u7ef4 \u7ed9\u53d6\u4ee3\u3002 \u4e91\u539f\u751f\u5df2\u7ecf\u662f\u4e91\u8ba1\u7b97\u884c\u4e1a\u7684\u4e8b\u5b9e\u6807\u51c6\uff0c\u6539\u53d8\u4e86\u8f6f\u4ef6\u5f00\u53d1\u3001\u90e8\u7f72\u548c\u8fd0\u7ef4\u7684\u5de5\u4f5c\u3001\u601d\u7ef4\u65b9\u5f0f\uff0c\u4e5f\u8ba9\u8fd0\u7ef4\u4eba\u5458\u7684\u804c\u4e1a\u65b9\u5411\u53d1\u751f\u4e86\u6781\u5927\u7684\u8f6c\u53d8\uff0c\u8fd9\u4e5f\u8981\u6c42\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u76f8\u6bd4\u4f20\u7edf\u8fd0\u7ef4\u9700\u8981\u638c\u63e1\u4e0d\u540c\u7684\u6280\u672f\u4e0e\u65b9\u6cd5\u8bba\u3002","title":"3. \u4e91\u539f\u751f\u8fd0\u7ef4"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#1\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u524d\u666f","text":"\u4e00\u4e2a\u804c\u4e1a\u65b9\u5411\u662f\u5426\u6709\u524d\u9014\uff0c\u5c97\u4f4d\u9700\u6c42\u91cf\u662f\u5426\u5927\uff0c\u53c8\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u6838\u5fc3\u6280\u80fd\uff0c\u6700\u9760\u8c31\u7684\u505a\u6cd5\u5f53\u7136\u662f\u53bb\u62db\u8058\u7f51\u7ad9\u4e0a\u641c\u7d22\u76f8\u5173\u5c97\u4f4d\uff0c\u6bd4\u5982\u5173\u4e8e\u4e91\u539f\u751f\u8fd0\u7ef4\uff0c\u53ef\u4ee5\u641c\u7d22 \u201c\u4e91\u539f\u751f\u8fd0\u7ef4\u201d\u3001\u201c DevOps \u5de5\u7a0b\u5e08\u201d\u3001\u201cSRE \u5de5\u7a0b\u5e08\u201d\u3001\u201c \u4e91\u539f\u751f\u67b6\u6784\u5e08 \u201d\u3001\u201cKubernetes \u8fd0\u7ef4\u201d \u7b49\u5173\u952e\u8bcd\uff0c\u5c31\u53ef\u4ee5\u4e86\u89e3\u5230\u5f53\u524d\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u5c97\u4f4d\u9700\u6c42\u91cf\u6bd4\u8f83\u5927\uff0c\u5f85\u9047\u524d\u666f\u4e5f\u8fdc\u975e\u4f20\u7edf\u8fd0\u7ef4\u53ef\u6bd4\u3002 \u800c\u540c\u65f6\u968f\u7740\u4e91\u8ba1\u7b97\u884c\u4e1a\u7684\u4e0d\u65ad\u6f14\u53d8\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u5de5\u4f5c\u5185\u5bb9\u548c\u804c\u8d23\u76f8\u6bd4\u4f20\u7edf\u8fd0\u7ef4\u6709\u4e86\u5f88\u5927\u7684\u4e0d\u540c\uff0c\u5c24\u5176\u662f\u4ece\u4f20\u7edf Linux \u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u7ef4\u8f6c\u5411\u4e86\u4e91\u539f\u751f\u65f6\u4ee3\u7684\u64cd\u4f5c\u7cfb\u7edf Kubernetes \u7684\u8fd0\u7ef4\u4e0a\uff1a \u719f\u6089 DevOps\u3001CI/CD\uff0c\u8d1f\u8d23\u5e94\u7528\u4ea7\u54c1\u7684\u6301\u7eed\u4ea4\u4ed8\u548c\u6301\u7eed\u8fd0\u7ef4\u7684\u5de5\u5177\u4f53\u7cfb\u7684\u5efa\u8bbe\uff0c\u652f\u6491\u4e1a\u52a1\u7684\u5feb\u901f\u8fed\u4ee3\u4e0e\u7a33\u5b9a\u6027\u5de5\u5177\u5efa\u8bbe\uff1b \u5b8c\u5584 Kubernetes \u96c6\u7fa4\u7684\u76d1\u63a7\u4f53\u7cfb\u3001\u65e5\u5fd7\u5206\u6790\u548c\u5168\u65b9\u4f4d\u6570\u636e\u8fd0\u8425\uff08\u5305\u62ec\u53ef\u7528\u6027\u6307\u6807\u3001\u5386\u53f2\u4e8b\u6545\u3001\u8d44\u6e90\u5229\u7528\u7387\u7b49\uff09\uff0c\u63d0\u9ad8\u76d1\u63a7\u6709\u6548\u6027\u53ca\u65f6\u53d1\u73b0\u6545\u969c\uff0c\u4fdd\u969c\u4e1a\u52a1\u53ef\u7528\uff1b \u4f18\u5316 Kubernetes \u96c6\u7fa4\u8fd0\u7ef4\u4f53\u7cfb\uff0c\u5bf9\u5e95\u5c42\u57fa\u7840\u7ec4\u4ef6\u7684\u90e8\u7f72\u6301\u7eed\u8c03\u4f18\uff0c\u63d0\u5347\u5404\u7ebf\u7684\u8fd0\u7ef4\u80fd\u529b\u548c\u95ee\u9898\u5904\u7406\u6548\u7387 \u8d1f\u8d23 Kubernetes \u96c6\u7fa4\u8fd0\u7ef4\u5e73\u53f0\u7684\u5efa\u8bbe\uff0c\u6253\u9020\u81ea\u52a8\u5316\u8fd0\u7ef4\u548c\u7ba1\u63a7\u4f53\u7cfb\uff1b\u8d1f\u8d23 Kubernetes \u96c6\u7fa4\u7ba1\u7406\u3001\u90e8\u7f72\u53d1\u5e03\u3001\u53ef\u89c2\u6d4b\u4f53\u7cfb\u7b49\u7cfb\u7edf\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff1b \u53cd\u89c2\u4f20\u7edf\u7684 Linux \u8fd0\u7ef4\uff0c\u7531\u4e8e\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684 IaaS\u3001PaaS \u7684\u666e\u53ca\uff0c\u4ee5\u53ca\u8fd0\u7ef4\u81ea\u52a8\u5316\u7a0b\u5ea6\u8d8a\u6765\u8d8a\u9ad8\uff0c\u4f20\u7edf\u8fd0\u7ef4\u8bf8\u591a\u5de5\u4f5c\u5185\u5bb9\u4e5f\u6e10\u88ab\u53d6\u4ee3\u3002\u8ba1\u7b97\u673a\u57fa\u7840\u8bbe\u65bd\uff08\u5bb9\u5668\u5316\u3001\u516c\u6709\u4e91\u3001\u6df7\u5408\u4e91\u7b49\uff09\uff0c\u5e94\u7528\u67b6\u6784\uff08\u5fae\u670d\u52a1\u3001\u5206\u5e03\u5f0f\u3001\u5341\u4e8c\u8981\u7d20\u5e94\u7528\u7a0b\u5e8f\uff09\u4ee5\u53ca DevOps\u3001FinOps\u3001DevSecOps \u7b49\u5f00\u53d1\u6d41\u7a0b\u548c\u65b9\u6cd5\u8bba\u5bf9\u8fd0\u7ef4\u4eba\u5458\u6240\u9700\u8981\u638c\u63e1\u7684\u6280\u672f\u6280\u80fd\u63d0\u51fa\u4e86\u65b0\u7684\u8981\u6c42\u3002","title":"1\u3001\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u524d\u666f"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#2\u4e91\u539f\u751f\u8fd0\u7ef4\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u6280\u672f","text":"","title":"2\u3001\u4e91\u539f\u751f\u8fd0\u7ef4\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u6280\u672f"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#1\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00","text":"\u901a\u5e38\uff0c\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u5bf9\u7f16\u7a0b\u8bed\u8a00\u7684\u8981\u6c42\u8fdc\u6ca1\u6709\u7a0b\u5e8f\u5458\u90a3\u4e48\u9ad8\uff0c\u4f20\u7edf\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u9700\u8981\u719f\u7ec3\u638c\u63e1\u4e00\u4e9b\u6bd4\u8f83\u6d41\u884c\u7684\u811a\u672c\u8bed\u8a00 Shell \u3001Python \u3002\u4e0d\u5c11\u516c\u53f8\u5e95\u5c42\u4f7f\u7528\u7684\u662f Java \uff0c\u5982\u679c\u4f60\u80fd\u4e86\u89e3 Java\uff0c\u5c24\u5176\u662f\u80fd\u591f\u72ec\u7acb\u90e8\u7f72\u4e0a\u7ebf Java \u9879\u76ee\uff08\u5012\u4e0d\u9700\u8981\u4f1a\u5f00\u53d1\uff09\u5c31\u66f4\u597d\u4e86\u3002 \u800c\u7edd\u5927\u591a\u6570\u6d41\u884c\u7684\u4e91\u539f\u751f\u9879\u76ee\u90fd\u662f Golang \u5f00\u53d1\u7684\uff0c\u4f5c\u4e3a\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u66f4\u63a8\u8350\u53bb\u5b66\u4e60 Golang \u5e76\u628a Golang \u4f5c\u4e3a\u81ea\u5df1\u7684\u4e3b\u529b\u7f16\u7a0b\u8bed\u8a00\u3002 \u5b66\u4e60 Golang \uff0c\u6bd4\u8f83\u63a8\u8350 Golang \u5b98\u65b9\u5728 \u201cgo.dev/learn\u201d\uff08\u53ef\u5728\u6d4f\u89c8\u5668\u91cc\u8f93\u5165\u8fd9\u4e2a\u94fe\u63a5\uff09\u91cc\u63d0\u4f9b\u7684\u5b66\u4e60\u8d44\u6599\uff0c\u6bd4\u5982\u6280\u672f\u6587\u6863\u3001\u300aTour of Go\u300b\u3001Go \u7684 Web Dev\u3001CLIs\u3001\u300aGo by example\u300b\u7b49\u7b49\u3002 \u5982\u679c\u7f51\u7ad9\u8bbf\u95ee\u6162\u6216\u4e0d\u4e60\u60ef\u901a\u8fc7\u82f1\u6587\u6765\u5b66\u4e60\uff0c\u63a8\u8350\u88ab\u8a89\u4e3a \u201cGo \u8bed\u8a00\u5723\u7ecf\u201d \u7684\u300a Go \u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00 \u300b\uff08The Go Programming Language\uff09\u8fd9\u672c\u4e66\uff0cManning \u7684\u300aGo \u8bed\u8a00\u5b9e\u6218\u300b(Go in Action)\u3001O'reilly \u7684\u300aHead First Go \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300b(\u8fd9\u672c\u4e66\u975e\u5e38\u9002\u5408\u5165\u95e8)\u3002","title":"1\u3001\u638c\u63e1\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#2\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u4e0e\u547d\u4ee4\u884c","text":"Linux \u64cd\u4f5c\u7cfb\u7edf\u53ca\u5176\u547d\u4ee4\u884c\u53ef\u4ee5\u8bf4\u662f\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u638c\u63e1\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u66f4\u662f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u7684 \u201c\u4f20\u7edf\u827a\u80fd\u201d\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u4e5f\u4e0d\u4f8b\u5916\u3002 \u8fd9\u90e8\u5206\u7684\u77e5\u8bc6\u5b9e\u8df5\u6027\u662f\u975e\u5e38\u5f3a\u7684\uff0c\u5efa\u8bae\u5728\u7535\u8111\u672c\u5730\u6216\u901a\u8fc7\u865a\u62df\u673a\u5b89\u88c5\u4e00\u4e2a Ubuntu \uff0c\u6216\u5728\u817e\u8baf\u4e91\u4e0a\u8d2d\u4e70\u4e00\u4e2a\u4e91\u670d\u52a1\u5668 CVM\uff0c\u4e0d\u80fd\u53ea\u770b\u4e66\u6216\u89c6\u9891\u3002 \u6bd4\u8f83\u63a8\u8350\u7684\u662f\u300a Linux \u547d\u4ee4\u884c\u5927\u5168\u300b\u3001\u300a\u9e1f\u54e5\u7684 Linux \u79c1\u623f\u83dc\u300b\u3001\u300aLinux/UNIX \u7cfb\u7edf\u7f16\u7a0b\u624b\u518c\u300b","title":"2\u3001\u64cd\u4f5c\u7cfb\u7edf\u57fa\u7840\u4e0e\u547d\u4ee4\u884c"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#3\u8ba1\u7b97\u673a\u7f51\u7edc","text":"DevOps \u662f\u5f00\u53d1 Development \u548c\u8fd0\u7ef4 Operations \u7684\u5408\u79f0\uff0c\u56e0\u6b64\u4e91\u539f\u751f\u8fd0\u7ef4\u4e5f\u9700\u8981\u638c\u63e1\u5f00\u53d1\u4eba\u5458\u5fc5\u5b66\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6838\u5fc3\u77e5\u8bc6\uff0c\u9664\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5916\uff0c\u8ba1\u7b97\u673a\u7f51\u7edc\u4e5f\u662f\u9700\u8981\u91cd\u70b9\u638c\u63e1\u7684\u5185\u5bb9\u3002 \u9664\u4e86\u9700\u8981\u4e86\u89e3 OSI \u4e03\u5c42\u7f51\u7edc\u6a21\u578b\u3001\u8fdb\u7a0b\u901a\u4fe1\u65b9\u5f0f\u3001TCP/IP \u534f\u8bae\u3001HTTP/HTTPS\u3001\u6293\u5305\u3001iptables \u7b49\u4e00\u4e9b\u672c\u5730\u6216\u81ea\u5efa\u670d\u52a1\u5668\u8fd0\u7ef4\u6240\u9700\u8981\u638c\u63e1\u7684\u7f51\u7edc\u4e0e\u5b89\u5168\u77e5\u8bc6\uff1b \u8fd8\u5efa\u8bae\u901a\u8fc7\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u4ea7\u54c1\u670d\u52a1\u6765\u5b9e\u8df5\u5b66\u4e60 \uff0c\u6bd4\u5982\u817e\u8baf\u4e91\u7684\u4e91\u670d\u52a1\u5668 CVM\u3001\u5bf9\u8c61\u5b58\u50a8 COS\u3001\u4e91\u6570\u636e\u5e93 MySQL\u3001\u8d1f\u8f7d\u5747\u8861\u3001NAT \u7f51\u5173\u3001\u79c1\u6709\u7f51\u7edc CDN\u3001\u6d88\u606f\u961f\u5217\u7b49\u4ea7\u54c1\u7684\u4f7f\u7528\u6765\u6df1\u5165\u4e86\u89e3\u4e00\u4e9b\u4e91\u8ba1\u7b97\u76f8\u5173\u7684\u670d\u52a1\u4ee5\u53ca\u80cc\u540e\u6240\u6d89\u53ca\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u76f8\u5173\u7684\u77e5\u8bc6\u3002","title":"3\u3001\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#4\u5f00\u53d1\u73af\u5883\u7f16\u8bd1\u4e0e\u90e8\u7f72","text":"\u53ef\u4ee5\u4ece\u57fa\u7840\u7684 LAMP\u3001LNMP\u3001Wordpress \u4ee5\u53ca\u4e00\u4e9b\u6bd4\u8f83\u6d41\u884c\u7684\u5f00\u6e90\u9879\u76ee\u7684\u90e8\u7f72\u4e0a\u7ebf\u5230\u4e91\u670d\u52a1\u5165\u624b\uff0c\u638c\u63e1 Nginx\u3001Tomcat\u3001Apache \u7b49\u7f51\u9875\u670d\u52a1\u5668\u3001\u8d1f\u8f7d\u5747\u8861\uff0cMySQL\u3001Redis \u6570\u636e\u5e93\u548c\u7f13\u5b58\u3002 \u4ee5\u4e0a\u8fd9\u4e9b\u77e5\u8bc6\u57fa\u672c\u90fd\u662f\u4f20\u7edf\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u9700\u8981\u638c\u63e1\u7684\u5185\u5bb9\uff0c\u5f53\u7136\u4e5f\u662f\u4e91\u539f\u751f\u8fd0\u7ef4\u7684\u57fa\u7840\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\uff08 DevOps \u5de5\u7a0b\u5e08\u3001SRE \u5de5\u7a0b\u5e08\u7b49\uff09\u5219\u4e3b\u8981\u9700\u8981\u638c\u63e1\u4e91\u539f\u751f\u4ea7\u54c1\u751f\u6001\u4ee5\u53ca\u6587\u5316\uff1a","title":"4\u3001\u5f00\u53d1\u73af\u5883\u7f16\u8bd1\u4e0e\u90e8\u7f72"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#5\u4e91\u539f\u751f\u57fa\u7840","text":"Docker \u5bb9\u5668\u5316\u548c Kubernetes \u96c6\u7fa4\u53ef\u4ee5\u8bf4\u662f\u4e91\u539f\u751f\u6700\u4e3a\u91cd\u8981\u7684\u57fa\u7840\uff0c\u5b66\u4e60\u65f6\u4e5f\u63a8\u8350\u5148\u4ece\u52a8\u624b\u5b9e\u8df5\u6765\u5165\u624b\u3002\u52a8\u624b\u5b9e\u6218\u65f6\uff0c\u5efa\u8bae\u5728\u672c\u5730\u5b89\u88c5\u90e8\u7f72\u597d Docker \u73af\u5883\u3001Kubernetes \u96c6\u7fa4\u4ee5\u53ca\u4f7f\u7528\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u7ebf\u4e0a\u6258\u7ba1 Kubernetes\uff08\u5982\u817e\u8baf\u4e91\u5bb9\u5668\u4ea7\u54c1 TKE\u3001EKS\uff09\u642d\u914d\u6765\u5b66\u4e60\uff0c\u8fd9\u624d\u8d34\u8fd1\u4f01\u4e1a\u5b9e\u9645\u751f\u4ea7\u65f6\u7684\u771f\u5b9e\u73af\u5883\u3002 \u5c3d\u7ba1 Docker \u548c Kubernetes \u5b98\u65b9\u6280\u672f\u6587\u6863\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u5165\u95e8\u6559\u7a0b\uff0c\u4f46\u662f\u4ecd\u7136\u5b58\u5728\u5f88\u591a\u65b0\u624b\u4e0d\u53ef\u907f\u514d\u7684\u4e00\u4e9b \u201c\u5751\u201d\u3002","title":"5\u3001\u4e91\u539f\u751f\u57fa\u7840"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#6\u5fae\u670d\u52a1devops-\u4e0e\u4e91\u539f\u751f\u76d1\u63a7","text":"\u5fae\u670d\u52a1\u3001DevOps \u4ee5\u53ca\u4e91\u539f\u751f\u76d1\u63a7\u65b9\u9762\uff0c\u9664\u4e86\u638c\u63e1\u57fa\u7840\u7684\u6280\u672f\u4ea7\u54c1\u5916\uff0c\u6bd4\u5982 Jenkins\u3001Prometheus \u7b49\u4e4b\u5916\uff0c\u8fd8\u6d89\u53ca\u5230\u4e00\u4e9b\u4f01\u4e1a\u4e0a\u4e91\u4ee5\u53ca\u4e91\u539f\u751f\u843d\u5730\u7684\u6d41\u7a0b\u4e0e\u65b9\u6cd5\u8bba\uff0c\u63a8\u8350\u9605\u8bfb\u4e00\u4e0b\u300a \u57fa\u4e8e Kubernetes \u7684\u4e91\u539f\u751f DevOps \u300b\u3001\u300aKubernetes in Action\u300b\u3001\u300a \u4e91\u539f\u751f\u6a21\u5f0f \u300b\u3001\u300aKubernetes \u8bbe\u8ba1\u6a21\u5f0f\u300b(Kubernetes Patterns) \u7b49\u76f8\u5173\u7684\u4e66\u7c4d\u3002","title":"6\u3001\u5fae\u670d\u52a1\u3001DevOps \u4e0e\u4e91\u539f\u751f\u76d1\u63a7"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#7\u4e91\u539f\u751f\u4e0d\u540c\u65b9\u5411\u7684\u5b66\u4e60","text":"\u4ee5\u4e0a\u5185\u5bb9\u90fd\u662f\u4e91\u539f\u751f\u8fd0\u7ef4\u9700\u8981\u638c\u63e1\u7684\u57fa\u7840\u5185\u5bb9\u4e86\uff0c\u5728\u4e0d\u540c\u7684\u4f01\u4e1a\uff0c\u4e91\u539f\u751f\u8fd0\u7ef4\u53ef\u80fd\u4f1a\u5206\u4e00\u4e9b\u65b9\u5411\uff0c\u6bd4\u5982 DevOps \u5de5\u7a0b\u5e08\u3001SRE \u5de5\u7a0b\u5e08\u3001 \u5e73\u53f0\u67b6\u6784\u5de5\u7a0b\u5e08 \u7b49\u7b49\uff0c\u4e0d\u540c\u7684\u65b9\u5411\u9700\u8981\u8fdb\u9636\u5b66\u4e60\u7684\u70b9\u90fd\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u662f Docker\u3001Kubernetes \u4ee5\u53ca\u4e91\u539f\u751f\u5728\u4f01\u4e1a\u7684\u843d\u5730\u662f\u8fd9\u4e9b\u65b9\u5411\u7684\u57fa\u77f3\u3002 \u4e0d\u540c\u65b9\u5411\u7684\u6df1\u5165\u5b66\u4e60\uff0c\u9700\u8981\u7ed3\u5408\u4f01\u4e1a\u81ea\u8eab\u4e1a\u52a1\u4ee5\u53ca\u53bb\u53c2\u8003\u4e00\u4e0b CNCF \u7684\u4e00\u4e9b\u5f00\u6e90\u9879\u76ee\u4e86\u3002","title":"7\u3001\u4e91\u539f\u751f\u4e0d\u540c\u65b9\u5411\u7684\u5b66\u4e60"},{"location":"3%20%E9%98%85%E8%AF%BB/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E5%90%97/%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%89%E5%89%8D%E9%80%94%E4%B9%88%EF%BC%9F/#3\u5173\u4e8e\u8003\u8bc1\u4e0e\u8fdb\u9636","text":"\u5bf9\u4e8e\u521d\u3001\u4e2d\u7ea7\u7684\u4e91\u539f\u751f\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u60f3\u7ed9\u81ea\u5df1\u8bbe\u7acb\u4e00\u4e2a\u76ee\u6807\uff0c\u6216\u8005\u8003\u5bdf\u77e5\u8bc6\u638c\u63e1\u6c34\u5e73\uff0c\u6291\u6216\u662f\u6c42\u804c\u6765\u8bf4\uff0c\u4e0d\u59a8\u53bb\u8003\u4e00\u4e0b\u4e91\u539f\u751f\u76f8\u5173\u7684\u8bc1\u4e66\u3002\u4e91\u539f\u751f\u8ba1\u7b97\u57fa\u91d1\u4f1a CNCF\uff0c\u901a\u5e38\u6765\u8bf4\u6bd4\u5f88\u591a\u4e91\u5382\u5546\u63d0\u4f9b\u7684\u8ba4\u8bc1\u8bc1\u4e66\u542b\u91d1\u91cf\u66f4\u9ad8\uff0c\u4e0d\u5c11\u4f01\u4e1a\u5728\u62db\u8058\u65f6\u4e5f\u660e\u786e\u63d0\u51fa CKA \u548c CKAD \u662f\u52a0\u5206\u9879\u3002\u8fd9\u4e9b\u8003\u8bd5\u5927\u591a\u6570\u90fd\u662f\u5b9e\u64cd\u9898\uff0cKubernetes \u5b98\u65b9\u6280\u672f\u6587\u6863\u662f\u8003\u8bd5\u65f6\u552f\u4e00\u53ef\u80fd\u53c2\u8003\u7684\u8d44\u6599 Kubernetes \u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u8ba4\u8bc1 Certified Kubernetes Application Developer (CKAD)\uff1aCKAD \u8003\u8bd5\u8bc1\u660e\u7528\u6237\u53ef\u4ee5\u4e3a Kubernetes \u8bbe\u8ba1\u3001\u6784\u5efa\u3001\u914d\u7f6e\u548c\u53d1\u5e03\u4e91\u539f\u751f\u5e94\u7528\u3002\u901a\u8fc7 CKAD \u8ba4\u8bc1\u7684\u4eba\u5458\u80fd\u591f\u5728 Kubernetes \u4e2d\u5b9a\u4e49\u8f6f\u4ef6\u8d44\u6e90\u5e76\u4e14\u4f7f\u7528\u6838\u5fc3\u7ec4\u4ef6\u6765\u642d\u5efa\u3001\u76d1\u63a7\u3001\u68c0\u67e5\u53ef\u4f38\u7f29\u5e94\u7528\uff1b Kubernetes \u7ba1\u7406\u5458\u8ba4\u8bc1 Certified Kubernetes Administrator (CKA)\uff1aCKA \u8ba4\u8bc1\u786e\u4fdd CKA \u8ba4\u8bc1\u4eba\u5458\u5177\u6709\u5c65\u884c Kubernetes \u7ba1\u7406\u5458\u804c\u8d23\u7684\u6280\u80fd\u3001\u77e5\u8bc6\u548c\u80fd\u529b\u3002\u901a\u8fc7\u8ba4\u8bc1\u7684 Kubernetes \u7ba1\u7406\u5458\u5c55\u793a\u4e86\u5305\u62ec\u57fa\u7840\u5b89\u88c5\u548c\u914d\u7f6e\u3001\u7ba1\u7406\u4ea7\u54c1\u7ea7\u522b\u7684 Kubernetes \u96c6\u7fa4\u65b9\u9762\u7684\u80fd\u529b\u3002 Kubernetes \u8ba4\u8bc1\u5b89\u5168\u4e13\u5bb6 (CKS)\uff1aKubernetes \u8ba4\u8bc1\u5b89\u5168\u4e13\u5bb6\u9879\u76ee\u786e\u4fdd\u8bc1\u4e66\u6301\u6709\u4eba\u5458\u5bb9\u6613\u80dc\u4efb\u5404\u79cd\u6700\u4f73\u5b9e\u8df5\u3002CKS \u8ba4\u8bc1\u5305\u62ec\u5728\u6784\u5efa\u3001\u90e8\u7f72\u548c\u8fd0\u884c\u65f6\u786e\u4fdd\u57fa\u4e8e\u5bb9\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\u548c Kubernetes \u5e73\u53f0\u5b89\u5168\u7684\u6280\u80fd\u3002\u53c2\u52a0 CKS \u7684\u5019\u9009\u4eba\u5fc5\u987b\u6301\u6709\u73b0\u884c\u7684 CKA \u8bc1\u4e66\uff0c\u4ee5\u8bc1\u660e\u4ed6\u4eec\u5177\u6709\u8db3\u591f\u7684 Kubernetes \u4e13\u4e1a\u77e5\u8bc6\u3002","title":"3\u3001\u5173\u4e8e\u8003\u8bc1\u4e0e\u8fdb\u9636"},{"location":"4%20Obsidian/22-10-23%20%E5%BA%B7%E5%A5%88%E7%AC%94%E8%AE%B0%E6%B3%95/","text":"\u5eb7\u5948\u5c14\u7b14\u8bb0\u6cd5\uff0c\u4e5f\u53eb 5R \u7b14\u8bb0\u6cd5\u3002\u5b83\u7684\u6b65\u9aa4\u5305\u62ec\u8bb0\u5f55\u3001\u7b80\u5316\u3001\u80cc\u8bf5\u3001\u601d\u8003\u548c\u590d\u4e60\u3002\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u8003\u7814\u590d\u4e60\u4e5f\u540c\u6837\u9002\u7528\uff0c\u5b83\u63d0\u5021\u8bb0\u4e0e\u5b66\u3001\u601d\u8003\u4e0e\u8fd0\u7528\u76f8\u7ed3\u5408\u3002 \u5982\u56fe\uff0c\u5177\u4f53\u65b9\u6cd5\u6b65\u9aa4\u4e3a\uff1a\u628a\u7b14\u8bb0\u672c\u6bcf\u9875\u90fd\u5206\u6210\u7ebf\u7d22\u680f\u3001\u7b14\u8bb0\u680f\u3001\u603b\u7ed3\u680f 3 \u4e2a\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u90fd\u6709\u7279\u5b9a\u7528\u9014\uff1a \u2460\u8bb0\u5f55(Record)\uff1a\u5728\u53f3\u4fa7\u533a\u57df\u8bb0\u7b14\u8bb0\uff1b \u2461\u7b80\u5316(Reduce)\uff1a\u628a\u7b80\u5316\u7684\u5173\u952e\u8bcd\u548c\u8054\u60f3\u5230\u7684\u95ee\u9898\u5199\u5728\u5de6\u4fa7\u533a\u57df\uff1b \u2462\u80cc\u8bf5(Recite)\uff1a\u628a\u7b14\u8bb0\u680f\u906e\u4f4f\uff0c\u53ea\u7528\u7ebf\u7d22\u680f\u4e2d\u7684\u6458\u8bb0\u63d0\u793a\uff0c\u56de\u5fc6\u7b14\u8bb0\u680f\u5185\u5bb9 \u2463\u601d\u8003(Reflect)\uff1a\u628a\u603b\u7ed3\u5199\u5728\u9875\u9762\u6700\u5e95\u90e8\u90a3\u4e00\u680f\uff0c\u540e\u7eed\u590d\u4e60\u65f6\u4e5f\u53ef\u5728\u6b64\u533a\u57df\u8865\u5145\u5185\u5bb9 \u2464\u590d\u4e60(Review)\uff1a\u65f6\u5e38\u590d\u4e60\u7b14\u8bb0\uff0c\u7ffb\u770b\u603b\u7ed3\u680f\uff0c\u68c0\u67e5\u81ea\u5df1\u5bf9\u77e5\u8bc6\u70b9\u662f\u5426\u90fd\u5df2\u719f\u7ec3\u638c\u63e1\uff0c\u5982\u679c\u53c8\u672a\u80fd\u638c\u63e1\u624e\u5b9e\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u518d\u56de\u53bb\u770b\u7b14\u8bb0\u680f","title":"22 10 23 \u5eb7\u5948\u7b14\u8bb0\u6cd5"},{"location":"4%20Obsidian/mkdocs/","text":"1. \u5982\u4f55\u521b\u5efa\u4e00\u4e2a mkdocs \u9879\u76ee \u00b6 \u5b98\u65b9\u6587\u6863\uff1a https://squidfunk.github.io/mkdocs-material/ \u4f18\u79c0\u9879\u76ee\uff1a https://github.com/ObsidianPublisher/obsidian-mkdocs-publisher-template \u4e2d\u6587\u6559\u7a0b\uff08mkdocs \u7248\u672c\u592a\u8001\u4e86\uff09\uff1a https://github.com/Jackiexiao/mkdocs-roamlinks-plugin mkdocs \u5165\u95e8\u89c6\u5c4f\uff1a Python \u7248\u5b9d\u85cf\u7ea7\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668 Material for MkDocs 2. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 YAML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 # official tutorial # mkdocs-material: https://squidfunk.github.io/mkdocs-material/ # mkdocs: https://www.mkdocs.org/user-guide/configuration/ site_name : SYNC theme : name : material logo : FigureBed \ud83c\udf04/source/cat.jpg favicon : FigureBed \ud83c\udf04/source/github.png language : zh # \u8c03\u8272\u677f palette : # Palette toggle for light mode - scheme : default primary : teal accent : light blue toggle : icon : material/weather-night name : Switch to dark mode # Palette toggle for dark mode - scheme : slate primary : indigo accent : indigo toggle : icon : material/weather-sunny name : Switch to light mode # \u5b57\u4f53 font : # text: Noto Sans Simplified Chinese text : Ubuntu code : Ubuntu Mono # \u5bfc\u822a\u3001\u76ee\u5f55 features : - navigation.tabs - navigation.top - toc.follow - search.suggest - search.highlight markdown_extensions : - attr_list # https://squidfunk.github.io/mkdocs-material/reference/images/ - pymdownx.tabbed # https://squidfunk.github.io/mkdocs-material/reference/content-tabs/ - nl2br # newline-to-break - toc : permalink : '#' # heading anchor slugify : !!python/name:pymdownx.slugs.uslugify # \u89e3\u51b3\u4e2d\u6587\u6807\u9898\u89e3\u6790\u95ee\u9898 - admonition - codehilite : guess_lang : false linenums : false - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde - pymdownx.highlight : auto_title : true # \u4e3a\u4ee3\u7801\u5757\u6dfb\u52a0\u6807\u9898 linenums : true # \u884c\u53f7 - tables - pymdownx.snippets plugins : - search - awesome-pages - roamlinks #- autolinks - exclude : glob : - \"*.tmp\" - \"*.pdf\" - \"*.gz\" regex : - '.*\\.(tmp|bin|tar)$' # \u811a\u6ce8 extra : social : - icon : fontawesome/brands/github link : https://github.com/littlecabbage name : github of sync - icon : fontawesome/solid/paper-plane link : mailto:<zengzh1997@126.com> generator : false # hide \"generte by mkdocs\" extra_css : - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css - assets/css/template/blog.css - assets/css/template/grid.css - assets/css/template/img-grids-floats.css - assets/css/template/tooltipster.bundle.min.css - assets/css/template/utils.css - assets/css/admonition.css - assets/css/custom_attributes.css - assets/css/customization.css extra_javascript : - assets/js/mathjax.js - assets/js/utils.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js - assets/js/tooltipster.bundle.js copyright : Copyright &copy; 2022 SYNC 3. \u6ce8\u610f\u4e8b\u9879 \u00b6 3.1 \u76ee\u5f55 \u00b6 \u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2(\u542b\u652f\u6301\u7684markdown\u8bed\u6cd5) \u4e00\u4e2a .md \u91cc\u53ea\u80fd\u6709\u4e00\u4e2a # \uff0c\u8ddf\u7740\u591a\u4e2a ## \u3002\u5982\u679c\u6709\u591a\u4e2a # \uff0c\u5219\u4e0d\u4f1a\u81ea\u52a8\u751f\u4ea7\u672c\u9875\u76ee\u5f55\u3002 \u5982\u679c\u6709 # \uff0c\u5219\u4f7f\u7528\u8be5\u6807\u9898\u4f5c\u4e3a\u672c\u9875\u6b63\u6587\u90e8\u5206\u7b2c\u4e00\u884c\uff0c\u5982\u679c\u6ca1\u6709 # \uff0c\u5219\u4e3a mkdocs.yml \u91cc\u6307\u5b9a\u7684 pages \u540d\u3002 \u4e2a\u4eba\u5efa\u8bae .md \u4ece ## \u5f00\u59cb\uff0c\u4e0d\u8981\u7528 # \u3002 3.2 \u9ad8\u4eae \u00b6 \u4ee3\u7801\u9ad8\u4eae \u4f9d\u8d56\u6a21\u5757: pymdownx.inlinehilite \u4f7f\u7528shebang\u53ef\u4ee5\u5728\u4e00\u884c\u6587\u672c\u91cc\u5b9e\u73b0\u4ee3\u7801\u9ad8\u4eae Text Only 1 `#!python print \"Hello, world!\"`\u6216`:::python print \"Hello, world!\"`","title":"Mkdocs"},{"location":"4%20Obsidian/mkdocs/#1-\u5982\u4f55\u521b\u5efa\u4e00\u4e2a-mkdocs-\u9879\u76ee","text":"\u5b98\u65b9\u6587\u6863\uff1a https://squidfunk.github.io/mkdocs-material/ \u4f18\u79c0\u9879\u76ee\uff1a https://github.com/ObsidianPublisher/obsidian-mkdocs-publisher-template \u4e2d\u6587\u6559\u7a0b\uff08mkdocs \u7248\u672c\u592a\u8001\u4e86\uff09\uff1a https://github.com/Jackiexiao/mkdocs-roamlinks-plugin mkdocs \u5165\u95e8\u89c6\u5c4f\uff1a Python \u7248\u5b9d\u85cf\u7ea7\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668 Material for MkDocs","title":"1. \u5982\u4f55\u521b\u5efa\u4e00\u4e2a mkdocs \u9879\u76ee"},{"location":"4%20Obsidian/mkdocs/#2-\u4fee\u6539\u914d\u7f6e\u6587\u4ef6","text":"YAML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 # official tutorial # mkdocs-material: https://squidfunk.github.io/mkdocs-material/ # mkdocs: https://www.mkdocs.org/user-guide/configuration/ site_name : SYNC theme : name : material logo : FigureBed \ud83c\udf04/source/cat.jpg favicon : FigureBed \ud83c\udf04/source/github.png language : zh # \u8c03\u8272\u677f palette : # Palette toggle for light mode - scheme : default primary : teal accent : light blue toggle : icon : material/weather-night name : Switch to dark mode # Palette toggle for dark mode - scheme : slate primary : indigo accent : indigo toggle : icon : material/weather-sunny name : Switch to light mode # \u5b57\u4f53 font : # text: Noto Sans Simplified Chinese text : Ubuntu code : Ubuntu Mono # \u5bfc\u822a\u3001\u76ee\u5f55 features : - navigation.tabs - navigation.top - toc.follow - search.suggest - search.highlight markdown_extensions : - attr_list # https://squidfunk.github.io/mkdocs-material/reference/images/ - pymdownx.tabbed # https://squidfunk.github.io/mkdocs-material/reference/content-tabs/ - nl2br # newline-to-break - toc : permalink : '#' # heading anchor slugify : !!python/name:pymdownx.slugs.uslugify # \u89e3\u51b3\u4e2d\u6587\u6807\u9898\u89e3\u6790\u95ee\u9898 - admonition - codehilite : guess_lang : false linenums : false - footnotes - meta - def_list - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde - pymdownx.highlight : auto_title : true # \u4e3a\u4ee3\u7801\u5757\u6dfb\u52a0\u6807\u9898 linenums : true # \u884c\u53f7 - tables - pymdownx.snippets plugins : - search - awesome-pages - roamlinks #- autolinks - exclude : glob : - \"*.tmp\" - \"*.pdf\" - \"*.gz\" regex : - '.*\\.(tmp|bin|tar)$' # \u811a\u6ce8 extra : social : - icon : fontawesome/brands/github link : https://github.com/littlecabbage name : github of sync - icon : fontawesome/solid/paper-plane link : mailto:<zengzh1997@126.com> generator : false # hide \"generte by mkdocs\" extra_css : - https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css - assets/css/template/blog.css - assets/css/template/grid.css - assets/css/template/img-grids-floats.css - assets/css/template/tooltipster.bundle.min.css - assets/css/template/utils.css - assets/css/admonition.css - assets/css/custom_attributes.css - assets/css/customization.css extra_javascript : - assets/js/mathjax.js - assets/js/utils.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js - assets/js/tooltipster.bundle.js copyright : Copyright &copy; 2022 SYNC","title":"2. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"4%20Obsidian/mkdocs/#3-\u6ce8\u610f\u4e8b\u9879","text":"","title":"3. \u6ce8\u610f\u4e8b\u9879"},{"location":"4%20Obsidian/mkdocs/#31-\u76ee\u5f55","text":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2(\u542b\u652f\u6301\u7684markdown\u8bed\u6cd5) \u4e00\u4e2a .md \u91cc\u53ea\u80fd\u6709\u4e00\u4e2a # \uff0c\u8ddf\u7740\u591a\u4e2a ## \u3002\u5982\u679c\u6709\u591a\u4e2a # \uff0c\u5219\u4e0d\u4f1a\u81ea\u52a8\u751f\u4ea7\u672c\u9875\u76ee\u5f55\u3002 \u5982\u679c\u6709 # \uff0c\u5219\u4f7f\u7528\u8be5\u6807\u9898\u4f5c\u4e3a\u672c\u9875\u6b63\u6587\u90e8\u5206\u7b2c\u4e00\u884c\uff0c\u5982\u679c\u6ca1\u6709 # \uff0c\u5219\u4e3a mkdocs.yml \u91cc\u6307\u5b9a\u7684 pages \u540d\u3002 \u4e2a\u4eba\u5efa\u8bae .md \u4ece ## \u5f00\u59cb\uff0c\u4e0d\u8981\u7528 # \u3002","title":"3.1 \u76ee\u5f55"},{"location":"4%20Obsidian/mkdocs/#32-\u9ad8\u4eae","text":"\u4ee3\u7801\u9ad8\u4eae \u4f9d\u8d56\u6a21\u5757: pymdownx.inlinehilite \u4f7f\u7528shebang\u53ef\u4ee5\u5728\u4e00\u884c\u6587\u672c\u91cc\u5b9e\u73b0\u4ee3\u7801\u9ad8\u4eae Text Only 1 `#!python print \"Hello, world!\"`\u6216`:::python print \"Hello, world!\"`","title":"3.2 \u9ad8\u4eae"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/","text":"\u672c\u6587\u7531 \u7b80\u60a6 SimpRead \u8f6c\u7801\uff0c \u539f\u6587\u5730\u5740 www.appinn.com Obsidian \u662f\u4e00\u6b3e\u5f3a\u5927\u7684\u53ef\u6269\u5c55\u7684\u77e5\u8bc6\u5e93\u8f6f\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5e2e\u4f60\u7ba1\u7406\u672c\u5730\u7684 .md \u6587\u4ef6\uff0c\u5e76\u8ba9\u8fd9\u4e9b\u6587\u4ef6\u4ee5\u94fe\u63a5\u7684\u65b9\u5f0f\u4e92\u76f8\u8fde\u63a5\u8d77\u6765\uff0c\u88ab\u8a89\u4e3a\u4f60\u6c38\u8fdc\u7684\u7b2c\u4e8c\u4e2a\u5927\u8111\u3002 \u7b80\u60a6 \u5219\u662f\u4e00\u6b3e\u9002\u914d\u4e86\u5f88\u591a\u5f88\u591a\u7f51\u7ad9\u7684\u5f00\u6e90\u6c89\u6d78\u5f0f\u9605\u8bfb\u6269\u5c55\uff0c\u8fd9\u7bc7\u6587\u7ae0\u662f\u7b80\u60a6\u5f00\u53d1\u8005 @Kenshin \u64b0\u5199\u7684**\u9488\u5bf9\u65b0\u7528\u6237\u7684\u4e00\u6b65\u5230\u4f4d\u7684 Obsdian \u914d\u7f6e\u5e93**\u3002@Appinn \u4e00\u952e\u4fdd\u5b58\u5168\u6587\u5230 Obsidian \u4ee5\u53ca\u672c\u5730\u5feb\u7167\u3001\u81ea\u52a8\u6807\u6ce8\uff0c\u9002\u5408\u65b0\u7528\u6237\u7684\u7b80\u60a6 Obsidian \u914d\u7f6e\u5e93 \u00b6 \u9488\u5bf9\u65b0\u7528\u6237\u7684\u4e00\u6b65\u5230\u4f4d\u7684 Obsdian \u914d\u7f6e\u5e93\u3002 \ud83d\udcdd \u529f\u80fd \u00b6 1\ufe0f\u20e3 \u52a0\u5165\u7a0d\u540e\u8bfb\uff0c\u81ea\u52a8\u5c06\u672c\u5730\u5feb\u7167\u548c Markdown \u5bfc\u5165\u5230 Obsidian 2\ufe0f\u20e3 \u52a0\u5165\u6807\u6ce8\u65f6\uff0c\u81ea\u52a8\u5c06\u6807\u6ce8\u5185\u5bb9\u5bfc\u5165\u672c\u5730\u5feb\u7167\u548c Obsidian 3\ufe0f\u20e3 \u6539\u53d8\u7a0d\u540e\u8bfb\u6216\u6807\u6ce8\u7684\u5143\u6570\u636e\u65f6\uff0c\u81ea\u52a8\u5c06\u6539\u52a8\u7684\u5185\u5bb9\u4fdd\u5b58\u5230\u672c\u5730\u5feb\u7167\u548c Obsidian 4\ufe0f\u20e3 \u5728 Obsidian \u4e2d\u76f4\u63a5\u5185\u7f6e\u597d\u4e86\u7b80\u60a6\u7684\u6807\u6ce8\u7cfb\u7edf\uff0c\u53ef\u76f4\u63a5\u5728 Obsidian \u5b9e\u73b0\u6807\u6ce8 \ud83d\udca1 \u7279\u70b9 \u00b6 \u7528\u6237\u4ec5\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u7684\u914d\u7f6e\u5e93\uff0c\u4fee\u6539\u91cc\u9762\u7684 UID \u4e3a\u81ea\u5df1\u7684\u9ad8\u7ea7\u8d26\u6237 UID\uff0c\u5373\u53ef\u5b9e\u73b0\u7b80\u60a6\u7684\u5404\u79cd\u9ad8\u7ea7\u64cd\u4f5c\u3002 \ud83d\udc81\u200d\u2642\ufe0f \u53d7\u4f17 \u00b6 \u65b0\u7528\u6237\u6216\u8005\u4e0d\u60f3\u4f7f\u7528\u624b\u52a8\u914d\u7f6e\u7684\u7528\u6237\u3002 \ud83d\udcdd \u5982\u4f55\u4f7f\u7528 \u00b6 1\ufe0f\u20e3 \u4e0b\u8f7d 2\ufe0f\u20e3 \u4fee\u6539\u4e3a\u81ea\u5df1\u7684 UID 3\ufe0f\u20e3 \u5c06\u5fc5\u8981\u7684\u6587\u4ef6\u5939\u590d\u5236\u7c98\u8d34\u5230\u76f8\u5e94\u4f4d\u7f6e \u2705 Done\uff01 \ud83d\udcd6 \u533a\u522b \u00b6 \ud83d\udcd8 \u6781\u901f\u7248 \u00b6 \ud83d\udd17 Github | \u8bed\u96c0 \u4e0d\u9700\u8981\u540c\u6b65\u52a9\u624b\uff0c\u65e0\u4efb\u4f55\u914d\u7f6e\uff0c\u652f\u6301 Markdown \u5f62\u5f0f\u7684\u5feb\u7167\uff0c\u81ea\u52a8\u540c\u6b65\u6807\u6ce8\uff0c\u9002\u5408 Obsidain + \u7b80\u60a6\u7684\u5c1d\u9c9c\u7528\u6237\u3002 \ud83d\udcd9 \u57fa\u7840\u7248 \u00b6 \ud83d\udd17 Github | \u8bed\u96c0 \u9700\u8981\u540c\u6b65\u52a9\u624b\uff0c\u51e0\u4e4e\u65e0\u4efb\u4f55\u914d\u7f6e\uff0c\u652f\u6301\u672c\u5730\u5feb\u7167\uff0c\u81ea\u52a8\u540c\u6b65\u6807\u6ce8\uff0c\u9002\u5408 Obsidain + \u7b80\u60a6\u7684\u8f7b\u91cf\u7ea7\u7528\u6237\u3002 \ud83d\udcd7 \u9ad8\u7ea7\u7248 \u00b6 \ud83d\udd17 Github | \u8bed\u96c0 \u9700\u8981\u540c\u6b65\u52a9\u624b\uff0c\u51e0\u4e4e\u65e0\u4efb\u4f55\u914d\u7f6e\uff0c\u652f\u6301\u672c\u5730\u5feb\u7167\uff0c\u81ea\u52a8\u540c\u6b65\u6807\u6ce8\uff0c\u53ef\u5728 Obsidian \u4e2d\u6807\u6ce8\uff0c\u9002\u5408 Obsidain + \u7b80\u60a6\u7684\u91cd\u5ea6\u7528\u6237\u3002 \ud83d\udcfa \u4e00\u4e9b\u4f7f\u7528\u64cd\u4f5c\u89c6\u9891 \u00b6 1\ufe0f\u20e3 \u5728\u9605\u8bfb\u6a21\u5f0f\u4e0b\u6807\u6ce8 \u00b6 \u7136\u540e\u518d\u5f00\u542f Obsidian \u7684\u524d\u63d0\u4e0b\uff0c\u589e\u52a0\u65b0\u7684\u6807\u6ce8\uff0c\u770b\u770b\u662f\u5426\u4f1a\u81ea\u52a8\u540c\u6b65\u5230 Obsidian\u3002 2\ufe0f\u20e3 \u5728 Obsidian \u4e2d\u6807\u6ce8 \u00b6 \u6253\u5f00 Obsidian \u91cc\u9762\u5e94\u8be5\u6709\u4e00\u4e9b\u73b0\u6210\u7684 Markdown\uff0c\u6253\u5f00\u4e00\u4e2a\u5e76\u6309\u7167\u4e0b\u9762\u89c6\u9891\u7684\u64cd\u4f5c\uff0c\u5f53\u5728\u53f3\u4fa7\u6807\u6ce8\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u6807\u6ce8\u540c\u6b65\u5230 Obsidian \u4e2d\u3002 3\ufe0f\u20e3 \u67e5\u770b\u672c\u5730\u5feb\u7167 \u00b6 \u6253\u5f00\u7a0d\u540e\u8bfb\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7a0d\u540e\u8bfb\uff0c\u5982\u679c\u6709\u4e0b\u9762\u89c6\u9891\u6240\u793a\u7684\u6807\u8bc6\u5219\u8bf4\u660e\u8bfb\u53d6\u7684\u672c\u5730\u6587\u4ef6\u3002 \ud83d\udce6 \u914d\u7f6e\u5e93 \u00b6 \u7b80\u60a6 \u00b7 \u914d\u7f6e\u5e93 \u662f\u7b80\u60a6\u5b98\u65b9\u63a8\u51fa\u7684\u4e00\u5957\u9488\u5bf9\u65b0\u7528\u6237\u7684\u6781\u7b80\u914d\u7f6e\u65b9\u6848\uff0c\u65b9\u4fbf\u65b0\u7528\u6237\u7528\u6700\u5feb\u7684\u65b9\u5f0f\u4f7f\u7528\u7b80\u60a6\u7684\u5404\u79cd\u9ad8\u7ea7\u670d\u52a1\uff0c\u914d\u7f6e\u5e93\u5185\u7f6e\u4e86\u5e38\u7528\u7684\u53cc\u94fe\u7b14\u8bb0\u7528\u6cd5\uff0c\u5982\uff1aNotion\u3001Obsidian\u3001Logseq\u3001Roam Research\uff0c\u540c\u65f6\u5305\u542b\u4e86\u7b80\u60a6\u5728\u9605\u8bfb\u6a21\u5f0f\u4e0a\u7684\u4e00\u4e9b\u5e38\u89c4\u63d2\u4ef6\uff1aLive Editor\u3001\u9898\u56fe\u3001Safari \u9605\u8bfb\u6a21\u5f0f\u7b49\u3002 \ud83d\udc4f \u7b80\u60a6\u5b98\u65b9\u5fae\u4fe1\u7fa4\uff08\u9650\u65f6\u5f00\u653e\u52a0\u5165\uff09 \u00b6 \u6211\u975e\u5e38\u4e0d\u559c\u6b22\u4f7f\u7528\u5fae\u4fe1\u7fa4\uff0c\u6240\u4ee5\u4ece\u7b80\u60a6\u5f00\u59cb\u5c31**\u53ea\u6709\u4e00\u4e2a Telegram \u7fa4\uff0c \u76ee\u524d\u91cc\u9762\u5df2\u7ecf\u6709 2K+ \u7684\u5c0f\u4f19\u4f34**\uff0c\u4f46\u968f\u7740\u7528\u6237\u91cf\u7684\u63d0\u5347\uff0c\u4e3a\u4e86\u7167\u987e\u90e8\u5206\u7528\u6237\uff0c\u6240\u4ee5\u5341\u4e00\u671f\u95f4\u6211\u589e\u52a0\u4e86\u7b80\u60a6\u7684\u5fae\u4fe1\u7fa4\uff0c\u4f46\u56e0\u4e3a\u65f6\u95f4\u65b9\u9762\u4ee5\u53ca\u5fae\u4fe1\u7fa4\u5728\u7ba1\u7406\u4e0a\u5929\u7136\u7f3a\u5c11\u4e00\u4e9b\u5fc5\u8981\u7684\u56e0\u7d20\uff0c\u6240\u4ee5\u5fae\u4fe1\u7fa4\u5e76\u4e0d\u6253\u7b97\u505a\u4e00\u4e2a\u5168\u5f00\u653e\u52a0\u5165\u7684\u65b9\u6848\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u80fd\u7167\u987e\u5230\u5df2\u7ecf\u5165\u7fa4\u7684\u5c0f\u4f19\u4f34\uff0c\u6240\u4ee5\u968f\u65f6\u90fd\u4f1a\u5173\u95ed\u3002 \u5982\u679c\u65b9\u4fbf\u7684\u8bdd\uff0c\u8fd8\u662f\u8bf7\u9996\u9009\u52a0\u5165 \u7b80\u60a6\u7684 Telegram \u7fa4 \uff0c\u6b22\u8fce\u8ddf 2K+ \u7684\u7b80\u60a6\u7528\u6237\u4e00\u8d77\u50ac\u66f4~ \u6700\u540e\uff0c@Kenshin \u9001\u4e86\u4e00\u4e9b\u7b80\u60a6\u7684\u5151\u6362\u7801\uff0c\u5c06\u5728\u5c0f\u4f17\u8f6f\u4ef6\u5fae\u4fe1\u516c\u4f17\u53f7\u62bd\u5956\u9001\u51fa\u3002\u6b22\u8fce\u63d0\u524d\u5173\u6ce8\uff1aappinncom +1 -1","title":"\u7b80\u60a6"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#\u4e00\u952e\u4fdd\u5b58\u5168\u6587\u5230-obsidian-\u4ee5\u53ca\u672c\u5730\u5feb\u7167\u81ea\u52a8\u6807\u6ce8\u9002\u5408\u65b0\u7528\u6237\u7684\u7b80\u60a6-obsidian-\u914d\u7f6e\u5e93","text":"\u9488\u5bf9\u65b0\u7528\u6237\u7684\u4e00\u6b65\u5230\u4f4d\u7684 Obsdian \u914d\u7f6e\u5e93\u3002","title":"\u4e00\u952e\u4fdd\u5b58\u5168\u6587\u5230 Obsidian \u4ee5\u53ca\u672c\u5730\u5feb\u7167\u3001\u81ea\u52a8\u6807\u6ce8\uff0c\u9002\u5408\u65b0\u7528\u6237\u7684\u7b80\u60a6 Obsidian \u914d\u7f6e\u5e93"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u529f\u80fd","text":"1\ufe0f\u20e3 \u52a0\u5165\u7a0d\u540e\u8bfb\uff0c\u81ea\u52a8\u5c06\u672c\u5730\u5feb\u7167\u548c Markdown \u5bfc\u5165\u5230 Obsidian 2\ufe0f\u20e3 \u52a0\u5165\u6807\u6ce8\u65f6\uff0c\u81ea\u52a8\u5c06\u6807\u6ce8\u5185\u5bb9\u5bfc\u5165\u672c\u5730\u5feb\u7167\u548c Obsidian 3\ufe0f\u20e3 \u6539\u53d8\u7a0d\u540e\u8bfb\u6216\u6807\u6ce8\u7684\u5143\u6570\u636e\u65f6\uff0c\u81ea\u52a8\u5c06\u6539\u52a8\u7684\u5185\u5bb9\u4fdd\u5b58\u5230\u672c\u5730\u5feb\u7167\u548c Obsidian 4\ufe0f\u20e3 \u5728 Obsidian \u4e2d\u76f4\u63a5\u5185\u7f6e\u597d\u4e86\u7b80\u60a6\u7684\u6807\u6ce8\u7cfb\u7edf\uff0c\u53ef\u76f4\u63a5\u5728 Obsidian \u5b9e\u73b0\u6807\u6ce8","title":"\ud83d\udcdd \u529f\u80fd"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u7279\u70b9","text":"\u7528\u6237\u4ec5\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u7684\u914d\u7f6e\u5e93\uff0c\u4fee\u6539\u91cc\u9762\u7684 UID \u4e3a\u81ea\u5df1\u7684\u9ad8\u7ea7\u8d26\u6237 UID\uff0c\u5373\u53ef\u5b9e\u73b0\u7b80\u60a6\u7684\u5404\u79cd\u9ad8\u7ea7\u64cd\u4f5c\u3002","title":"\ud83d\udca1 \u7279\u70b9"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u53d7\u4f17","text":"\u65b0\u7528\u6237\u6216\u8005\u4e0d\u60f3\u4f7f\u7528\u624b\u52a8\u914d\u7f6e\u7684\u7528\u6237\u3002","title":"\ud83d\udc81\u200d\u2642\ufe0f \u53d7\u4f17"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u5982\u4f55\u4f7f\u7528","text":"1\ufe0f\u20e3 \u4e0b\u8f7d 2\ufe0f\u20e3 \u4fee\u6539\u4e3a\u81ea\u5df1\u7684 UID 3\ufe0f\u20e3 \u5c06\u5fc5\u8981\u7684\u6587\u4ef6\u5939\u590d\u5236\u7c98\u8d34\u5230\u76f8\u5e94\u4f4d\u7f6e \u2705 Done\uff01","title":"\ud83d\udcdd \u5982\u4f55\u4f7f\u7528"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u533a\u522b","text":"","title":"\ud83d\udcd6 \u533a\u522b"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u6781\u901f\u7248","text":"\ud83d\udd17 Github | \u8bed\u96c0 \u4e0d\u9700\u8981\u540c\u6b65\u52a9\u624b\uff0c\u65e0\u4efb\u4f55\u914d\u7f6e\uff0c\u652f\u6301 Markdown \u5f62\u5f0f\u7684\u5feb\u7167\uff0c\u81ea\u52a8\u540c\u6b65\u6807\u6ce8\uff0c\u9002\u5408 Obsidain + \u7b80\u60a6\u7684\u5c1d\u9c9c\u7528\u6237\u3002","title":"\ud83d\udcd8 \u6781\u901f\u7248"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u57fa\u7840\u7248","text":"\ud83d\udd17 Github | \u8bed\u96c0 \u9700\u8981\u540c\u6b65\u52a9\u624b\uff0c\u51e0\u4e4e\u65e0\u4efb\u4f55\u914d\u7f6e\uff0c\u652f\u6301\u672c\u5730\u5feb\u7167\uff0c\u81ea\u52a8\u540c\u6b65\u6807\u6ce8\uff0c\u9002\u5408 Obsidain + \u7b80\u60a6\u7684\u8f7b\u91cf\u7ea7\u7528\u6237\u3002","title":"\ud83d\udcd9 \u57fa\u7840\u7248"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u9ad8\u7ea7\u7248","text":"\ud83d\udd17 Github | \u8bed\u96c0 \u9700\u8981\u540c\u6b65\u52a9\u624b\uff0c\u51e0\u4e4e\u65e0\u4efb\u4f55\u914d\u7f6e\uff0c\u652f\u6301\u672c\u5730\u5feb\u7167\uff0c\u81ea\u52a8\u540c\u6b65\u6807\u6ce8\uff0c\u53ef\u5728 Obsidian \u4e2d\u6807\u6ce8\uff0c\u9002\u5408 Obsidain + \u7b80\u60a6\u7684\u91cd\u5ea6\u7528\u6237\u3002","title":"\ud83d\udcd7 \u9ad8\u7ea7\u7248"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u4e00\u4e9b\u4f7f\u7528\u64cd\u4f5c\u89c6\u9891","text":"","title":"\ud83d\udcfa \u4e00\u4e9b\u4f7f\u7528\u64cd\u4f5c\u89c6\u9891"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#1-\u5728\u9605\u8bfb\u6a21\u5f0f\u4e0b\u6807\u6ce8","text":"\u7136\u540e\u518d\u5f00\u542f Obsidian \u7684\u524d\u63d0\u4e0b\uff0c\u589e\u52a0\u65b0\u7684\u6807\u6ce8\uff0c\u770b\u770b\u662f\u5426\u4f1a\u81ea\u52a8\u540c\u6b65\u5230 Obsidian\u3002","title":"1\ufe0f\u20e3 \u5728\u9605\u8bfb\u6a21\u5f0f\u4e0b\u6807\u6ce8"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#2-\u5728-obsidian-\u4e2d\u6807\u6ce8","text":"\u6253\u5f00 Obsidian \u91cc\u9762\u5e94\u8be5\u6709\u4e00\u4e9b\u73b0\u6210\u7684 Markdown\uff0c\u6253\u5f00\u4e00\u4e2a\u5e76\u6309\u7167\u4e0b\u9762\u89c6\u9891\u7684\u64cd\u4f5c\uff0c\u5f53\u5728\u53f3\u4fa7\u6807\u6ce8\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u6807\u6ce8\u540c\u6b65\u5230 Obsidian \u4e2d\u3002","title":"2\ufe0f\u20e3 \u5728 Obsidian \u4e2d\u6807\u6ce8"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#3-\u67e5\u770b\u672c\u5730\u5feb\u7167","text":"\u6253\u5f00\u7a0d\u540e\u8bfb\uff0c\u968f\u4fbf\u627e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u7a0d\u540e\u8bfb\uff0c\u5982\u679c\u6709\u4e0b\u9762\u89c6\u9891\u6240\u793a\u7684\u6807\u8bc6\u5219\u8bf4\u660e\u8bfb\u53d6\u7684\u672c\u5730\u6587\u4ef6\u3002","title":"3\ufe0f\u20e3 \u67e5\u770b\u672c\u5730\u5feb\u7167"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u914d\u7f6e\u5e93","text":"\u7b80\u60a6 \u00b7 \u914d\u7f6e\u5e93 \u662f\u7b80\u60a6\u5b98\u65b9\u63a8\u51fa\u7684\u4e00\u5957\u9488\u5bf9\u65b0\u7528\u6237\u7684\u6781\u7b80\u914d\u7f6e\u65b9\u6848\uff0c\u65b9\u4fbf\u65b0\u7528\u6237\u7528\u6700\u5feb\u7684\u65b9\u5f0f\u4f7f\u7528\u7b80\u60a6\u7684\u5404\u79cd\u9ad8\u7ea7\u670d\u52a1\uff0c\u914d\u7f6e\u5e93\u5185\u7f6e\u4e86\u5e38\u7528\u7684\u53cc\u94fe\u7b14\u8bb0\u7528\u6cd5\uff0c\u5982\uff1aNotion\u3001Obsidian\u3001Logseq\u3001Roam Research\uff0c\u540c\u65f6\u5305\u542b\u4e86\u7b80\u60a6\u5728\u9605\u8bfb\u6a21\u5f0f\u4e0a\u7684\u4e00\u4e9b\u5e38\u89c4\u63d2\u4ef6\uff1aLive Editor\u3001\u9898\u56fe\u3001Safari \u9605\u8bfb\u6a21\u5f0f\u7b49\u3002","title":"\ud83d\udce6 \u914d\u7f6e\u5e93"},{"location":"4%20Obsidian/%E7%AE%80%E6%82%A6/#-\u7b80\u60a6\u5b98\u65b9\u5fae\u4fe1\u7fa4\u9650\u65f6\u5f00\u653e\u52a0\u5165","text":"\u6211\u975e\u5e38\u4e0d\u559c\u6b22\u4f7f\u7528\u5fae\u4fe1\u7fa4\uff0c\u6240\u4ee5\u4ece\u7b80\u60a6\u5f00\u59cb\u5c31**\u53ea\u6709\u4e00\u4e2a Telegram \u7fa4\uff0c \u76ee\u524d\u91cc\u9762\u5df2\u7ecf\u6709 2K+ \u7684\u5c0f\u4f19\u4f34**\uff0c\u4f46\u968f\u7740\u7528\u6237\u91cf\u7684\u63d0\u5347\uff0c\u4e3a\u4e86\u7167\u987e\u90e8\u5206\u7528\u6237\uff0c\u6240\u4ee5\u5341\u4e00\u671f\u95f4\u6211\u589e\u52a0\u4e86\u7b80\u60a6\u7684\u5fae\u4fe1\u7fa4\uff0c\u4f46\u56e0\u4e3a\u65f6\u95f4\u65b9\u9762\u4ee5\u53ca\u5fae\u4fe1\u7fa4\u5728\u7ba1\u7406\u4e0a\u5929\u7136\u7f3a\u5c11\u4e00\u4e9b\u5fc5\u8981\u7684\u56e0\u7d20\uff0c\u6240\u4ee5\u5fae\u4fe1\u7fa4\u5e76\u4e0d\u6253\u7b97\u505a\u4e00\u4e2a\u5168\u5f00\u653e\u52a0\u5165\u7684\u65b9\u6848\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u80fd\u7167\u987e\u5230\u5df2\u7ecf\u5165\u7fa4\u7684\u5c0f\u4f19\u4f34\uff0c\u6240\u4ee5\u968f\u65f6\u90fd\u4f1a\u5173\u95ed\u3002 \u5982\u679c\u65b9\u4fbf\u7684\u8bdd\uff0c\u8fd8\u662f\u8bf7\u9996\u9009\u52a0\u5165 \u7b80\u60a6\u7684 Telegram \u7fa4 \uff0c\u6b22\u8fce\u8ddf 2K+ \u7684\u7b80\u60a6\u7528\u6237\u4e00\u8d77\u50ac\u66f4~ \u6700\u540e\uff0c@Kenshin \u9001\u4e86\u4e00\u4e9b\u7b80\u60a6\u7684\u5151\u6362\u7801\uff0c\u5c06\u5728\u5c0f\u4f17\u8f6f\u4ef6\u5fae\u4fe1\u516c\u4f17\u53f7\u62bd\u5956\u9001\u51fa\u3002\u6b22\u8fce\u63d0\u524d\u5173\u6ce8\uff1aappinncom +1 -1","title":"\ud83d\udc4f \u7b80\u60a6\u5b98\u65b9\u5fae\u4fe1\u7fa4\uff08\u9650\u65f6\u5f00\u653e\u52a0\u5165\uff09"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/","text":"\u672c\u6587\u7531 \u7b80\u60a6 SimpRead \u8f6c\u7801\uff0c \u539f\u6587\u5730\u5740 luoxx.top \u7834\u89e3\u65b9\u6cd5\u6765\u81ea github \u4e0a\u4e00\u4e2a\u5927\u4f6c somebasj \uff0c\u4e0d\u8fc7\u76f4\u63a5\u7528\u4ed6\u63d0\u4f9b\u7684\u811a\u672c\u6fc0\u6d3b\u57fa\u672c\u6ca1\u6cd5\u6210\u529f\uff0c\u6240\u4ee5\u6211\u8fd9\u8fb9\u51fa\u4e2a\u6559\u7a0b\u5e2e\u52a9\u5927\u5bb6\u6210\u529f\u6fc0\u6d3b\u3002 \u7834\u89e3\u65b9\u6cd5\u6765\u81ea github \u4e0a\u4e00\u4e2a\u5927\u4f6c somebasj \uff0c\u4e0d\u8fc7\u76f4\u63a5\u7528\u4ed6\u63d0\u4f9b\u7684\u811a\u672c\u6fc0\u6d3b\u57fa\u672c\u6ca1\u6cd5\u6210\u529f\uff0c\u6240\u4ee5\u6211\u8fd9\u8fb9\u51fa\u4e2a\u6559\u7a0b\u5e2e\u52a9\u5927\u5bb6\u6210\u529f\u6fc0\u6d3b\u3002 \u6309\u7167 github \u4e0a\u7684\u63cf\u8ff0\uff0c\u8fd9\u4e2a\u6fc0\u6d3b\u65b9\u5f0f\u662f\u5168\u9762\u652f\u6301 intel \u548c arm \u82af\u7247\u7684\uff0c\u4e0d\u8fc7\u6211\u8fd9\u8fb9\u53ea\u6709 m1 \u7684 mac\uff0c\u6240\u4ee5 intel \u82af\u7247\u7684\u6fc0\u6d3b\u672a\u6d4b\u8bd5\u3002 \u51c6\u5907\u5de5\u4f5c \u00b6 \u4e0b\u8f7d pd\\ \u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\uff1a https://download.parallels.com/desktop/v18/18.0.1-53056/ParallelsDesktop-18.0.1-53056.dmg \\ \u6211\u4e5f\u4e0a\u4f20\u4e86\u4e00\u4efd\u5b89\u88c5\u5305\u5230\u4e91\u76d8\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\uff08\u9ed8\u8ba4\u7f51\u76d8\u662f\u6211\u81ea\u5df1\u5efa\u7684\u7f51\u76d8\uff0c\u901f\u5ea6\u4e0d\u4f1a\u5f88\u5feb\uff0c\u6709\u767e\u5ea6\u7f51\u76d8\u4f1a\u5458\u7684\u53ef\u4ee5\u7528\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\u4e0b\u8f7d\uff09\u3002\\ ParallelsDesktop-18.0.1-53056.dmg \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aw1ziln \\ ParallelsDesktop-18.0.1-53056.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1av61h \u6fc0\u6d3b\u65b9\u5f0f 1 \u00b6 github \u4f5c\u8005\u66f4\u65b0\u4e86\u6fc0\u6d3b\u811a\u672c\uff0c\u5e94\u8be5\u662f\u53ef\u4ee5\u76f4\u63a5\u4e00\u952e\u6fc0\u6d3b\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u5148\u8bd5\u4e00\u4e0b\uff0c\u4e0d\u884c\u518d\u4f7f\u7528 \u6fc0\u6d3b\u65b9\u5f0f2 \u65b0\u7684\u7834\u89e3\u8865\u4e01\u4e0b\u8f7d\u5730\u5740\\ ParallelsDesktopCrack-main.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1afpe9z1 \u4f7f\u7528\u65b9\u6cd5\\ \u4e0b\u8f7d\u540e\u89e3\u538b\uff0c\u7136\u540e cd \u8fdb\u5165\u89e3\u538b\u540e\u7684\u76ee\u5f55\uff0c\u7136\u540e\u6267\u884c chmod +x ./install.sh && sudo ./install.sh \u547d\u4ee4\u5373\u53ef\u3002\\ ps\uff1a\u6267\u884c\u8be5\u547d\u4ee4\u4f1a\u9700\u8981\u8f93\u5165\u5bc6\u7801\u4ee5\u6388\u6743\u3002 \u6fc0\u6d3b\u65b9\u5f0f 2 \u00b6 \u4e0b\u8f7d\u7834\u89e3\u8865\u4e01\\ \u4e3a\u4e86\u65b9\u4fbf\u65e0\u6cd5\u8bbf\u95ee github \u7684\u540c\u5b66\u4e0b\u8f7d\uff0c\u6211\u8fd9\u91cc\u4e5f\u4e0a\u4f20\u4e86\u4e00\u4efd\u5230\u4e91\u76d8\\ ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf \u5982\u679c\u5b89\u88c5\u8fc7 pd17 \u6216\u8005\u66f4\u65e9\u7248\u672c\uff0c\u53ef\u4ee5\u5b8c\u5168\u5378\u8f7d\u4ee5\u786e\u4fdd\u4e4b\u540e\u80fd\u6210\u529f\u6fc0\u6d3b\u3002\uff08\u53ef\u9009\uff0c\u4e0d\u5378\u8f7d\u4e5f\u884c\uff0c\u4e0d\u8fc7\u53ef\u80fd\u4f1a\u6709\u5751\uff09\\ \u5efa\u8bae\u4f7f\u7528 App Cleaner \u6765\u5378\u8f7d\uff0c\u8fd9\u6837\u5378\u8f7d\u7684\u6bd4\u8f83\u5e72\u51c0\\ ps\uff1a \u5378\u8f7d\u4e4b\u524d\u8bf7\u5148\u5907\u4efd\u597d\u81ea\u5df1\u7684\u865a\u62df\u673a \uff0c\u4e0d\u7136\u5378\u8f7d\u5b8c\u5c31\u5565\u90fd\u6ca1\u4e86\uff0c\u865a\u62df\u673a\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\u4e3a ~/Parallels \u3002 \u5c31\u662f\u5982\u4e0b\u56fe\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u590d\u5236\u4e00\u4efd\u5230\u5176\u4ed6\u5730\u65b9\u4fdd\u5b58\u597d\u3002\\ \u4e0b\u8f7d pd18 \u5b89\u88c5\u6587\u4ef6\uff0c\u5b89\u88c5\uff0c\u5b89\u88c5\u4e4b\u540e\u5230\u6fc0\u6d3b\u90a3\u4e00\u6b65\u5c31\u4e0d\u7528\u7ee7\u7eed\u8d70\u4e86\uff0c\u9000\u51fa pd\u3002 \u4e0b\u8f7d\u7834\u89e3\u8865\u4e01\u5230 \u4e0b\u8f7d\u76ee\u5f55 \uff0c\u4e5f\u5c31\u662f ~/Downloads , \u7136\u540e\u89e3\u538b\u7f29\uff0c\u4e0d\u8981\u4fee\u6539\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u540d\u79f0\uff0c\u8fd9\u6837\u64cd\u4f5c\u90fd\u662f\u4e3a\u4e86\u4fdd\u969c\u540e\u7eed\u6267\u884c\u811a\u672c\u8def\u5f84\u6b63\u786e\u3002 \u6253\u5f00\u7ec8\u7aef\uff0c\u5f00\u59cb\u6267\u884c\u547d\u4ee4\u7834\u89e3\uff0c\u4f5c\u8005\u63d0\u4f9b\u7684\u4e00\u952e\u7834\u89e3\u811a\u672c\u6709\u70b9\u95ee\u9898\uff0c\u6240\u4ee5 install.sh \u6587\u4ef6\u5ffd\u7565\u5373\u53ef\uff0c\u6211\u4eec\u624b\u52a8\u6267\u884c\u547d\u4ee4\u7834\u89e3 \u8fdb\u5165\u7834\u89e3\u8865\u4e01\u7684\u76ee\u5f55 \u6740\u6389 pd \u7684\u8fdb\u7a0b \u590d\u5236\u7834\u89e3\u8865\u4e01\u6587\u4ef6\u5230 pd \u76ee\u5f55 (\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u793a\u8981\u8f93\u5165\u5bc6\u7801\u7684\u8bdd\u5c31\u8f93\u5165\u81ea\u5df1\u7535\u8111\u7684\u5bc6\u7801\u7136\u540e\u56de\u8f66) \u7b7e\u540d (\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u793a\u8981\u8f93\u5165\u5bc6\u7801\u7684\u8bdd\u5c31\u8f93\u5165\u81ea\u5df1\u7535\u8111\u7684\u5bc6\u7801\u7136\u540e\u56de\u8f66) \u521b\u5efa\u5e76\u7f16\u8f91\u6fc0\u6d3b\u79d8\u94a5\u6587\u4ef6 (\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u793a\u8981\u8f93\u5165\u5bc6\u7801\u7684\u8bdd\u5c31\u8f93\u5165\u81ea\u5df1\u7535\u8111\u7684\u5bc6\u7801\u7136\u540e\u56de\u8f66) \u81f3\u6b64\uff0c\u7834\u89e3\u5df2\u5b8c\u6210\uff0c\u518d\u6b21\u6253\u5f00 pd \u5c31\u4e0d\u4f1a\u5f39\u51fa\u6fc0\u6d3b\u5f39\u51fa\u4e86\u3002\\ ps\uff1a\u6062\u590d\u4e4b\u524d\u5907\u4efd\u7684\u865a\u62df\u673a\uff0c\u53ea\u8981\u5728\u521b\u5efa\u865a\u62df\u673a\u7684\u6d41\u7a0b\u90a3\u91cc\u9009\u62e9\u6253\u5f00\uff0c\u7136\u540e\u9009\u62e9\u4e4b\u524d\u5907\u4efd\u7684\u865a\u62df\u673a\u6587\u4ef6\u5373\u53ef\u3002 \u6fc0\u6d3b\u65b9\u5f0f 3 \u00b6 \u7531\u4e8e\u524d\u4e24\u79cd\u6fc0\u6d3b\u65b9\u5f0f\u6709\u4e00\u5c0f\u90e8\u5206\u670b\u53cb\u7684\u673a\u5668\u4e0a\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u62a5\u9519\u60c5\u51b5\uff0c\u6240\u4ee5\u8fd9\u8fb9\u53c8\u52a0\u4e0a\u4e86\u4e00\u79cd\u66f4\u76f4\u63a5\u7684\u65b9\u5f0f\u3002\\ tnt \u56e2\u961f\u4e5f\u51fa\u4e86\u4e00\u4e2a\u8fd9\u4e2a\u7248\u672c\u7684\u7834\u89e3\u7a0b\u5e8f\uff0c\u4e5f\u662f\u7528\u7684\u8fd9\u4e2a github \u5927\u4f6c\u63d0\u4f9b\u7684\u8d44\u6e90\u3002\\ \u5982\u679c\u524d\u4e24\u79cd\u65b9\u5f0f\u884c\u4e0d\u901a\u7684\uff0c\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u3002 \u4e0b\u8f7d\u5730\u5740\uff1a tnt \u7f51\u7ad9\u5730\u5740\uff1a https://appstorrent.ru/61-parallels-desktop.html \uff08\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u624d\u80fd\u8bbf\u95ee\uff09 Parallels Desktop 18.0.1-53056 Intel for macOS 11+\\ ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi Parallels Desktop 18.0.1-53056 U2B\\ Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h ps1\uff1atnt \u7f51\u7ad9\u4e0a\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b89\u88c5\u5305\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053 U2B \u662f\u4e2a\u5565\u7248\u672c\uff0c\u4e0d\u8fc7\u5efa\u8bae arm \u82af\u7247\u7684\u8fd8\u662f\u5148\u5b89\u88c5\u8fd9\u4e2a\u7248\u672c\u8bd5\u8bd5\uff0c\u6bd5\u7adf\u53e6\u5916\u90a3\u4e2a\u660e\u786e\u5199\u4e86\u662f intel \u7248\u672c\\ ps2\uff1a\u5efa\u8bae\u5b8c\u5168\u5378\u8f7d\u8001\u7248\u672c pd \u4e4b\u540e\u518d\u5b89\u88c5\u8fd9\u4e2a\u7248\u672c\\ ps3\uff1a\u8fd9\u79cd\u65b9\u5f0f\u535a\u4e3b\u6ca1\u8bd5\u8fc7\uff0c\u4e0d\u786e\u5b9a\u662f\u4e0d\u662f\u767e\u5206\u767e ok \u5176\u4ed6\u8865\u5145\u64cd\u4f5c \u00b6 \u914d\u7f6e host \u5c4f\u853d pd \u68c0\u6d4b\uff08\u4ee5\u9632\u4e07\u4e00\uff09\\ \u8865\u4e01\u4f5c\u8005\u539f\u8bdd\uff1a Parallels Desktop may upload client info or logs to server.\\ You can use a firewall block there domains.\\ Or use Hosts, AdGuardHome filter DNS resolve. \u5927\u6982\u5c31\u662f\u8bf4 pd \u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u68c0\u6d4b\u4f60\u672c\u5730\u7684 pd \u72b6\u6001\uff0c\u6700\u597d\u4f7f\u7528\u9632\u706b\u5899\u6216\u8005 host \u5c4f\u853d\u6389 pd \u7684\u68c0\u6d4b\uff0c\u4ee5\u9632\u54ea\u5929\u7834\u89e3\u5931\u6548\u3002 \u6211\u4eec\u8fd9\u8fb9\u91c7\u7528\u914d\u7f6e host \u7684\u65b9\u5f0f\uff0c\u6bd4\u8f83\u7b80\u5355\u3002 \u7f16\u8f91 host \u6587\u4ef6 \u5728\u6587\u4ef6\u6700\u540e\u9762\u52a0\u4e0a\u4ee5\u4e0b\u914d\u7f6e \u7136\u540e esc + :wq \u4fdd\u5b58\u4fee\u6539\u5373\u53ef \u4f7f\u7528 clash \u4ee3\u7406\u7684\u65f6\u5019\uff0c\u4f1a\u5bfc\u81f4 host \u914d\u7f6e\u5931\u6548\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e3a\uff1a\u5728 clash \u7684 yml \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4fee\u6539\u914d\u7f6e dns: enable: false\u3002 \u8fd9\u6837\u4fee\u6539\u4e4b\u540e host \u5c31\u80fd\u751f\u6548\u4e86\uff0c\u4f46\u662f\u5982\u679c clash \u8bbe\u7f6e\u4e86\u81ea\u52a8\u66f4\u65b0\u8ba2\u9605\u7684\u8bdd\uff0c\u66f4\u65b0\u8ba2\u9605\u7684\u65f6\u5019\u914d\u7f6e\u6587\u4ef6\u53c8\u4f1a\u88ab\u8986\u76d6\u6389\uff0c\u7740\u5b9e\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6ca1\u6709\u7279\u522b\u597d\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u4f30\u8ba1\u53ea\u80fd\u81ea\u5df1\u5199\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5b9a\u65f6\u4fee\u6539\u8fd9\u4e2a\u914d\u7f6e\u4e86\uff0c\u5b9a\u65f6\u4efb\u52a1\u6211\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\uff0c\u8be6\u89c1\u8fd9\u7bc7\u535a\u5ba2 https://luoxx.top/archives/mac-clash-yml-auto-update\u3002 \u8865\u5145\u4e00\u4e2a\u65b0\u7684\u66f4\u65b9\u4fbf\u7684\u9632\u6b62 host \u6587\u4ef6\u88ab\u4fee\u6539\u7684\u65b9\u6cd5\uff0c\u611f\u8c22\u7f51\u53cb ttkanni \u63d0\u4f9b\u7684\u65b9\u6cd5 \u6fc0\u6d3b\u51fa\u9519\u7684\u60c5\u51b5 \u00b6 \u6709\u4e00\u4e9b\u670b\u53cb\u6fc0\u6d3b\u65f6\u9047\u5230\u65e0\u6743\u9650\u7684\u95ee\u9898\uff0c\u6211\u8fd9\u8fb9\u59cb\u7ec8\u6ca1\u6cd5\u590d\u73b0\uff0c\u4e0d\u8fc7\u9047\u5230\u62a5\u9519\u4e4b\u540e\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u4ee5\u4e0b\u65b9\u6848 \u6587\u4ef6\u8d4b\u4e88\u6700\u9ad8\u7684\u6743\u9650 \u7ed9\u4e88\u7ec8\u7aef\u5168\u76d8\u8bbf\u95ee\u6743\u9650\\ \u8bbe\u7f6e-\u5b89\u5168\u6027\u4e0e\u9690\u79c1-\u9690\u79c1-\u5b8c\u5168\u78c1\u76d8\u8bbf\u95ee\u6743\u9650 \\ \u8fd9\u4e2a\u91cc\u9762\u52fe\u4e0a\u7ec8\u7aef\uff0c\u6ca1\u6709\u7684\u8bdd\u70b9\u51fb\u5de6\u4e0b\u89d2\u52a0\u53f7\u624b\u52a8\u6dfb\u52a0\u4e00\u4e0b\u7ec8\u7aef \u6548\u679c\u5c55\u793a \u00b6 \u5982\u679c\u4f60\u8fd8\u6709\u5176\u4ed6\u7591\u95ee\uff0c\u53ef\u4ee5\u5728\u4e0b\u65b9\u8bc4\u8bba\u533a\u7559\u8a00\uff0c\u535a\u4e3b\u770b\u5230\u4f1a\u5c3d\u5feb\u56de\u590d\u3002","title":"Parallels Desktop 18.0.1 53056 \u7834\u89e3\u6559\u7a0b\uff08pd18\u6c38\u4e45\u6388\u6743\uff09"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/#\u51c6\u5907\u5de5\u4f5c","text":"\u4e0b\u8f7d pd\\ \u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\uff1a https://download.parallels.com/desktop/v18/18.0.1-53056/ParallelsDesktop-18.0.1-53056.dmg \\ \u6211\u4e5f\u4e0a\u4f20\u4e86\u4e00\u4efd\u5b89\u88c5\u5305\u5230\u4e91\u76d8\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u4e0b\u8f7d\uff08\u9ed8\u8ba4\u7f51\u76d8\u662f\u6211\u81ea\u5df1\u5efa\u7684\u7f51\u76d8\uff0c\u901f\u5ea6\u4e0d\u4f1a\u5f88\u5feb\uff0c\u6709\u767e\u5ea6\u7f51\u76d8\u4f1a\u5458\u7684\u53ef\u4ee5\u7528\u767e\u5ea6\u7f51\u76d8\u94fe\u63a5\u4e0b\u8f7d\uff09\u3002\\ ParallelsDesktop-18.0.1-53056.dmg \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aw1ziln \\ ParallelsDesktop-18.0.1-53056.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1av61h","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/#\u6fc0\u6d3b\u65b9\u5f0f-1","text":"github \u4f5c\u8005\u66f4\u65b0\u4e86\u6fc0\u6d3b\u811a\u672c\uff0c\u5e94\u8be5\u662f\u53ef\u4ee5\u76f4\u63a5\u4e00\u952e\u6fc0\u6d3b\u4e86\uff0c\u5927\u5bb6\u53ef\u4ee5\u5148\u8bd5\u4e00\u4e0b\uff0c\u4e0d\u884c\u518d\u4f7f\u7528 \u6fc0\u6d3b\u65b9\u5f0f2 \u65b0\u7684\u7834\u89e3\u8865\u4e01\u4e0b\u8f7d\u5730\u5740\\ ParallelsDesktopCrack-main.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1afpe9z1 \u4f7f\u7528\u65b9\u6cd5\\ \u4e0b\u8f7d\u540e\u89e3\u538b\uff0c\u7136\u540e cd \u8fdb\u5165\u89e3\u538b\u540e\u7684\u76ee\u5f55\uff0c\u7136\u540e\u6267\u884c chmod +x ./install.sh && sudo ./install.sh \u547d\u4ee4\u5373\u53ef\u3002\\ ps\uff1a\u6267\u884c\u8be5\u547d\u4ee4\u4f1a\u9700\u8981\u8f93\u5165\u5bc6\u7801\u4ee5\u6388\u6743\u3002","title":"\u6fc0\u6d3b\u65b9\u5f0f 1"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/#\u6fc0\u6d3b\u65b9\u5f0f-2","text":"\u4e0b\u8f7d\u7834\u89e3\u8865\u4e01\\ \u4e3a\u4e86\u65b9\u4fbf\u65e0\u6cd5\u8bbf\u95ee github \u7684\u540c\u5b66\u4e0b\u8f7d\uff0c\u6211\u8fd9\u91cc\u4e5f\u4e0a\u4f20\u4e86\u4e00\u4efd\u5230\u4e91\u76d8\\ ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf ParallelsDesktop_18.0.1.53056_Patch.zip \u6765\u6e90\uff1a\u9ed8\u8ba4\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1aea5jdf \u5982\u679c\u5b89\u88c5\u8fc7 pd17 \u6216\u8005\u66f4\u65e9\u7248\u672c\uff0c\u53ef\u4ee5\u5b8c\u5168\u5378\u8f7d\u4ee5\u786e\u4fdd\u4e4b\u540e\u80fd\u6210\u529f\u6fc0\u6d3b\u3002\uff08\u53ef\u9009\uff0c\u4e0d\u5378\u8f7d\u4e5f\u884c\uff0c\u4e0d\u8fc7\u53ef\u80fd\u4f1a\u6709\u5751\uff09\\ \u5efa\u8bae\u4f7f\u7528 App Cleaner \u6765\u5378\u8f7d\uff0c\u8fd9\u6837\u5378\u8f7d\u7684\u6bd4\u8f83\u5e72\u51c0\\ ps\uff1a \u5378\u8f7d\u4e4b\u524d\u8bf7\u5148\u5907\u4efd\u597d\u81ea\u5df1\u7684\u865a\u62df\u673a \uff0c\u4e0d\u7136\u5378\u8f7d\u5b8c\u5c31\u5565\u90fd\u6ca1\u4e86\uff0c\u865a\u62df\u673a\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\u4e3a ~/Parallels \u3002 \u5c31\u662f\u5982\u4e0b\u56fe\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u590d\u5236\u4e00\u4efd\u5230\u5176\u4ed6\u5730\u65b9\u4fdd\u5b58\u597d\u3002\\ \u4e0b\u8f7d pd18 \u5b89\u88c5\u6587\u4ef6\uff0c\u5b89\u88c5\uff0c\u5b89\u88c5\u4e4b\u540e\u5230\u6fc0\u6d3b\u90a3\u4e00\u6b65\u5c31\u4e0d\u7528\u7ee7\u7eed\u8d70\u4e86\uff0c\u9000\u51fa pd\u3002 \u4e0b\u8f7d\u7834\u89e3\u8865\u4e01\u5230 \u4e0b\u8f7d\u76ee\u5f55 \uff0c\u4e5f\u5c31\u662f ~/Downloads , \u7136\u540e\u89e3\u538b\u7f29\uff0c\u4e0d\u8981\u4fee\u6539\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u540d\u79f0\uff0c\u8fd9\u6837\u64cd\u4f5c\u90fd\u662f\u4e3a\u4e86\u4fdd\u969c\u540e\u7eed\u6267\u884c\u811a\u672c\u8def\u5f84\u6b63\u786e\u3002 \u6253\u5f00\u7ec8\u7aef\uff0c\u5f00\u59cb\u6267\u884c\u547d\u4ee4\u7834\u89e3\uff0c\u4f5c\u8005\u63d0\u4f9b\u7684\u4e00\u952e\u7834\u89e3\u811a\u672c\u6709\u70b9\u95ee\u9898\uff0c\u6240\u4ee5 install.sh \u6587\u4ef6\u5ffd\u7565\u5373\u53ef\uff0c\u6211\u4eec\u624b\u52a8\u6267\u884c\u547d\u4ee4\u7834\u89e3 \u8fdb\u5165\u7834\u89e3\u8865\u4e01\u7684\u76ee\u5f55 \u6740\u6389 pd \u7684\u8fdb\u7a0b \u590d\u5236\u7834\u89e3\u8865\u4e01\u6587\u4ef6\u5230 pd \u76ee\u5f55 (\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u793a\u8981\u8f93\u5165\u5bc6\u7801\u7684\u8bdd\u5c31\u8f93\u5165\u81ea\u5df1\u7535\u8111\u7684\u5bc6\u7801\u7136\u540e\u56de\u8f66) \u7b7e\u540d (\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u793a\u8981\u8f93\u5165\u5bc6\u7801\u7684\u8bdd\u5c31\u8f93\u5165\u81ea\u5df1\u7535\u8111\u7684\u5bc6\u7801\u7136\u540e\u56de\u8f66) \u521b\u5efa\u5e76\u7f16\u8f91\u6fc0\u6d3b\u79d8\u94a5\u6587\u4ef6 (\u6267\u884c\u547d\u4ee4\u65f6\u63d0\u793a\u8981\u8f93\u5165\u5bc6\u7801\u7684\u8bdd\u5c31\u8f93\u5165\u81ea\u5df1\u7535\u8111\u7684\u5bc6\u7801\u7136\u540e\u56de\u8f66) \u81f3\u6b64\uff0c\u7834\u89e3\u5df2\u5b8c\u6210\uff0c\u518d\u6b21\u6253\u5f00 pd \u5c31\u4e0d\u4f1a\u5f39\u51fa\u6fc0\u6d3b\u5f39\u51fa\u4e86\u3002\\ ps\uff1a\u6062\u590d\u4e4b\u524d\u5907\u4efd\u7684\u865a\u62df\u673a\uff0c\u53ea\u8981\u5728\u521b\u5efa\u865a\u62df\u673a\u7684\u6d41\u7a0b\u90a3\u91cc\u9009\u62e9\u6253\u5f00\uff0c\u7136\u540e\u9009\u62e9\u4e4b\u524d\u5907\u4efd\u7684\u865a\u62df\u673a\u6587\u4ef6\u5373\u53ef\u3002","title":"\u6fc0\u6d3b\u65b9\u5f0f 2"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/#\u6fc0\u6d3b\u65b9\u5f0f-3","text":"\u7531\u4e8e\u524d\u4e24\u79cd\u6fc0\u6d3b\u65b9\u5f0f\u6709\u4e00\u5c0f\u90e8\u5206\u670b\u53cb\u7684\u673a\u5668\u4e0a\u4f1a\u6709\u5404\u79cd\u5404\u6837\u7684\u62a5\u9519\u60c5\u51b5\uff0c\u6240\u4ee5\u8fd9\u8fb9\u53c8\u52a0\u4e0a\u4e86\u4e00\u79cd\u66f4\u76f4\u63a5\u7684\u65b9\u5f0f\u3002\\ tnt \u56e2\u961f\u4e5f\u51fa\u4e86\u4e00\u4e2a\u8fd9\u4e2a\u7248\u672c\u7684\u7834\u89e3\u7a0b\u5e8f\uff0c\u4e5f\u662f\u7528\u7684\u8fd9\u4e2a github \u5927\u4f6c\u63d0\u4f9b\u7684\u8d44\u6e90\u3002\\ \u5982\u679c\u524d\u4e24\u79cd\u65b9\u5f0f\u884c\u4e0d\u901a\u7684\uff0c\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u3002 \u4e0b\u8f7d\u5730\u5740\uff1a tnt \u7f51\u7ad9\u5730\u5740\uff1a https://appstorrent.ru/61-parallels-desktop.html \uff08\u9700\u8981\u79d1\u5b66\u4e0a\u7f51\u624d\u80fd\u8bbf\u95ee\uff09 Parallels Desktop 18.0.1-53056 Intel for macOS 11+\\ ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi ParallelsDesktop-18_0_1-53056_by_Day.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a36hi Parallels Desktop 18.0.1-53056 U2B\\ Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h Parallels_Desktop_18_0_1-53056_U2B.dmg \u6765\u6e90\uff1a\u767e\u5ea6\u7f51\u76d8 | \u63d0\u53d6\u7801\uff1a2r3h ps1\uff1atnt \u7f51\u7ad9\u4e0a\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b89\u88c5\u5305\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053 U2B \u662f\u4e2a\u5565\u7248\u672c\uff0c\u4e0d\u8fc7\u5efa\u8bae arm \u82af\u7247\u7684\u8fd8\u662f\u5148\u5b89\u88c5\u8fd9\u4e2a\u7248\u672c\u8bd5\u8bd5\uff0c\u6bd5\u7adf\u53e6\u5916\u90a3\u4e2a\u660e\u786e\u5199\u4e86\u662f intel \u7248\u672c\\ ps2\uff1a\u5efa\u8bae\u5b8c\u5168\u5378\u8f7d\u8001\u7248\u672c pd \u4e4b\u540e\u518d\u5b89\u88c5\u8fd9\u4e2a\u7248\u672c\\ ps3\uff1a\u8fd9\u79cd\u65b9\u5f0f\u535a\u4e3b\u6ca1\u8bd5\u8fc7\uff0c\u4e0d\u786e\u5b9a\u662f\u4e0d\u662f\u767e\u5206\u767e ok","title":"\u6fc0\u6d3b\u65b9\u5f0f 3"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/#\u5176\u4ed6\u8865\u5145\u64cd\u4f5c","text":"\u914d\u7f6e host \u5c4f\u853d pd \u68c0\u6d4b\uff08\u4ee5\u9632\u4e07\u4e00\uff09\\ \u8865\u4e01\u4f5c\u8005\u539f\u8bdd\uff1a Parallels Desktop may upload client info or logs to server.\\ You can use a firewall block there domains.\\ Or use Hosts, AdGuardHome filter DNS resolve. \u5927\u6982\u5c31\u662f\u8bf4 pd \u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u68c0\u6d4b\u4f60\u672c\u5730\u7684 pd \u72b6\u6001\uff0c\u6700\u597d\u4f7f\u7528\u9632\u706b\u5899\u6216\u8005 host \u5c4f\u853d\u6389 pd \u7684\u68c0\u6d4b\uff0c\u4ee5\u9632\u54ea\u5929\u7834\u89e3\u5931\u6548\u3002 \u6211\u4eec\u8fd9\u8fb9\u91c7\u7528\u914d\u7f6e host \u7684\u65b9\u5f0f\uff0c\u6bd4\u8f83\u7b80\u5355\u3002 \u7f16\u8f91 host \u6587\u4ef6 \u5728\u6587\u4ef6\u6700\u540e\u9762\u52a0\u4e0a\u4ee5\u4e0b\u914d\u7f6e \u7136\u540e esc + :wq \u4fdd\u5b58\u4fee\u6539\u5373\u53ef \u4f7f\u7528 clash \u4ee3\u7406\u7684\u65f6\u5019\uff0c\u4f1a\u5bfc\u81f4 host \u914d\u7f6e\u5931\u6548\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e3a\uff1a\u5728 clash \u7684 yml \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4fee\u6539\u914d\u7f6e dns: enable: false\u3002 \u8fd9\u6837\u4fee\u6539\u4e4b\u540e host \u5c31\u80fd\u751f\u6548\u4e86\uff0c\u4f46\u662f\u5982\u679c clash \u8bbe\u7f6e\u4e86\u81ea\u52a8\u66f4\u65b0\u8ba2\u9605\u7684\u8bdd\uff0c\u66f4\u65b0\u8ba2\u9605\u7684\u65f6\u5019\u914d\u7f6e\u6587\u4ef6\u53c8\u4f1a\u88ab\u8986\u76d6\u6389\uff0c\u7740\u5b9e\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6ca1\u6709\u7279\u522b\u597d\u7684\u89e3\u51b3\u529e\u6cd5\uff0c\u4f30\u8ba1\u53ea\u80fd\u81ea\u5df1\u5199\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5b9a\u65f6\u4fee\u6539\u8fd9\u4e2a\u914d\u7f6e\u4e86\uff0c\u5b9a\u65f6\u4efb\u52a1\u6211\u81ea\u5df1\u5199\u4e86\u4e00\u4e2a\uff0c\u8be6\u89c1\u8fd9\u7bc7\u535a\u5ba2 https://luoxx.top/archives/mac-clash-yml-auto-update\u3002 \u8865\u5145\u4e00\u4e2a\u65b0\u7684\u66f4\u65b9\u4fbf\u7684\u9632\u6b62 host \u6587\u4ef6\u88ab\u4fee\u6539\u7684\u65b9\u6cd5\uff0c\u611f\u8c22\u7f51\u53cb ttkanni \u63d0\u4f9b\u7684\u65b9\u6cd5","title":"\u5176\u4ed6\u8865\u5145\u64cd\u4f5c"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/#\u6fc0\u6d3b\u51fa\u9519\u7684\u60c5\u51b5","text":"\u6709\u4e00\u4e9b\u670b\u53cb\u6fc0\u6d3b\u65f6\u9047\u5230\u65e0\u6743\u9650\u7684\u95ee\u9898\uff0c\u6211\u8fd9\u8fb9\u59cb\u7ec8\u6ca1\u6cd5\u590d\u73b0\uff0c\u4e0d\u8fc7\u9047\u5230\u62a5\u9519\u4e4b\u540e\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u4ee5\u4e0b\u65b9\u6848 \u6587\u4ef6\u8d4b\u4e88\u6700\u9ad8\u7684\u6743\u9650 \u7ed9\u4e88\u7ec8\u7aef\u5168\u76d8\u8bbf\u95ee\u6743\u9650\\ \u8bbe\u7f6e-\u5b89\u5168\u6027\u4e0e\u9690\u79c1-\u9690\u79c1-\u5b8c\u5168\u78c1\u76d8\u8bbf\u95ee\u6743\u9650 \\ \u8fd9\u4e2a\u91cc\u9762\u52fe\u4e0a\u7ec8\u7aef\uff0c\u6ca1\u6709\u7684\u8bdd\u70b9\u51fb\u5de6\u4e0b\u89d2\u52a0\u53f7\u624b\u52a8\u6dfb\u52a0\u4e00\u4e0b\u7ec8\u7aef","title":"\u6fc0\u6d3b\u51fa\u9519\u7684\u60c5\u51b5"},{"location":"5%20%E6%9D%82/Parallels%20Desktop%2018.0.1%2053056%20%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%EF%BC%88pd18%E6%B0%B8%E4%B9%85%E6%8E%88%E6%9D%83%EF%BC%89/#\u6548\u679c\u5c55\u793a","text":"\u5982\u679c\u4f60\u8fd8\u6709\u5176\u4ed6\u7591\u95ee\uff0c\u53ef\u4ee5\u5728\u4e0b\u65b9\u8bc4\u8bba\u533a\u7559\u8a00\uff0c\u535a\u4e3b\u770b\u5230\u4f1a\u5c3d\u5feb\u56de\u590d\u3002","title":"\u6548\u679c\u5c55\u793a"},{"location":"Linux/Ubuntu%20%E5%AE%89%E8%A3%85%20clashx/","text":"","title":"Ubuntu \u5b89\u88c5 clashx"},{"location":"Linux/Ubuntu%20%E5%AE%89%E8%A3%85%20ssh/","text":"\u672c\u6587\u7531 \u7b80\u60a6 SimpRead \u8f6c\u7801\uff0c \u539f\u6587\u5730\u5740 blog.schwarzeni.com \u5f7b\u5e95\u544a\u522b\u56fe\u5f62\u754c\u9762\uff01 \u5f7b\u5e95\u544a\u522b\u56fe\u5f62\u754c\u9762\uff01 \u73af\u5883 \u00b6 MacOS v10.14 Parallels Desktop v13.2 Ubuntu v17.04 \u9996\u5148\u9700\u8981\u77e5\u9053\u672c\u673a\u7684 ip \u5730\u5740\uff0c\u9700\u8981\u4f7f\u7528\u5230 ifconfig \u5de5\u5177 Text Only 1 2 3 4 5 # \u9996\u5148\u4e0b\u8f7d\u76f8\u5e94\u7684\u5de5\u5177\u5305 sudo apt-get install net-tools # \u8f93\u5165\u547d\u4ee4\u67e5\u770b ifconfig \u5e94\u8be5\u5c31\u5728\u524d\u9762\u51e0\u884c\u5c31\u4f1a\u6709\u4e00\u4e2a IP \u5730\u5740\uff0c\u6211\u7684\u662f 10.211.55.24 ok\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u7ec8\u7aef\u901a\u8fc7 ssh \u8fdb\u884c\u767b\u5f55\u4e86 Text Only 1 2 # \u7528\u6237\u540d IP\u5730\u5740 ssh schwarzeni@10.211.55.24 \u4e00\u4e2a\u95ee\u9898 \u00b6 \u5982\u679c\u78b0\u5230\u4e86\u5982\u4e0b\u7684\u62a5\u9519 Text Only 1 port 22: Connection refused \u89e3\u51b3\u65b9\u6848\u5982\u4e0b \u9996\u5148\uff0c\u8fd9\u9700\u8981\u5728\u865a\u62df\u673a\u7684\u7ec8\u7aef\u5185\u64cd\u4f5c \u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u5373\u53ef Text Only 1 2 3 sudo apt-get update sudo apt-get install openssh-server sudo ufw allow 22 \u53c2\u8003\u94fe\u63a5 \u00b6 Why am I getting a \u201cport 22: Connection refused\u201d error? Ubuntu17.04 \u67e5\u770b\u672c\u673a IP","title":"Ubuntu \u5b89\u88c5 ssh"},{"location":"Linux/Ubuntu%20%E5%AE%89%E8%A3%85%20ssh/#\u73af\u5883","text":"MacOS v10.14 Parallels Desktop v13.2 Ubuntu v17.04 \u9996\u5148\u9700\u8981\u77e5\u9053\u672c\u673a\u7684 ip \u5730\u5740\uff0c\u9700\u8981\u4f7f\u7528\u5230 ifconfig \u5de5\u5177 Text Only 1 2 3 4 5 # \u9996\u5148\u4e0b\u8f7d\u76f8\u5e94\u7684\u5de5\u5177\u5305 sudo apt-get install net-tools # \u8f93\u5165\u547d\u4ee4\u67e5\u770b ifconfig \u5e94\u8be5\u5c31\u5728\u524d\u9762\u51e0\u884c\u5c31\u4f1a\u6709\u4e00\u4e2a IP \u5730\u5740\uff0c\u6211\u7684\u662f 10.211.55.24 ok\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u7ec8\u7aef\u901a\u8fc7 ssh \u8fdb\u884c\u767b\u5f55\u4e86 Text Only 1 2 # \u7528\u6237\u540d IP\u5730\u5740 ssh schwarzeni@10.211.55.24","title":"\u73af\u5883"},{"location":"Linux/Ubuntu%20%E5%AE%89%E8%A3%85%20ssh/#\u4e00\u4e2a\u95ee\u9898","text":"\u5982\u679c\u78b0\u5230\u4e86\u5982\u4e0b\u7684\u62a5\u9519 Text Only 1 port 22: Connection refused \u89e3\u51b3\u65b9\u6848\u5982\u4e0b \u9996\u5148\uff0c\u8fd9\u9700\u8981\u5728\u865a\u62df\u673a\u7684\u7ec8\u7aef\u5185\u64cd\u4f5c \u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u5373\u53ef Text Only 1 2 3 sudo apt-get update sudo apt-get install openssh-server sudo ufw allow 22","title":"\u4e00\u4e2a\u95ee\u9898"},{"location":"Linux/Ubuntu%20%E5%AE%89%E8%A3%85%20ssh/#\u53c2\u8003\u94fe\u63a5","text":"Why am I getting a \u201cport 22: Connection refused\u201d error? Ubuntu17.04 \u67e5\u770b\u672c\u673a IP","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"Webclip/%E6%97%B6%E5%BA%8F%E9%A2%84%E6%B5%8B%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E6%A8%A1%E5%9E%8B%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%81%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/","text":"\u672c\u6587\u7531 \u7b80\u60a6 SimpRead \u8f6c\u7801\uff0c \u539f\u6587\u5730\u5740 cloud.tencent.com \u65f6\u5e8f\u9884\u6d4b\u662f\u4e00\u7c7b\u7ecf\u5178\u7684\u95ee\u9898\uff0c\u5728\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u7814\u7a76\u548c\u5e94\u7528\u3002\u751a\u81f3\u8bf4\uff0c\u4e16\u95f4\u4e07\u7269\u52a0\u4e0a\u65f6\u95f4\u7ef4\u5ea6\u540e\u90fd\u53ef\u62bd\u8c61\u4e3a\u65f6\u95f4\u5e8f\u5217\u95ee\u9898\uff0c\u4f8b\u5982\u80a1\u7968\u4ef7\u683c\u3001\u5929\u6c14\u53d8\u5316\u7b49\u7b49\u3002\u5173\u4e8e\u65f6\u5e8f\u9884\u6d4b... \u5bfc\u8bfb \u65f6\u5e8f\u9884\u6d4b\u662f\u4e00\u7c7b\u7ecf\u5178\u7684\u95ee\u9898\uff0c\u5728\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u7814\u7a76\u548c\u5e94\u7528\u3002\u751a\u81f3\u8bf4\uff0c\u4e16\u95f4\u4e07\u7269\u52a0\u4e0a\u65f6\u95f4\u7ef4\u5ea6\u540e\u90fd\u53ef\u62bd\u8c61\u4e3a\u65f6\u95f4\u5e8f\u5217\u95ee\u9898\uff0c\u4f8b\u5982\u80a1\u7968\u4ef7\u683c\u3001\u5929\u6c14\u53d8\u5316\u7b49\u7b49\u3002\u5173\u4e8e\u65f6\u5e8f\u9884\u6d4b\u95ee\u9898\u7684\u76f8\u5173\u7406\u8bba\u4e5f\u6781\u4e3a\u5e7f\u6cdb\uff0c\u9664\u4e86\u7ecf\u5178\u7684\u5404\u79cd\u7edf\u8ba1\u5b66\u6a21\u578b\u5916\uff0c\u5f53\u4e0b\u706b\u70ed\u7684\u673a\u5668\u5b66\u4e60\u4ee5\u53ca\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u4e5f\u90fd\u53ef\u4ee5\u7528\u4e8e\u65f6\u5e8f\u9884\u6d4b\u95ee\u9898\u7684\u5efa\u6a21\u3002\u4eca\u5929\uff0c\u672c\u6587\u5c31\u6765\u4ecb\u7ecd\u4e09\u79cd\u65b9\u5f0f\u7684\u7b80\u5355\u5e94\u7528\uff0c\u5e76\u5728\u4e00\u4e2a\u771f\u5b9e\u7684\u65f6\u5e8f\u6570\u636e\u96c6\u4e0a\u52a0\u4ee5\u9a8c\u8bc1\u3002 \u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\uff0c\u5176\u4e3b\u8981\u4efb\u52a1\u662f\u57fa\u4e8e\u67d0\u4e00\u6307\u6807\u7684\u5386\u53f2\u6570\u636e\u6765\u9884\u6d4b\u5176\u5728\u672a\u6765\u7684\u53d6\u503c\uff0c\u4f8b\u5982\u4e0a\u56fe\u4e2d\u7684\u66f2\u7ebf\u8bb0\u5f55\u4e86 1949 \u5e74\u81f3 1960 \u5e74\u5171 12 \u5e74 144 \u4e2a\u6708\u4efd\u7684\u6bcf\u6708\u822a\u73ed\u4e58\u5ba2\u6570\uff08\u5177\u4f53\u5355\u4f4d\u672a\u7ecf\u8003\u8bc1\uff09\uff0c\u90a3\u4e48\u65f6\u5e8f\u9884\u6d4b\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\uff1a\u7ed9\u5b9a\u524d 9 \u5e74\u7684\u5386\u53f2\u6570\u636e\uff0c\u4f8b\u5982 1949-1957\uff0c\u90a3\u4e48\u80fd\u5426\u9884\u6d4b\u51fa 1958-1960 \u4e24\u5e74\u95f4\u7684\u4e58\u5ba2\u6570\u91cf\u7684\u95ee\u9898\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u5927\u6982\u5f53\u524d\u4e3b\u6d41\u7684\u89e3\u51b3\u65b9\u5f0f\u6709 4 \u79cd\uff1a \u7edf\u8ba1\u5b66\u6a21\u578b\uff0c\u8f83\u4e3a\u7ecf\u5178\u7684 AR \u7cfb\u5217\uff0c\u5305\u62ec AR\u3001MA\u3001ARMA \u4ee5\u53ca ARIMA \u7b49\uff0c\u53e6\u5916 Facebook\uff08\u51c6\u786e\u7684\u8bb2\uff0c\u73b0\u5728\u5e94\u8be5\u53eb Meta \u4e86\uff09\u63a8\u51fa\u7684 Prophet \u6a21\u578b\uff0c\u5176\u5b9e\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u79cd\u7edf\u8ba1\u5b66\u6a21\u578b\uff0c\u53ea\u4e0d\u8fc7\u662f\u4f20\u7edf\u7684\u8d8b\u52bf\u3001\u5468\u671f\u6027\u6210\u5206\u7684\u57fa\u7840\u4e0a\uff0c\u8fdb\u4e00\u6b65\u7ec6\u5316\u8003\u8651\u4e86\u8282\u5047\u65e5\u3001\u65f6\u5e8f\u62d0\u70b9\u7b49\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u4ee5\u671f\u5e26\u6765\u66f4\u4e3a\u7cbe\u51c6\u7684\u65f6\u5e8f\u89c4\u5f8b\u523b\u753b\uff1b \u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u5728\u6709\u76d1\u7763\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u56de\u5f52\u95ee\u9898\u4e3b\u8981\u89e3\u51b3\u7684\u662f\u57fa\u4e8e\u4e00\u7cfb\u5217 Feature \u6765\u9884\u6d4b\u67d0\u4e00 Label \u7684\u53ef\u80fd\u53d6\u503c\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u5f53\u4ee5\u5386\u53f2\u6570\u636e\u4f5c\u4e3a Feature \u65f6\u5176\u5b9e\u81ea\u7136\u4e5f\u5c31\u53ef\u4ee5\u5c06\u65f6\u5e8f\u9884\u6d4b\u95ee\u9898\u62bd\u8c61\u4e3a\u56de\u5f52\u95ee\u9898\uff0c\u4ece\u8fd9\u4e00\u89d2\u5ea6\u8bb2\uff0c\u6240\u6709\u56de\u5f52\u6a21\u578b\u90fd\u53ef\u7528\u4e8e\u89e3\u51b3\u65f6\u5e8f\u9884\u6d4b\u3002\u5173\u4e8e\u7528\u673a\u5668\u5b66\u4e60\u62bd\u8c61\u65f6\u5e8f\u9884\u6d4b\uff0c\u63a8\u8350\u67e5\u770b\u8fd9\u7bc7\u8bba\u6587\u300aMachine Learning Strategies for Time Series Forecasting\u300b\uff1b \u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u6df1\u5ea6\u5b66\u4e60\u4e3b\u6d41\u7684\u5e94\u7528\u573a\u666f\u5f53\u5c5e CV \u548c NLP \u4e24\u5927\u9886\u57df\uff0c\u5176\u4e2d\u540e\u8005\u5c31\u662f\u4e13\u95e8\u7528\u4e8e\u89e3\u51b3\u5e8f\u5217\u95ee\u9898\u5efa\u6a21\u7684\u95ee\u9898\uff0c\u800c\u65f6\u95f4\u5e8f\u5217\u5f53\u7136\u5c5e\u4e8e\u5e8f\u5217\u6570\u636e\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\uff0c\u6240\u4ee5\u81ea\u7136\u53ef\u4ee5\u8fd0\u7528\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u6765\u5efa\u6a21\u65f6\u5e8f\u9884\u6d4b\uff1b \u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\uff0c\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\u662f\u7528\u4e8e\u523b\u753b\u76f8\u90bb\u72b6\u6001\u8f6c\u6362\u95f4\u7684\u7ecf\u5178\u62bd\u8c61\uff0c\u800c\u9690\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\u5219\u5728\u5176\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u589e\u52a0\u4e86\u9690\u85cf\u72b6\u6001\uff0c\u6765\u4ee5\u6b64\u4e30\u5bcc\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u3002\u4f46\u5176\u4e00\u5927\u5047\u8bbe\u6761\u4ef6\u662f\u672a\u6765\u72b6\u6001\u4ec5\u4e0e\u5f53\u524d\u72b6\u6001\u6709\u5173\uff0c\u800c\u4e0d\u5229\u4e8e\u5229\u7528\u591a\u4e2a\u5386\u53f2\u72b6\u6001\u6765\u5171\u540c\u53c2\u4e0e\u9884\u6d4b\uff0c\u8f83\u4e3a\u5e38\u7528\u7684\u53ef\u80fd\u5c31\u662f\u5929\u6c14\u9884\u62a5\u7684\u4f8b\u5b50\u4e86\u3002 \u672c\u6587\u4e3b\u8981\u8003\u8651\u524d\u4e09\u79cd\u65f6\u5e8f\u9884\u6d4b\u5efa\u6a21\u65b9\u6cd5\uff0c\u5e76\u5206\u522b\u9009\u53d6\uff1a1\uff09Prophet \u6a21\u578b\uff0c2\uff09RandomForest \u56de\u5f52\u6a21\u578b\uff0c3\uff09LSTM \u4e09\u79cd\u65b9\u6848\u52a0\u4ee5\u6d4b\u8bd5\u3002 \u9996\u5148\u5728\u8fd9\u4e2a\u822a\u73ed\u4e58\u5ba2\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f9d\u6b21\u5bf9\u6bd4\u4e09\u4e2a\u6240\u9009\u6a21\u578b\u7684\u9884\u6d4b\u7cbe\u5ea6\u3002\u8be5\u6570\u636e\u96c6\u5171\u6709 12 \u5e74\u95f4\u6bcf\u4e2a\u6708\u7684\u4e58\u5ba2\u6570\u91cf\uff0c\u4ee5 1958 \u5e74 1 \u6708\u4f5c\u4e3a\u5207\u5206\u754c\u9762\u5212\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff0c\u5373\u524d 9 \u5e74\u7684\u6570\u636e\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u540e 3 \u5e74\u7684\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\u9a8c\u8bc1\u6a21\u578b\u6548\u679c\u3002\u6570\u636e\u96c6\u5207\u5206\u540e\u7684\u793a\u610f\u56fe\u5982\u4e0b\uff1a Python 1 2 3 4 5 6 df = pd . read_csv ( \"AirPassengers.csv\" , parse_dates = [ \"date\" ]) . rename ( columns = { \"date\" : \"ds\" , \"value\" : \"y\" }) X_train = df [ df . ds < \"19580101\" ] X_test = df [ df . ds >= \"19580101\" ] plt . plot ( X_train [ 'ds' ], X_train [ 'y' ]) plt . plot ( X_test [ 'ds' ], X_test [ 'y' ]) 1. Prophet \u6a21\u578b\u9884\u6d4b \u00b6 Prophet \u662f\u4e00\u4e2a\u9ad8\u5ea6\u5c01\u88c5\u597d\u7684\u65f6\u5e8f\u9884\u6d4b\u6a21\u578b\uff0c\u63a5\u53d7\u4e00\u4e2a DataFrame \u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff08\u8981\u6c42\u6709 ds \u548c y \u4e24\u4e2a\u5b57\u6bb5\u5217\uff09\uff0c\u5728\u9884\u6d4b\u65f6\u4e5f\u63a5\u53d7\u4e00\u4e2a DataFrame\uff0c\u4f46\u6b64\u65f6\u53ea\u9700\u6709 ds \u5217\u5373\u53ef\uff0c\u5173\u4e8e\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u53c2\u8003\u5176\u5b98\u65b9\u6587\u6863\uff1a https://facebook.github.io/prophet/ \u3002\u6a21\u578b\u8bad\u7ec3\u53ca\u9884\u6d4b\u90e8\u5206\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a Text Only 1 2 3 4 5 6 from prophet import Prophet pro = Prophet() pro.fit(X_train) pred = pro.predict(X_test) pro.plot(pred) \u8bad\u7ec3\u540e\u7684\u7ed3\u679c\u793a\u610f\u56fe\u5982\u4e0b\uff1a \u5f53\u7136\uff0c\u8fd9\u662f\u901a\u8fc7 Prophet \u5185\u7f6e\u7684\u53ef\u89c6\u5316\u51fd\u6570\u7ed9\u51fa\u7684\u7ed3\u679c\uff0c\u4e5f\u53ef\u901a\u8fc7\u624b\u52a8\u7ed8\u5236\u6d4b\u8bd5\u96c6\u771f\u5b9e\u6807\u7b7e\u4e0e\u9884\u6d4b\u7ed3\u679c\u95f4\u7684\u5bf9\u6bd4\uff1a \u6613\u89c1\uff0c\u867d\u7136\u5e8f\u5217\u7684\u6574\u4f53\u8d70\u52bf\u4e0a\u5177\u6709\u826f\u597d\u7684\u62df\u5408\u7ed3\u679c\uff0c\u4f46\u5728\u5177\u4f53\u53d6\u503c\u4e0a\u5176\u5b9e\u5dee\u8ddd\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002 2. \u673a\u5668\u5b66\u4e60\u6a21\u578b \u00b6 \u8fd9\u91cc\u9009\u7528\u5e38\u5e38\u7528\u4f5c\u5404\u79cd baseline \u7684 RandomForest \u6a21\u578b\u3002\u5728\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u5b9e\u73b0\u65f6\u5e8f\u9884\u6d4b\u65f6\uff0c\u901a\u5e38\u9700\u8981\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u7684\u65b9\u5f0f\u6765\u63d0\u53d6\u7279\u5f81\u548c\u6807\u7b7e\uff0c\u800c\u540e\u5728\u5b9e\u73b0\u9884\u6d4b\u65f6\u5b9e\u9645\u4e0a\u4e5f\u9700\u6ed1\u52a8\u7684\u622a\u53d6\u6d4b\u8bd5\u96c6\u7279\u5f81\u5b9e\u73b0\u5355\u6b65\u9884\u6d4b\uff0c\u53c2\u8003\u8bba\u6587\u300aMachine Learning Strategies for Time Series Forecasting\u300b\u4e2d\u7684\u505a\u6cd5\uff0c\u8be5\u95ee\u9898\u53ef\u5927\u81f4\u63cf\u8ff0\u5982\u4e0b\uff1a \u636e\u6b64\uff0c\u8bbe\u7f6e\u7279\u5f81\u63d0\u53d6\u7a97\u53e3\u957f\u5ea6\u4e3a 12\uff0c\u6784\u5efa\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 data = df . copy () n = 12 for i in range ( 1 , n + 1 ): data [ 'ypre_' + str ( i )] = data [ 'y' ] . shift ( i ) data = data [[ 'ds' ] + [ 'ypre_' + str ( i ) for i in range ( n , 0 , - 1 )] + [ 'y' ]] # \u63d0\u53d6\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6 X_train = data [ data [ 'ds' ] < \"19580101\" ] . dropna ()[[ 'ypre_' + str ( i ) for i in range ( n , 0 , - 1 )]] y_train = data [ data [ 'ds' ] < \"19580101\" ] . dropna ()[[ 'y' ]] X_test = data [ data [ 'ds' ] >= \"19580101\" ] . dropna ()[[ 'ypre_' + str ( i ) for i in range ( n , 0 , - 1 )]] y_test = data [ data [ 'ds' ] >= \"19580101\" ] . dropna ()[[ 'y' ]] # \u6a21\u578b\u8bad\u7ec3\u548c\u9884\u6d4b rf = RandomForestRegressor ( n_estimators = 10 , max_depth = 5 ) rf . fit ( X_train , y_train ) y_pred = rf . predict ( X_test ) # \u7ed3\u679c\u5bf9\u6bd4\u7ed8\u56fe y_test . assign ( yhat = y_pred ) . plot () \u53ef\u89c1\uff0c\u9884\u6d4b\u6548\u679c\u4e5f\u8f83\u4e3a\u4e00\u822c\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u6700\u540e\u4e24\u5e74\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u4e0e\u771f\u5b9e\u503c\u5dee\u8ddd\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002\u7528\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u601d\u7ef4\u5f88\u5bb9\u6613\u89e3\u91ca\u8fd9\u4e00\u73b0\u8c61\uff1a\u968f\u673a\u68ee\u6797\u6a21\u578b\u5b9e\u9645\u4e0a\u662f\u5728\u6839\u636e\u8bad\u7ec3\u6570\u636e\u96c6\u6765\u5b66\u4e60\u66f2\u7ebf\u4e4b\u95f4\u7684\u89c4\u5f8b\uff0c\u7531\u4e8e\u8be5\u65f6\u5e8f\u6574\u4f53\u5448\u73b0\u968f\u65f6\u95f4\u589e\u957f\u7684\u8d8b\u52bf\uff0c\u6240\u4ee5\u5386\u53f2\u6570\u636e\u4e2d\u7684\u6700\u9ad8\u70b9\u4e5f\u4e0d\u8db3\u4ee5 cover \u4f4f\u672a\u6765\u7684\u8f83\u5927\u503c\uff0c\u56e0\u800c\u5728\u6d4b\u8bd5\u96c6\u4e2d\u8d85\u8fc7\u5386\u53f2\u6570\u636e\u7684\u6240\u6709\u6807\u7b7e\u5176\u5b9e\u90fd\u662f\u65e0\u6cd5\u62df\u5408\u7684\u3002 3. \u6df1\u5ea6\u5b66\u4e60 \u00b6 \u4e2d\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u5176\u5b9e\u6df1\u5ea6\u5b66\u4e60\u4e00\u822c\u8981\u6c42\u6570\u636e\u96c6\u8f83\u5927\u65f6\u624d\u80fd\u53d1\u6325\u5176\u4f18\u52bf\uff0c\u800c\u8fd9\u91cc\u7684\u6570\u636e\u96c6\u663e\u7136\u662f\u975e\u5e38\u5c0f\u7684\uff0c\u6240\u4ee5\u4ec5\u8bbe\u8ba1\u4e00\u4e2a\u6700\u4e3a\u7b80\u5355\u7684\u6a21\u578b\uff1a1 \u5c42 LSTM+1 \u5c42 Linear\u3002\u6a21\u578b\u642d\u5efa\u5982\u4e0b\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 class Model ( nn . Module ): def __init__ ( self ): super () . __init__ () self . rnn = nn . LSTM ( input_size = 1 , hidden_size = 10 , batch_first = True ) self . linear = nn . Linear ( 10 , 1 ) def forward ( self , x ): x , _ = self . rnn ( x ) x = x [:, - 1 , :] x = self . linear ( x ) return x \u6570\u636e\u96c6\u6784\u5efa\u601d\u8def\u6574\u4f53\u540c\u524d\u8ff0\u7684\u673a\u5668\u5b66\u4e60\u90e8\u5206\uff0c\u800c\u540e\uff0c\u6309\u7167\u8fdb\u884c\u6a21\u578b\u8bad\u7ec3 \u70bc\u4e39 \uff0c\u90e8\u5206\u7ed3\u679c\u5982\u4e0b\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 # \u6570\u636e\u96c6\u8f6c\u5316\u4e3a3D X_train_3d = torch . Tensor ( X_train . values ) . reshape ( * X_train . shape , 1 ) y_train_2d = torch . Tensor ( y_train . values ) . reshape ( * y_train . shape , 1 ) X_test_3d = torch . Tensor ( X_test . values ) . reshape ( * X_test . shape , 1 ) y_test_2d = torch . Tensor ( y_test . values ) . reshape ( * y_test . shape , 1 ) # \u6a21\u578b\u3001\u4f18\u5316\u5668\u3001\u8bc4\u4f30\u51c6\u5219 model = Model () creterion = nn . MSELoss () optimizer = optim . Adam ( model . parameters ()) # \u8bad\u7ec3\u8fc7\u7a0b for i in range ( 1000 ): out = model ( X_train_3d ) loss = creterion ( out , y_train_2d ) optimizer . zero_grad () loss . backward () optimizer . step () if ( i + 1 ) % 100 == 0 : y_pred = model ( X_test_3d ) loss_test = creterion ( y_pred , y_test_2d ) print ( i , loss . item (), loss_test . item ()) # \u8bad\u7ec3\u7ed3\u679c 99 65492.08984375 188633.796875 199 64814.4375 187436.4375 299 64462.09765625 186815.5 399 64142.70703125 186251.125 499 63835.5 185707.46875 599 63535.15234375 185175.1875 699 63239.39453125 184650.46875 799 62947.08203125 184131.21875 899 62657.484375 183616.203125 999 62370.171875 183104.671875 \u901a\u8fc7\u4e0a\u8ff0 1000 \u4e2a epoch\uff0c\u5927\u4f53\u53ef\u4ee5\u63a8\u65ad\u8be5\u6a21\u578b\u4e0d\u4f1a\u5f88\u597d\u7684\u62df\u5408\u4e86\uff0c\u6240\u4ee5\u679c\u65ad\u653e\u5f03\u5427\uff01 \u5f53\u7136\u5fc5\u987b\u6307\u51fa\u7684\u662f\uff0c\u4e0a\u8ff0\u6d4b\u8bd5\u6548\u679c\u53ea\u80fd\u8bf4\u660e 3 \u79cd\u65b9\u6848\u5728\u8be5\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u800c\u4e0d\u80fd\u4ee3\u8868\u8fd9\u4e00\u7c7b\u6a21\u578b\u5728\u7528\u4e8e\u65f6\u5e8f\u9884\u6d4b\u95ee\u9898\u65f6\u7684\u6027\u80fd\u3002\u5b9e\u9645\u4e0a\uff0c\u65f6\u5e8f\u9884\u6d4b\u95ee\u9898\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\u7684\u573a\u666f\uff0c\u6ca1\u6709\u653e\u4e4b\u56db\u6d77\u800c\u7686\u51c6\u7684\u597d\u6a21\u578b\uff0c\u5c31\u50cf \u201cNo Free Lunch\u201d \u4e00\u6837\uff01 \u672c\u6587\u4ec5\u662f\u4f5c\u4e3a\u65f6\u5e8f\u9884\u6d4b\u7cfb\u5217\u63a8\u6587\u7684\u4e00\u4e2a\u725b\u5200\u5c0f\u8bd5\uff0c\u540e\u7eed\u5c06\u4e0d\u5b9a\u671f\u66f4\u65b0\u5176\u4ed6\u76f8\u5173\u5fc3\u5f97\u548c\u603b\u7ed3\u3002","title":"\u65f6\u5e8f\u9884\u6d4b\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a\u7edf\u8ba1\u5b66\u6a21\u578b\u3001\u673a\u5668\u5b66\u4e60\u3001\u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"Webclip/%E6%97%B6%E5%BA%8F%E9%A2%84%E6%B5%8B%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E6%A8%A1%E5%9E%8B%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%81%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#1-prophet-\u6a21\u578b\u9884\u6d4b","text":"Prophet \u662f\u4e00\u4e2a\u9ad8\u5ea6\u5c01\u88c5\u597d\u7684\u65f6\u5e8f\u9884\u6d4b\u6a21\u578b\uff0c\u63a5\u53d7\u4e00\u4e2a DataFrame \u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff08\u8981\u6c42\u6709 ds \u548c y \u4e24\u4e2a\u5b57\u6bb5\u5217\uff09\uff0c\u5728\u9884\u6d4b\u65f6\u4e5f\u63a5\u53d7\u4e00\u4e2a DataFrame\uff0c\u4f46\u6b64\u65f6\u53ea\u9700\u6709 ds \u5217\u5373\u53ef\uff0c\u5173\u4e8e\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u53c2\u8003\u5176\u5b98\u65b9\u6587\u6863\uff1a https://facebook.github.io/prophet/ \u3002\u6a21\u578b\u8bad\u7ec3\u53ca\u9884\u6d4b\u90e8\u5206\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a Text Only 1 2 3 4 5 6 from prophet import Prophet pro = Prophet() pro.fit(X_train) pred = pro.predict(X_test) pro.plot(pred) \u8bad\u7ec3\u540e\u7684\u7ed3\u679c\u793a\u610f\u56fe\u5982\u4e0b\uff1a \u5f53\u7136\uff0c\u8fd9\u662f\u901a\u8fc7 Prophet \u5185\u7f6e\u7684\u53ef\u89c6\u5316\u51fd\u6570\u7ed9\u51fa\u7684\u7ed3\u679c\uff0c\u4e5f\u53ef\u901a\u8fc7\u624b\u52a8\u7ed8\u5236\u6d4b\u8bd5\u96c6\u771f\u5b9e\u6807\u7b7e\u4e0e\u9884\u6d4b\u7ed3\u679c\u95f4\u7684\u5bf9\u6bd4\uff1a \u6613\u89c1\uff0c\u867d\u7136\u5e8f\u5217\u7684\u6574\u4f53\u8d70\u52bf\u4e0a\u5177\u6709\u826f\u597d\u7684\u62df\u5408\u7ed3\u679c\uff0c\u4f46\u5728\u5177\u4f53\u53d6\u503c\u4e0a\u5176\u5b9e\u5dee\u8ddd\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002","title":"1. Prophet \u6a21\u578b\u9884\u6d4b"},{"location":"Webclip/%E6%97%B6%E5%BA%8F%E9%A2%84%E6%B5%8B%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E6%A8%A1%E5%9E%8B%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%81%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#2-\u673a\u5668\u5b66\u4e60\u6a21\u578b","text":"\u8fd9\u91cc\u9009\u7528\u5e38\u5e38\u7528\u4f5c\u5404\u79cd baseline \u7684 RandomForest \u6a21\u578b\u3002\u5728\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u5b9e\u73b0\u65f6\u5e8f\u9884\u6d4b\u65f6\uff0c\u901a\u5e38\u9700\u8981\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u7684\u65b9\u5f0f\u6765\u63d0\u53d6\u7279\u5f81\u548c\u6807\u7b7e\uff0c\u800c\u540e\u5728\u5b9e\u73b0\u9884\u6d4b\u65f6\u5b9e\u9645\u4e0a\u4e5f\u9700\u6ed1\u52a8\u7684\u622a\u53d6\u6d4b\u8bd5\u96c6\u7279\u5f81\u5b9e\u73b0\u5355\u6b65\u9884\u6d4b\uff0c\u53c2\u8003\u8bba\u6587\u300aMachine Learning Strategies for Time Series Forecasting\u300b\u4e2d\u7684\u505a\u6cd5\uff0c\u8be5\u95ee\u9898\u53ef\u5927\u81f4\u63cf\u8ff0\u5982\u4e0b\uff1a \u636e\u6b64\uff0c\u8bbe\u7f6e\u7279\u5f81\u63d0\u53d6\u7a97\u53e3\u957f\u5ea6\u4e3a 12\uff0c\u6784\u5efa\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 data = df . copy () n = 12 for i in range ( 1 , n + 1 ): data [ 'ypre_' + str ( i )] = data [ 'y' ] . shift ( i ) data = data [[ 'ds' ] + [ 'ypre_' + str ( i ) for i in range ( n , 0 , - 1 )] + [ 'y' ]] # \u63d0\u53d6\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6 X_train = data [ data [ 'ds' ] < \"19580101\" ] . dropna ()[[ 'ypre_' + str ( i ) for i in range ( n , 0 , - 1 )]] y_train = data [ data [ 'ds' ] < \"19580101\" ] . dropna ()[[ 'y' ]] X_test = data [ data [ 'ds' ] >= \"19580101\" ] . dropna ()[[ 'ypre_' + str ( i ) for i in range ( n , 0 , - 1 )]] y_test = data [ data [ 'ds' ] >= \"19580101\" ] . dropna ()[[ 'y' ]] # \u6a21\u578b\u8bad\u7ec3\u548c\u9884\u6d4b rf = RandomForestRegressor ( n_estimators = 10 , max_depth = 5 ) rf . fit ( X_train , y_train ) y_pred = rf . predict ( X_test ) # \u7ed3\u679c\u5bf9\u6bd4\u7ed8\u56fe y_test . assign ( yhat = y_pred ) . plot () \u53ef\u89c1\uff0c\u9884\u6d4b\u6548\u679c\u4e5f\u8f83\u4e3a\u4e00\u822c\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u6700\u540e\u4e24\u5e74\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u4e0e\u771f\u5b9e\u503c\u5dee\u8ddd\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\u3002\u7528\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u601d\u7ef4\u5f88\u5bb9\u6613\u89e3\u91ca\u8fd9\u4e00\u73b0\u8c61\uff1a\u968f\u673a\u68ee\u6797\u6a21\u578b\u5b9e\u9645\u4e0a\u662f\u5728\u6839\u636e\u8bad\u7ec3\u6570\u636e\u96c6\u6765\u5b66\u4e60\u66f2\u7ebf\u4e4b\u95f4\u7684\u89c4\u5f8b\uff0c\u7531\u4e8e\u8be5\u65f6\u5e8f\u6574\u4f53\u5448\u73b0\u968f\u65f6\u95f4\u589e\u957f\u7684\u8d8b\u52bf\uff0c\u6240\u4ee5\u5386\u53f2\u6570\u636e\u4e2d\u7684\u6700\u9ad8\u70b9\u4e5f\u4e0d\u8db3\u4ee5 cover \u4f4f\u672a\u6765\u7684\u8f83\u5927\u503c\uff0c\u56e0\u800c\u5728\u6d4b\u8bd5\u96c6\u4e2d\u8d85\u8fc7\u5386\u53f2\u6570\u636e\u7684\u6240\u6709\u6807\u7b7e\u5176\u5b9e\u90fd\u662f\u65e0\u6cd5\u62df\u5408\u7684\u3002","title":"2. \u673a\u5668\u5b66\u4e60\u6a21\u578b"},{"location":"Webclip/%E6%97%B6%E5%BA%8F%E9%A2%84%E6%B5%8B%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E6%A8%A1%E5%9E%8B%E3%80%81%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%81%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/#3-\u6df1\u5ea6\u5b66\u4e60","text":"\u4e2d\u7684\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u5176\u5b9e\u6df1\u5ea6\u5b66\u4e60\u4e00\u822c\u8981\u6c42\u6570\u636e\u96c6\u8f83\u5927\u65f6\u624d\u80fd\u53d1\u6325\u5176\u4f18\u52bf\uff0c\u800c\u8fd9\u91cc\u7684\u6570\u636e\u96c6\u663e\u7136\u662f\u975e\u5e38\u5c0f\u7684\uff0c\u6240\u4ee5\u4ec5\u8bbe\u8ba1\u4e00\u4e2a\u6700\u4e3a\u7b80\u5355\u7684\u6a21\u578b\uff1a1 \u5c42 LSTM+1 \u5c42 Linear\u3002\u6a21\u578b\u642d\u5efa\u5982\u4e0b\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 class Model ( nn . Module ): def __init__ ( self ): super () . __init__ () self . rnn = nn . LSTM ( input_size = 1 , hidden_size = 10 , batch_first = True ) self . linear = nn . Linear ( 10 , 1 ) def forward ( self , x ): x , _ = self . rnn ( x ) x = x [:, - 1 , :] x = self . linear ( x ) return x \u6570\u636e\u96c6\u6784\u5efa\u601d\u8def\u6574\u4f53\u540c\u524d\u8ff0\u7684\u673a\u5668\u5b66\u4e60\u90e8\u5206\uff0c\u800c\u540e\uff0c\u6309\u7167\u8fdb\u884c\u6a21\u578b\u8bad\u7ec3 \u70bc\u4e39 \uff0c\u90e8\u5206\u7ed3\u679c\u5982\u4e0b\uff1a Python 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 # \u6570\u636e\u96c6\u8f6c\u5316\u4e3a3D X_train_3d = torch . Tensor ( X_train . values ) . reshape ( * X_train . shape , 1 ) y_train_2d = torch . Tensor ( y_train . values ) . reshape ( * y_train . shape , 1 ) X_test_3d = torch . Tensor ( X_test . values ) . reshape ( * X_test . shape , 1 ) y_test_2d = torch . Tensor ( y_test . values ) . reshape ( * y_test . shape , 1 ) # \u6a21\u578b\u3001\u4f18\u5316\u5668\u3001\u8bc4\u4f30\u51c6\u5219 model = Model () creterion = nn . MSELoss () optimizer = optim . Adam ( model . parameters ()) # \u8bad\u7ec3\u8fc7\u7a0b for i in range ( 1000 ): out = model ( X_train_3d ) loss = creterion ( out , y_train_2d ) optimizer . zero_grad () loss . backward () optimizer . step () if ( i + 1 ) % 100 == 0 : y_pred = model ( X_test_3d ) loss_test = creterion ( y_pred , y_test_2d ) print ( i , loss . item (), loss_test . item ()) # \u8bad\u7ec3\u7ed3\u679c 99 65492.08984375 188633.796875 199 64814.4375 187436.4375 299 64462.09765625 186815.5 399 64142.70703125 186251.125 499 63835.5 185707.46875 599 63535.15234375 185175.1875 699 63239.39453125 184650.46875 799 62947.08203125 184131.21875 899 62657.484375 183616.203125 999 62370.171875 183104.671875 \u901a\u8fc7\u4e0a\u8ff0 1000 \u4e2a epoch\uff0c\u5927\u4f53\u53ef\u4ee5\u63a8\u65ad\u8be5\u6a21\u578b\u4e0d\u4f1a\u5f88\u597d\u7684\u62df\u5408\u4e86\uff0c\u6240\u4ee5\u679c\u65ad\u653e\u5f03\u5427\uff01 \u5f53\u7136\u5fc5\u987b\u6307\u51fa\u7684\u662f\uff0c\u4e0a\u8ff0\u6d4b\u8bd5\u6548\u679c\u53ea\u80fd\u8bf4\u660e 3 \u79cd\u65b9\u6848\u5728\u8be5\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u800c\u4e0d\u80fd\u4ee3\u8868\u8fd9\u4e00\u7c7b\u6a21\u578b\u5728\u7528\u4e8e\u65f6\u5e8f\u9884\u6d4b\u95ee\u9898\u65f6\u7684\u6027\u80fd\u3002\u5b9e\u9645\u4e0a\uff0c\u65f6\u5e8f\u9884\u6d4b\u95ee\u9898\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\u7684\u573a\u666f\uff0c\u6ca1\u6709\u653e\u4e4b\u56db\u6d77\u800c\u7686\u51c6\u7684\u597d\u6a21\u578b\uff0c\u5c31\u50cf \u201cNo Free Lunch\u201d \u4e00\u6837\uff01 \u672c\u6587\u4ec5\u662f\u4f5c\u4e3a\u65f6\u5e8f\u9884\u6d4b\u7cfb\u5217\u63a8\u6587\u7684\u4e00\u4e2a\u725b\u5200\u5c0f\u8bd5\uff0c\u540e\u7eed\u5c06\u4e0d\u5b9a\u671f\u66f4\u65b0\u5176\u4ed6\u76f8\u5173\u5fc3\u5f97\u548c\u603b\u7ed3\u3002","title":"3. \u6df1\u5ea6\u5b66\u4e60"}]}